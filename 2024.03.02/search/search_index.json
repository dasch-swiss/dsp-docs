{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"DaSCH Service Platform Documentation","text":"<p>Welcome to DaSCH - Swiss National Data and Service Center for the Humanities!</p> <p>Our mission is to operate a platform for Humanities research data that ensures long-term availability of this data.</p> <p>We operate the necessary infrastructure (a so called \"keep-alive\" archive) and support researchers in using this infrastructure. This is done with various open source software tools, all developed in-house.</p> <p>Our software consists of 3 main components, which are documented here:</p> <ul> <li>DSP-APP: The web application that allows you to view and edit data in your browser</li> <li>DSP-API: The core of our software stack: the RDF database that offers an access via API</li> <li>DSP-TOOLS: A command line tool to upload data models and big data sets to a DSP server</li> </ul> <p>Quick start for researchers</p> <p>If you are a researcher, you're probably most interested in the usage of the generic web application. In this case, have a look at our DSP-APP user guide.</p> <p>Do you want to install and use DSP locally? Learn more about how to get started and how you can contribute to our software tools on the developers page.</p>"},{"location":"DSP-API/","title":"DSP-API Docs","text":"<p>DSP-API is part of the DaSCH Service Platform (DSP). The following documentation is intended for developers and users who want to interact with the DSP-API directly through the REST API. For a guide on how to use DSP through the web interface, see the DSP-APP User Guide.</p>"},{"location":"DSP-API/Readme/","title":"DSP-API Documentation","text":"<p>This folder contains the sources to the DSP-API part of documentation published under https://docs.dasch.swiss/ and managed by DSP-DOCS repository.</p>"},{"location":"DSP-API/Readme/#build-and-serve-the-docs-locally","title":"Build and serve the docs locally","text":"<p>Documentation can be build by invoking the following make commands from the project root directory:</p> <pre><code>make docs-install-requirements: ## install requirements\nmake docs-build # build the documentation\nmake docs-serve # serve it locally\n</code></pre>"},{"location":"DSP-API/Readme/#prerequisites","title":"Prerequisites","text":"<p>You will need Graphviz. On macOS:</p> <pre><code>brew install graphviz\n</code></pre> <p>On Linux, use your distribution's package manager.</p>"},{"location":"DSP-API/01-introduction/example-project/","title":"An Example Project","text":""},{"location":"DSP-API/01-introduction/example-project/#an-example-project","title":"An Example Project","text":"<p>This section introduces some of the basic concepts involved in creating ontologies for DSP projects, by means of a relatively simple example project. Before reading this document, it will be helpful to have some familiarity with the basic concepts explained in knora-base.</p> <p>DSP-API comes with two example projects, called <code>incunabula</code> and <code>images-demo</code>. Here we will consider the <code>incunabula</code> example, which is a reduced version of a real research project on early printed books. It is designed to store an image of each page of each book, as well as RDF data about books, pages, their contents, and relationships between them. At the moment, only the RDF data is provided in the example project, not the images.</p> <p>The <code>incunabula</code> ontology is in the file <code>incunabula-onto.ttl</code>, and its data is in the file <code>incunabula-demo-data.ttl</code>. Both these files are in a standard RDF file format called Turtle. The DSP-API distribution includes sample scripts (in the <code>webapi/scripts</code> directory) for importing these files directly into different triplestores. If you are starting a new project from scratch, you can adapt these scripts to import your ontology (and any existing RDF data) into your triplestore for use with DSP-API.</p> <p>The syntax of Turtle is fairly simple: it is basically a sequence of triples. We will consider some details of Turtle syntax as we go along.</p>"},{"location":"DSP-API/01-introduction/example-project/#the-incunabula-ontology","title":"The Incunabula Ontology","text":"<p>Here we will just focus on some of the main aspects of the ontology. An ontology file typically begins by defining prefixes for the IRIs of other ontologies that will be referred to. First there are some prefixes for ontologies that are very commonly used in RDF:</p> <pre><code>@prefix rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt; .\n@prefix rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt; .\n@prefix owl: &lt;http://www.w3.org/2002/07/owl#&gt; .\n@prefix xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt; .\n@prefix foaf: &lt;http://xmlns.com/foaf/0.1/&gt; .\n@prefix dcterms: &lt;http://purl.org/dc/terms/&gt; .\n</code></pre> <p>The <code>rdf</code>, <code>rdfs</code>, and <code>owl</code> ontologies contain basic properties that are used to define ontology entities. The <code>xsd</code> ontology contains definitions of literal data types such as <code>string</code> and <code>integer</code>. (For more information about these ontologies, see the references in knora-base.) The <code>foaf</code> ontology contains classes and properties for representing people. The <code>dcterms</code> ontology represents Dublin Core metadata.</p> <p>Then we define prefixes for DSP ontologies:</p> <pre><code>@prefix knora-base: &lt;http://www.knora.org/ontology/knora-base#&gt; .\n@prefix salsah-gui: &lt;http://www.knora.org/ontology/salsah-gui#&gt; .\n</code></pre> <p>The <code>knora-base</code> ontology contains DSP-API's core abstractions, and is described in knora-base. The <code>salsah-gui</code> ontology includes properties that DSP projects must use to enable SALSAH, DSP-API's generic virtual research environment.</p> <p>For convenience, we can use the empty prefix to refer to the <code>incunabula</code> ontology itself:</p> <pre><code>@prefix : &lt;http://www.knora.org/ontology/0803/incunabula#&gt; .\n</code></pre> <p>However, outside the ontology file, it would make more sense to define an <code>incunabula</code> prefix to refer to the <code>incunabula</code> ontology.</p>"},{"location":"DSP-API/01-introduction/example-project/#properties","title":"Properties","text":"<p>All the content produced by a DSP project must be stored in Knora resources (see incunabula-resource-classes). Resources have properties that point to different parts of their contents; for example, the <code>incunabula</code> project contains books, which have properties like <code>title</code>. Every property that poitns to a DSP value must be a subproperty of <code>knora-base:hasValue</code>, and every property that points to another Knora resource must be a subproperty of <code>knora-base:hasLinkTo</code>.</p> <p>Here is the definition of the <code>incunabula:title</code> property:</p> <pre><code>:title rdf:type owl:ObjectProperty ;\n\n  rdfs:subPropertyOf knora-base:hasValue, dcterms:title ;\n\n  rdfs:label \"Titel\"@de ,\n    \"Titre\"@fr ,\n    \"Titolo\"@it ,\n    \"Title\"@en ;\n\n  knora-base:subjectClassConstraint :book ;\n\n  knora-base:objectClassConstraint knora-base:TextValue ;\n\n  salsah-gui:guiElement salsah-gui:SimpleText ;\n\n  salsah-gui:guiAttribute \"size=80\" ,\n    \"maxlength=255\" .\n</code></pre> <p>The definition of <code>incunabula:title</code> consists of a list of triples, all of which have <code>:title</code> as their subject. To avoid repeating <code>:title</code> for each triple, Turtle syntax allows us to use a semicolon (<code>;</code>) to separate triples that have the same subject. Moreover, some triples also have the same predicate; a comma (<code>,</code>) is used to avoid repeating the predicate. The definition of <code>:title</code> says:</p> <ul> <li><code>rdf:type owl:ObjectProperty</code>: It is an <code>owl:ObjectProperty</code>. There are   two kinds of OWL properties: object properties and datatype properties.    Object properties point to objects, which have IRIs and   can have their own properties. Datatype properties point to literal   values, such as strings and integers.</li> <li><code>rdfs:subPropertyOf knora-base:hasValue, dcterms:title</code>: It is a   subproperty of <code>knora-base:hasValue</code> and <code>dcterms:title</code>. Since the   objects of this property will be Knora values, it must be a   subproperty of <code>knora-base:hasValue</code>. To facilitate searches, we   have also chosen to make it a subproperty of <code>dcterms:title</code>. In the   DSP-API v2, if you do a search for resources that have a certain   <code>dcterms:title</code>, and there is a resource with a matching   <code>incunabula:title</code>, the search results could include that resource.</li> <li><code>rdfs:label \"Titel\"@de</code>, etc.: It has the specified labels in   various languages. These are needed, for example, by user   interfaces, to prompt the user to enter a value.</li> <li><code>knora-base:subjectClassConstraint :book</code>: The subject of the   property must be an <code>incunabula:book</code>.</li> <li><code>knora-base:objectClassConstraint knora-base:TextValue</code>: The object   of this property must be a <code>knora-base:TextValue</code> (which is a   subclass of <code>knora-base:Value</code>).</li> <li><code>salsah-gui:guiElement salsah-gui:SimpleText</code>: When SALSAH asks a   user to enter a value for this property, it should use a simple text   field.</li> <li><code>salsah-gui:guiAttribute \"size=80\" , \"maxlength=255\"</code>: The SALSAH   text field for entering a value for this property should be 80   characters wide, and should accept at most 255 characters.</li> </ul> <p>The <code>incunabula</code> ontology contains several other property definitions that are basically similar. Note that different subclasses of <code>Value</code> are used. For example, <code>incunabula:pubdate</code>, which represents the publication date of a book, points to a <code>knora-base:DateValue</code>. The <code>DateValue</code> class stores a date range, with a specified degree of precision and a preferred calendar system for display.</p> <p>A property can point to a Knora resource instead of to a Knora value. For example, in the <code>incunabula</code> ontology, there are resources representing pages and books, and each page is part of some book. This relationship is expressed using the property <code>incunabula:partOf</code>:</p> <pre><code>:partOf rdf:type owl:ObjectProperty ;\n\n  rdfs:subPropertyOf knora-base:isPartOf ;\n\n  rdfs:label \"ist ein Teil von\"@de ,\n    \"est un part de\"@fr ,\n    \"e una parte di\"@it ,\n    \"is a part of\"@en ;\n\n  rdfs:comment \"\"\"Diese Property bezeichnet eine Verbindung zu einer anderen Resource, in dem ausgesagt wird, dass die vorliegende Resource ein integraler Teil der anderen Resource ist. Zum Beispiel ist eine Buchseite ein integraler Bestandteil genau eines Buches.\"\"\"@de ;\n\n  knora-base:subjectClassConstraint :page ;\n\n  knora-base:objectClassConstraint :book ;\n\n  salsah-gui:guiElement salsah-gui:Searchbox .\n</code></pre> <p>The key things to notice here are:</p> <ul> <li><code>rdfs:subPropertyOf knora-base:isPartOf</code>: The <code>knora-base</code> ontology provides a generic <code>isPartOf</code> property to express    part-whole relationships. A project may use <code>knora-base:isPartOf</code> directly, however creating a subproperty such as    <code>incunabula:partOf</code> will allow to customize the property further, e.g. by giving it a more descriptive label.   It is important to note that <code>knora-base:isPartOf</code> is a subproperty of <code>knora-base:hasLinkTo</code>. Any property that    points to a <code>knora-base:Resource</code> must be a subproperty of <code>knora-base:hasLinkTo</code>. Such a   property is called a link property.</li> <li><code>knora-base:objectClassConstraint :book</code>: The object of this property must be a member of the class <code>incunabula:book</code>,   which, as we will see below, is a subclass of <code>knora-base:Resource</code>.</li> <li><code>salsah-gui:guiElement salsah-gui:Searchbox</code>: When SALSAH prompts a user to select the book that a page is part of, it   should provide a search box enabling the user to find the desired book.</li> </ul> <p>Because <code>incunabula:partOf</code> is a link property, it must always accompanied by a link value property, which enables Knora to store metadata about each link that is created with the link property. This metadata includes the date and time when the link was created, its owner, the permissions it grants, and whether it has been deleted. Storing this metadata allows Knora to authorise users to see or modify the link, as well as to query a previous state of a repository in which a deleted link had not yet been deleted. (The ability to query previous states of a repository is planned for DSP-API version 2.)</p> <p>The name of a link property and its link value property must be related by the following naming convention: to determine the name of the link value property, add the word <code>Value</code> to the name of the link property. Hence, the <code>incunabula</code> ontology defines the property <code>partOfValue</code>:</p> <pre><code>:partOfValue rdf:type owl:ObjectProperty ;\n\n  rdfs:subPropertyOf knora-base:isPartOfValue ;\n\n  knora-base:subjectClassConstraint :page ;\n\n  knora-base:objectClassConstraint knora-base:LinkValue .\n</code></pre> <p>As a link value property, <code>incunabula:partOfValue</code> must point to a <code>knora-base:LinkValue</code>. The <code>LinkValue</code> class is an RDF reification of a triple (in this case, the triple that links a page to a book). For more details about this, see knora-base-linkvalue.</p> <p>Note that the property <code>incunabula:hasAuthor</code> points to a <code>knora-base:TextValue</code>, because the <code>incunabula</code> project represents authors simply by their names. A more complex project could represent each author as a resource, in which case <code>incunabula:hasAuthor</code> would need to be a subproperty of <code>knora-base:hasLinkTo</code>.</p>"},{"location":"DSP-API/01-introduction/example-project/#resource-classes","title":"Resource Classes","text":"<p>The two main resource classes in the <code>incunabula</code> ontology are <code>book</code> and <code>page</code>. Here is <code>incunabula:book</code>:</p> <pre><code>:book rdf:type owl:Class ;\n\n  rdfs:subClassOf knora-base:Resource , [\n    rdf:type owl:Restriction ;\n    owl:onProperty :title ;\n    owl:minCardinality \"1\"^^xsd:nonNegativeInteger ;\n    salsah-gui:guiOrder \"1\"^^xsd:nonNegativeInteger\n  ] , [\n    rdf:type owl:Restriction ;\n    owl:onProperty :hasAuthor ;\n    owl:minCardinality \"0\"^^xsd:nonNegativeInteger ;\n    salsah-gui:guiOrder \"2\"^^xsd:nonNegativeInteger\n  ] , [\n    rdf:type owl:Restriction ;\n    owl:onProperty :publisher ;\n    owl:minCardinality \"0\"^^xsd:nonNegativeInteger ;\n    salsah-gui:guiOrder \"3\"^^xsd:nonNegativeInteger\n  ] , [\n    rdf:type owl:Restriction ;\n    owl:onProperty :publoc ;\n    owl:maxCardinality \"1\"^^xsd:nonNegativeInteger ;\n    salsah-gui:guiOrder \"4\"^^xsd:nonNegativeInteger\n  ] , [\n    rdf:type owl:Restriction ;\n    owl:onProperty :pubdate ;\n    owl:maxCardinality \"1\"^^xsd:nonNegativeInteger ;\n    salsah-gui:guiOrder \"5\"^^xsd:nonNegativeInteger\n  ] , [\n    rdf:type owl:Restriction ;\n    owl:onProperty :location ;\n    owl:maxCardinality \"1\"^^xsd:nonNegativeInteger ;\n    salsah-gui:guiOrder \"6\"^^xsd:nonNegativeInteger\n  ] , [\n    rdf:type owl:Restriction ;\n    owl:onProperty :url ;\n    owl:maxCardinality \"1\"^^xsd:nonNegativeInteger ;\n    salsah-gui:guiOrder \"7\"^^xsd:nonNegativeInteger\n  ] , [\n    rdf:type owl:Restriction ;\n    owl:onProperty :description ;\n    owl:maxCardinality \"1\"^^xsd:nonNegativeInteger ;\n    salsah-gui:guiOrder \"2\"^^xsd:nonNegativeInteger\n  ] , [\n    rdf:type owl:Restriction ;\n    owl:onProperty :physical_desc ;\n    owl:maxCardinality \"1\"^^xsd:nonNegativeInteger ;\n    salsah-gui:guiOrder \"9\"^^xsd:nonNegativeInteger\n  ] , [\n    rdf:type owl:Restriction ;\n    owl:onProperty :note ;\n    owl:minCardinality \"0\"^^xsd:nonNegativeInteger ;\n    salsah-gui:guiOrder \"10\"^^xsd:nonNegativeInteger\n  ] , [\n    rdf:type owl:Restriction ;\n    owl:onProperty :citation ;\n    owl:minCardinality \"0\"^^xsd:nonNegativeInteger ;\n    salsah-gui:guiOrder \"5\"^^xsd:nonNegativeInteger\n  ] , [\n    rdf:type owl:Restriction ;\n    owl:onProperty :book_comment ;\n    owl:minCardinality \"0\"^^xsd:nonNegativeInteger ;\n    salsah-gui:guiOrder \"12\"^^xsd:nonNegativeInteger\n  ] ;\n\n  knora-base:resourceIcon \"book.gif\" ;\n\n  rdfs:label \"Buch\"@de ,\n    \"Livre\"@fr ,\n    \"Libro\"@it ,\n    \"Book\"@en ;\n\n  rdfs:comment \"\"\"Diese Resource-Klasse beschreibt ein Buch\"\"\"@de .\n</code></pre> <p>Like every Knora resource class, <code>incunabula:book</code> is a subclass of <code>knora-base:Resource</code>. It is also a subclass of a number of other classes of type <code>owl:Restriction</code>, which are defined in square brackets, using Turtle's syntax for anonymous blank nodes. Each <code>owl:Restriction</code> specifies a cardinality for a property that is allowed in resources of type <code>incunabula:book</code>. A cardinality is indeed a kind of restriction: it means that a resource of this type may have, or must have, a certain number of instances of the specified property. For example, <code>incunabula:book</code> has cardinalities saying that a book must have at least one title and at most one publication date. In the DSP-API version 1, the word 'occurrence' is used instead of 'cardinality'.</p> <p>The OWL cardinalities supported by Knora are described in OWL Cardinalities.</p> <p>Note that <code>incunabula:book</code> specifies a cardinality of <code>owl:minCardinality 0</code> on the property <code>incunabula:hasAuthor</code>. At first glance, this might seem as if it serves no purpose, since it says that the property is optional and can have any number of instances. You may be wondering whether this cardinality could simply be omitted from the definition of <code>incunabula:book</code>. However, Knora requires every property of a resource to have some cardinality in the resource's class. This is because Knora uses the cardinalities to determine which properties are possible for instances of the class, and the DSP-API relies on this information. If there was no cardinality for <code>incunabula:hasAuthor</code>, Knora would not allow a book to have an author.</p> <p>Each <code>owl:Restriction</code> specifying a cardinality can include the predicate <code>salsah-gui:guiOrder</code>, which tells the SALSAH GUI the order the properties should be displayed in.</p> <p>Here is the definition of <code>incunabula:page</code>:</p> <pre><code>:page rdf:type owl:Class ;\n\n  rdfs:subClassOf knora-base:StillImageRepresentation , [\n    rdf:type owl:Restriction ;\n    owl:onProperty :pagenum ;\n    owl:maxCardinality \"1\"^^xsd:nonNegativeInteger ;\n    salsah-gui:guiOrder \"1\"^^xsd:nonNegativeInteger\n  ] , [\n    rdf:type owl:Restriction ;\n    owl:onProperty :partOfValue ;\n    owl:cardinality \"1\"^^xsd:nonNegativeInteger ;\n    salsah-gui:guiOrder \"2\"^^xsd:nonNegativeInteger\n  ] , [\n    rdf:type owl:Restriction ;\n    owl:onProperty :partOf ;\n    owl:cardinality \"1\"^^xsd:nonNegativeInteger ;\n    salsah-gui:guiOrder \"2\"^^xsd:nonNegativeInteger\n  ] , [\n    rdf:type owl:Restriction ;\n    owl:onProperty :seqnum ;\n    owl:maxCardinality \"1\"^^xsd:nonNegativeInteger ;\n    salsah-gui:guiOrder \"3\"^^xsd:nonNegativeInteger\n  ] , [\n    rdf:type owl:Restriction ;\n    owl:onProperty :description ;\n    owl:maxCardinality \"1\"^^xsd:nonNegativeInteger ;\n    salsah-gui:guiOrder \"2\"^^xsd:nonNegativeInteger\n  ] , [\n    rdf:type owl:Restriction ;\n    owl:onProperty :citation ;\n    owl:minCardinality \"0\"^^xsd:nonNegativeInteger ;\n    salsah-gui:guiOrder \"5\"^^xsd:nonNegativeInteger\n  ] , [\n    rdf:type owl:Restriction ;\n    owl:onProperty :page_comment ;\n    owl:minCardinality \"0\"^^xsd:nonNegativeInteger ;\n    salsah-gui:guiOrder \"6\"^^xsd:nonNegativeInteger\n  ] , [\n    rdf:type owl:Restriction ;\n    owl:onProperty :origname ;\n    owl:cardinality \"1\"^^xsd:nonNegativeInteger ;\n    salsah-gui:guiOrder \"7\"^^xsd:nonNegativeInteger\n  ] , [\n    rdf:type owl:Restriction ;\n    owl:onProperty :hasLeftSidebandValue ;\n    owl:maxCardinality \"1\"^^xsd:nonNegativeInteger ;\n    salsah-gui:guiOrder \"10\"^^xsd:nonNegativeInteger\n  ] , [\n    rdf:type owl:Restriction ;\n    owl:onProperty :hasLeftSideband ;\n    owl:maxCardinality \"1\"^^xsd:nonNegativeInteger ;\n    salsah-gui:guiOrder \"10\"^^xsd:nonNegativeInteger\n  ] , [\n    rdf:type owl:Restriction ;\n    owl:onProperty :hasRightSidebandValue ;\n    owl:maxCardinality \"1\"^^xsd:nonNegativeInteger ;\n    salsah-gui:guiOrder \"11\"^^xsd:nonNegativeInteger\n  ] , [\n    rdf:type owl:Restriction ;\n    owl:onProperty :hasRightSideband ;\n    owl:maxCardinality \"1\"^^xsd:nonNegativeInteger ;\n    salsah-gui:guiOrder \"11\"^^xsd:nonNegativeInteger\n  ] , [\n    rdf:type owl:Restriction ;\n    owl:onProperty :transcription ;\n    owl:minCardinality \"0\"^^xsd:nonNegativeInteger ;\n    salsah-gui:guiOrder \"12\"^^xsd:nonNegativeInteger\n  ] ;\n\n  knora-base:resourceIcon \"page.gif\" ;\n\n  rdfs:label \"Seite\"@de ,\n    \"Page\"@fr ,\n    \"Page\"@en ;\n\n  rdfs:comment \"\"\"Eine Seite ist ein Teil eines Buchs\"\"\"@de ,\n    \"\"\"Une page est une partie d'un livre\"\"\"@fr ,\n    \"\"\"A page is a part of a book\"\"\"@en .\n</code></pre> <p>The <code>incunabula:page</code> class is a subclass of <code>knora-base:StillImageRepresentation</code>, which is a subclass of <code>knora-base:Representation</code>, which is a subclass of <code>knora-base:Resource</code>. The class <code>knora-base:Representation</code> is used for resources that contain metadata about files stored by Knora. Each It has different subclasses that can hold different types of files, including still images, audio, and video files. A given <code>Representation</code> can store metadata about several different files, as long as they are of the same type and are semantically equivalent, e.g. are different versions of the same image with different colorspaces, so that coordinates in one file will work in the other files.</p> <p>In Knora, a subclass inherits the cardinalities defined in its superclasses. Let's look at the class hierarchy of <code>incunabula:page</code>, starting with <code>knora-base:Representation</code>:</p> <pre><code>:Representation rdf:type owl:Class ;\n\n  rdfs:subClassOf :Resource , [\n    rdf:type owl:Restriction ;\n    owl:onProperty :hasFileValue ;\n    owl:minCardinality \"1\"^^xsd:nonNegativeInteger\n  ] ;\n\n  rdfs:comment \"A resource that can store one or more FileValues\"@en .\n</code></pre> <p>This says that a <code>Representation</code> must have at least one instance of the property <code>hasFileValue</code>, which is defined like this:</p> <pre><code>:hasFileValue rdf:type owl:ObjectProperty ;\n\n  rdfs:subPropertyOf :hasValue ;\n\n  :subjectClassConstraint :Representation ;\n\n  :objectClassConstraint :FileValue .              \n</code></pre> <p>The subject of <code>hasFileValue</code> must be a <code>Representation</code>, and its object must be a <code>FileValue</code>. There are different subclasses of <code>FileValue</code> for different kinds of files, but we'll skip the details here.</p> <p>This is the definition of <code>knora-base:StillImageRepresentation</code>:</p> <pre><code>:StillImageRepresentation rdf:type owl:Class ;\n\n  rdfs:subClassOf :Representation , [\n    rdf:type owl:Restriction ;\n    owl:onProperty :hasStillImageFileValue ;\n    owl:minCardinality \"1\"^^xsd:nonNegativeInteger\n  ] ;\n\n  rdfs:comment \"A resource that can contain two-dimensional still image files\"@en .\n</code></pre> <p>It must have at least one instance of the property <code>hasStillImageFileValue</code>, which is defined as follows:</p> <pre><code>:hasStillImageFileValue rdf:type owl:ObjectProperty ;\n\n  rdfs:subPropertyOf :hasFileValue ;\n\n  :subjectClassConstraint :StillImageRepresentation ;\n\n  :objectClassConstraint :StillImageFileValue .              \n</code></pre> <p>Because <code>hasStillImageFileValue</code> is a subproperty of <code>hasFileValue</code>, the cardinality on <code>hasStillImageFileValue</code>, defined in the subclass <code>StillImageRepresentation</code>, overrides the cardinality on <code>hasFileValue</code>, defined in the superclass <code>Representation</code>. In other words, the more general cardinality in the superclass is replaced by a more specific cardinality in the base class. Since <code>incunabula:page</code> is a subclass of <code>StillImageRepresentation</code>, it inherits the cardinality on <code>hasStillImageFileValue</code>. As a result, a page must have at least one image file attached to it.</p> <p>Here's another example of cardinality inheritance. The class <code>knora-base:Resource</code> has a cardinality for <code>knora-base:seqnum</code>. The idea is that resources of any type could be arranged in some sort of sequence. As we saw above, <code>incunabula:page</code> is a subclass of <code>knora-base:Resource</code>. But <code>incunabula:page</code> has its own cardinality for <code>incunabula:seqnum</code>, which is a subproperty of <code>knora-base:seqnum</code>. Once again, the subclass's cardinality on the subproperty replaces the superclass's cardinality on the superproperty: a page is allowed to have an <code>incunabula:seqnum</code>, but it is not allowed to have a <code>knora-base:seqnum</code>.</p>"},{"location":"DSP-API/01-introduction/file-formats/","title":"File Formats in DSP-API","text":""},{"location":"DSP-API/01-introduction/file-formats/#file-formats-in-dsp-api","title":"File Formats in DSP-API","text":"<p>Currently, only a limited number of file formats is accepted to be uploaded onto DSP. Some metadata is extracted from the files during the ingest but the file formats are not validated. Only image file formats are currently migrated into another format. Both, the migrated version of the file and the original are kept.</p> <p>The following table shows the accepted file formats:</p> Category Accepted format Converted during ingest? Text, XML<sup>1</sup> ODD, RNG, TXT, XML, XSD, XSL No Tables CSV, XLS, XLSX No 2D Images JPG, JPEG, JP2, PNG, TIF, TIFF Yes, converted to JPEG 2000 by Sipi Audio MPEG (MP3), WAV No Video MP4 No Office PDF, DOC, DOCX, PPT, PPTX No Archives ZIP, TAR, GZ, Z, TAR.GZ, TGZ, GZIP, 7Z No <p>1: If your XML files represent text with markup (e.g. TEI/XML), it is possible to store it as Standoff/RDF, as described here.</p>"},{"location":"DSP-API/01-introduction/standoff-rdf/","title":"Standoff/RDF Text Markup","text":""},{"location":"DSP-API/01-introduction/standoff-rdf/#standoffrdf-text-markup","title":"Standoff/RDF Text Markup","text":"<p>Standoff markup is text markup that is stored separately from the content it describes. DSP-API's Standoff/RDF markup stores content as a simple Unicode string, and represents markup separately as RDF data. This approach has some advantages over commonly used markup systems such as XML:</p> <p>First, XML and other hierarchical markup systems assume that a document is a hierarchy, and have difficulty representing non-hierarchical structures or multiple overlapping hierarchies. Standoff markup can easily represent these structures.</p> <p>Second, markup languages are typically designed to be used in text files. But there is no standard system for searching and linking together many different text files containing markup. It is possible to do this in a non-standard way by using an XML database such as eXist, but this still does not allow for queries that include text as well as non-textual data not stored in XML.</p> <p>By storing markup as RDF, DSP-API can search for markup structures in the same way as it searches for any RDF data structure. This makes it possible to do searches that combine text-related criteria with other sorts of criteria. For example, if persons and events are represented as resources, and texts are represented in Standoff/RDF, a text can contain tags representing links to persons or events. You could then search for a text that mentions a person who lived in the same city as another person who is the author of a text that mentions an event that occurred during a certain time period.</p> <p>In DSP-API's Standoff/RDF, a tag is an RDF entity that is linked to a text value. Each tag points to a substring of the text, and has semantic properties of its own. You can define your own tag classes in your ontology by making subclasses of <code>knora-base:StandoffTag</code>, and attach your own properties to them. You can then search for those properties using DSP-API's search language, Gravsearch.</p> <p>The built-in knora-base and <code>standoff</code> ontologies provide some basic tags that can be reused or extended. These include tags that represent DSP-API data types. For example, <code>knora-base:StandoffDateTag</code> represents a date in exactly the same way as a date value, i.e. as a calendar-independent astronomical date. You can use this tag as-is, or extend it by making a subclass, to represent dates in texts. Gravsearch includes built-in functionality for searching for these data type tags. For example, you can search for text containing a date that falls within a certain date range.</p> <p>DSP-API supports automatic conversion between XML and Standoff/RDF. To make this work, Standoff/RDF stores the order of tags and their hierarchical relationships. You must define an XML-to-Standoff Mapping for your standoff tag classes and properties. Then you can import an XML document into DSP-API, which will store it as Standoff/RDF. The text and markup can then be searched using Gravsearch. When you retrieve the document, DSP-API converts it back to the original XML.</p> <p>To represent overlapping or non-hierarchical markup in exported and imported XML, DSP-API supports CLIX tags.</p> <p>As XML-to-Standoff has proved to be complicated and not very well performing,  the use of standoff with custom mappings is discouraged.  Improved integration of text with XML mark up, particularly TEI-XML, is in planning.</p>"},{"location":"DSP-API/01-introduction/what-is-dsp/","title":"What is DSP?","text":""},{"location":"DSP-API/01-introduction/what-is-dsp/#what-is-dsp-and-dsp-api","title":"What is DSP and DSP-API?","text":"<p>The DaSCH Service Platform (DSP) is  a content management system for the long-term preservation and reuse of humanities data. It is designed to accommodate data with a complex internal structure, including data that could be stored in relational databases.</p> <p>DSP aims to solve key problems in the long-term preservation and reuse of humanities data:</p> <p>First, traditional archives preserve data, but do not facilitate reuse. Typically, only metadata can be searched, not the data itself. You have to first identify an information package that might be of interest, then download it, and only then can you find out what's really in it. This is time-consuming, and makes it impractical to reuse data from many different sources.</p> <p>DSP solves this problem by keeping the data alive. You can query all the data in a DSP repository, not just the metadata. You can import thousands of databases into DSP, and run queries that search through all of them at once.</p> <p>Another problem is that researchers use a multitude of different file formats, many of which are proprietary and quickly become obsolete. It is not practical to maintain all the programs that were used to create and read old files, or even all the operating systems that these programs ran on. Therefore, DSP only accepts a certain number of file formats.</p> <ul> <li>Non-binary data is stored as   RDF, in a dedicated   database called a triplestore. RDF is an open, vendor-independent standard   that can express any data structure.</li> <li>Binary media files (images, audio, and video) are converted to a few specialised   archival file formats and stored by Sipi,   with metadata stored in the triplestore.</li> </ul> <p>DSP makes this data available for reuse via its generic, standards-based application programming interface DSP-API. A virtual research environment (VRE) can use DSP-API to query, link, and add to data from different research projects in a unified way.</p>"},{"location":"DSP-API/01-introduction/what-is-dsp/#humanities-focused-data-storage","title":"Humanities-Focused Data Storage","text":"<p>Each project creates its own data model (or ontology), describing the types of items it wishes to store, using basic data types defined in Knora's base ontology. This gives projects the freedom to describe their data in a way that makes sense to them, while allowing DSP to support searching and linking across projects.</p> <p>DSP has built-in support for data structures that are commonly needed in humanities data, and that present unique challenges for any type of database storage.</p>"},{"location":"DSP-API/01-introduction/what-is-dsp/#calendar-independent-dates","title":"Calendar-Independent Dates","text":"<p>In the humanities, a date could be based on any sort of calendar (e.g. Gregorian, Julian, Islamic, or Hebrew). The DSP stores dates using a calendar-independent, astronomical representation, and converts between calendars as needed. This makes it possible to search for a date in one calendar, and get search results in other calendars.</p>"},{"location":"DSP-API/01-introduction/what-is-dsp/#flexible-searchable-text-markup","title":"Flexible, Searchable Text Markup","text":"<p>Commonly used text markup systems, such as TEI/XML, have to represent a text as a hierarchy, and therefore have trouble supporting overlapping markup. DSP supports Standoff/RDF markup: the markup is stored as RDF data, separately from the text, allowing for overlapping markup. The DSP can import any XML document (including TEI/XML) for storage as standoff/RDF, and can regenerate the original XML document at any time.</p>"},{"location":"DSP-API/01-introduction/what-is-dsp/#powerful-searches","title":"Powerful Searches","text":"<p>DSP-API provides a search language, Gravsearch, that is designed to meet the needs of humanities researchers. Gravsearch supports DSP-API's humanities-focused data structures, including calendar-independent dates and standoff markup, as well as fast full-text searches. This allows searches to combine text-related criteria with any other criteria. For example, you could search for a text that contains a certain word and also mentions a person who lived in the same city as another person who is the author of a text that mentions an event that occurred during a certain time period.</p>"},{"location":"DSP-API/01-introduction/what-is-dsp/#access-control","title":"Access Control","text":"<p>The RDF standards do not include any concept of permissions. DSP-API's permission system allows project administrators and users to determine who can see or modify each item of data. DSP-API filters search results according to each user's permissions.</p>"},{"location":"DSP-API/01-introduction/what-is-dsp/#data-history","title":"Data History","text":"<p>RDF does not have a concept of data history. DSP-API maintains all previous versions of each item of data. Ordinary searches return only the latest version, but you can obtain and cite an item as it was at any point in the past.</p>"},{"location":"DSP-API/01-introduction/what-is-dsp/#data-consistency","title":"Data Consistency","text":"<p>RDF triplestores do not implement a standardised way of ensuring the consistency of data in a repository. DSP-API ensures that all data is consistent, conforms the project-specific data models, and meets DSP-API's minimum requirements for interoperability and reusability of data.</p>"},{"location":"DSP-API/01-introduction/what-is-dsp/#linked-open-data","title":"Linked Open Data","text":"<p>DSP-API supports publishing data online as Linked Open Data, using open standards to allow interoperability between different repositories on the web.</p>"},{"location":"DSP-API/02-dsp-ontologies/introduction/","title":"Introduction","text":""},{"location":"DSP-API/02-dsp-ontologies/introduction/#introduction","title":"Introduction","text":"<p>The DSP ontologies provide a generic framework for describing humanities research data, allowing data from different projects to be combined, augmented, and reused.</p>"},{"location":"DSP-API/02-dsp-ontologies/introduction/#resource-description-framework-rdf","title":"Resource Description Framework (RDF)","text":"<p>DSP-API uses a hierarchy of ontologies based on the Resource Description Framework (RDF), RDF Schema (RDFS), and the Web Ontology Language (OWL). Both RDFS and OWL are expressed in RDF. RDF expresses information as a set of statements (called triples). A triple consists of a subject, a predicate, and an object:</p> <p></p> <p>The object may be either a literal value (such as a name or number) or another subject. Thus it is possible to create complex graphs that connect many subjects, like this:</p> <p></p> <p>In RDF, each subject and predicate has a unique, URL-like identifier called an Internationalized Resource Identifier (IRI). Within a given project, IRIs typically differ only in their last component (the \"local part\"), which is often the fragment following a <code>#</code> character. Such IRIs share a long \"prefix\". In Turtle and similar formats for writing RDF, a short prefix label can be defined to represent the long prefix. Then an IRI can be written as a prefix label and a local part, separated by a colon (<code>:</code>). For example, if the \"example\" project's long prefix is <code>http://www.example.org/rdf#</code>, and it contains subjects with IRIs like <code>http://www.example.org/rdf#book</code>, we can define the prefix label <code>ex</code> to represent the prefix label, and write prefixed names for IRIs:</p> <p></p>"},{"location":"DSP-API/02-dsp-ontologies/introduction/#built-in-ontologies-and-user-created-ontologies","title":"Built-in Ontologies and User-Created Ontologies","text":"<p>To ensure the interoperability of data produced by different projects, each project must describe its data model by creating one or more ontologies that extend Knora's built-in ontologies. The main built-in ontology in Knora is knora-base.</p>"},{"location":"DSP-API/02-dsp-ontologies/introduction/#shared-ontologies","title":"Shared Ontologies","text":"<p>Knora does not normally allow a project to use classes or properties defined in an ontology that belongs to another project. Each project must be free to change its own ontologies, but this is not possible if they have been used in ontologies or data created by other projects.</p> <p>However, an ontology can be defined as shared, meaning that it can be used by multiple projects, and that its creators will not change it in ways that could affect other ontologies or data that are based on it. Specifically, in a shared ontology, existing classes and properties cannot safely be changed, but new ones can be added. (It is not even safe to add an optional cardinality to an existing class, because this could cause subclasses to violate the rule that a class cannot have a cardinality on property P as well as a cardinality on a subproperty of P; see Restrictions on Classes.)</p> <p>For more details about shared ontologies, see Shared Ontologies.</p>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/","title":"The Knora Base Ontology","text":""},{"location":"DSP-API/02-dsp-ontologies/knora-base/#the-knora-base-ontology","title":"The Knora Base Ontology","text":""},{"location":"DSP-API/02-dsp-ontologies/knora-base/#overview","title":"Overview","text":"<p>The Knora base ontology is the main built-in Knora ontology. Each project that uses DSP-API must describe its data model by creating ontologies that extend this ontology.</p> <p>The Knora base ontology is identified by the IRI <code>http://www.knora.org/ontology/knora-base</code>. In the DSP-API documentation in general, it is identified by the prefix <code>knora-base</code>, but for brevity, in this document, we use <code>kb</code> or omit the prefix entirely.</p>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#the-knora-data-model","title":"The Knora Data Model","text":"<p>The Knora data model is based on the observation that, in the humanities, a value or literal is often itself structured and can be highly complex. Moreover, a value may have its own metadata, such as its creation date, information about permissions, and so on. Therefore, the Knora base ontology describes structured value types that can store this type of metadata. In the diagram below, a book (<code>ex:book2</code>) has a title (identified by the predicate <code>ex:title</code>) and a publication date (<code>ex:pubdate</code>), each of which has some metadata.</p> <p></p>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#projects","title":"Projects","text":"<p>In Knora, each item of data belongs to some particular project. Each project using Knora must define a <code>kb:knoraProject</code>, which has these properties (cardinalities are indicated in parentheses after each property name):</p> <ul> <li> <p><code>projectShortname</code> (1): A short name that can be used to identify the project in configuration files and the like.</p> </li> <li> <p><code>projectLongname</code> (0-1): The full name of the project.</p> </li> <li> <p><code>projectShortcode</code> (1): A hexadecimal code that uniquely identifies the project. These codes are assigned to projects   by the DaSCH.</p> </li> <li> <p><code>projectDescription</code> (1-n): A description of the project.</p> </li> </ul> <p>Ontologies and resources are associated with a project by means of the <code>kb:attachedToProject</code> property, as described in Ontologies and Properties of Resource). Users are associated with a project by means of the <code>kb:isInProject</code> property, as described in Users and Groups.</p>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#ontologies","title":"Ontologies","text":"<p>Each user-created ontology must be defined as an <code>owl:Ontology</code> with the properties <code>rdfs:label</code> and <code>kb:attachedToProject</code>. Since DSP-API v20 <code>kb:lastModificationDate</code> property is also required.</p>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#resources","title":"Resources","text":"<p>All the content produced by a project (e.g. digitised primary source materials or research data) must be stored in objects that belong to subclasses of <code>kb:Resource</code>, so that Knora can query and update that content. Each project using the Knora base ontology must define its own OWL classes, derived from <code>kb:Resource</code>, to represent the types of data it deals with. A subclass of <code>kb:Resource</code> may additionally be a subclass of any other class, e.g. an industry-standard class such as <code>foaf:Person</code>; this can facilitate searches across projects.</p> <p>Resources have properties that point to different parts of the content they contain. For example, a resource representing a book could have a property called <code>hasAuthor</code>, pointing to the author of the book. There are two possible kinds of content in a Knora resource: Knora values (see Values) or links to other resources (see Links Between Resources). Properties that point to Knora values must be subproperties of <code>kb:hasValue</code>, and properties that point to other resources must be subproperties of <code>kb:hasLinkTo</code>. Either of these two types of properties may also be a subproperty of any other property, e.g. an industry-standard property such as <code>foaf:name</code>; this can facilitate searches across projects. Each property definition must specify the types that its subjects and objects must belong to (see Constraints on the Types of Property Subjects and Objects for details).</p> <p>Each user-created resource class definition must use OWL cardinality restrictions to specify the properties that resources of that class can have (see OWL Cardinalities for details).</p> <p>Resources are not versioned; only their values are versioned (see Values).</p> <p>Every resource is required to have an <code>rdfs:label</code>. The object of this property is an <code>xsd:string</code>, rather than a Knora value; hence it is not versioned. A user who has modify permission on a resource (see Authorisation) can change its label.</p> <p>A resource can be marked as deleted; Knora does this by adding the predicate <code>kb:isDeleted true</code> to the resource. An optional <code>kb:deleteComment</code> may be added to explain why the resource has been marked as deleted. Deleted resources are normally hidden. They cannot be undeleted, because even though resources are not versioned, it is necessary to be able to find out when a resource was deleted. If desired, a new resource can be created by copying data from a deleted resource.</p>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#properties-of-resource","title":"Properties of Resource","text":"<ul> <li> <p><code>creationDate</code> (1): The time when the resource was created.</p> </li> <li> <p><code>attachedToUser</code> (1): The user who owns the resource.</p> </li> <li> <p><code>attachedToProject</code> (1): The project that the resource is part of.</p> </li> <li> <p><code>lastModificationDate</code> (0-1): A timestamp indicating when the resource (or one of its values) was last modified.</p> </li> <li> <p><code>seqnum</code> (0-1): The sequence number of the resource, if it is part of an ordered group of resources, such as the pages   in a book.</p> </li> <li> <p><code>isDeleted</code> (1): Indicates whether the resource has been deleted.</p> </li> <li> <p><code>deleteDate</code> (0-1): If the resource has been deleted, indicates when it was deleted.</p> </li> <li> <p><code>deleteComment</code> (0-1): If the resource has been deleted, indicates why it was deleted.</p> </li> </ul> <p>Resources can have properties that point to other resources; see Links Between Resources. A resource grants permissions to groups of users; see Authorisation.</p>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#representations","title":"Representations","text":"<p>It is not practical to store all data in RDF. In particular, RDF is not a good storage medium for binary data such as images. Therefore, Knora stores such data outside the triplestore, in ordinary files. A resource can have metadata about a file attached to it. The technical term for such a resource in Knora is a Representation. For each file, there is a <code>kb:FileValue</code> in the triplestore containing metadata about the file (see FileValue). Knora uses Sipi to store files. The Knora APIs provide ways to create file values using Knora and Sipi.</p> <p>A resource that has a file value must belong to one of the subclasses of <code>kb:Representation</code>. Its subclasses include:</p> <ul> <li> <p><code>StillImageRepresentation</code>: A representation containing a still image file.</p> </li> <li> <p><code>MovingImageRepresentation</code>: A representation containing a video file.</p> </li> <li> <p><code>AudioRepresentation</code>: A representation containing an audio file.</p> </li> <li> <p><code>DDDrepresentation</code>: A representation containing a 3D image file.</p> </li> <li> <p><code>TextRepresentation</code>: A representation containing a formatted text file, such as an XML file.</p> </li> <li> <p><code>DocumentRepresentation</code>: A representation containing a document (such as a PDF file) that is not a text file.</p> </li> <li> <p><code>ArchiveRepresentation</code>: A representation containing an archive file (such as a zip archive).</p> </li> </ul> <p>These classes can be used directly in data, but it is often better to make subclasses of them, to include metadata about the files being stored.</p> <p>The base class of all these classes is <code>Representation</code>, which is not intended to be used directly. It has this property, which its subclasses override:</p> <ul> <li><code>hasFileValue</code> (1): Points to a file value.</li> </ul> <p>There are two ways for a project to design classes for representations. The simpler way is to create a resource class that represents a thing in the world (such as <code>ex:Painting</code>) and also belongs to a subclass of <code>Representation</code>. This is adequate if the class can have only one type of file attached to it. For example, if paintings are represented only by still images, <code>ex:Painting</code> could be a subclass of <code>StillImageRepresentation</code>.</p> <p>The more flexible approach, which is supported by DSP-API v2, is for each <code>ex:Painting</code> to link (using <code>kb:hasRepresentation</code> or a subproperty) to other resources containing files that represent the painting. Each of these other resources can extend a different subclass of <code>Representation</code>. For example, a painting could have a <code>StillImageRepresentation</code> as well as a <code>DDDrepresentation</code>.</p>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#standard-resource-classes","title":"Standard Resource Classes","text":"<p>In general, each project using Knora must define its own subclasses of <code>kb:Resource</code>. However, the Knora base ontology provides some standard subclasses of <code>kb:Resource</code>, which are intended to be used by any project:</p> <ul> <li> <p><code>Region</code>: Represents a region of a <code>Representation</code> (see Representations).</p> </li> <li> <p><code>Annotation</code>: Represents an annotation of a resource.   The <code>hasComment</code> property points to the text of the annotation, represented as a <code>kb:TextValue</code>.</p> </li> <li> <p><code>LinkObj</code>: Represents a link that connects two or more resources.   A <code>LinkObj</code> has a <code>hasLinkTo</code> property pointing to each resource that it connects, as well as a <code>hasLinkToValue</code>   property pointing to a reification of each of these direct links (   see Links Between Resources).   A <code>LinkObj</code> is more complex (and hence less convenient and readable) than a simple direct link, but it has the   advantage that it can be annotated using an <code>Annotation</code>. For improved readability, a project can make its own   subclasses of <code>LinkObj</code> with specific meanings.</p> </li> </ul>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#values","title":"Values","text":"<p>The Knora base ontology defines a set of OWL classes that are derived from <code>kb:Value</code> and represent different types of structured values found in humanities data. This set of classes may not be extended by user-created ontologies.</p> <p>A value is always part of one particular resource, which points to it using some property derived from <code>hasValue</code>. For example, a user-created ontology could specify a <code>Book</code> class with a property <code>hasSummary</code> (derived from <code>hasValue</code>), and that property could have a <code>knora-base:objectClassConstraint</code> of <code>TextValue</code>. This would mean that the summary of each book is represented as a <code>TextValue</code>.</p> <p>Knora values are versioned. Existing values are not modified. Instead, a new version of an existing value is created. The new version is linked to the old version via the <code>previousValue</code> property.</p> <p>Since each value version has a different IRI, there is no IRI that can be used to cite the value, such that it will always refer to the latest version of the value. Therefore, the latest version of each value has a separate UUID, as the object of the property <code>valueHasUUID</code>. When a new version of the value is created, this UUID is moved to the new version. This makes it possible to cite the latest version of a value by searching for the UUID.</p> <p>\"Deleting\" a value means marking it with <code>kb:isDeleted</code>. An optional <code>kb:deleteComment</code> may be added to explain why the value has been marked as deleted. Deleted values are normally hidden.</p> <p>Most types of values are marked as deleted without creating a new version of the value. However, link values must be treated as a special case. Before a <code>LinkValue</code> can be marked as deleted, its reference count must be decremented to 0. Therefore, a new version of the <code>LinkValue</code> is made, with a reference count of 0, and it is this new version that is marked as deleted.</p> <p>To simplify the enforcement of ontology constraints, and for consistency with resource updates, no new versions of a deleted value can be made; it is not possible to undelete. Instead, if desired, a new value can be created by copying data from a deleted value.</p>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#properties-of-value","title":"Properties of Value","text":"<ul> <li> <p><code>valueCreationDate</code> (1): The date and time when the value was created.</p> </li> <li> <p><code>attachedToUser</code> (1): The user who owns the value.</p> </li> <li> <p><code>valueHasString</code> (1): A human-readable string representation of the value's contents, which is available to Knora's   full-text search index.</p> </li> <li> <p><code>valueHasOrder</code> (0-1): A resource may have several properties of the same type with different values (which will be of   the same class), and it may be necessary to indicate an order in which these values occur. For example, a book may   have several authors which should appear in a defined order. Hence, <code>valueHasOrder</code>, when present, points to an   integer literal indicating the order of a given value relative to the other values of the same property. These   integers will not necessarily start at any particular number, and will not necessarily be consecutive.</p> </li> <li> <p><code>previousValue</code> (0-1): The previous version of the value.</p> </li> <li> <p><code>valueHasUUID</code> (0-1): The UUID that refers to all versions of the value. Only the latest version of the value has this   property.</p> </li> <li> <p><code>isDeleted</code> (1): Indicates whether the value has been deleted.</p> </li> <li> <p><code>deleteDate</code> (0-1): If the value has been deleted, indicates when it was deleted.</p> </li> <li> <p><code>deleteComment</code> (0-1): If the value has been deleted, indicates why it was deleted.</p> </li> </ul> <p>Each Knora value can grant permissions (see Authorisation).</p>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#subclasses-of-value","title":"Subclasses of Value","text":""},{"location":"DSP-API/02-dsp-ontologies/knora-base/#textvalue","title":"TextValue","text":"<p>Represents text, possibly including markup. The text is the object of the <code>valueHasString</code> property. A line break is represented as a Unicode line feed character (<code>U+000A</code>). The non-printing Unicode character <code>INFORMATION SEPARATOR TWO (U+001E)</code> can be used to separate words that are separated only by standoff markup (see below), so they are recognised as separate in a full-text search index.</p> <p>Markup is stored using this property:</p> <ul> <li> <p><code>valueHasStandoff</code> (0-n): Points to a standoff markup tag. See   Text with Standoff Markup.</p> </li> <li> <p><code>valueHasMapping</code> (0-1): Points to the mapping used to create the standoff markup and to convert it back to the   original XML. See Mapping to Create Standoff From XML.</p> </li> </ul> <p>A text value can have a specified language:</p> <ul> <li><code>valueHasLanguage</code> (0-1): An ISO 639-1 code as string specifying the language of the text.</li> </ul>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#datevalue","title":"DateValue","text":"<p>Humanities data includes many different types of dates. In Knora, a date has a specified calendar, and is always represented as a period with start and end points (which may be equal), each of which has a precision (<code>DAY</code>, <code>MONTH</code>, or <code>YEAR</code>). For <code>GREGORIAN</code> and <code>JULIAN</code> calendars, an optional <code>ERA</code> indicator term (<code>BCE</code>, <code>CE</code>, or <code>BC</code>, <code>AD</code>) can be added to the date, when no era is provided the default era <code>AD</code> will be considered. Internally, the start and end points are stored as two Julian Day Numbers. This calendar-independent representation makes it possible to compare and search for dates regardless of the calendar in which they were entered. Properties:</p> <ul> <li> <p><code>valueHasCalendar</code> (1): The name of the calendar in which the date should be displayed. Currently <code>GREGORIAN</code>,   <code>JULIAN</code>, and <code>ISLAMIC</code> civil calendars are supported.</p> </li> <li> <p><code>valueHasStartJDN</code> (1): The Julian Day Number of the start of the period (an <code>xsd:integer</code>).</p> </li> <li> <p><code>valueHasStartPrecision</code> (1): The precision of the start of the period.</p> </li> <li> <p><code>valueHasEndJDN</code> (1): The Julian Day Number of the end of the period (an <code>xsd:integer</code>).</p> </li> <li> <p><code>valueHasEndPrecision</code> (1): The precision of the end of the period.</p> </li> </ul>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#timevalue","title":"TimeValue","text":"<p>A Knora time value represents a precise moment in time in the Gregorian calendar. Since nanosecond precision can be included, it is suitable for use as a timestamp. Properties:</p> <ul> <li><code>valueHasTimeStamp</code> (1): An <code>xsd:dateTimeStamp</code>, stored as an <code>xsd:dateTime</code> (because SPARQL does not support   <code>xsd:dateTimeStamp</code>).</li> </ul>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#intvalue","title":"IntValue","text":"<p>Represents an integer. Property:</p> <ul> <li><code>valueHasInteger</code> (1): An <code>xsd:integer</code>.</li> </ul>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#colorvalue","title":"ColorValue","text":"<ul> <li><code>valueHasColor</code> (1): A string representing a color. The string encodes a color as hexadecimal RGB values, e.g.   <code>\\#FF0000</code>.</li> </ul>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#decimalvalue","title":"DecimalValue","text":"<p>Represents an arbitrary-precision decimal number. Property:</p> <ul> <li><code>valueHasDecimal</code> (1): An <code>xsd:decimal</code>.</li> </ul>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#urivalue","title":"UriValue","text":"<p>Represents a non-Knora URI. Property:</p> <ul> <li><code>valueHasUri</code> (1): An <code>xsd:anyURI</code>.</li> </ul>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#booleanvalue","title":"BooleanValue","text":"<p>Represents a boolean value. Property:</p> <ul> <li><code>valueHasBoolean</code> (1): An <code>xsd:boolean</code>.</li> </ul>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#geomvalue","title":"GeomValue","text":"<p>Represents a geometrical object as a JSON string, using normalized coordinates. Property:</p> <ul> <li><code>valueHasGeometry</code> (1): A JSON string.</li> </ul>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#geonamevalue","title":"GeonameValue","text":"<p>Represents a geolocation, using the identifiers found at GeoNames. Property:</p> <ul> <li><code>valueHasGeonameCode</code> (1): The identifier of a geographical feature from GeoNames, represented   as an <code>xsd:string</code>.</li> </ul>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#intervalvalue","title":"IntervalValue","text":"<p>Represents a time interval, with precise start and end times on a timeline, e.g. relative to the beginning of an audio or video file. Properties:</p> <ul> <li> <p><code>valueHasIntervalStart</code> (1): An <code>xsd:decimal</code> representing the start of the interval in seconds.</p> </li> <li> <p><code>valueHasIntervalEnd</code> (1): An <code>xsd:decimal</code> representing the end of the interval in seconds.</p> </li> </ul>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#listvalue","title":"ListValue","text":"<p>Projects often need to define lists or hierarchies of categories that can be assigned to many different resources. Then, for example, a user interface can provide a drop-down menu to allow the user to assign a category to a resource. The <code>ListValue</code> class provides a way to represent these sorts of data structures. It can represent either a flat list or a tree.</p> <p>A <code>ListValue</code> has this property:</p> <ul> <li><code>valueHasListNode</code> (1): Points to a <code>ListNode</code>.</li> </ul> <p>Each <code>ListNode</code> can have the following properties:</p> <ul> <li> <p><code>isRootNode</code> (0-1): Set to <code>true</code> if this is the root node.</p> </li> <li> <p><code>hasSubListNode</code> (0-n): Points to the node's child nodes, if any.</p> </li> <li> <p><code>hasRootNode</code> (0-1): Points to the root node of the list (absent if <code>isRootNode</code> is <code>true</code>).</p> </li> <li> <p><code>listNodePosition</code> (0-1): An integer indicating the node's position in the list of its siblings (absent   if <code>isRootNode</code> is <code>true</code>).</p> </li> <li> <p><code>listNodeName</code> (0-1): The node's human-readable name (absent if <code>isRootNode</code> is <code>true</code>).</p> </li> </ul>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#filevalue","title":"FileValue","text":"<p>Knora stores certain kinds of data outside the triplestore, in files (see Representations). Each digital object that is stored outside the triplestore has associated metadata, which is stored in the triplestore in a <code>kb:FileValue</code>. The base class <code>FileValue</code>, which is not intended to be used directly, has these properties:</p> <ul> <li> <p><code>internalFilename</code> (1): The name of the file as stored by Knora.</p> </li> <li> <p><code>internalMimeType</code> (1): The MIME type of the file as stored by Knora.</p> </li> <li> <p><code>originalFilename</code> (0-1): The original name of the file when it was uploaded to the DSP-API server.</p> </li> <li> <p><code>originalMimeType</code> (0-1): The original MIME type of the file when it was uploaded to the Knora API server.</p> </li> <li> <p><code>isPreview</code> (0-1): A boolean indicating whether the file is a preview, i.e. a small image representing the contents of   the file. A preview is always a <code>StillImageFileValue</code>, regardless of the type of the enclosing <code>Representation</code>.</p> </li> </ul> <p>The subclasses of <code>FileValue</code>, which are intended to be used directly in data, include:</p> <ul> <li> <p><code>StillImageFileValue</code>: Contains metadata about a still image file.</p> </li> <li> <p><code>MovingImageFileValue</code>: Contains metadata about a video file.</p> </li> <li> <p><code>AudioFileValue</code>: Contains metadata about an audio file.</p> </li> <li> <p><code>DDDFileValue</code>: Contains metadata about a 3D image file.</p> </li> <li> <p><code>TextFileValue</code>: Contains metadata about a text file.</p> </li> <li> <p><code>DocumentFileValue</code>: Contains metadata about a document (such as PDF) that is not a text file.</p> </li> <li> <p><code>ArchiveFileValue</code>: Contains metadata about an archive (such as zio archive).</p> </li> </ul> <p>Each of these classes contains properties that are specific to the type of file it describes. For example, still image files have dimensions, video files have frame rates, and so on.</p> <p><code>FileValue</code> objects are versioned like other values, and the actual files stored by Knora are also versioned. Version 1 of the DSP-API does not provide a way to retrieve a previous version of a file, but this feature will be added in a subsequent version of the API.</p>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#linkvalue","title":"LinkValue","text":"<p>A <code>LinkValue</code> is an RDF \"reification\" containing metadata about a link between two resources. It is therefore a subclass of <code>rdf:Statement</code> as well as of <code>Value</code>. It has these properties:</p> <p><code>rdf:subject</code> (1)</p> <p>:   The resource that is the source of the link.</p> <p><code>rdf:predicate</code> (1)</p> <p>:   The link property.</p> <p><code>rdf:object</code> (1)</p> <p>:   The resource that is the target of the link.</p> <p><code>valueHasRefCount</code> (1)</p> <p>:   The reference count of the link. This is meaningful when the <code>LinkValue</code> describes resource references in Standoff text markup (see StandoffLinkTag). Otherwise, the reference count will always be 1 (if the link exists) or 0 (if it has been deleted).</p> <p>For details about how links are created in Knora, see Links Between Resources.</p>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#externalresvalue","title":"ExternalResValue","text":"<p>Represents a resource that is not stored in the RDF triplestore managed by Knora, but instead resides in an external repository managed by some other software. The <code>ExternalResValue</code> contains the information that Knora needs in order to access the resource, assuming that a suitable gateway plugin is installed.</p> <p><code>extResAccessInfo</code> (1)</p> <p>:   The location of the repository containing the external resource (e.g. its URL).</p> <p><code>extResId</code> (1)</p> <p>:   The repository-specific ID of the external resource.</p> <p><code>extResProvider</code> (1)</p> <p>:   The name of the external provider of the resource.</p>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#links-between-resources","title":"Links Between Resources","text":"<p>A link between two resources is expressed, first of all, as a triple, in which the subject is the resource that is the source of the link, the predicate is a \"link property\" (a subproperty of <code>kb:hasLinkTo</code>), and the object is the resource that is the target of the link.</p> <p>It is also useful to store metadata about links. For example, Knora needs to know who owns the link, who has permission to modify it, when it was created, and so on. Such metadata cannot simply describe the link property, because then it would refer to that property in general, not to any particular instance in which that property is used to connect two particular resources. To attach metadata to a specific link in RDF, it is necessary to create an RDF \"reification\". A reification makes statements about a particular triple (subject, predicate, object), in this case the triple that expresses the link between the resources. Knora uses reifications of type <code>kb:LinkValue</code> (described in LinkValue to store metadata about links.</p> <p>For example, suppose a project describes paintings that belong to collections. The project can define an ontology as follows (expressed here in Turtle format, and simplified for the purposes of illustration):</p> <pre><code>@prefix kb &lt;http://www.knora.org/ontology/knora-base#&gt; .\n@prefix : &lt;http://www.knora.org/ontology/paintings#&gt; .\n\n:Painting rdf:type owl:Class ;\n    rdfs:subClassOf kb:Resource ,\n        [ rdf:type owl:Restriction ;\n            owl:onProperty :hasArtist ;\n            owl:cardinality 1 ] ,\n        [ rdf:type owl:Restriction ;\n              owl:onProperty :hasTitle ;\n              owl:cardinality 1 ] ;\n        [ rdf:type owl:Restriction ;\n              owl:onProperty :isInCollection ;\n              owl:minCardinality 1 ] ;\n        [ rdf:type owl:Restriction ;\n              owl:onProperty :isInCollectionValue ;\n              owl:minCardinality 1 ] .\n\n:Collection rdf:type owl:Class ;\n    rdfs:subClassOf kb:Resource ,\n        [ rdf:type owl:Restriction ;\n            owl:onProperty :hasCollectionName ;\n            owl:cardinality 1 ] .\n\n:hasArtist rdf:type owl:ObjectProperty ;\n    rdfs:label \"Name of artist\" ;\n    kb:subjectClassConstraint :Painting ;\n    kb:objectClassConstraint kb:TextValue .\n\n:hasTitle rdf:type owl:ObjectProperty ;\n    rdfs:label \"Title of painting\"\n    kb:subjectClassConstraint :Painting ;\n    kb:objectClassConstraint kb:TextValue .\n\n:hasCollectionName rdf:type owl:ObjectProperty ;\n    rdfs:label \"Name of collection\" ;\n    kb:subjectClassConstraint :Collection ;\n    kb:objectClassConstraint kb:TextValue .\n</code></pre> <p>To link the paintings to the collection, we must add a \"link property\" to the ontology. In this case, the link property will point from a painting to the collection it belongs to. Every link property must be a subproperty of <code>kb:hasLinkTo</code>.</p> <pre><code>:isInCollection rdf:type owl:ObjectProperty ;\n    rdfs:subPropertyOf kb:hasLinkTo ;\n    kb:subjectClassConstraint :Painting ;\n    kb:objectClassConstraint :Collection .\n</code></pre> <p>We must then add a \"link value property\", which will point from a painting to a <code>kb:LinkValue</code> (described in LinkValue), which will contain metadata about the link between the property and the collection. In particular, the link value specifies the creator of the link, the date when it was created, and the permissions that determine who can view or modify it. The name of the link value property is constructed using a simple naming convention: the word <code>Value</code> is appended to the name of the link property. In this case, since our link property is called <code>:isInCollection</code>, the link value property must be called <code>:isInCollectionValue</code>. Every link value property must be a subproperty of <code>kb:hasLinkToValue</code>.</p> <pre><code>:isInCollectionValue rdf:type owl:ObjectProperty ;\n    rdfs:subPropertyOf kb:hasLinkToValue ;\n    kb:subjectClassConstraint :Painting ;\n    kb:objectClassConstraint kb:LinkValue .\n</code></pre> <p>Given this ontology, we can create some RDF data describing a painting and a collection:</p> <pre><code>@prefix paintings &lt;http://www.knora.org/ontology/paintings#&gt; .\n@prefix data &lt;http://www.knora.org/ontology/paintings/data#&gt; .\n\ndata:dali_4587 rdf:type paintings:Painting ;\n    paintings:hasTitle data:value_A ;\n    paintings:hasArtist data:value_B .\n\ndata:value_A rdf:type kb:TextValue ;\n    kb:valueHasString \"The Persistence of Memory\" .\n\ndata:value_B rdf:type kb:TextValue ;\n    kb:valueHasString \"Salvador Dali\" .\n\ndata:pompidou rdf:type paintings:Collection ;\n    paintings:hasCollectionName data:value_C .\n\ndata:value_C rdf:type kb:TextValue ;\n    kb:valueHasString \"Centre Pompidou, Paris\" .\n</code></pre> <p>We can then state that the painting is in the collection:</p> <pre><code>data:dali_4587 paintings:isInCollection data:pompidou ;\n    paintings:isinCollectionValue data:value_D .\n\ndata:value_D rdf:type kb:LinkValue ;\n    rdf:subject data:dali_4587 ;\n    rdf:predicate paintings:isInCollection ;\n    rdf:object data:pompidou ;\n    kb:valueHasRefCount 1 .\n</code></pre> <p>This creates a link (<code>paintings:isInCollection</code>) between the painting and the collection, along with a reification containing metadata about the link. We can visualise the result as the following graph:</p> <p></p> <p>Knora allows a user to see a link if the requesting user has permission to see the source and target resources as well as the <code>kb:LinkValue</code>.</p>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#part-whole-relations-between-resources","title":"Part-Whole-Relations between Resources","text":""},{"location":"DSP-API/02-dsp-ontologies/knora-base/#ispartof","title":"isPartOf","text":"<p>A special case of linked resources are part-of related resources, i.e. a resource consisting of several other resources. In order to create a part-of relation between two resources, the resource that is part of another resource needs to have a property that is either <code>kb:isPartOf</code> or a subproperty thereof. <code>kb:isPartOf</code> itself is a subproperty of <code>kb:hasLinkTo</code>. Same as described above for link properties, a corresponding part-of value property is created automatically. This value property has the same name as the part-of property with <code>Value</code> appended. For example, if in an ontology <code>data</code> a property <code>data:partOf</code> was defined, the corresponding value property would be named <code>data:partOfValue</code>. This newly created property <code>data:partOfValue</code> is defined as a subproperty of <code>kb:isPartOfValue</code>.</p> <p>Part-of relations are recommended for resources of type <code>kb:StillImageRepresentation</code>. In that case, the resource that is part of another resource needs to have a property <code>kb:seqnum</code> or a subproperty thereof, with an integer as value. A client can then use this information to leaf through the parts of the compound resource (p.ex. to leaf through the pages of a book like in this example).</p>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#issequenceof","title":"isSequenceOf","text":"<p>Similar to <code>kb:isPartOf</code> for <code>kb:StillImageRepresentations</code>, part-whole-relations can be defined for resources that have a time dimension by using <code>kb:isSequenceOf</code>. You can use it for video or audio resources that are subtypes of <code>kb:MovingImageRepresentation</code> and <code>kb:AudioRepresentation</code>.</p> <p><code>kb:isSequenceOf</code> is intended to be used in combination with the property <code>kb:hasSequenceBounds</code> which points to a <code>kb:IntervalValue</code>. This defines the start and end point of the subseqence in relation to the entire audio/video resource as an interval. When the properties are used in this combination, a dedicated behavior in the frontend allows to display the sequences alongside the main resource.</p> <p>There is an important difference between <code>kb:isSequenceOf</code> and <code>kb:isPartOf</code>: For <code>kb:isPartOf</code>, each part is a <code>kb:StillImageRepresentation</code> and the whole consists of multiple such parts. In <code>kb:isSequenceOf</code> on the other hand, the whole is one <code>kb:MovingImageRepresentation</code> or <code>kb:AudioRepresentation</code>. The parts only define which sub-sequence of this representation they are.</p>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#text-with-standoff-markup","title":"Text with Standoff Markup","text":"<p>DSP-API is designed to be able to store text with markup, which can indicate formatting and structure, as well as the complex observations involved in transcribing handwritten manuscripts. One popular way of representing text in the humanities is to encode it in XML using the Text Encoding Initiative (TEI) guidelines. In DSP-API, a TEI/XML document can be stored as a file with attached metadata, but this is not recommended, because it does not allow to perform searches across multiple documents.</p> <p>The recommended way to store text with markup in DSP-API is to use the built-in support for \"standoff\" markup, which is stored separately from the text. This has some advantages over embedded markup such as XML. While XML requires markup to have a hierarchical structure, and does not allow overlapping tags, standoff nodes do not have these limitations (see  Using Standoff Properties for Marking-up Historical Documents in the Humanities). A standoff tag can be attached to any substring in the text by giving its start and end positions. Unlike in corpus linguistics, we do not use any tokenisation resulting in a form of predefined segmentation, which would limit the user's ability to freely annotate any ranges in the text.</p> <p>For example, suppose we have the following text:</p> <pre><code>&lt;blockquote&gt;This &lt;i&gt;sentence &lt;strong&gt;has overlapping&lt;/strong&gt;&lt;/i&gt; &lt;strong&gt;visual&lt;/strong&gt; attributes.&lt;/blockquote&gt;\n</code></pre> <p>This would require just two standoff tags: <code>(italic, start=5, end=29)</code> and <code>(bold, start=14, end=36)</code>.</p> <p>Moreover, standoff makes it possible to mark up the same text in different, possibly incompatible ways, allowing for different interpretations without making redundant copies of the text. In the Knora base ontology, any text value can have standoff tags.</p> <p>By representing standoff as RDF triples, DSP-API makes markup searchable across multiple text documents in a repository. For example, if a repository contains documents in which references to persons are indicated in standoff, it is straightforward to find all the documents mentioning a particular person. DSP-API's standoff support is intended to make it possible to convert documents with embedded, hierarchical markup, such as TEI/XML, into RDF standoff and back again, with no data loss, thus bringing the benefits of RDF to existing TEI-encoded documents.</p> <p>In the Knora base ontology, a <code>TextValue</code> can have one or more standoff tags. Each standoff tag indicates the start and end positions of a substring in the text that has a particular attribute. The OWL class <code>kb:StandoffTag</code>, which is the base class of all standoff node classes, has these properties:</p> <ul> <li><code>standoffTagHasStart</code> (1): The index of the first character in the text that has the attribute.</li> <li><code>standoffTagHasEnd</code> (1): The index of the last character in the text that has the attribute, plus 1.</li> <li><code>standoffTagHasUUID</code> (1): A UUID identifying this instance and those corresponding to it in later versions of   the <code>TextValue</code> it belongs to.   The UUID is a means to maintain a reference to a particular range of a text also when new versions are made and   standoff   tag IRIs change.</li> <li><code>standoffTagHasOriginalXMLID</code> (0-1): The original ID of the XML element that the standoff tag represents, if any.</li> <li><code>standoffTagHasStartIndex</code> (1): The start index of the standoff tag. Start indexes are numbered from 0 within the   context of a particular text.   When several standoff tags share the same start position, they can be nested correctly with this information when   transforming them to XML.</li> <li><code>standoffTagHasEndIndex</code> (1): The end index of the standoff tag. Start indexes are numbered from 0 within the context   of a particular text.   When several standoff tags share the same end position, they can be nested correctly with this information when   transforming   them to XML.</li> <li><code>standoffTagHasStartParent</code> (0-1): Points to the parent standoff tag. This corresponds to the original nesting of tags   in XML. If a standoff tag has no parent, it represents the XML root element.   If the original XML element is a CLIX tag, it represents the start of a virtual (non syntactical) hierarchy.</li> <li><code>standoffTagHasEndParent</code> (0-1): Points to the parent standoff tag if the original XML element is a CLIX tag and   represents the end of a virtual (non syntactical) hierarchy.</li> </ul> <p>The <code>StandoffTag</code> class is not used directly in RDF data; instead, its subclasses are used. A few subclasses are currently provided in <code>standoff-onto.ttl</code>, and more will be added to support TEI semantics. Projects are able to define their own custom standoff tag classes (direct subclasses of <code>StandoffTag</code> or one of the standoff data type classes or subclasses of one of the standoff classes defined in <code>standoff-onto.ttl</code>).</p>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#subclasses-of-standofftag","title":"Subclasses of StandoffTag","text":""},{"location":"DSP-API/02-dsp-ontologies/knora-base/#standoff-data-type-tags","title":"Standoff Data Type Tags","text":"<p>Associates data in some Knora value type with a substring in a text. Standoff data type tags are subclasses of <code>ValueBase</code> classes.</p> <ul> <li><code>StandoffLinkTag</code> Indicates that a substring refers to another <code>kb:Resource</code>. See StandoffLinkTag.</li> <li><code>StandoffInternalReferenceTag</code> Indicates that a substring refers to another standoff tag in the same text value.   See Internal Links in a TextValue.</li> <li><code>StandoffUriTag</code> Indicates that a substring is associated with a URI, which is stored in the same form that is used   for <code>kb:UriValue</code>. See UriValue.</li> <li><code>StandoffDateTag</code> Indicates that a substring represents a date, which is stored in the same form that is used   for <code>kb:DateValue</code>. See DateValue.</li> <li><code>StandoffColorTag</code> Indicates that a substring represents a color, which is stored in the same form that is used   for <code>kb:ColorValue</code>. See ColorValue.</li> <li><code>StandoffIntegerTag</code> Indicates that a substring represents an integer, which is stored in the same form that is used   for <code>kb:IntegerValue</code>. See IntValue.</li> <li><code>StandoffDecimalTag</code> Indicates that a substring represents a number with fractions, which is stored in the same form   that is used for <code>kb:DecimalValue</code>. See DecimalValue.</li> <li><code>StandoffIntervalTag</code> Indicates that a substring represents an interval, which is stored in the same form that is used   for <code>kb:IntervalValue</code>. See IntervalValue.</li> <li><code>StandoffBooleanTag</code> Indicates that a substring represents a Boolean, which is stored in the same form that is used   for <code>kb:BooleanValue</code>. See BooleanValue.</li> <li><code>StandoffTimeTag</code> Indicates that a substring represents a timestamp, which is stored in the same form that is used   for <code>kb:TimeValue</code>. See TimeValue.</li> </ul>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#standofflinktag","title":"StandoffLinkTag","text":"<p>A <code>StandoffLinkTag</code> Indicates that a substring is associated with a Knora resource. For example, if a repository contains resources representing persons, a text could be marked up so that each time a person's name is mentioned, a <code>StandoffLinkTag</code> connects the name to the Knora resource describing that person. It has the following property:</p> <p><code>standoffTagHasLink</code> (1): The IRI of the resource that is referred to.</p> <p>One of the design goals of the Knora base ontology is to make it easy and efficient to find out which resources contain references to a given resource. Direct links are easier and more efficient to query than indirect links. Therefore, when a text value contains a resource reference in its standoff nodes, Knora automatically creates a direct link between the containing resource and the target resource, along with an RDF reification (a <code>kb:LinkValue</code>) describing the link, as discussed in Links Between Resources. In this case, the link property is always <code>kb:hasStandoffLinkTo</code>, and the link value property (which points to the <code>LinkValue</code>) is always <code>kb:hasStandoffLinkToValue</code>.</p> <p>DSP-API automatically updates direct links and reifications for standoff resource references when text values are updated. To do this, it keeps track of the number of text values in each resource that contain at least one standoff reference to a given target resource. It stores this number as the reference count of the <code>LinkValue</code> (see LinkValue) describing the direct link. Each time this number changes, it makes a new version of the <code>LinkValue</code>, with an updated reference count. When the reference count reaches zero, it removes the direct link and makes a new version of the <code>LinkValue</code>, marked with <code>kb:isDeleted</code>.</p> <p>For example, if <code>data:R1</code> is a resource with a text value in which the resource <code>data:R2</code> is referenced, the repository could contain the following triples:</p> <pre><code>data:R1\n    ex:hasComment data:V1 .\n\ndata:V1\n    rdf:type            kb:TextValue ;\n    kb:valueHasString   \"This link is internal.\" ;\n    kb:valueHasStandoff data:SO1 .\n\ndata:SO1\n    rdf:type                kb:StandoffLinkTag ;\n    kb:standoffTagHasStart: 5 ;\n    kb:standoffTagHasEnd:   9 ;\n    kb:standoffTagHasLink   data:R2 .\n\ndata:R1\n    kb:hasStandoffLinkTo data:R2 .\n\ndata:R1\n    kb:hasStandoffLinkToValue data:LV1 .\n\ndata:LV1\n    rdf:type            kb:LinkValue ;\n    rdf:subject         data:R1 ;\n    rdf:predicate       kb:hasStandoffLinkTo ;\n    rdf:object          data:R2 ;\n    kb:valueHasRefCount 1 .\n</code></pre> <p>The result can be visualized like this:</p> <p></p> <p>Link values created automatically for resource references in standoff are visible to all users, and the creator of these link values is always <code>kb:SystemUser</code> (see Users and Groups). The DSP-API server allows a user to see a standoff link if the user has permission to see the source and target resources.</p>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#internal-links-in-a-textvalue","title":"Internal Links in a TextValue","text":"<p>Internal links in a <code>TextValue</code> can be represented using the data type standoff class <code>StandoffInternalReferenceTag</code> or a subclass of it. It has the following property:</p> <p><code>standoffTagHasInternalReference</code> (1): Points to a <code>StandoffTag</code> that belongs to the same <code>TextValue</code>. It has an <code>objectClassConstraint</code> of <code>StandoffTag</code>.</p> <p>For links to a <code>kb:Resource</code>, see StandoffLinkTag.</p>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#mapping-to-create-standoff-from-xml","title":"Mapping to Create Standoff From XML","text":"<p>A mapping allows for the conversion of an XML document to RDF-standoff and back. A mapping defines one-to-one relations between XML elements (with or without a class) and attributes and standoff classes and properties (see XML to Standoff Mapping).</p> <p>A mapping is represented by a <code>kb:XMLToStandoffMapping</code> which contains one or more <code>kb:MappingElement</code>. A <code>kb:MappingElement</code> maps an XML element (including attributes) to a standoff class and standoff properties. It has the following properties:</p> <ul> <li><code>mappingHasXMLTagname</code> (1): The name of the XML element that is mapped to a standoff class.</li> <li><code>mappingHasXMLNamespace</code> (1): The XML namespace of the XML element that is mapped to a standoff class. If no namespace   is given, <code>noNamespace</code> is used.</li> <li><code>mappingHasXMLClass</code> (1): The name of the class of the XML element. If it has no class, <code>noClass</code> is used.</li> <li><code>mappingHasStandoffClass</code> (1): The standoff class the XML element is mapped to.</li> <li><code>mappingHasXMLAttribute</code> (0-n): Maps XML attributes to standoff properties using <code>MappingXMLAttribute</code>. See below.</li> <li><code>mappingHasStandoffDataTypeClass</code> (0-1): Indicates the standoff data type class of the standoff class the XML element   is mapped to.</li> <li><code>mappingElementRequiresSeparator</code> (1): Indicates if there should be an invisible word separator inserted after the XML   element in the RDF-standoff representation.   Once the markup is stripped, text segments that belonged to different elements may be concatenated.</li> </ul> <p>A <code>MappingXMLAttribute</code> has the following properties:</p> <ul> <li><code>mappingHasXMLAttributename</code>: The name of the XML attribute that is mapped to a standoff property.</li> <li><code>mappingHasXMLNamespace</code>: The namespace of the XML attribute that is mapped to a standoff property. If no namespace is   given, <code>noNamespace</code> is used.</li> <li><code>mappingHasStandoffProperty</code>: The standoff property the XML attribute is mapped to.</li> </ul> <p>DSP-API includes a standard mapping used by the DSP APP. It has the IRI <code>http://rdfh.ch/standoff/mappings/StandardMapping</code> and defines mappings for a few elements used to write texts with simple markup.</p>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#standoff-in-digital-editions","title":"Standoff in Digital Editions","text":"<p>DSP-API's standoff is designed to make it possible to convert XML documents to standoff and back. One application for this feature is an editing workflow in which an editor works in an XML editor, and the resulting XML documents are converted to standoff and stored in the DSP, where they can be searched and annotated.</p> <p>If an editor wants to correct text that has been imported from XML into standoff, the text can be exported as XML, edited, and imported again. To preserve annotations on standoff tags across edits, each tag can automatically be given a UUID. In a future version of the Knora base ontology, it may be possible to create annotations that point to UUIDs rather than to IRIs. When a text is exported to XML, the UUIDs can be included in the XML. When the edited XML is imported again, it can be converted to new standoff tags with the same UUIDs. Annotations that applied to standoff tags in the previous version of the text will therefore also apply to equivalent tags in the new version.</p> <p>When text is converted from XML into standoff, tags are also given indexes, which are numbered from 0 within the context of a particular text. This makes it possible to order tags that share the same position, and to preserve the hierarchy of the original XML document. An ordinary, hierarchical XML tag is converted to a standoff tag that has one index, as well as the index of its parent tag, if any. The Knora base ontology also supports non-hierarchical markup such as CLIX, which enables overlapping markup to be represented in XML. When non-hierarchical markup is converted to standoff, both the start position and the end position of the standoff tag have indexes and parent indexes.</p> <p>To support these features, a standoff tag can have these additional properties:</p> <ul> <li><code>standoffTagHasStartIndex</code> (0-1): The index of the start position.</li> <li><code>standoffTagHasEndIndex</code> (0-1): The index of the end position, if this is a non-hierarchical tag.</li> <li><code>standoffTagHasStartParent</code> (0-1): The IRI of the tag, if any, that contains the start position.</li> <li><code>standoffTagHasEndParent</code> (0-1): The IRI of the tag, if any, that contains the end position, if this is a   non-hierarchical tag.</li> <li><code>standoffTagHasUUID</code> (0-1): A UUID that can be used to annotate a standoff tag that may be present in different   versions of a text,   or in different layers of a text (such as a diplomatic transcription and an edited critical text).</li> </ul>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#querying-standoff-in-sparql","title":"Querying Standoff in SPARQL","text":"<p>A future version of DSP-API may provide an API for querying standoff markup. In the meantime, it is possible to query it directly in SPARQL. For example, here is a SPARQL query (using RDFS inference) that finds all the text values that have a standoff date tag referring to Christmas Eve 2016, contained in a <code>StandoffItalicTag</code>:</p> <pre><code>PREFIX knora-base: &lt;http://www.knora.org/ontology/knora-base#&gt;\nPREFIX standoff: &lt;http://www.knora.org/ontology/standoff#&gt;\n\nselect * where {\n    ?standoffTag a knora-base:StandoffDateTag  .\n\n    ?standoffTag knora-base:valueHasStartJDN ?dateStart .\n    ?standoffTag knora-base:valueHasEndJDN ?dateEnd .\n\n    FILTER (2457747  &lt;= ?dateEnd &amp;&amp; 2457747  &gt;= ?dateStart)\n\n    ?standoffTag knora-base:standoffTagHasStartParent ?parent .\n    ?parent a standoff:StandoffItalicTag .\n\n    ?textValue knora-base:valueHasStandoff ?standoffTag .\n    ?textValue knora-base:valueHasString ?string .\n\n    ?standoffTag knora-base:standoffTagHasStart ?startPos .\n    ?standoffTag knora-base:standoffTagHasEnd ?endPos .  \n}\n</code></pre>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#authorisation","title":"Authorisation","text":""},{"location":"DSP-API/02-dsp-ontologies/knora-base/#users-and-groups","title":"Users and Groups","text":"<p>Each Knora user is represented by an object belonging to the class <code>kb:User</code>, which is a subclass of <code>foaf:Person</code>, and has the following properties:</p> <p><code>userid</code> (1)</p> <p>:   A unique identifier that the user must provide when logging in.</p> <p><code>password</code> (1)</p> <p>:   A cryptographic hash of the user's password.</p> <p><code>email</code> (0-n)</p> <p>:   Email addresses belonging to the user.</p> <p><code>isInProject</code> (0-n)</p> <p>:   Projects that the user is a member of.</p> <p><code>isInGroup</code> (0-n)</p> <p>:   user-created groups that the user is a member of.</p> <p><code>foaf:familyName</code> (1)</p> <p>:   The user's family name.</p> <p><code>foaf:givenName</code> (1)</p> <p>:   The user's given name.</p> <p>Knora's concept of access control is that an object (a resource or value) can grant permissions to groups of users (but not to individual users). There are several built-in groups:</p> <p><code>knora-admin:UnknownUser</code></p> <p>:   Any user who has not logged into Knora is automatically assigned to this group.</p> <p><code>knora-admin:KnownUser</code></p> <p>:   Any user who has logged into Knora is automatically assigned to this group.</p> <p><code>knora-admin:ProjectMember</code></p> <p>:   When checking a user's permissions on an object, the user is automatically assigned to this group if she is a member of the project that the object belongs to.</p> <p><code>knora-admin:Creator</code></p> <p>:   When checking a user's permissions on an object, the user is automatically assigned to this group if he is the creator of the object.</p> <p><code>knora-admin:ProjectAdmin</code></p> <p>:   When checking a user's permissions on an object, the user is automatically assigned to this group if she is an administrator of the project that the object belongs to.</p> <p><code>knora-admin:SystemAdmin</code></p> <p>:   The group of Knora system administrators.</p> <p>A user-created ontology can define additional groups, which must belong to the OWL class <code>knora-admin:UserGroup</code>.</p> <p>There is one built-in <code>knora-admin:SystemUser</code>, which is the creator of link values created automatically for resource references in standoff markup (see StandoffLinkTag).</p>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#permissions","title":"Permissions","text":"<p>Each resource or value can grant certain permissions to specified user groups. These permissions are represented as the object of the predicate <code>kb:hasPermissions</code>, which is required on every <code>kb:Resource</code> and on the current version of every <code>kb:Value</code>. The permissions attached to the current version of a value also apply to previous versions of the value. Value versions other than the current one do not have this predicate.</p> <p>The following permissions can be granted:</p> <ol> <li>Restricted view permission (RV) Allows a restricted view of the object, e.g. a view of an image with a watermark.</li> <li>View permission (V) Allows an unrestricted view of the object. Having view permission on a resource only affects    the user's ability to view information about the resource other than its values. To view a value, she must have view    permission on the value itself.</li> <li>Modify permission (M) For values, this permission allows a new version of a value to be created. For resources,    this allows the user to create a new value (as opposed to a new version of an existing value), or to change    information about the resource other than its values. When he wants to make a new version of a value, his permissions    on the containing resource are not relevant. However, when he wants to change the target of a link, the old link must    be deleted and a new one created, so he needs modify permission on the resource.</li> <li>Delete permission (D) Allows the item to be marked as deleted.</li> <li>Change rights permission (CR) Allows the permissions granted by the object to be changed.</li> </ol> <p>Each permission in the above list implies all lower-numbered permissions. A user's permission level on a particular object is calculated in the following way:</p> <ol> <li>Make a list of the groups that the user belongs to, including    <code>Creator</code> and/or <code>ProjectMember</code> if applicable.</li> <li>Make a list of the permissions that she can obtain on the object, by iterating over the permissions that the object    grants. For each permission, if she is in the specified group, add the specified permission to the list of    permissions she can obtain.</li> <li>From the resulting list, select the highest-level permission.</li> <li>If the result is that she would have no permissions, give her whatever permission <code>UnknownUser</code> would have.</li> </ol> <p>To view a link between resources, a user needs permission to view the source and target resources. He also needs permission to view the <code>LinkValue</code> representing the link, unless the link property is <code>hasStandoffLinkTo</code> (see StandoffLinkTag).</p> <p>The format of the object of <code>kb:hasPermissions</code> is as follows:</p> <ul> <li>Each permission is represented by the one-letter or two-letter abbreviation given above.</li> <li>Each permission abbreviation is followed by a space, then a comma-separated list of groups that the permission is   granted to.</li> <li>The IRIs of built-in groups are shortened using the <code>knora-admin</code>   prefix.</li> <li>Multiple permissions are separated by a vertical bar (<code>|</code>).</li> </ul> <p>For example, if an object grants view permission to unknown and known users, and modify permission to project members, the resulting permission literal would be:</p> <pre><code>V knora-admin:UnknownUser,knora-admin:KnownUser|M knora-admin:ProjectMember\n</code></pre>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#consistency-checking","title":"Consistency Checking","text":"<p>Knora tries to enforce repository consistency by checking constraints that are specified in the Knora base ontology and in user-created ontologies. Three types of consistency rules are enforced:</p> <ul> <li>Cardinalities in OWL class definitions must be satisfied.</li> <li>Constraints on the types of the subjects and objects of OWL object properties must be satisfied.</li> <li>A datatype property may not have an empty string as an object.</li> </ul>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#owl-cardinalities","title":"OWL Cardinalities","text":"<p>As noted in Resources, each subclass of <code>Resource</code> must use OWL cardinality restrictions to specify the properties it can have. More specifically, a resource is allowed to have a property that is a subproperty of <code>kb:hasValue</code> or <code>kb:hasLinkTo</code> only if the resource's class has some cardinality for that property. Similarly, a value is allowed to have a subproperty of <code>kb:valueHas</code> only if the value's class has some cardinality for that property.</p> <p>Knora supports, and attempts to enforce, the following cardinality constraints:</p> <ul> <li> <p><code>owl:cardinality 1</code>:   Exactly One <code>1</code> - A resource of this class must have exactly one instance of the specified property.</p> </li> <li> <p><code>owl:minCardinality 1</code>:   At Least One <code>1-n</code> - A resource of this class must have at least one instance of the specified property.</p> </li> <li> <p><code>owl:maxCardinality 1</code>:   Zero Or One <code>0-1</code> - A resource of this class must have either zero or one instance of the specified property.</p> </li> <li> <p><code>owl:minCardinality 0</code>:   Unbounded <code>0-n</code> - A resource of this class may have zero or more instances of the specified property.</p> </li> </ul> <p>Knora requires cardinalities to be defined using blank nodes, as in the following example from <code>knora-base</code>:</p> <pre><code>:Representation rdf:type owl:Class ;\n    rdfs:subClassOf :Resource ,\n        [ rdf:type owl:Restriction ;\n          owl:onProperty :hasFileValue ;\n          owl:minCardinality \"1\"^^xsd:nonNegativeInteger ] .\n\n:StillImageRepresentation rdf:type owl:Class ;\n    rdfs:subClassOf :Representation ,\n        [ rdf:type owl:Restriction ;\n          owl:onProperty :hasStillImageFileValue ;\n          owl:minCardinality \"1\"^^xsd:nonNegativeInteger ] .\n</code></pre> <p>The cardinality of a link property must be the same as the cardinality of the corresponding link value property.</p> <p>Each <code>owl:Restriction</code> may have the predicate <code>salsah-gui:guiOrder</code> to indicate the order in which properties should be displayed in a GUI (see The SALSAH GUI Ontology).</p> <p>A resource class inherits cardinalities from its superclasses. This follows from the rules of RDFS inference. Also, in Knora, cardinalities in the subclass can override cardinalities that would otherwise be inherited from the superclass. Specifically, if a superclass has a cardinality on a property P, and a subclass has a cardinality on a subproperty of P, the subclass's cardinality overrides the superclass's cardinality. In the example above, <code>hasStillImageFileValue</code> is a subproperty of <code>hasFileValue</code>. Therefore, the cardinality on <code>hasStillImageFileValue</code> overrides (i.e. replaces) the one on <code>hasFileValue</code>.</p> <p>Note that, unlike cardinalities, predicates of properties are not inherited. If <code>:foo rdfs:subPropertyOf :bar</code>, this does not mean that <code>:foo</code> inherits anything from <code>:bar</code>. Any predicates of <code>:foo</code> that are also needed by <code>:bar</code> must be defined explicitly on <code>:bar</code>. This design decision was made because property predicate inheritance is not provided by RDFS inference, and would make it more difficult to check the correctness of ontologies, while providing little practical benefit.</p> <p>For more information about OWL cardinalities, see the OWL 2 Primer.</p>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#constraints-on-the-types-of-property-subjects-and-objects","title":"Constraints on the Types of Property Subjects and Objects","text":"<p>When a user-created ontology defines a property, it must indicate the types that are allowed as objects (and, if possible, as subjects) of the property. This is done using the following Knora-specific properties:</p> <p><code>subjectClassConstraint</code></p> <p>:   Specifies the class that subjects of the property must belong to. This constraint is recommended but not required. Knora will attempt to enforce this constraint.</p> <p><code>objectClassConstraint</code></p> <p>:   If the property is an object property, specifies the class that objects of the property must belong to. Every subproperty of <code>kb:hasValue</code> or a <code>kb:hasLinkTo</code> (i.e. every property of a resource that points to a <code>kb:Value</code> or to another resource) is required to have this constraint, because Knora relies on it to know what type of object to expect for the property. Knora will attempt to enforce this constraint.</p> <p><code>objectDatatypeConstraint</code></p> <p>:   If the property is a datatype property, specifies the type of literals that can be objects of the property. Knora will not attempt to enforce this constraint, but it is useful for documentation purposes.</p> <p>Note that it is possible for a subproperty to have a more restrictive contraint than its base property, by specifing a subject or object class that is a subclass of the one specified in the base property. However, it is not possible for the subproperty to make the base property's constraint less restrictive.</p> <p>See also Why doesn't DSP-API use <code>rdfs:domain</code> and <code>rdfs:range</code> for consistency checking?</p>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#consistency-constraint-example","title":"Consistency Constraint Example","text":"<p>A user-created ontology could define consistency constraints as in this simplified example:</p> <pre><code>:book rdf:type owl:Class ;\n    rdfs:subClassOf knora-base:Resource ,\n        [ rdf:type owl:Restriction ;\n          owl:onProperty :hasTitle ;\n          owl:cardinality \"1\"^^xsd:nonNegativeInteger ] ,\n        [ rdf:type owl:Restriction ;\n          owl:onProperty :hasAuthor ;\n          owl:minCardinality \"0\"^^xsd:nonNegativeInteger ] .\n\n:hasTitle rdf:type owl:ObjectProperty ;\n    knora-base:subjectClassConstraint :book ;\n    knora-base:objectClassConstraint knora-base:TextValue .\n\n:hasAuthor rdf:type owl:ObjectProperty ;\n    knora-base:subjectClassConstraint :book ;\n    knora-base:objectClassConstraint knora-base:TextValue .\n</code></pre>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#summary-of-restrictions-on-user-created-ontologies","title":"Summary of Restrictions on User-Created Ontologies","text":"<p>An ontology can refer to a Knora ontology in another project only if the other ontology is built-in or shared (see Shared Ontologies).</p>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#restrictions-on-classes","title":"Restrictions on Classes","text":"<ul> <li>Each class must be a subclass of either <code>kb:Resource</code> or   <code>kb:StandoffTag</code>, but not both (note that this forbids user-created subclasses of <code>kb:Value</code>).</li> <li>All the cardinalities that a class defines directly (i.e. does not inherit from <code>kb:Resource</code>) must be on properties   that are defined in the triplestore.</li> <li>Within the cardinalities of a class, there must be a link value property for each link property and vice versa.</li> <li>The cardinality of a link property must be the same as the cardinality of the corresponding link value property.</li> <li>A cardinality on a property with a boolean value must be   <code>owl:cardinality 1</code> or <code>owl:maxCardinality 1</code>.</li> <li>Each class must be a subclass of all the classes that are subject class constraints of the properties in its   cardinalities.</li> <li>If it's a resource class, all its directly defined cardinalities must be on Knora resource properties (subproperties   of <code>kb:hasValue</code>   or <code>kb:hasLinkTo</code>), and all its base classes with Knora IRIs must also be resource classes. A cardinality   on <code>kb:resourceProperty</code> or   <code>kb:hasValue</code> is forbidden. It must also have an <code>rdfs:label</code>.</li> <li>If it's a standoff class, none of its cardinalities may be on Knora resource properties, and all its base classes with   Knora IRIs must also be standoff classes.</li> <li>A class cannot have a cardinality on property P as well as a cardinality on a subproperty of P.</li> </ul>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#restrictions-on-properties","title":"Restrictions on properties","text":"<ul> <li>The property's subject class constraint, if provided, must be a subclass of <code>kb:Resource</code> or <code>kb:StandoffTag</code>, and   must be a subclass of the subject class constraints of all its base properties.</li> <li>Its object class constraint, if provided, must be a subclass of the object class constraints of all its base   properties.</li> <li>If the property is a Knora resource property, it must have an object class constraint and an <code>rdfs:label</code>.</li> <li>It can't be a subproperty of both <code>kb:hasValue</code> and <code>kb:hasLinkTo</code>.</li> <li>It can't be a subproperty of <code>kb:hasFileValue</code>.</li> <li>Each of its base properties that has a Knora IRI must also be a Knora resource property.</li> </ul>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#standardisation","title":"Standardisation","text":"<p>The DaSCH intends to coordinate the standardisation of generally useful entities proposed in user-created ontologies. We envisage a process in which two or more projects would initiate the process by starting a public discussion on proposed entities to be shared. Once a consensus was reached, the DaSCH would publish these entities in a Shared Ontology).</p>"},{"location":"DSP-API/02-dsp-ontologies/knora-base/#knora-ontology-versions","title":"Knora Ontology Versions","text":"<p>The Knora base ontology has the property <code>kb:ontologyVersion</code>, whose object is a string that indicates the deployed version of all the Knora built-in ontologies. This allows the repository update program to determine which repository updates are needed when Knora is upgraded.</p>"},{"location":"DSP-API/02-dsp-ontologies/salsah-gui/","title":"The SALSAH GUI Ontology","text":""},{"location":"DSP-API/02-dsp-ontologies/salsah-gui/#the-salsah-gui-ontology","title":"The SALSAH GUI Ontology","text":""},{"location":"DSP-API/02-dsp-ontologies/salsah-gui/#overview","title":"Overview","text":"<p>The SALSAH GUI ontology provides entities that can be used in user-created ontologies to indicate to SALSAH (or to another GUI) how data should be entered and displayed.</p> <p>The SALSAH GUI ontology is identified by the IRI <code>http://www.knora.org/ontology/salsah-gui</code>. In the Knora documentation in general, it is identified by the prefix <code>salsah-gui</code>, but for brevity, we omit the prefix in this document.</p>"},{"location":"DSP-API/02-dsp-ontologies/salsah-gui/#properties","title":"Properties","text":""},{"location":"DSP-API/02-dsp-ontologies/salsah-gui/#guiorder","title":"guiOrder","text":"<p><code>guiOrder</code> can be attached to a cardinality in a resource class, to indicate the order in which properties should be displayed in the GUI. The object is a non-negative integer. For example, a property with <code>guiOrder</code> 0 would be displayed first, followed by a property with <code>guiOrder</code> 1, and so on.</p>"},{"location":"DSP-API/02-dsp-ontologies/salsah-gui/#guielement","title":"guiElement","text":"<p><code>guiElement</code> can be attached to a property definition to indicate which GUI element should be used to enter data for the property. This should be one of the individuals of class <code>Guielement</code> described below.</p>"},{"location":"DSP-API/02-dsp-ontologies/salsah-gui/#guiattribute","title":"guiAttribute","text":"<p><code>guiAttribute</code> can be attached to a property definition to provide attributes for the GUI element specified in <code>guiElement</code>. The objects of this predicate are written in a DSL with the following syntax:</p> <pre><code>object          = attribute name, \"=\", attribute value ;\nattribute name  = identifier ;\nidentifier      = letter , { letter } ;\nattribute value = integer | decimal | percent | string | iri ;\npercent         = integer, \"%\" ;\niri             = \"&lt;\", string, \"&gt;\" ;\n</code></pre> <p>The attributes used with each GUI element are described below under Individuals.</p>"},{"location":"DSP-API/02-dsp-ontologies/salsah-gui/#guiattributedefinition","title":"guiAttributeDefinition","text":"<p><code>guiAttributeDefinition</code> is used only in the <code>salsah-gui</code> ontology itself, as a predicate attached to instances of <code>Guielement</code> (see Individuals), to specify the attributes that can be given as objects of <code>guiAttribute</code> when a given <code>Guielement</code> is used. The objects of this predicate are written in a DSL with the following syntax:</p> <pre><code>object              = attribute name, [ \"(required)\" ], \":\", attribute type, [ enumerated values ] ;\nenumerated values   = \"(\", enumerated value, { \"|\", enumerated value } \")\" ;\nattribute name      = identifier ;\nattribute type      = \"integer\" | \"decimal\" | \"percent\" | \"string\" | \"iri\" ;\nenumerated value    = identifier ;\nidentifier          = letter , { letter } ;\n</code></pre> <p>Enumerated values are allowed only if <code>attribute type</code> is <code>string</code>. If enumerated values are provided for an attribute, the attribute value given via <code>guiAttribute</code> must be one of the enumerated values.</p>"},{"location":"DSP-API/02-dsp-ontologies/salsah-gui/#classes","title":"Classes","text":""},{"location":"DSP-API/02-dsp-ontologies/salsah-gui/#guielement_1","title":"Guielement","text":"<p>The instances of class <code>Guielement</code> are individuals representing GUI elements for data entry.</p>"},{"location":"DSP-API/02-dsp-ontologies/salsah-gui/#individuals","title":"Individuals","text":""},{"location":"DSP-API/02-dsp-ontologies/salsah-gui/#colorpicker","title":"Colorpicker","text":"<p><code>Colorpicker</code> is a GUI element for selecting a color. A property definition that uses this element may also contain a <code>guiAttribute</code> predicate whose object is a string in the form <code>\"ncolors=N\"</code>, where <code>N</code> is an integer specifying the number of colors to display.</p>"},{"location":"DSP-API/02-dsp-ontologies/salsah-gui/#date","title":"Date","text":"<p><code>Date</code> is a GUI element for selecting a date.</p>"},{"location":"DSP-API/02-dsp-ontologies/salsah-gui/#geometry","title":"Geometry","text":"<p><code>Geometry</code> is a GUI element for selecting the geometry of a two-dimensional region.</p>"},{"location":"DSP-API/02-dsp-ontologies/salsah-gui/#geonames","title":"Geonames","text":"<p><code>Geonames</code> is a GUI element for selecting a Geonames identifier.</p>"},{"location":"DSP-API/02-dsp-ontologies/salsah-gui/#interval","title":"Interval","text":"<p><code>Interval</code> is a GUI element for selecting a time interval in an audio or video recording.</p>"},{"location":"DSP-API/02-dsp-ontologies/salsah-gui/#list","title":"List","text":"<p><code>List</code> is a GUI element for selecting an item in a hierarchical list (see ListValue). A property definition that uses this element must also contain this <code>guiAttribute</code> predicate:</p> <p><code>\"hlist=&lt;LIST_IRI&gt;\"</code>, where <code>LIST_IRI</code> is the IRI of a <code>knora-base:ListNode</code> that is the root node of a hierarchical list.</p>"},{"location":"DSP-API/02-dsp-ontologies/salsah-gui/#pulldown","title":"Pulldown","text":"<p><code>Pulldown</code> is a GUI element for selecting an item in a flat list (see ListValue) using a pull-down menu. A property definition that uses this element must also contain this <code>guiAttribute</code> predicate:</p> <p><code>\"hlist=&lt;LIST_IRI&gt;\"</code>, where <code>LIST_IRI</code> is the IRI of a <code>knora-base:ListNode</code> that is the root node of a hierarchical list.</p>"},{"location":"DSP-API/02-dsp-ontologies/salsah-gui/#radio","title":"Radio","text":"<p><code>Radio</code> is a GUI element for selecting an item in a flat list (see ListValue) using radio buttons. A property definition that uses this element must also contain this <code>guiAttribute</code> predicate:</p> <p><code>\"hlist=&lt;LIST_IRI&gt;\"</code>, where <code>LIST_IRI</code> is the IRI of a <code>knora-base:ListNode</code> that is the root node of a hierarchical list.</p>"},{"location":"DSP-API/02-dsp-ontologies/salsah-gui/#richtext","title":"Richtext","text":"<p><code>Richtext</code> is a GUI element for editing multi-line formatted text.</p>"},{"location":"DSP-API/02-dsp-ontologies/salsah-gui/#searchbox","title":"Searchbox","text":"<p><code>Searchbox</code> is a GUI element for searching for a resource by matching text in its <code>rdfs:label</code>.</p>"},{"location":"DSP-API/02-dsp-ontologies/salsah-gui/#simpletext","title":"SimpleText","text":"<p><code>SimpleText</code> is a GUI element for editing a single line of unformatted text. A property definition that uses this element may also contain a <code>guiAttribute</code> predicate with one or both of the following objects:</p> <ul> <li><code>\"size=N\"</code>, where <code>N</code> is an integer specifying the size of the   text field.</li> <li><code>\"maxlength=N\"</code>, where <code>N</code> is an integer specifying the maximum   length of the string to be input.</li> </ul>"},{"location":"DSP-API/02-dsp-ontologies/salsah-gui/#slider","title":"Slider","text":"<p><code>Slider</code> is a GUI element for choosing numerical values using a slider. A property definition that uses this element must also contain a <code>guiAttribute</code> predicate with both of the following objects:</p> <ul> <li><code>\"min=N\"</code>, where <code>N</code> is an integer specifying the minimum value   of the input.</li> <li><code>\"max=N\"</code>, where <code>N</code> is an integer specifying the maximum value   of the input.</li> </ul>"},{"location":"DSP-API/02-dsp-ontologies/salsah-gui/#spinbox","title":"Spinbox","text":"<p><code>Spinbox</code> is a GUI element for choosing numerical values using a spinbox. A property definition that uses this element may also contain a <code>guiAttribute</code> predicate with one or both of the following objects:</p> <ul> <li><code>\"min=N\"</code>, where <code>N</code> is an integer specifying the minimum value   of the input.</li> <li><code>\"max=N\"</code>, where <code>N</code> is an integer specifying the maximum value   of the input.</li> </ul>"},{"location":"DSP-API/02-dsp-ontologies/salsah-gui/#textarea","title":"Textarea","text":"<p><code>Textarea</code> is a GUI element for editing multi-line unformatted text. A property definition that uses this element may also contain a <code>guiAttribute</code> predicate with one or more of the following objects:</p> <ul> <li><code>\"width=N\"</code>, where <code>N</code> is a percentage of the window width (an   integer followed by <code>%</code>).</li> <li><code>\"cols=N\"</code>, where <code>N</code> is an integer representing the number of   colums in the text entry box.</li> <li><code>\"rows=N\"</code>, where <code>N</code> is an integer specifying the height of the   text entry box in rows.</li> <li><code>\"wrap=W\"</code>, where <code>W</code> is <code>soft</code> or <code>hard</code> (see   wrap).</li> </ul>"},{"location":"DSP-API/02-dsp-ontologies/salsah-gui/#checkbox","title":"Checkbox","text":"<p><code>Checkbox</code> is a GUI element for choosing a boolean value using a checkbox.</p>"},{"location":"DSP-API/02-dsp-ontologies/salsah-gui/#fileupload","title":"Fileupload","text":"<p><code>Fileupload</code> is a GUI element for uploading a file.</p>"},{"location":"DSP-API/03-endpoints/api-admin/","title":"OpenApi Documentation","text":"<p>We provide an OpenAPI specification.  The latest version is located at api.dasch.swiss/api/docs/docs.yaml. For an interactive documentation of all API endpoints,  please visit api.dasch.swiss/api/docs/.</p> <p>OAD</p>"},{"location":"DSP-API/03-endpoints/api-admin/groups/","title":"Groups Endpoint","text":""},{"location":"DSP-API/03-endpoints/api-admin/groups/#groups-endpoint","title":"Groups Endpoint","text":""},{"location":"DSP-API/03-endpoints/api-admin/groups/#endpoint-overview","title":"Endpoint Overview","text":"<p>Group Operations:</p> <ul> <li><code>GET: /admin/groups</code> : return all groups</li> <li><code>GET: /admin/groups/&lt;groupIri&gt;</code> : return single group identified by [IRI]</li> <li><code>POST: /admin/groups</code> : create a new group</li> <li><code>PUT: /admin/groups/&lt;groupIri&gt;</code> : update groups's basic information</li> <li><code>PUT: /admin/groups/&lt;groupIri&gt;/status</code> : update group's status</li> <li><code>DELETE: /admin/groups/&lt;groupIri&gt;</code> : delete group (set status to false)</li> </ul> <p>Member Operations:</p> <ul> <li><code>GET: /admin/groups/&lt;groupIri&gt;/members</code> : return all group members</li> </ul>"},{"location":"DSP-API/03-endpoints/api-admin/groups/#group-operations","title":"Group Operations","text":""},{"location":"DSP-API/03-endpoints/api-admin/groups/#create-group","title":"Create Group","text":"<ul> <li>Required permission: SystemAdmin / hasProjectAllAdminPermission   / hasProjectAllGroupAdminPermission</li> <li>Required information: name (unique inside project), project IRI</li> <li>Optional information: group descriptions</li> <li>Returns information about the newly created group</li> <li>POST: <code>/admin/groups</code></li> <li>BODY:</li> </ul> <pre><code>    {\n  \"name\": \"NewGroup\",\n  \"descriptions\": [\n    {\n      \"value\": \"NewGroupDescription\",\n      \"language\": \"en\"\n    },\n    {\n      \"value\": \"NeueGruppenBeschreibung\",\n      \"language\": \"de\"\n    }\n  ],\n  \"project\": \"http://rdfh.ch/projects/00FF\",\n  \"status\": true,\n  \"selfjoin\": false\n}\n</code></pre> <p>Additionally, each group can have an optional custom IRI (of @ref:Knora IRI form) specified by the <code>id</code> in the request body as below:</p> <pre><code>    {\n  \"id\": \"http://rdfh.ch/groups/00FF/a95UWs71KUklnFOe1rcw1w\",\n  \"name\": \"GroupWithCustomIRI\",\n  \"descriptions\": [\n    {\n      \"value\": \"A new group with a custom IRI\",\n      \"language\": \"en\"\n    }\n  ],\n  \"project\": \"http://rdfh.ch/projects/00FF\",\n  \"status\": true,\n  \"selfjoin\": false\n}\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-admin/groups/#update-group-information","title":"Update group information","text":"<ul> <li>Required permission: SystemAdmin / hasProjectAllAdminPermission   / hasProjectAllGroupAdminPermission /   hasProjectRestrictedGroupAdminPermission (for this group)</li> <li>Changeable information: <code>name</code>, <code>descriptions</code>, <code>selfjoin</code></li> <li>TypeScript Docs: groupFormats - ChangeGroupApiRequestADM</li> <li>PUT: <code>/admin/groups/&lt;groupIri&gt;</code></li> <li>BODY:</li> </ul> <pre><code>{\n  \"name\": \"UpdatedGroupName\",\n  \"descriptions\": [\n    {\n      \"value\": \"UpdatedGroupDescription\",\n      \"language\": \"en\"\n    }\n  ],\n  \"selfjoin\": false\n}\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-admin/groups/#change-group-status","title":"Change Group Status","text":"<ul> <li>Required permission: SystemAdmin / hasProjectAllAdminPermission</li> <li>Changeable information: <code>status</code></li> <li>Remark: Deleting a group, removes all members from the group.</li> <li>PUT: <code>/admin/groups/&lt;groupIri&gt;/status</code></li> <li>BODY:</li> </ul> <pre><code>{\n  \"status\": false\n}\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-admin/groups/#delete-group","title":"Delete Group","text":"<ul> <li>Required permission: SystemAdmin / hasProjectAllAdminPermission</li> <li>Remark: The same as changing the groups <code>status</code> to   <code>false</code>. To un-delete, set <code>status</code> to <code>true</code>.</li> <li>DELETE: <code>/admin/groups/&lt;groupIri&gt;</code></li> </ul> <p>Example Group Information stored in admin named graph: :</p> <pre><code>&lt;http://rdfh.ch/groups/[shortcode]/[UUID]&gt;\n     rdf:type knora-admin:UserGroup ;\n     knora-admin:groupName \"Name of the group\" ;\n     knora-admin:groupDescriptions \"A description of the group\"@en ;\n     knora-admin:belongsToProject &lt;http://rdfh.ch/projects/[UUID]&gt; ;\n     knora-admin:status \"true\"^^xsd:boolean ;\n     knora-admin:hasSelfJoinEnabled \"false\"^^xsd:boolean .\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-admin/groups/#member-operations","title":"Member Operations","text":""},{"location":"DSP-API/03-endpoints/api-admin/groups/#get-group-members","title":"Get Group Members","text":"<ul> <li>Returns all group members</li> <li>Required permission: SystemAdmin / ProjectAdmin</li> <li>GET: <code>/admin/groups/&lt;groupIri&gt;/members</code></li> </ul>"},{"location":"DSP-API/03-endpoints/api-admin/introduction/","title":"Introduction","text":""},{"location":"DSP-API/03-endpoints/api-admin/introduction/#introduction-using-the-admin-api","title":"Introduction: Using the Admin API","text":"<p>The DSP Admin API makes it possible to administrate projects, users, user groups, permissions, and hierarchical lists.</p>"},{"location":"DSP-API/03-endpoints/api-admin/introduction/#restful-api","title":"RESTful API","text":"<p>The Knora Admin API is a RESTful API that allows for reading and adding of administrative resources from and to Knora and changing their values using HTTP requests. The actual data is submitted as JSON (request and response format). The various HTTP methods are applied according to the widespread practice of RESTful APIs: GET for reading, POST for adding, PUT for changing resources and values, and DELETE to delete resources or values (see Using HTTP Methods for RESTful Services).</p>"},{"location":"DSP-API/03-endpoints/api-admin/introduction/#knora-iris-in-the-admin-api","title":"Knora IRIs in the Admin API","text":"<p>Every resource that is created or hosted by Knora is identified by a unique ID called an Internationalized Resource Identifier (IRI).  The IRI is required for every API operation to identify the resource in question.  A Knora IRI has itself the format of a URL.  For some API operations, the IRI has to be URL-encoded (HTTP GET requests).</p> <p>Unlike the DSP-API v2, the admin API uses internal IRIs, i.e. the actual IRIs that are stored in the triplestore (see Knora IRIs).</p>"},{"location":"DSP-API/03-endpoints/api-admin/introduction/#admin-path-segment","title":"Admin Path Segment","text":"<p>Every request to Admin API includes <code>admin</code> as a path segment, e.g. <code>http://host/admin/users/iri/http%3A%2F%2Frdfh.ch%2Fusers%2Froot</code>.</p>"},{"location":"DSP-API/03-endpoints/api-admin/introduction/#admin-api-response-format","title":"Admin API Response Format","text":"<p>If an API request is handled successfully, Knora responds with a 200 HTTP status code. The actual answer from Knora (the representation of the requested resource or information about the executed API operation) is sent in the HTTP body, encoded as JSON.</p>"},{"location":"DSP-API/03-endpoints/api-admin/introduction/#placeholder-host-in-sample-urls","title":"Placeholder <code>host</code> in sample URLs","text":"<p>Please note that all the sample URLs used in this documentation contain <code>host</code> as a placeholder. The placeholder <code>host</code> has to be replaced by the actual hostname (and port) of the server the Knora instance is running on.</p>"},{"location":"DSP-API/03-endpoints/api-admin/introduction/#authentication","title":"Authentication","text":"<p>For all API operations that target at changing resources or values, the client has to provide credentials (username and password) so that the API server can authenticate the user making the request. Credentials can be sent as a part of the HTTP header or as parts of the URL (see Authentication in Knora).</p>"},{"location":"DSP-API/03-endpoints/api-admin/introduction/#admin-api-endpoints","title":"Admin API Endpoints","text":"<p>An overview over all admin API endpoints can be found here.</p>"},{"location":"DSP-API/03-endpoints/api-admin/lists/","title":"Lists Endpoint","text":""},{"location":"DSP-API/03-endpoints/api-admin/lists/#lists-endpoint","title":"Lists Endpoint","text":""},{"location":"DSP-API/03-endpoints/api-admin/lists/#endpoint-overview","title":"Endpoint Overview","text":"<p>List Item Operations:</p> <ul> <li><code>GET: /admin/lists[?projectIri=&lt;projectIri&gt;]</code> : return all lists optionally filtered by project</li> <li><code>GET: /admin/lists/&lt;listItemIri&gt;</code> : return complete list with all children if IRI of the list (i.e. root node) is given.   If IRI of the child node is given, return the node with its immediate children</li> <li><code>GET: /admin/lists/infos/&lt;listIri&gt;</code> : return list information (without children)</li> <li><code>GET: /admin/lists/nodes/&lt;nodeIri&gt;</code> : return list node information (without children)</li> <li><code>GET: /admin/lists/&lt;listIri&gt;/info</code> : return list basic information (without children)</li> <li> <p><code>GET: /admin/lists/candelete/&lt;listItemIri&gt;</code> : check if list or its node is unused and can be deleted</p> </li> <li> <p><code>POST: /admin/lists</code> : create new list</p> </li> <li> <p><code>POST: /admin/lists/&lt;parentNodeIri&gt;</code> : create new child node under the supplied parent node IRI</p> </li> <li> <p><code>PUT: /admin/lists/&lt;listItemIri&gt;</code> : update node information (root or child)</p> </li> <li><code>PUT: /admin/lists/&lt;listItemIri&gt;/name</code> : update the name of the node (root or child)</li> <li><code>PUT: /admin/lists/&lt;listItemIri&gt;/labels</code> : update labels of the node (root or child)</li> <li><code>PUT: /admin/lists/&lt;listItemIri&gt;/comments</code> : update comments of the node (root or child)</li> <li> <p><code>PUT: /admin/lists/&lt;nodeIri&gt;/position</code> : update position of a child node within its current parent   or by changing its parent node</p> </li> <li> <p><code>DELETE: /admin/lists/&lt;listItemIri&gt;</code> : delete a list (i.e. root node) or a child node and all its children, if not used</p> </li> <li><code>DELETE: /admin/lists/comments/&lt;nodeIri&gt;</code> : delete comments of a node (child only)</li> </ul>"},{"location":"DSP-API/03-endpoints/api-admin/lists/#list-item-operations","title":"List Item Operations","text":""},{"location":"DSP-API/03-endpoints/api-admin/lists/#get-lists","title":"Get lists","text":"<ul> <li>Required permission: none</li> <li>Return all lists optionally filtered by project</li> <li>GET: <code>/admin/lists[?projectIri=&lt;projectIri&gt;]</code></li> </ul>"},{"location":"DSP-API/03-endpoints/api-admin/lists/#get-list","title":"Get list","text":"<ul> <li>Required permission: none</li> <li>Return complete <code>list</code> (or <code>node</code>) including basic information of the list (or child node),    <code>listinfo</code> (or <code>nodeinfo</code>), and all its children</li> <li>GET: <code>/admin/lists/&lt;listIri&gt;</code></li> </ul>"},{"location":"DSP-API/03-endpoints/api-admin/lists/#get-lists-information","title":"Get list's information","text":"<ul> <li>Required permission: none</li> <li>Return list information, <code>listinfo</code> (without children).</li> <li>GET: <code>/admin/lists/infos/&lt;listIri&gt;</code></li> </ul>"},{"location":"DSP-API/03-endpoints/api-admin/lists/#get-list-node-information","title":"Get list node Information","text":"<ul> <li>Required permission: none</li> <li>Return node information, <code>nodeinfo</code>, (without children).</li> <li>GET: <code>/admin/lists/nodes/&lt;nodeIri&gt;</code></li> </ul>"},{"location":"DSP-API/03-endpoints/api-admin/lists/#get-lists-information-merged","title":"Get list's information (merged)","text":"<ul> <li>Required permission: none</li> <li>Return list (or node) basic information, <code>listinfo</code> (or <code>nodeinfo</code>), without its children</li> <li>GET: <code>/admin/lists/&lt;listIri&gt;/info</code></li> </ul>"},{"location":"DSP-API/03-endpoints/api-admin/lists/#check-if-list-node-is-unused-and-can-be-deleted","title":"Check if list node is unused and can be deleted","text":"<ul> <li>Required permission: none</li> <li>GET: <code>/admin/lists/candelete/&lt;listItemIri&gt;</code></li> <li>Return simple JSON that confirms if the list node can be deleted</li> </ul> <pre><code>{\n    \"canDeleteList\": true,\n    \"listIri\": \"http://rdfh.ch/lists/0801/xxx\"\n}\n</code></pre> <p>List (root node or child node with all its children) can be deleted only if it (or one of its children) is not used.</p>"},{"location":"DSP-API/03-endpoints/api-admin/lists/#create-new-list","title":"Create new list","text":"<ul> <li>Required permission: SystemAdmin / ProjectAdmin</li> <li>Required fields: <code>projectIri</code>, <code>labels</code>, <code>comments</code></li> <li>POST: <code>/admin/lists</code></li> <li>BODY:</li> </ul> <pre><code>    {\n        \"projectIri\": \"someprojectiri\",\n        \"labels\": [{ \"value\": \"New list\", \"language\": \"en\"}],\n        \"comments\": []\n    } \n</code></pre> <p>Additionally, each list can have an optional custom IRI (of Knora IRI form) specified by the <code>id</code> in the request body as below:</p> <pre><code>  {\n    \"id\": \"http://rdfh.ch/lists/0001/yWQEGXl53Z4C4DYJ-S2c5A\",\n    \"projectIri\": \"http://rdfh.ch/projects/0001\",\n    \"name\": \"a new list\",\n    \"labels\": [{ \"value\": \"New list with IRI\", \"language\": \"en\"}],\n    \"comments\": [{ \"value\": \"New comment\", \"language\": \"en\"}]\n  }\n</code></pre> <p>The response will contain the basic information of the list, <code>listinfo</code> and an empty list of its children, as below:</p> <pre><code>{\n    \"list\": {\n        \"children\": [],\n        \"listinfo\": {\n            \"comments\": [{ \"value\": \"New comment\", \"language\": \"en\"}],\n            \"id\": \"http://rdfh.ch/lists/0001/yWQEGXl53Z4C4DYJ-S2c5A\",\n            \"isRootNode\": true,\n            \"labels\": [\n                {\n                    \"value\": \"New list with IRI\",\n                    \"language\": \"en\"\n                }\n            ],\n            \"name\": \"a new list\",\n            \"projectIri\": \"http://rdfh.ch/projects/0001\"\n        }\n    }\n}\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-admin/lists/#create-new-child-node","title":"Create new child node","text":"<ul> <li>Required permission: SystemAdmin / ProjectAdmin</li> <li>Required fields: <code>parentNodeIri</code>, <code>projectIri</code>, <code>labels</code>,</li> <li>Appends a new child node under the supplied nodeIri. If the supplied nodeIri   is the listIri, then a new child node is appended to the top level. If a position is given   for the new child node, the node will be created and inserted in the specified position, otherwise   the node is appended to the end of parent's children.</li> <li>POST: <code>/admin/lists/&lt;parentNodeIri&gt;</code></li> <li>BODY:</li> </ul> <pre><code>     {   \n         \"parentNodeIri\": \"http://rdfh.ch/lists/0001/yWQEGXl53Z4C4DYJ-S2c5A\",\n         \"projectIri\": \"http://rdfh.ch/projects/0001\",\n         \"name\": \"a child\",\n         \"labels\": [{ \"value\": \"New List Node\", \"language\": \"en\"}]\n    }\n</code></pre> <p>Additionally, each child node can have an optional custom IRI (of Knora IRI form) specified by the <code>id</code> in the request body as below:</p> <pre><code>{    \"id\": \"http://rdfh.ch/lists/0001/8u37MxBVMbX3XQ8-d31x6w\",\n     \"parentNodeIri\": \"http://rdfh.ch/lists/0001/yWQEGXl53Z4C4DYJ-S2c5A\",\n     \"projectIri\": \"http://rdfh.ch/projects/0001\",\n     \"name\": \"a child\",\n     \"labels\": [{ \"value\": \"New List Node\", \"language\": \"en\"}]\n}\n</code></pre> <p>The response will contain the basic information of the node, <code>nodeinfo</code>, as below:</p> <pre><code>{\n    \"nodeinfo\": {\n        \"comments\": [],\n        \"hasRootNode\": \"http://rdfh.ch/lists/0001/yWQEGXl53Z4C4DYJ-S2c5A\",\n        \"id\": \"http://rdfh.ch/lists/0001/8u37MxBVMbX3XQ8-d31x6w\",\n        \"labels\": [\n            {\n                \"value\": \"New List Node\",\n                \"language\": \"en\"\n            }\n        ],\n        \"name\": \"a new child\",\n        \"position\": 1\n    }\n}\n</code></pre> <p>The new node can be created and inserted in a specific position which must be given in the payload as shown below. If necessary, according to the given position, the sibling nodes will be shifted.  Note that <code>position</code> cannot have a value higher than the number of existing children.</p> <pre><code>{   \"parentNodeIri\": \"http://rdfh.ch/lists/0001/yWQEGXl53Z4C4DYJ-S2c5A\",\n    \"projectIri\": \"http://rdfh.ch/projects/0001\",\n    \"name\": \"Inserted new child\",\n    \"position\": 0,\n    \"labels\": [{ \"value\": \"New List Node\", \"language\": \"en\"}]\n}\n</code></pre> <p>In case the new node should be appended to the list of current children, either <code>position: -1</code> must be given in the payload or the <code>position</code> parameter must be left out of the payload.</p>"},{"location":"DSP-API/03-endpoints/api-admin/lists/#update-lists-or-nodes-information","title":"Update list's or node's information","text":"<p>The basic information of a list (or node) such as its labels, comments, name, or all of them can be updated.  The parameters that must be updated together with the new value must be given in the JSON body of the request  together with the IRI of the list and the IRI of the project it belongs to. </p> <ul> <li>Required permission: SystemAdmin / ProjectAdmin</li> <li>Required fields: <code>listIri</code>, <code>projectIri</code></li> <li>Update list information</li> <li>PUT: <code>/admin/lists/&lt;listIri&gt;</code></li> <li>BODY:</li> </ul> <pre><code>{\n    \"listIri\": \"http://rdfh.ch/lists/0001/yWQEGXl53Z4C4DYJ-S2c5A\",\n    \"projectIri\": \"http://rdfh.ch/projects/0001\",\n    \"name\": \"new name for the list\",\n    \"labels\": [{ \"value\": \"a new label for the list\", \"language\": \"en\"}],\n    \"comments\": [{ \"value\": \"a new comment for the list\", \"language\": \"en\"}]\n}\n</code></pre> <p>The response will contain the basic information of the list, <code>listinfo</code> (or <code>nodeinfo</code>), without its children, as below:</p> <pre><code>{\n    \"listinfo\": {\n        \"comments\": [\n            {\n                \"value\": \"a new comment for the list\",\n                \"language\": \"en\"\n            }\n        ],\n        \"id\": \"http://rdfh.ch/lists/0001/yWQEGXl53Z4C4DYJ-S2c5A\",\n        \"isRootNode\": true,\n        \"labels\": [\n            {\n                \"value\": \"a new label for the list\",\n                \"language\": \"en\"\n            }\n        ],\n        \"name\": \"new name for the list\",\n        \"projectIri\": \"http://rdfh.ch/projects/0001\"\n    }\n}\n</code></pre> <p>If only name of the list must be updated, it can be given as below in the body of the request:</p> <pre><code>{\n    \"listIri\": \"listIri\",\n    \"projectIri\": \"someprojectiri\",\n    \"name\": \"another name\"\n}\n</code></pre> <p>Alternatively, basic information <code>name</code>, <code>labels</code>, or <code>comments</code> of the root node (i.e. list)  can be updated individually as explained below.</p>"},{"location":"DSP-API/03-endpoints/api-admin/lists/#update-list-or-nodes-name","title":"Update list or node's name","text":"<ul> <li>Required permission: SystemAdmin / ProjectAdmin</li> <li>Update name of the list (i.e. root node) or a child node whose IRI is specified by <code>&lt;listItemIri&gt;</code>.</li> <li>PUT: <code>/admin/lists/&lt;listItemIri&gt;/name</code></li> <li>BODY: The new name of the node must be given in the body of the request as shown below:</li> </ul> <pre><code>{\n    \"name\": \"a new name\"\n}\n</code></pre> <p>There is no need to specify the project IRI because it is automatically extracted using the given <code>&lt;listItemIRI&gt;</code>.</p>"},{"location":"DSP-API/03-endpoints/api-admin/lists/#update-list-or-nodes-labels","title":"Update list or node's labels","text":"<ul> <li>Required permission: SystemAdmin / ProjectAdmin</li> <li>Update labels of the list (i.e. root node) or a child node whose IRI is specified by <code>&lt;listItemIri&gt;</code>.</li> <li>PUT: <code>/admin/lists/&lt;listItemIri&gt;/labels</code></li> <li>BODY: The new set of labels of the node must be given in the body of the request as shown below:</li> </ul> <pre><code>{\n    \"labels\": [{\"language\": \"se\", \"value\": \"nya m\u00e4rkningen\"}]\n}\n</code></pre> <p>There is no need to specify the project IRI because it is automatically extracted using the given <code>&lt;listItemIRI&gt;</code>.</p>"},{"location":"DSP-API/03-endpoints/api-admin/lists/#update-list-or-nodes-comments","title":"Update list or node's comments","text":"<ul> <li>Required permission: SystemAdmin / ProjectAdmin</li> <li>Update comments of the list (i.e. root node) or a child node whose IRI is specified by <code>&lt;listItemIri&gt;</code>.</li> <li>PUT: <code>/admin/lists/&lt;listItemIri&gt;/labels</code></li> <li>BODY: The new set of comments of the node must be given in the body of the request as shown below:</li> </ul> <pre><code>{\n    \"comments\": [{\"language\": \"se\", \"value\": \"nya kommentarer\"}]\n}\n</code></pre> <p>There is no need to specify the project IRI because it is automatically extracted using the given <code>&lt;listItemIRI&gt;</code>.</p>"},{"location":"DSP-API/03-endpoints/api-admin/lists/#repositioning-a-child-node","title":"Repositioning a child node","text":"<p>The position of an existing child node can be updated. The child node can be either repositioned within its  current parent node, or can be added to another parent node in a specific position. The IRI of the parent node  and the new position of the child node must be given in the request body. </p> <p>If a node is supposed to be repositioned to the end of a parent node's children, give <code>position: -1</code>.</p> <p>Suppose a parent node <code>parentNode1</code> has five children in positions 0-4, to change the position of its child node  <code>childNode4</code> from its original position 3 to position 1 the request body should specify the IRI of its parent node  and the new position as below:</p> <pre><code>   {\n      \"parentNodeIri\": \"&lt;parentNode1-IRI&gt;\",\n      \"position\": 1\n  }\n</code></pre> <p>Then the node <code>childNode4</code> will be put in position 1, and its siblings will be shifted accordingly. The new position given  in the request body cannot be the same as the child node's original position. If <code>position: -1</code> is given, the node will  be moved to the end of children list, and its siblings will be shifted to left. In case of repositioning the node  within its current parent, the maximum permitted position is the length of its children list, i.e. in this example the  highest allowed position is 4.</p> <p>To reposition a child node <code>childNode4</code> to another parent node <code>parentNode2</code> in a specific position, for  example <code>position: 3</code>, the IRI of the new parent node and the position the node must be placed within children of  <code>parentNode2</code> must be given as:</p> <pre><code>   {\n      \"parentNodeIri\": \"&lt;parentNode2-IRI&gt;\",\n      \"position\": 3\n  }\n</code></pre> <p>In this case, the <code>childNode4</code> is removed from the list of children of its old parent <code>parentNode1</code> and its old  siblings are shifted accordingly. Then the node <code>childNode4</code> is added to the specified new parent, i.e. <code>parentNode2</code>, in  the given position. The new siblings are shifted accordingly.</p> <p>Note that, the furthest the node can be placed is at the end of the list of the children of <code>parentNode2</code>. That means  if <code>parentNode2</code> had 3 children with positions 0-2, then <code>childNode4</code> can be placed in position 0-3 within children  of its new parent node. If the <code>position: -1</code> is given, the node will be appended to the end of new parent's children,  and new siblings will not be shifted. </p> <p>Values less than -1 are not permitted for parameter <code>position</code>.</p> <ul> <li>Required permission: SystemAdmin / ProjectAdmin</li> <li>Response: returns the updated parent node with all its children.</li> <li>Put <code>/admin/lists/&lt;nodeIri&gt;/position</code></li> </ul>"},{"location":"DSP-API/03-endpoints/api-admin/lists/#delete-a-list-or-a-node","title":"Delete a list or a node","text":"<p>An entire list or a single node of it can be completely deleted, if not in use. Before deleting an entire list  (i.e. root node), the data and ontologies are checked for any usage of the list or its children. If not in use, the list  and all its children are deleted.</p> <p>Similarily, before deleting a single node of a list, it is verified that the node itself and none of its children are used. If not in use, the node and all its children are deleted. Once a node is deleted, its parent node is updated by shifting the  remaining child nodes with respect to the position of the deleted node. </p> <ul> <li>Required permission: SystemAdmin / ProjectAdmin</li> <li> <p>Response:</p> <ul> <li>If the IRI of the list (i.e. root node) is given, the <code>iri</code> of the deleted list with a flag <code>deleted: true</code> is returned.</li> <li>If the IRI of a child node is given, the updated parent node is returned.</li> </ul> </li> <li> <p>Delete <code>/admin/lists/&lt;listItemIri&gt;</code></p> </li> </ul>"},{"location":"DSP-API/03-endpoints/api-admin/lists/#delete-child-node-comments","title":"Delete child node comments","text":"<p>Performing a DELETE request to route <code>/admin/lists/comments/&lt;nodeIri&gt;</code> deletes the comments of that node. As a response sipmle JSON is returned:</p> <pre><code>{\n    \"commentsDeleted\": true,\n    \"nodeIri\": \"http://rdfh.ch/lists/0801/xxx\"\n}\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-admin/overview/","title":"Overview","text":""},{"location":"DSP-API/03-endpoints/api-admin/overview/#admin-endpoint","title":"Admin Endpoint","text":"<p>For the management of users, projects, groups, lists, and permissions, the DSP-API following a resource centric approach, provides the following endpoints corresponding to the respective classes of objects that they have an effect on, namely:</p> <ul> <li>Users endpoint: <code>http://server:port/admin/users</code> - <code>knora-base:User</code></li> <li>Projects endpoint: <code>http://server:port/admin/projects</code> - <code>knora-base:knoraProject</code></li> <li>Groups endpoint: <code>http://server:port/admin/groups</code> - <code>knora-base:UserGroup</code></li> <li>Lists endpoint: <code>http://server:port/admin/lists</code> - <code>knora-base:ListNode</code></li> <li>Permissions endpoint: <code>http://server:port/admin/permissions</code> - <code>knora-admin:Permission</code></li> </ul> <p>All information regarding users, projects, groups, lists and permissions is stored in the <code>http://www.knora.org/admin</code> named graph.</p> <p>Additionally there is the stores endpoint which allows manipulation of the triplestore content.</p>"},{"location":"DSP-API/03-endpoints/api-admin/permissions/","title":"Permissions Endpoint","text":""},{"location":"DSP-API/03-endpoints/api-admin/permissions/#permissions-endpoint","title":"Permissions Endpoint","text":"<p>For an extensive explanation on how DSP permissions are implemented, see here.</p> Route Operations Explanation <code>/admin/permissions/{projectIri}</code> <code>GET</code> get all permissions of a project <code>/admin/permissions/ap/{projectIri}</code> <code>GET</code> get all administrative permissions of a project <code>/admin/permissions/ap/{projectIri}/{groupIri}</code> <code>GET</code> get all administrative permissions of a group <code>/admin/permissions/doap/{projectIri}</code> <code>GET</code> get all default object access permissions of a project <code>/admin/permissions/ap</code> <code>POST</code> create a new administrative permission <code>/admin/permissions/doap</code> <code>POST</code> create a new default object access permission <code>/admin/permissions/{permissionIri}/group</code> <code>PUT</code> update for which group an administrative or default object access permission is used <code>/admin/permissions/{permissionIri}/hasPermission</code> <code>PUT</code> update the scope of an administrative or default object access permission, i.e. what permissions are granted to which group when this permission applies <code>/admin/permissions/{doap_permissionIri}/resourceClass</code> <code>PUT</code> update for which resource class a default object access permission applies <code>/admin/permissions/{doap_permissionIri}/property</code> <code>PUT</code> update for which property a default object access permission applies <code>/admin/permissions/{permissionIri}</code> <code>DELETE</code> delete an administrative or default object access permission"},{"location":"DSP-API/03-endpoints/api-admin/permissions/#permission-operations","title":"Permission Operations","text":"<p>Note: For the following operations, the requesting user must be either a <code>systemAdmin</code>or a <code>projectAdmin</code>.</p>"},{"location":"DSP-API/03-endpoints/api-admin/permissions/#getting-permissions","title":"Getting Permissions","text":"<ul> <li> <p><code>GET: /admin/permissions/&lt;projectIri&gt;</code> : return all permissions for a project. As a response, the IRI and the type of all <code>permissions</code> of a project are returned.</p> </li> <li> <p><code>GET: /admin/permissions/ap/&lt;projectIri&gt;</code>: return all administrative permissions  for a project. As a response, all <code>administrative_permissions</code> of a project are returned.</p> </li> <li> <p><code>GET: /admin/permissions/ap/&lt;projectIri&gt;/&lt;groupIri&gt;</code>: return the administrative  permissions for a project group. As a response, the <code>administrative_permission</code> defined  for the group is returned. </p> </li> <li> <p><code>GET: /admin/permissions/doap/&lt;projectIri&gt;</code>: return all default object access  permissions for a project. As a response, all <code>default_object_acces_permissions</code> of a  project are returned. </p> </li> </ul>"},{"location":"DSP-API/03-endpoints/api-admin/permissions/#creating-new-administrative-permissions","title":"Creating New Administrative Permissions","text":"<ul> <li><code>POST: /admin/permissions/ap</code>: create a new administrative permission. The type of  permissions, the project and group to which the permission should be added must be  included in the request body, for example:</li> </ul> <pre><code>{\n    \"forGroup\":\"http://rdfh.ch/groups/0001/thing-searcher\", \n    \"forProject\":\"http://rdfh.ch/projects/0001\", \n    \"hasPermissions\":[\n      {\n        \"additionalInformation\":null,\n        \"name\":\"ProjectAdminGroupAllPermission\",\n        \"permissionCode\":null\n      }\n    ]\n}\n</code></pre> <p>In addition, in the body of the request, it is possible to specify a custom IRI (of  DSP IRI form) for a permission through the <code>@id</code> attribute which will then be assigned to the permission; otherwise the permission will get a unique random IRI. A custom permission IRI must be <code>http://rdfh.ch/permissions/PROJECT_SHORTCODE/</code> (where <code>PROJECT_SHORTCODE</code> is the shortcode of the project that the permission belongs to), plus a custom ID string. For example:</p> <pre><code>\"id\": \"http://rdfh.ch/permissions/0001/jKIYuaEUETBcyxpenUwRzQ\",\n</code></pre> <p>As a response, the created administrative permission and its IRI are returned as below:</p> <pre><code>{\n    \"administrative_permission\": {\n        \"forGroup\": \"http://rdfh.ch/groups/0001/thing-searcher\",\n        \"forProject\": \"http://rdfh.ch/projects/0001\",\n        \"hasPermissions\": [\n            {\n                \"additionalInformation\": null,\n                \"name\": \"ProjectAdminGroupAllPermission\",\n                \"permissionCode\": null\n            }\n        ],\n        \"iri\": \"http://rdfh.ch/permissions/0001/mFlyBEiMQtGzwy_hK0M-Ow\"\n    }\n}\n</code></pre> <p><code>hasPermissions</code> contains permission types that must be granted. See the complete description of administrative permission types. In summary, each permission should contain followings:</p> <ul> <li><code>additionalInformation</code>: should be left empty, otherwise will be ignored.</li> <li><code>name</code> : indicates the type of the permission that can be one of the followings:<ul> <li><code>ProjectAdminAllPermission</code>: gives the user the permission to do anything  on project level, i.e. create new groups, modify all  existing groups</li> <li><code>ProjectAdminGroupAllPermission</code>: gives the user the permission to modify  group info and group membership on all groups  belonging to the project.</li> <li><code>ProjectAdminGroupRestrictedPermission</code>: gives the user the permission to modify  group info and group membership on certain groups  belonging to the project.</li> <li><code>ProjectAdminRightsAllPermission</code>: gives the user the permission to change the  permissions on all objects belonging to the project  (e.g., default permissions attached to groups and  permissions on objects).</li> <li><code>ProjectResourceCreateAllPermission</code>: gives the permission to create resources  inside the project.</li> <li><code>ProjectResourceCreateRestrictedPermission</code>: gives restricted resource creation permission  inside the project.</li> </ul> </li> <li><code>permissionCode</code>: should be left empty, otherwise will be ignored.</li> </ul> <p>Note that during the creation of a new project,  a default set of administrative permissions are added to its ProjectAdmin and ProjectMember groups  (See Default set of permissions for a new project).  Therefore, it is not possible to create new administrative permissions  for the ProjectAdmin and ProjectMember groups of a project.  However, the default permissions set for these groups can be modified  (See update permission).</p>"},{"location":"DSP-API/03-endpoints/api-admin/permissions/#creating-new-default-object-access-permissions","title":"Creating New Default Object Access Permissions","text":"<ul> <li><code>POST: /admin/permissions/doap</code> : create a new default object access permission.  A single instance of <code>knora-admin:DefaultObjectAccessPermission</code> must always reference a project, but can only reference either a group (<code>knora-admin:forGroup</code> property), a resource class (<code>knora-admin:forResourceClass</code>), a property (<code>knora-admin:forProperty</code>), or a combination of resource class and property. For example, to create a new  default object access permission for a group of a project the request body would be</li> </ul> <pre><code>{\n    \"forGroup\":\"http://rdfh.ch/groups/0001/thing-searcher\",\n    \"forProject\":\"http://rdfh.ch/projects/0001\",\n    \"forProperty\":null,\n    \"forResourceClass\":null,\n    \"hasPermissions\":[\n      {\n        \"additionalInformation\":\"http://www.knora.org/ontology/knora-admin#ProjectMember\",\n        \"name\":\"D\",\n        \"permissionCode\":7\n      }\n    ]\n}\n</code></pre> <p><code>hasPermissions</code> contains permission types that must be granted. See a complete description of object access  permission types.  In summary, each permission should contain followings:</p> <ul> <li><code>additionalInformation</code>: To whom the permission should be granted: project members, known users, unknown users, etc.</li> <li><code>name</code> : indicates the type of the permission that can be one of the followings.<ul> <li><code>RV</code>: restricted view permission (least privileged)</li> <li><code>V</code>: view permission</li> <li><code>M</code> modify permission</li> <li><code>D</code>: delete permission</li> <li><code>CR</code>: change rights permission (most privileged)</li> </ul> </li> <li><code>permissionCode</code>: The code assigned to a permission indicating its hierarchical level. These codes are as below:<ul> <li><code>1</code>: for restricted view permission (least privileged)</li> <li><code>2</code>: for view permission</li> <li><code>6</code>: for modify permission</li> <li><code>7</code>: for delete permission</li> <li><code>8</code>: for change rights permission (most privileged)</li> </ul> </li> </ul> <p>Note that, at least either <code>name</code> or <code>permissionCode</code> must be provided. If one is missing, it will be extrapolated from the other. For example, if <code>permissionCode= 1</code> is given but <code>name</code> was left empty, its value will be set to <code>name = RV</code>.    </p> <p>Similar to the previous case a custom IRI can be assigned to a permission specified by the <code>id</code> in the request body.  The example below shows the request body to create a new default object access permission with a custom IRI defined for  a resource class of a specific project:</p> <pre><code>{\n    \"id\": \"http://rdfh.ch/permissions/00FF/fSw7w1sI5IwDjEfFi1jOeQ\",\n    \"forGroup\":null,\n    \"forProject\":\"http://rdfh.ch/projects/00FF\",\n    \"forProperty\":null,\n    \"forResourceClass\":\"http://www.knora.org/ontology/00FF/images#bild\",\n    \"hasPermissions\":[\n      {\n        \"additionalInformation\":\"http://www.knora.org/ontology/knora-admin#ProjectMember\",\n        \"name\":\"D\",\n        \"permissionCode\":7\n      }\n    ]\n}\n</code></pre> <p>The response contains the newly created permission and its IRI, as:</p> <pre><code>{\n    \"default_object_access_permission\": {\n        \"forGroup\": null,\n        \"forProject\": \"http://rdfh.ch/projects/00FF\",\n        \"forProperty\": null,\n        \"forResourceClass\": \"http://www.knora.org/ontology/00FF/images#bild\",\n        \"hasPermissions\": [\n            {\n                \"additionalInformation\": \"http://www.knora.org/ontology/knora-admin#ProjectMember\",\n                \"name\": \"D\",\n                \"permissionCode\": 7\n            }\n        ],\n        \"iri\": \"http://rdfh.ch/permissions/00FF/fSw7w1sI5IwDjEfFi1jOeQ\"\n    }\n}\n</code></pre> <p>Note that during the creation of a new project,  a set of default object access permissions are created for its ProjectAdmin and ProjectMember groups  (See Default set of permissions for a new project).  Therefore, it is not possible to create new default object access permissions  for the ProjectAdmin and ProjectMember groups of a project.  However, the default permissions set for these groups can be modified; see below for more information.</p>"},{"location":"DSP-API/03-endpoints/api-admin/permissions/#updating-a-permissions-group","title":"Updating a Permission's Group","text":"<ul> <li><code>PUT: /admin/permissions/&lt;permissionIri&gt;/group</code> to change the group for which an administrative or a default object  access permission, identified by its IRI <code>&lt;permissionIri&gt;</code>, is defined. The request body must contain the IRI of the new  group as below:</li> </ul> <pre><code>{\n    \"forGroup\": \"http://www.knora.org/ontology/knora-admin#ProjectMember\"\n}\n</code></pre> <p>When updating an administrative permission, its previous <code>forGroup</code> value will be replaced with the new one. When updating a default object access permission, if it originally had a <code>forGroup</code> value defined, it will be replaced  with the new group. Otherwise, if the default object access permission was defined for a resource class or a property or  the combination of both, the permission will be defined for the newly specified group and its previous  <code>forResourceClass</code> and <code>forProperty</code> values will be deleted.</p>"},{"location":"DSP-API/03-endpoints/api-admin/permissions/#updating-a-permissions-scope","title":"Updating a Permission's Scope","text":"<ul> <li><code>PUT: /admin/permissions/&lt;permissionIri&gt;/hasPermissions</code> to change the scope of permissions assigned to an administrative   or a default object access permission identified by it IRI, <code>&lt;permissionIri&gt;</code>. The request body must contain the new set    of permission types as below:</li> </ul> <pre><code>{\n   \"hasPermissions\":[\n     {\n       \"additionalInformation\":\"http://www.knora.org/ontology/knora-admin#ProjectMember\",\n       \"name\":\"D\",\n       \"permissionCode\":7\n     }\n   ]\n}\n</code></pre> <p>Each permission item given in <code>hasPermissions</code>, must contain the necessary parameters with respect to the type of the  permission. For example, if you wish to change the scope of an administrative permission, follow the  guidelines for the content of its <code>hasPermissions</code> property. Similarly, if you wish to change the scope of a default object access permission,  follow the guidelines given about the content of its <code>hasPermissions</code> property. Either the <code>name</code> or the <code>permissionCode</code> must be present; it is not necessary to provide both.</p> <p>The previous permission set is replaced by the new permission set. In order to remove a permission for a group entirely, you can provide a new set of permissions, leaving out the permission specification for the group.</p>"},{"location":"DSP-API/03-endpoints/api-admin/permissions/#updating-a-default-object-access-permissions-resource-class","title":"Updating a Default Object Access Permission's Resource Class","text":"<ul> <li><code>PUT: /admin/permissions/&lt;doap_permissionIri&gt;/resourceClass</code> to change the resource class for which a default object  access permission, identified by it IRI <code>&lt;doap_permissionIri&gt;</code>, is defined. This operation is only valid for  updating a default object acceess permission. The IRI of the new resource class must be given in the request body as:</li> </ul> <pre><code>{\n    \"forResourceClass\": \"http://www.knora.org/ontology/0803/incunabula#book\"\n}\n</code></pre> <p>Note that if the default object access permission was originally defined for a group, with this operation, the permission  will be defined for the given resource class instead of the group. That means the value of the <code>forGroup</code> will  be deleted.</p>"},{"location":"DSP-API/03-endpoints/api-admin/permissions/#updating-a-default-object-access-permissions-property","title":"Updating a Default Object Access Permission's Property","text":"<ul> <li><code>PUT: /admin/permissions/&lt;doap_permissionIri&gt;/property</code> to change the property for which a default object  access permission, identified by it IRI <code>&lt;doap_permissionIri&gt;</code>, is defined. This operation is only valid for  updating a default object access permission. The IRI of the new property must be given in the request body as:</li> </ul> <pre><code>{\n   \"forProperty\":\"http://www.knora.org/ontology/00FF/images#titel\"\n}\n</code></pre> <p>Note that if the default object access permission was originally defined for a group, with this operation, the permission  will be defined for the given property instead of the group. That means the value of the <code>forGroup</code> will  be deleted.</p>"},{"location":"DSP-API/03-endpoints/api-admin/permissions/#deleting-a-permission","title":"Deleting a Permission","text":"<ul> <li><code>DELETE: /admin/permissions/&lt;permissionIri&gt;</code> to delete an administrative, or a default object access permission. The  IRI of the permission must be given in encoded form. </li> </ul>"},{"location":"DSP-API/03-endpoints/api-admin/projects/","title":"Projects Endpoint","text":""},{"location":"DSP-API/03-endpoints/api-admin/projects/#projects-endpoint","title":"Projects Endpoint","text":"Scope Route Operations Explanation projects <code>/admin/projects</code> <code>GET</code> get all projects projects <code>/admin/projects</code> <code>POST</code> create a project projects <code>/admin/projects/shortname/{shortname}</code> <code>GET</code> get a single project projects <code>/admin/projects/shortcode/{shortcode}</code> <code>GET</code> get a single project projects <code>/admin/projects/iri/{iri}</code> <code>GET</code> get a single project projects <code>/admin/projects/iri/{iri}</code> <code>PUT</code> update a project projects <code>/admin/projects/iri/{iri}</code> <code>DELETE</code> delete a project projects <code>/admin/projects/iri/{iri}/AllData</code> <code>GET</code> get all data of a project project members <code>/admin/projects/shortname/{shortname}/members</code> <code>GET</code> get all project members project members <code>/admin/projects/shortcode/{shortcode}/members</code> <code>GET</code> get all project members project members <code>/admin/projects/iri/{iri}/members</code> <code>GET</code> get all project members project members <code>/admin/projects/shortname/{shortname}/admin-members</code> <code>GET</code> get all project admins project members <code>/admin/projects/shortcode/{shortcode}/admin-members</code> <code>GET</code> get all project admins project members <code>/admin/projects/iri/{iri}/admin-members</code> <code>GET</code> get all project admins keywords <code>/admin/projects/Keywords</code> <code>GET</code> get all project keywords keywords <code>/admin/projects/iri/{iri}/Keywords</code> <code>GET</code> get project keywords of a single project view settings <code>/admin/projects/shortname/{shortname}/RestrictedViewSettings</code> <code>GET</code> get restricted view settings for a project view settings <code>/admin/projects/shortcode/{shortcode}/RestrictedViewSettings</code> <code>GET</code> get restricted view settings for a project view settings <code>/admin/projects/iri/{iri}/RestrictedViewSettings</code> <code>GET</code> get restricted view settings for a project view settings <code>/admin/projects/iri/{iri}/RestrictedViewSettings</code> <code>POST</code> set restricted view settings for a project view settings <code>/admin/projects/shortcode/{shortcode}/RestrictedViewSettings</code> <code>POST</code> set restricted view settings for a project"},{"location":"DSP-API/03-endpoints/api-admin/projects/#project-operations","title":"Project Operations","text":""},{"location":"DSP-API/03-endpoints/api-admin/projects/#get-all-projects","title":"Get All Projects","text":"<p>Permissions: No permissions required</p> <p>Request definition: <code>GET /admin/projects</code></p> <p>Description: Returns a list of all projects except built-in system ones.</p> <p>Example request:</p> <pre><code>curl --request GET --url http://localhost:3333/admin/projects\n</code></pre> <p>Example response:</p> <pre><code>{\n  \"projects\": [\n    {\n      \"description\": [\n        {\n          \"value\": \"A demo project of a collection of images\",\n          \"language\": \"en\"\n        }\n      ],\n      \"id\": \"http://rdfh.ch/projects/00FF\",\n      \"keywords\": [\n        \"collection\",\n        \"images\"\n      ],\n      \"logo\": null,\n      \"longname\": \"Image Collection Demo\",\n      \"ontologies\": [\n        \"http://0.0.0.0:3333/ontology/00FF/images/v2\"\n      ],\n      \"selfjoin\": false,\n      \"shortcode\": \"00FF\",\n      \"shortname\": \"images\",\n      \"status\": true\n    },\n    {\n      // ...\n    }\n  ]\n}\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-admin/projects/#create-a-new-project","title":"Create a New Project","text":"<p>Permissions: SystemAdmin</p> <p>Request definition: <code>POST /admin/projects</code></p> <p>Description: Create a new project.</p> <p>Required payload:</p> <ul> <li><code>shortcode</code> (unique, 4-digits)</li> <li><code>shortname</code> (unique, 3-20 characters long, can contain small and capital letters, numbers, special characters: <code>-</code> and <code>_</code>, cannot start with number nor allowed special characters, should be in the form of a xsd:NCNAME and URL safe)</li> <li><code>description</code> (collection of descriptions as strings with language tag)</li> <li><code>keywords</code> (collection of keywords)</li> <li><code>status</code> (true, if project is active. false, if project is inactive)</li> <li><code>selfjoin</code></li> </ul> <p>Optional payload:</p> <ul> <li><code>id</code> (unique, custom DSP IRI, e.g. used for migrating a project from one server to another)</li> <li><code>longname</code></li> <li><code>logo</code></li> </ul> <p>Example request:</p> <pre><code>curl --request POST \\\n  --url http://localhost:3333/admin/projects \\\n  --header 'Authorization: Basic cm9vdEBleGFtcGxlLmNvbTp0ZXN0' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\n    \"shortname\": \"newproject\",\n    \"shortcode\": \"3333\",\n    \"longname\": \"project longname\",\n    \"description\": [\n        {\n            \"value\": \"project description\",\n            \"language\": \"en\"\n        }\n    ],\n    \"keywords\": [\n        \"test project\"\n    ],\n    \"logo\": \"/fu/bar/baz.jpg\",\n    \"status\": true,\n    \"selfjoin\": false\n}'\n</code></pre> <p>Example response:</p> <pre><code>{\n    \"project\": {\n        \"description\": [\n            {\n                \"value\": \"project description\",\n                \"language\": \"en\"\n            }\n        ],\n        \"id\": \"http://rdfh.ch/projects/3333\",\n        \"keywords\": [\n            \"test project\"\n        ],\n        \"logo\": \"/fu/bar/baz.jpg\",\n        \"longname\": \"project longname\",\n        \"ontologies\": [],\n        \"selfjoin\": false,\n        \"shortcode\": \"3333\",\n        \"shortname\": \"newproject\",\n        \"status\": true\n    }\n}\n</code></pre> <p>Errors:</p> <ul> <li><code>400 Bad Request</code> if the project already exists or any of the provided properties is invalid.</li> <li><code>401 Unauthorized</code> if authorization failed.</li> </ul>"},{"location":"DSP-API/03-endpoints/api-admin/projects/#default-set-of-restrictedviewsize","title":"Default set of RestrictedViewSize","text":"<p>Starting from DSP 2023.10.02 release, the creation of new project will also set the <code>RestrictedViewSize</code> to default value, which is: <code>!512,512</code>. It is possible to change the value using dedicated routes.</p>"},{"location":"DSP-API/03-endpoints/api-admin/projects/#default-set-of-permissions-for-a-new-project","title":"Default set of permissions for a new project","text":"<p>When a new project is created, following default permissions are added to its admins and members:</p> <ul> <li> <p>ProjectAdmin group receives an administrative permission to do all project level operations    and to create resources within the new project.    This administrative permission is retrievable through its IRI:   <code>http://rdfh.ch/permissions/[projectShortcode]/defaultApForAdmin</code></p> </li> <li> <p>ProjectAdmin group also gets a default object access permission to change rights    (which includes delete, modify, view, and restricted view permissions) of any entity that belongs to the project.    This default object access permission is retrievable through its IRI:    <code>http://rdfh.ch/permissions/[projectShortcode]/defaultDoapForAdmin</code></p> </li> <li> <p>ProjectMember group receives an administrative permission to create resources within the new project.    This administrative permission is retrievable through its IRI:   <code>http://rdfh.ch/permissions/[projectShortcode]/defaultApForMember</code></p> </li> <li> <p>ProjectMember group also gets a default object access permission to modify    (which includes view and restricted view permissions) of any entity that belongs to the project.    This default object access permission is retrievable through its IRI:    <code>http://rdfh.ch/permissions/[projectShortcode]/defaultDoapForMember</code></p> </li> </ul>"},{"location":"DSP-API/03-endpoints/api-admin/projects/#get-project-by-id","title":"Get Project by ID","text":"<p>The ID can be shortcode, shortname or IRI.</p> <p>Permissions: No permissions required</p> <p>Request definition:</p> <ul> <li><code>GET /admin/projects/shortcode/{shortcode}</code></li> <li><code>GET /admin/projects/shortname/{shortname}</code></li> <li><code>GET /admin/projects/iri/{iri}</code></li> </ul> <p>Description: Returns a single project identified by shortcode, shortname or IRI.</p> <p>Example request:</p> <pre><code>curl --request GET --url http://localhost:3333/admin/projects/shortcode/0001\n</code></pre> <pre><code>curl --request GET --url http://localhost:3333/admin/projects/shortname/anything\n</code></pre> <pre><code>curl --request GET --url \\\n    http://localhost:3333/admin/projects/iri/http%3A%2F%2Frdfh.ch%2Fprojects%2F0001\n</code></pre> <p>Example response:</p> <pre><code>{\n  \"project\": {\n    \"description\": [\n      {\n        \"value\": \"Anything Project\"\n      }\n    ],\n    \"id\": \"http://rdfh.ch/projects/0001\",\n    \"keywords\": [\n      \"arbitrary test data\",\n      \"things\"\n    ],\n    \"logo\": null,\n    \"longname\": \"Anything Project\",\n    \"ontologies\": [\n      \"http://0.0.0.0:3333/ontology/0001/something/v2\",\n      \"http://0.0.0.0:3333/ontology/0001/sequences/v2\",\n      \"http://0.0.0.0:3333/ontology/0001/freetest/v2\",\n      \"http://0.0.0.0:3333/ontology/0001/minimal/v2\",\n      \"http://0.0.0.0:3333/ontology/0001/anything/v2\"\n    ],\n    \"selfjoin\": false,\n    \"shortcode\": \"0001\",\n    \"shortname\": \"anything\",\n    \"status\": true\n  }\n}\n</code></pre> <p>Errors:</p> <ul> <li><code>400 Bad Request</code> if the provided ID is not valid.</li> <li><code>404 Not Found</code> if no project with the provided ID is found.</li> </ul> <p>NB:</p> <ul> <li>IRI must be URL-encoded.</li> </ul>"},{"location":"DSP-API/03-endpoints/api-admin/projects/#update-project-information","title":"Update Project Information","text":"<p>Permissions: SystemAdmin / ProjectAdmin</p> <p>Request definition: <code>PUT /admin/projects/iri/{iri}</code></p> <p>Description: Update a project identified by its IRI.</p> <p>Payload: The following properties can be changed:</p> <ul> <li><code>longname</code></li> <li><code>description</code></li> <li><code>keywords</code></li> <li><code>logo</code></li> <li><code>status</code></li> <li><code>selfjoin</code></li> </ul> <p>Example request:</p> <pre><code>curl --request PUT \\\n  --url http://localhost:3333/admin/projects/iri/http%3A%2F%2Frdfh.ch%2Fprojects%2F0001 \\\n  --header 'Authorization: Basic cm9vdEBleGFtcGxlLmNvbTp0ZXN0' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\n  \"longname\": \"other longname\"\n}'\n</code></pre> <p>Example response:</p> <pre><code>{\n  \"project\": {\n    \"description\": [\n      {\n        \"value\": \"Anything Project\"\n      }\n    ],\n    \"id\": \"http://rdfh.ch/projects/0001\",\n    \"keywords\": [\n      \"arbitrary test data\",\n      \"things\"\n    ],\n    \"logo\": null,\n    \"longname\": \"other longname\",\n    \"ontologies\": [\n      \"http://api.knora.org/ontology/0001/something/v2\",\n      \"http://api.knora.org/ontology/0001/sequences/v2\",\n      \"http://api.knora.org/ontology/0001/freetest/v2\",\n      \"http://api.knora.org/ontology/0001/minimal/v2\",\n      \"http://api.knora.org/ontology/0001/anything/v2\"\n    ],\n    \"selfjoin\": false,\n    \"shortcode\": \"0001\",\n    \"shortname\": \"anything\",\n    \"status\": true\n  }\n}\n</code></pre> <p>Errors:</p> <ul> <li><code>400 Bad Request</code><ul> <li>if the provided IRI is not valid.</li> <li>if the provided payload is not valid.</li> </ul> </li> <li><code>404 Not Found</code> if no project with the provided IRI is found.</li> </ul>"},{"location":"DSP-API/03-endpoints/api-admin/projects/#delete-a-project","title":"Delete a Project","text":"<p>Permissions: SystemAdmin / ProjectAdmin</p> <p>Request definition: <code>DELETE /admin/projects/iri/{iri}</code></p> <p>Description: Mark a project as deleted (by setting the <code>status</code> flag to <code>false</code>).</p> <pre><code>curl --request DELETE \\\n  --url http://localhost:3333/admin/projects/iri/http%3A%2F%2Frdfh.ch%2Fprojects%2F0001 \\\n  --header 'Authorization: Basic cm9vdEBleGFtcGxlLmNvbTp0ZXN0' \\\n  --header 'Content-Type: application/json'\n</code></pre> <p>Example response:</p> <pre><code>{\n  \"project\": {\n    \"description\": [\n      {\n        \"value\": \"Anything Project\"\n      }\n    ],\n    \"id\": \"http://rdfh.ch/projects/0001\",\n    \"keywords\": [\n      \"arbitrary test data\",\n      \"things\"\n    ],\n    \"logo\": null,\n    \"longname\": \"other longname\",\n    \"ontologies\": [\n      \"http://api.knora.org/ontology/0001/something/v2\",\n      \"http://api.knora.org/ontology/0001/sequences/v2\",\n      \"http://api.knora.org/ontology/0001/freetest/v2\",\n      \"http://api.knora.org/ontology/0001/minimal/v2\",\n      \"http://api.knora.org/ontology/0001/anything/v2\"\n    ],\n    \"selfjoin\": false,\n    \"shortcode\": \"0001\",\n    \"shortname\": \"anything\",\n    \"status\": false\n  }\n}\n</code></pre> <p>Errors:</p> <ul> <li><code>400 Bad Request</code> if the provided IRI is not valid.</li> <li><code>404 Not Found</code> if no project with the provided IRI is found.</li> </ul>"},{"location":"DSP-API/03-endpoints/api-admin/projects/#get-all-data-of-a-project","title":"Get all Data of a Project","text":"<p>Permissions: ProjectAdmin / SystemAdmin</p> <p>Request definition: <code>POST /admin/projects/iri/{iri}/AllData</code></p> <p>Description: Gets all data of a project as a TriG file (ontologies, resource data, admin data, and permissions).</p> <p>Example request:</p> <pre><code>curl --request GET \\\n  --url http://localhost:3333/admin/projects/iri/http%3A%2F%2Frdfh.ch%2Fprojects%2F00FF/AllData \\\n  --header 'Authorization: Basic cm9vdEBleGFtcGxlLmNvbTp0ZXN0'\n</code></pre> <p>Example response:</p> <pre><code>@prefix images: &lt;http://www.knora.org/ontology/00FF/images#&gt; .\n@prefix knora-admin: &lt;http://www.knora.org/ontology/knora-admin#&gt; .\n@prefix knora-base: &lt;http://www.knora.org/ontology/knora-base#&gt; .\n@prefix owl: &lt;http://www.w3.org/2002/07/owl#&gt; .\n@prefix rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt; .\n@prefix rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt; .\n@prefix salsah-gui: &lt;http://www.knora.org/ontology/salsah-gui#&gt; .\n@prefix standoff: &lt;http://www.knora.org/ontology/standoff#&gt; .\n@prefix xml: &lt;http://www.w3.org/XML/1998/namespace&gt; .\n@prefix xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt; .\n\n&lt;http://www.knora.org/ontology/00FF/images&gt; {\n    &lt;http://www.knora.org/ontology/00FF/images&gt;\n            rdf:type                      owl:Ontology ;\n            rdfs:label                    \"The images demo ontology\" ;\n            knora-base:attachedToProject  &lt;http://rdfh.ch/projects/00FF&gt; ;\n            knora-base:lastModificationDate  \"2012-12-12T12:12:12.12Z\"^^xsd:dateTime .\n    images:lastname  rdf:type        owl:ObjectProperty ;\n            rdfs:comment             \"Nachname einer Person\"@de ;\n            rdfs:comment             \"Last name of a person\"@en ;\n            rdfs:label               \"Name\"@de ;\n            rdfs:subPropertyOf       knora-base:hasValue ;\n            knora-base:objectClassConstraint  knora-base:TextValue ;\n            knora-base:subjectClassConstraint  images:person ;\n            salsah-gui:guiAttribute  \"size=32\" ;\n            salsah-gui:guiAttribute  \"maxlength=32\" ;\n            salsah-gui:guiElement    salsah-gui:SimpleText .\n    # ...\n}\n\n&lt;http://www.knora.org/data/00FF/images&gt; {\n    &lt;http://rdfh.ch/00FF/0cb8286054d5&gt;\n            rdf:type                      images:bild ;\n            rdfs:label                    \"1 Alpinismus\" ;\n            images:bearbeiter             &lt;http://rdfh.ch/00FF/0cb8286054d5/values/0b80b43aee0f04&gt; ;\n            images:titel                  &lt;http://rdfh.ch/00FF/0cb8286054d5/values/cea90774ee0f04&gt; ;\n            images:urheber                &lt;http://rdfh.ch/00FF/df1260ad43d5&gt; ;\n            images:urheberValue           &lt;http://rdfh.ch/00FF/0cb8286054d5/values/e346ff38-6b03-4a27-a11b-b0818a2e5ee3&gt; ;\n            knora-base:attachedToProject  &lt;http://rdfh.ch/projects/00FF&gt; ;\n            knora-base:attachedToUser     &lt;http://rdfh.ch/users/c266a56709&gt; ;\n            knora-base:creationDate       \"2016-03-02T15:05:57Z\"^^xsd:dateTime ;\n            knora-base:hasPermissions     \"CR knora-admin:ProjectMember,knora-admin:Creator|V knora-admin:KnownUser|RV knora-admin:UnknownUser\" ;\n            knora-base:hasStillImageFileValue  &lt;http://rdfh.ch/00FF/0cb8286054d5/values/c66133bf942f01&gt; ;\n            knora-base:isDeleted          false .\n    # ...\n}\n\n&lt;http://www.knora.org/data/admin&gt; {\n  # ...\n}\n\n&lt;http://www.knora.org/data/permissions&gt; {\n  # ...\n}\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-admin/projects/#project-member-operations","title":"Project Member Operations","text":""},{"location":"DSP-API/03-endpoints/api-admin/projects/#get-project-members-by-id","title":"Get Project Members by ID","text":"<p>Permissions: SystemAdmin / ProjectAdmin</p> <p>Request definition: </p> <ul> <li><code>GET /admin/projects/shortcode/{shortcode}/members</code></li> <li><code>GET /admin/projects/shortname/{shortname}/members</code></li> <li><code>GET /admin/projects/iri/{iri}/members</code></li> </ul> <p>Description: returns all members part of a project identified through iri, shortname or shortcode</p> <p>Example request:</p> <pre><code>curl --request GET 'http://0.0.0.0:3333/admin/projects/shortcode/0001/members' \\\n--header 'Authorization: Basic cm9vdEBleGFtcGxlLmNvbTp0ZXN0'\n</code></pre> <pre><code>curl --request GET 'http://0.0.0.0:3333/admin/projects/shortname/anything/members' \\\n--header 'Authorization: Basic cm9vdEBleGFtcGxlLmNvbTp0ZXN0'\n</code></pre> <pre><code>curl --request GET 'http://0.0.0.0:3333/admin/projects/iri/http%3A%2F%2Frdfh.ch%2Fprojects%2F0001/members'\n--header 'Authorization: Basic cm9vdEBleGFtcGxlLmNvbTp0ZXN0'\n</code></pre> <p>Example response:</p> <pre><code>{\n    \"members\": [\n        {\n            \"email\": \"anything.user01@example.org\",\n            \"familyName\": \"UserFamilyName\",\n            \"givenName\": \"UserGivenName\",\n            \"groups\": [],\n            \"id\": \"http://rdfh.ch/users/BhkfBc3hTeS_IDo-JgXRbQ\",\n            \"lang\": \"de\",\n            \"password\": null,\n            \"permissions\": {\n                \"administrativePermissionsPerProject\": {\n                    \"http://rdfh.ch/projects/0001\": [\n                        {\n                            \"additionalInformation\": null,\n                            \"name\": \"ProjectResourceCreateAllPermission\",\n                            \"permissionCode\": null\n                        }\n                    ]\n                },\n                \"groupsPerProject\": {\n                    \"http://rdfh.ch/projects/0001\": [\n                        \"http://www.knora.org/ontology/knora-admin#ProjectMember\"\n                    ]\n                }\n            },\n            \"projects\": [\n                {\n                    \"description\": [\n                        {\n                            \"value\": \"Anything Project\"\n                        }\n                    ],\n                    \"id\": \"http://rdfh.ch/projects/0001\",\n                    \"keywords\": [\n                        \"arbitrary test data\",\n                        \"things\"\n                    ],\n                    \"logo\": null,\n                    \"longname\": \"Anything Project\",\n                    \"ontologies\": [\n                        \"http://0.0.0.0:3333/ontology/0001/something/v2\",\n                        \"http://0.0.0.0:3333/ontology/0001/anything/v2\"\n                    ],\n                    \"selfjoin\": false,\n                    \"shortcode\": \"0001\",\n                    \"shortname\": \"anything\",\n                    \"status\": true\n                }\n            ],\n            \"sessionId\": null,\n            \"status\": true,\n            \"token\": null,\n            \"username\": \"anything.user01\"\n        }\n    ]\n}\n</code></pre> <p>Errors:</p> <ul> <li><code>400 Bad Request</code> if the provided ID is not valid.</li> <li><code>404 Not Found</code> if no project with the provided ID is found.</li> </ul> <p>NB:</p> <ul> <li>IRI must be URL-encoded.</li> </ul>"},{"location":"DSP-API/03-endpoints/api-admin/projects/#get-project-admins-by-id","title":"Get Project Admins by ID","text":"<p>Permissions: SystemAdmin / ProjectAdmin</p> <p>Request definition: </p> <ul> <li><code>GET /admin/projects/shortcode/{shortcode}/admin-members</code></li> <li><code>GET /admin/projects/shortname/{shortname}/admin-members</code></li> <li><code>GET /admin/projects/iri/{iri}/admin-members</code></li> </ul> <p>Description: returns all admin members part of a project identified through iri, shortname or shortcode</p> <p>Example request:</p> <pre><code>curl --request GET 'http://0.0.0.0:3333/admin/projects/shortcode/0001/admin-members' \\\n--header 'Authorization: Basic cm9vdEBleGFtcGxlLmNvbTp0ZXN0'\n</code></pre> <pre><code>curl --request GET 'http://0.0.0.0:3333/admin/projects/shortname/anything/admin-members' \\\n--header 'Authorization: Basic cm9vdEBleGFtcGxlLmNvbTp0ZXN0'\n</code></pre> <pre><code>curl --request GET 'http://0.0.0.0:3333/admin/projects/iri/http%3A%2F%2Frdfh.ch%2Fprojects%2F0001/admin-members'\n--header 'Authorization: Basic cm9vdEBleGFtcGxlLmNvbTp0ZXN0'\n</code></pre> <p>Example response:</p> <pre><code>{\n    \"members\": [\n        {\n            \"email\": \"anything.admin@example.org\",\n            \"familyName\": \"Admin\",\n            \"givenName\": \"Anything\",\n            \"groups\": [],\n            \"id\": \"http://rdfh.ch/users/AnythingAdminUser\",\n            \"lang\": \"de\",\n            \"password\": null,\n            \"permissions\": {\n                \"administrativePermissionsPerProject\": {\n                    \"http://rdfh.ch/projects/0001\": [\n                        {\n                            \"additionalInformation\": null,\n                            \"name\": \"ProjectResourceCreateAllPermission\",\n                            \"permissionCode\": null\n                        },\n                        {\n                            \"additionalInformation\": null,\n                            \"name\": \"ProjectAdminAllPermission\",\n                            \"permissionCode\": null\n                        }\n                    ]\n                },\n                \"groupsPerProject\": {\n                    \"http://rdfh.ch/projects/0001\": [\n                        \"http://www.knora.org/ontology/knora-admin#ProjectMember\",\n                        \"http://www.knora.org/ontology/knora-admin#ProjectAdmin\"\n                    ]\n                }\n            },\n            \"projects\": [\n                {\n                    \"description\": [\n                        {\n                            \"value\": \"Anything Project\"\n                        }\n                    ],\n                    \"id\": \"http://rdfh.ch/projects/0001\",\n                    \"keywords\": [\n                        \"arbitrary test data\",\n                        \"things\"\n                    ],\n                    \"logo\": null,\n                    \"longname\": \"Anything Project\",\n                    \"ontologies\": [\n                        \"http://0.0.0.0:3333/ontology/0001/something/v2\",\n                        \"http://0.0.0.0:3333/ontology/0001/sequences/v2\",\n                        \"http://0.0.0.0:3333/ontology/0001/freetest/v2\",\n                        \"http://0.0.0.0:3333/ontology/0001/minimal/v2\",\n                        \"http://0.0.0.0:3333/ontology/0001/anything/v2\"\n                    ],\n                    \"selfjoin\": false,\n                    \"shortcode\": \"0001\",\n                    \"shortname\": \"anything\",\n                    \"status\": true\n                }\n            ],\n            \"sessionId\": null,\n            \"status\": true,\n            \"token\": null,\n            \"username\": \"anything.admin\"\n        }\n    ]\n}\n</code></pre> <p>Errors:</p> <ul> <li><code>400 Bad Request</code> if the provided ID is not valid.</li> <li><code>404 Not Found</code> if no project with the provided ID is found.</li> </ul> <p>NB:</p> <ul> <li>IRI must be URL-encoded.</li> </ul>"},{"location":"DSP-API/03-endpoints/api-admin/projects/#other-project-operations","title":"Other Project Operations","text":""},{"location":"DSP-API/03-endpoints/api-admin/projects/#get-all-keywords","title":"Get all Keywords","text":"<p>Permissions:</p> <p>Request definition: <code>GET /admin/projects/Keywords</code></p> <p>Description: returns keywords of all projects as a list</p> <p>Example request:</p> <pre><code>curl --request GET 'http://0.0.0.0:3333/admin/projects/Keywords'\n</code></pre> <p>Example response:</p> <pre><code>{\n    \"keywords\": [\n        \"Annotation\",\n        \"Arabe\",\n        \"Arabic\",\n        \"Arabisch\",\n        \"Audio\",\n        \"Basel\",\n        \"Basler Fr\u00fchdrucke\",\n        \"Bilder\",\n        \"Bilderfolgen\",\n        \"Contectualisation of images\",\n        \"Cyrillic\",\n        \"Cyrillique\",\n        \"Data and Service Center for the Humanities (DaSCH)\",\n        \"Grec\",\n        \"Greek\",\n        \"Griechisch\",\n        \"Hebrew\",\n        \"Hebr\u00e4isch\",\n        \"Hieroglyphen\",\n        \"H\u00e9breu\",\n        \"Inkunabel\",\n        \"Japanese\",\n        \"Japanisch\",\n        \"Japonais\",\n        \"Keilschrift\",\n        \"Kunsthistorisches Seminar Universit\u00e4t Basel\",\n        \"Kyrillisch\",\n        \"Late Middle Ages\",\n        \"Letterpress Printing\",\n        \"Markup\",\n        \"Narrenschiff\",\n        \"Objekte\",\n        \"Sebastian Brant\",\n        \"Sonderzeichen\",\n        \"Texteigenschaften\",\n        \"Textquellen\",\n        \"Wiegendrucke\",\n        \"XML\",\n        \"arbitrary test data\",\n        \"asdf\",\n        \"audio\",\n        \"caract\u00e8res sp\u00e9ciaux\",\n        \"collection\",\n        \"cuneiform\",\n        \"cun\u00e9iforme\",\n        \"early print\",\n        \"hieroglyphs\",\n        \"hi\u00e9roglyphes\",\n        \"images\",\n        \"incunabula\",\n        \"objects\",\n        \"objets\",\n        \"propri\u00e9t\u00e9s de texte\",\n        \"ship of fools\",\n        \"sources\",\n        \"special characters\",\n        \"textual properties\",\n        \"textual sources\",\n        \"things\"\n    ]\n}\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-admin/projects/#get-keywords-of-a-project","title":"Get Keywords of a Project","text":"<p>Permissions:</p> <p>Request definition:</p> <ul> <li><code>GET /admin/projects/iri/{iri}/Keywords</code></li> </ul> <p>Description: returns the keywords of a single project</p> <p>Example request:</p> <pre><code>curl --request GET 'http://0.0.0.0:3333/admin/projects/iri/http%3A%2F%2Frdfh.ch%2Fprojects%2F0001/Keywords'\n--header 'Authorization: Basic cm9vdEBleGFtcGxlLmNvbTp0ZXN0'\n</code></pre> <p>Example response:</p> <pre><code>{\n    \"keywords\": [\n        \"arbitrary test data\",\n        \"things\"\n    ]\n}\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-admin/projects/#get-restricted-view-settings","title":"Get Restricted View Settings","text":"<p>Permissions: ProjectAdmin</p> <p>Request definition:</p> <ul> <li><code>GET /admin/projects/shortcode/{shortcode}/RestrictedViewSettings</code></li> <li><code>GET /admin/projects/shortname/{shortname}/RestrictedViewSettings</code></li> <li><code>GET /admin/projects/iri/{iri}/RestrictedViewSettings</code></li> </ul> <p>Description: returns the project's restricted view settings</p> <p>Example request:</p> <pre><code>curl --request GET 'http://0.0.0.0:3333/admin/projects/shortcode/0001/RestrictedViewSettings' \\\n--header 'Authorization: Basic cm9vdEBleGFtcGxlLmNvbTp0ZXN0'\n</code></pre> <pre><code>curl --request GET 'http://0.0.0.0:3333/admin/projects/shortname/anything/RestrictedViewSettings' \\\n--header 'Authorization: Basic cm9vdEBleGFtcGxlLmNvbTp0ZXN0'\n</code></pre> <pre><code>curl --request GET 'http://0.0.0.0:3333/admin/projects/iri/http%3A%2F%2Frdfh.ch%2Fprojects%2F0001/RestrictedViewSettings' \\\n--header 'Authorization: Basic cm9vdEBleGFtcGxlLmNvbTp0ZXN0'\n</code></pre> <p>Example response:</p> <pre><code>{\n    \"settings\": {\n        \"size\": \"!512,512\",\n        \"watermark\": false\n    }\n}\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-admin/projects/#set-restricted-view-settings","title":"Set Restricted View Settings","text":"<p>Set how all still image resources of a projects should be displayed when viewed as restricted.  This can be either a size restriction or a watermark. </p> <p>For that, we support two of the IIIF size forms:</p> <ul> <li><code>!d,d</code> The returned image is scaled so that the width and height of the returned image are not greater than d,    while maintaining the aspect ratio.</li> <li><code>pct:n</code> The width and height of the returned image is scaled to n percent    of the width and height of the original image. 1&lt;= n &lt;= 100.</li> </ul> <p>If the watermark is set to <code>true</code>, the returned image will be watermarked, otherwise the default size <code>!128,128</code> is set. It is only possible to set either the size or the watermark, not both at the same time.</p> <p>Permissions: ProjectAdmin/SystemAdmin</p> <p>Request definition:</p> <ul> <li><code>POST /admin/projects/iri/{iri}/RestrictedViewSettings</code></li> <li><code>POST /admin/projects/shortcode/{shortcode}/RestrictedViewSettings</code></li> </ul> <p>Description: Set the project's restricted view</p> <p>The endpoint accepts either a size or a watermark but not both.</p> <p>Size:</p> <pre><code>{ \"size\": \"!512,512\" }\n</code></pre> <p>Watermark:</p> <pre><code>{ \"watermark\": true }\n</code></pre> <p>Examples :</p> <p>Request:</p> <pre><code>curl --request POST 'http://0.0.0.0:5555/admin/projects/iri/http%3A%2F%2Frdfh.ch%2Fprojects%2F0001/RestrictedViewSettings' \\\n--header 'Authorization: Basic cm9vdEBleGFtcGxlLmNvbTp0ZXN0' \\\n--data '{\"size\": \"!512,512\"}\n</code></pre> <p>Response:</p> <pre><code>{ \"size\": \"!512,512\" }\n</code></pre> <p>Request:</p> <pre><code>curl --request POST 'http://0.0.0.0:5555/admin/projects/shortcode/0001/RestrictedViewSettings' \\\n--header 'Authorization: Basic cm9vdEBleGFtcGxlLmNvbTp0ZXN0' \\\n--data '{\"watermark\": true}'\n</code></pre> <p>Response:</p> <pre><code>{ \"watermark\": true }\n</code></pre> <p>Operates on the following mutually exclusive properties:</p> <ul> <li><code>knora-admin:projectRestrictedViewSize</code>: the IIIF size value</li> <li><code>knora-admin:projectRestrictedViewWatermark</code>: whether images of a project should be protected with a watermark.</li> </ul> <p>Note: Restricted view settings only take effect, if a user has \"Restricted View\" permission on an image.</p>"},{"location":"DSP-API/03-endpoints/api-admin/stores/","title":"Stores Endpoint","text":""},{"location":"DSP-API/03-endpoints/api-admin/stores/#stores-endpoint","title":"Stores Endpoint","text":"<p>This endpoint allows manipulation of the triplestore content.</p> <p><code>POST admin/store/ResetTriplestoreContent</code> resets the triplestore content, given that the <code>allowReloadOverHttp</code> configuration flag is set to <code>true</code>. This route is mostly used in tests.</p>"},{"location":"DSP-API/03-endpoints/api-admin/users/","title":"Users Endpoint","text":""},{"location":"DSP-API/03-endpoints/api-admin/users/#users-endpoint","title":"Users Endpoint","text":""},{"location":"DSP-API/03-endpoints/api-admin/users/#endpoint-overview","title":"Endpoint Overview","text":""},{"location":"DSP-API/03-endpoints/api-admin/users/#general-user-operations","title":"General User Operations","text":"<ul> <li><code>GET: /admin/users</code> : return all users</li> <li><code>GET: /admin/users/[iri | email | username]/&lt;identifier&gt;</code> : return single user identified by [IRI | email | username]</li> <li><code>POST: /admin/users/</code> : create new user</li> <li><code>PUT: /admin/users/iri/&lt;userIri&gt;/BasicUserInformation</code> : update user's basic user information</li> <li><code>PUT: /admin/users/iri/&lt;userIri&gt;/Password</code> : update user's password</li> <li><code>PUT: /admin/users/iri/&lt;userIri&gt;/Status</code> : update user's status</li> <li><code>DELETE: /admin/users/iri/&lt;userIri&gt;</code> : delete user (set status to false)</li> </ul>"},{"location":"DSP-API/03-endpoints/api-admin/users/#project-membership-operations","title":"Project membership operations","text":"<ul> <li><code>GET: /admin/users/iri/&lt;userIri&gt;/project-memberships</code> : get user's project memberships</li> <li><code>POST: /admin/users/iri/&lt;userIri&gt;/project-memberships/&lt;projectIri&gt;</code> : add user to project (to ProjectMember group)</li> <li><code>DELETE: /admin/users/iri/&lt;userIri&gt;/project-memberships/&lt;projectIri&gt;</code> : remove user from project (to ProjectMember   group)</li> </ul>"},{"location":"DSP-API/03-endpoints/api-admin/users/#group-membership-operations","title":"Group membership operations","text":"<ul> <li><code>GET: /admin/users/iri/&lt;userIri&gt;/project-admin-memberships</code> : get user's ProjectAdmin group memberships</li> <li><code>POST: /admin/users/iri/&lt;userIri&gt;/project-admin-memberships/&lt;projectIri&gt;</code> : add user to ProjectAdmin group</li> <li> <p><code>DELETE: /admin/users/iri/&lt;userIri&gt;/project-admin-memberships/&lt;projectIri&gt;</code> : remove user from ProjectAdmin group</p> </li> <li> <p><code>GET: /admin/users/iri/&lt;userIri&gt;/group-memberships</code> : get user's normal group memberships</p> </li> <li><code>POST: /admin/users/iri/&lt;userIri&gt;/group-memberships/&lt;groupIri&gt;</code> : add user to normal group</li> <li> <p><code>DELETE: /admin/users/iri/&lt;userIri&gt;/group-memberships/&lt;groupIri&gt;</code> : remove user from normal group</p> </li> <li> <p><code>PUT: /admin/users/iri/&lt;userIri&gt;/SystemAdmin</code> : Add/remove user to/from SystemAdmin group</p> </li> </ul>"},{"location":"DSP-API/03-endpoints/api-admin/users/#user-operations","title":"User Operations","text":""},{"location":"DSP-API/03-endpoints/api-admin/users/#get-users","title":"Get users","text":"<ul> <li>Required permission: SystemAdmin</li> <li>GET: <code>/admin/users</code></li> </ul>"},{"location":"DSP-API/03-endpoints/api-admin/users/#get-user","title":"Get user","text":"<ul> <li>Required permission:<ul> <li>SystemAdmin / self: for getting all properties</li> <li>All other users: for getting only the public properties (<code>givenName</code> and <code>familyName</code>)</li> </ul> </li> <li>GET:<code>/admin/users/[iri | email | username ]/&lt;identifier&gt;</code></li> </ul>"},{"location":"DSP-API/03-endpoints/api-admin/users/#create-user","title":"Create user","text":"<ul> <li>Required permission: none, self-registration is allowed</li> <li>Required information: email (unique), given name, family name,   password, status, systemAdmin</li> <li>Username restrictions:<ul> <li>4 - 50 characters long</li> <li>Only contains alphanumeric characters, underscore and dot.</li> <li>Underscore and dot can't be at the end or start of a username</li> <li>Underscore or dot can't be used multiple times in a row</li> </ul> </li> <li>Returns information about the newly created user</li> <li>POST: <code>/admin/users</code></li> <li>BODY:</li> </ul> <pre><code>    {\n  \"email\": \"donald.duck@example.org\",\n  \"givenName\": \"Donald\",\n  \"familyName\": \"Duck\",\n  \"username\": \"donald.duck\",\n  \"password\": \"test\",\n  \"status\": true,\n  \"lang\": \"en\",\n  \"systemAdmin\": false\n}\n</code></pre> <p>Additionally, each user can have an optional custom IRI (of Knora IRI form) specified by the <code>id</code> in the request body as below:</p> <pre><code>    {\n  \"id\": \"http://rdfh.ch/users/FnjFfIQFVDvI7ex8zSyUyw\",\n  \"email\": \"donald.duck@example.org\",\n  \"givenName\": \"Donald\",\n  \"familyName\": \"Duck\",\n  \"username\": \"donald.duck\",\n  \"password\": \"test\",\n  \"status\": true,\n  \"lang\": \"en\",\n  \"systemAdmin\": false\n}\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-admin/users/#update-basic-user-information","title":"Update basic user information**","text":"<ul> <li>Required permission: SystemAdmin / self</li> <li>Changeable information: username, email, given name, family name,   password, status, SystemAdmin membership</li> <li>TypeScript Docs: userFormats - ChangeUserApiRequestADM</li> <li>PUT: <code>/admin/users/iri/&lt;userIri&gt;/BasicUserInformation</code></li> <li>BODY:</li> </ul> <pre><code>    {\n  \"username\": \"donald.big.duck\",\n  \"email\": \"donald.big.duck@example.org\",\n  \"givenName\": \"Big Donald\",\n  \"familyName\": \"Duckmann\",\n  \"lang\": \"de\"\n}\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-admin/users/#update-users-password","title":"Update user's password","text":"<ul> <li>Required permission: SystemAdmin / self</li> <li>Changeable information: password</li> <li>PUT: <code>/admin/users/iri/&lt;userIri&gt;/Password</code></li> <li>BODY:</li> </ul> <pre><code>    {\n  \"requesterPassword\": \"test\",\n  \"newPassword\": \"test1234\"\n}\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-admin/users/#delete-user","title":"Delete user","text":"<ul> <li>Required permission: SystemAdmin / self</li> <li>Remark: The same as updating a user and changing <code>status</code> to <code>false</code>. To un-delete, set <code>status</code> to <code>true</code>.</li> <li>PUT: <code>/admin/users/iri/&lt;userIri&gt;/Status</code></li> <li>BODY:</li> </ul> <pre><code>{\n    \"status\": false // true or false\n}\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-admin/users/#delete-user-update-user","title":"Delete user (-\\update user)**","text":"<ul> <li>Required permission: SystemAdmin / self</li> <li>Remark: The same as updating a user and changing <code>status</code> to <code>false</code>. To un-delete, set <code>status</code> to <code>true</code>.</li> <li>DELETE: <code>/admin/users/iri/&lt;userIri&gt;</code></li> <li>BODY: empty</li> </ul>"},{"location":"DSP-API/03-endpoints/api-admin/users/#users-project-membership-operations","title":"User's project membership operations","text":""},{"location":"DSP-API/03-endpoints/api-admin/users/#get-users-project-memberships","title":"Get user's project memberships","text":"<ul> <li>GET: <code>/admin/users/iri/&lt;userIri&gt;/project-memberships</code></li> </ul>"},{"location":"DSP-API/03-endpoints/api-admin/users/#addremove-user-tofrom-project","title":"Add/remove user to/from project","text":"<ul> <li>Required permission: SystemAdmin / ProjectAdmin / self (if project self-assignment is enabled)</li> <li>Required information: project IRI, user IRI</li> <li>Effects: <code>knora-base:isInProject</code> user property</li> <li>POST / DELETE: <code>/admin/users/iri/&lt;userIri&gt;/project-memberships/&lt;projectIri&gt;</code></li> <li>BODY: empty</li> </ul> <p>Note: When a user is project admin in the same project, his project admin membership will be removed as well.</p>"},{"location":"DSP-API/03-endpoints/api-admin/users/#users-group-membership-operations","title":"User's group membership operations","text":""},{"location":"DSP-API/03-endpoints/api-admin/users/#get-users-project-admin-memberships","title":"Get user's project admin memberships","text":"<ul> <li>GET: <code>/admin/users/iri/&lt;userIri&gt;/project-admin-memberships</code></li> </ul>"},{"location":"DSP-API/03-endpoints/api-admin/users/#addremove-user-tofrom-project-admin-group","title":"Add/remove user to/from project admin group","text":"<ul> <li>Required permission: SystemAdmin / ProjectAdmin</li> <li>Required information: project IRI, user IRI</li> <li>Effects: <code>knora-base:isInProjectAdminGroup</code> user property</li> <li>POST / DELETE: <code>/admin/users/iri/&lt;userIri&gt;/project-admin-memberships/&lt;projectIri&gt;</code></li> <li>BODY: empty</li> </ul> <p>Note: In order to add a user to a project admin group, the user needs to be member of that project.</p>"},{"location":"DSP-API/03-endpoints/api-admin/users/#get-users-group-memberships","title":"Get user's group memberships**","text":"<ul> <li>GET: <code>/admin/users/iri/&lt;userIri&gt;/group-memberships</code></li> </ul>"},{"location":"DSP-API/03-endpoints/api-admin/users/#addremove-user-tofrom-normal-group-not-systemadmin-or-projectadmin","title":"Add/remove user to/from 'normal' group (not SystemAdmin or ProjectAdmin)","text":"<ul> <li>Required permission: SystemAdmin / hasProjectAllAdminPermission   / hasProjectAllGroupAdminPermission /   hasProjectRestrictedGroupAdminPermission (for this group) / User   (if group self-assignment is enabled)</li> <li>Required information: group IRI, user IRI</li> <li>Effects: <code>knora-base:isInGroup</code></li> <li>POST / DELETE: <code>/admin/users/iri/&lt;userIri&gt;/group-memberships/&lt;groupIri&gt;</code></li> <li>BODY: empty</li> </ul>"},{"location":"DSP-API/03-endpoints/api-admin/users/#addremove-user-tofrom-system-admin-group","title":"Add/remove user to/from system admin group","text":"<ul> <li>Required permission: SystemAdmin / self</li> <li>Effects property: <code>knora-base:isInSystemAdminGroup</code> with value   <code>true</code> or <code>false</code></li> <li>PUT: <code>/admin/users/iri/&lt;userIri&gt;/SystemAdmin</code></li> <li>BODY:</li> </ul> <pre><code>{\n  \"systemAdmin\": false\n}\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-admin/users/#example-data","title":"Example Data","text":"<p>The following is an example for user information stored in the <code>admin</code> named graph:</p> <pre><code>&lt;http://rdfh.ch/users/c266a56709&gt;\n    rdf:type knora-admin:User ;\n    knora-admin:username \"user01.user1\"^^xsd:string ;\n    knora-admin:email \"user01.user1@example.com\"^^xsd:string ;\n    knora-admin:givenName \"User01\"^^xsd:string ;\n    knora-admin:familyName \"User\"^^xsd:string ;\n    knora-admin:password \"$e0801$FGl9FDIWw+D83OeNPGmD9u2VTqIkJopIQECgmb2DSWQLS0TeKSvYoWAkbEv6KxePPlCI3CP9MmVHuvnWv8/kag==$mlegCYdGXt+ghuo8i0rLjgOiNnGDW604Q5g/v7zwBPU=\"^^xsd:string ;\n    knora-admin:preferredLanguage \"de\"^^xsd:string ;\n    knora-admin:status \"true\"^^xsd:boolean ;\n    knora-admin:isInProject &lt;http://rdfh.ch/projects/00FF&gt; ;\n    knora-admin:isInSystemAdminGroup \"false\"^^xsd:boolean ;\n    knora-admin:isInProjectAdminGroup &lt;http://rdfh.ch/projects/00FF&gt; .\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-util/version/","title":"Version","text":""},{"location":"DSP-API/03-endpoints/api-util/version/#version","title":"Version","text":"<p>The version endpoint provides all versions of used components in the DSP stack.</p>"},{"location":"DSP-API/03-endpoints/api-util/version/#example-request","title":"Example request","text":"<p><code>GET /version</code></p>"},{"location":"DSP-API/03-endpoints/api-util/version/#example-response","title":"Example response","text":"<pre><code>HTTP/1.1 200 OK\nContent-Length: 247\nContent-Type: application/json\nDate: Mon, 11 Mar 2024 17:40:32 GMT\nServer: webapi/v30.9.0\n\n{\n    \"buildCommit\": \"bbb0e65c7\",\n    \"buildTime\": \"2024-03-11T17:40:17.322491Z\",\n    \"fuseki\": \"2.1.5\",\n    \"pekkoHttp\": \"1.0.1\",\n    \"scala\": \"2.13.13\",\n    \"sipi\": \"3.9.0\",\n    \"webapi\": \"v30.9.0\"\n}\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-v2/authentication/","title":"Authentication","text":""},{"location":"DSP-API/03-endpoints/api-v2/authentication/#authentication","title":"Authentication","text":"<p>Certain routes are secured and require authentication. When accessing any secured route we support three options for authentication:</p> <ul> <li>Preferred method: For each request an Access Token is sent in the HTTP authorization header with the   HTTP bearer scheme.</li> <li>Deprecated method: For each request an Access Token is provided as a cookie in the HTTP request.</li> <li>Deprecated method: HTTP basic authentication, where   the username is the user's <code>email</code>.</li> </ul>"},{"location":"DSP-API/03-endpoints/api-v2/authentication/#access-token-login-and-logout","title":"Access Token / Login and Logout","text":"<p>A client can obtain an access token by sending a POST request (e.g., <code>{\"identifier_type\":\"identifier_value\", \"password\":\"password_value\"}</code>) to the /v2/authentication route with identifier and password in the body. The <code>identifier_type</code> can be <code>iri</code>, <code>email</code>, or <code>username</code>. If the credentials are valid, a JSON WEB Token (JWT) will be sent back in the response (e.g., <code>{\"token\": \"eyJ0eXAiOiJ...\"}</code>). Additionally, for web browser clients a session cookie containing the JWT token is also created, containing <code>KnoraAuthentication=eyJ0eXAiOiJ...</code>.</p> <p>To logout, the client sends a DELETE request to the same route /v2/authentication and the access token in one of the three described ways. This will invalidate the access token, thus not allowing further request that would supply the invalidated token.</p>"},{"location":"DSP-API/03-endpoints/api-v2/authentication/#checking-credentials","title":"Checking Credentials","text":"<p>To check the credentials, send a GET request to /v2/authentication with the credentials supplied as URL parameters or HTTP authentication headers as described before.</p>"},{"location":"DSP-API/03-endpoints/api-v2/authentication/#usage-scenarios","title":"Usage Scenarios","text":"<ol> <li>Create token by logging-in, send token on each subsequent request, and logout when finished.</li> <li>Send email/password credentials on every request.</li> </ol>"},{"location":"DSP-API/03-endpoints/api-v2/editing-resources/","title":"Creating and Editing Resources","text":""},{"location":"DSP-API/03-endpoints/api-v2/editing-resources/#creating-and-editing-resources","title":"Creating and Editing Resources","text":""},{"location":"DSP-API/03-endpoints/api-v2/editing-resources/#creating-a-resource","title":"Creating a Resource","text":"<p>To create a new resources, use this route:</p> <pre><code>HTTP POST to http://host/v2/resources\n</code></pre> <p>The body of the request is a JSON-LD document in the complex API schema, specifying the type,<code>rdfs:label</code>, and its Knora resource properties and their values. The representation of the resource is the same as when it is returned in a <code>GET</code> request, except that its <code>knora-api:attachedToUser</code> is not given, and the resource IRI and those of its values can be optionally specified. The format of the values submitted is described in Creating and Editing Values.  If there are multiple values for a property, these must be given in an array.</p> <p>For example, here is a request to create a resource with various value types:</p> <pre><code>{\n  \"@type\" : \"anything:Thing\",\n  \"anything:hasBoolean\" : {\n    \"@type\" : \"knora-api:BooleanValue\",\n    \"knora-api:booleanValueAsBoolean\" : true\n  },\n  \"anything:hasColor\" : {\n    \"@type\" : \"knora-api:ColorValue\",\n    \"knora-api:colorValueAsColor\" : \"#ff3333\"\n  },\n  \"anything:hasDate\" : {\n    \"@type\" : \"knora-api:DateValue\",\n    \"knora-api:dateValueHasCalendar\" : \"GREGORIAN\",\n    \"knora-api:dateValueHasEndEra\" : \"CE\",\n    \"knora-api:dateValueHasEndYear\" : 1489,\n    \"knora-api:dateValueHasStartEra\" : \"CE\",\n    \"knora-api:dateValueHasStartYear\" : 1489\n  },\n  \"anything:hasDecimal\" : {\n    \"@type\" : \"knora-api:DecimalValue\",\n    \"knora-api:decimalValueAsDecimal\" : {\n      \"@type\" : \"xsd:decimal\",\n      \"@value\" : \"100000000000000.000000000000001\"\n    }\n  },\n  \"anything:hasGeometry\" : {\n    \"@type\" : \"knora-api:GeomValue\",\n    \"knora-api:geometryValueAsGeometry\" : \"{\\\"status\\\":\\\"active\\\",\\\"lineColor\\\":\\\"#ff3333\\\",\\\"lineWidth\\\":2,\\\"points\\\":[{\\\"x\\\":0.08098591549295775,\\\"y\\\":0.16741071428571427},{\\\"x\\\":0.7394366197183099,\\\"y\\\":0.7299107142857143}],\\\"type\\\":\\\"rectangle\\\",\\\"original_index\\\":0}\"\n  },\n  \"anything:hasGeoname\" : {\n    \"@type\" : \"knora-api:GeonameValue\",\n    \"knora-api:geonameValueAsGeonameCode\" : \"2661604\"\n  },\n  \"anything:hasInteger\" : [ {\n    \"@type\" : \"knora-api:IntValue\",\n    \"knora-api:hasPermissions\" : \"CR knora-admin:Creator|V http://rdfh.ch/groups/0001/thing-searcher\",\n    \"knora-api:intValueAsInt\" : 5,\n    \"knora-api:valueHasComment\" : \"this is the number five\"\n  }, {\n    \"@type\" : \"knora-api:IntValue\",\n    \"knora-api:intValueAsInt\" : 6\n  } ],\n  \"anything:hasInterval\" : {\n    \"@type\" : \"knora-api:IntervalValue\",\n    \"knora-api:intervalValueHasEnd\" : {\n      \"@type\" : \"xsd:decimal\",\n      \"@value\" : \"3.4\"\n    },\n    \"knora-api:intervalValueHasStart\" : {\n      \"@type\" : \"xsd:decimal\",\n      \"@value\" : \"1.2\"\n    }\n  },\n  \"anything:hasListItem\" : {\n    \"@type\" : \"knora-api:ListValue\",\n    \"knora-api:listValueAsListNode\" : {\n      \"@id\" : \"http://rdfh.ch/lists/0001/treeList03\"\n    }\n  },\n  \"anything:hasOtherThingValue\" : {\n    \"@type\" : \"knora-api:LinkValue\",\n    \"knora-api:linkValueHasTargetIri\" : {\n      \"@id\" : \"http://rdfh.ch/0001/a-thing\"\n    }\n  },\n  \"anything:hasRichtext\" : {\n    \"@type\" : \"knora-api:TextValue\",\n    \"knora-api:textValueAsXml\" : \"&lt;?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?&gt;\\n&lt;text&gt;&lt;p&gt;&lt;strong&gt;this is&lt;/strong&gt; text&lt;/p&gt; with standoff&lt;/text&gt;\",\n    \"knora-api:textValueHasMapping\" : {\n      \"@id\" : \"http://rdfh.ch/standoff/mappings/StandardMapping\"\n    }\n  },\n  \"anything:hasText\" : {\n    \"@type\" : \"knora-api:TextValue\",\n    \"knora-api:valueAsString\" : \"this is text without standoff\"\n  },\n  \"anything:hasUri\" : {\n    \"@type\" : \"knora-api:UriValue\",\n    \"knora-api:uriValueAsUri\" : {\n      \"@type\" : \"xsd:anyURI\",\n      \"@value\" : \"https://www.knora.org\"\n    }\n  },\n  \"knora-api:attachedToProject\" : {\n    \"@id\" : \"http://rdfh.ch/projects/0001\"\n  },\n  \"rdfs:label\" : \"test thing\",\n  \"@context\" : {\n    \"rdf\" : \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n    \"knora-api\" : \"http://api.knora.org/ontology/knora-api/v2#\",\n    \"rdfs\" : \"http://www.w3.org/2000/01/rdf-schema#\",\n    \"xsd\" : \"http://www.w3.org/2001/XMLSchema#\",\n    \"anything\" : \"http://0.0.0.0:3333/ontology/0001/anything/v2#\"\n  }\n}\n</code></pre> <p>Permissions for the new resource can be given by adding <code>knora-api:hasPermissions</code>, a custom creation date can be specified by adding <code>knora-api:creationDate</code> (an xsd:dateTimeStamp), and the resource's creator can be specfied by adding <code>knora-api:attachedToUser</code>. For example:</p> <pre><code>{\n  \"@type\" : \"anything:Thing\",\n  \"anything:hasBoolean\" : {\n    \"@type\" : \"knora-api:BooleanValue\",\n    \"knora-api:booleanValueAsBoolean\" : true\n  },\n  \"knora-api:attachedToProject\" : {\n    \"@id\" : \"http://rdfh.ch/projects/0001\"\n  },\n  \"knora-api:attachedToUser\" : {\n    \"@id\" : \"http://rdfh.ch/users/9XBCrDV3SRa7kS1WwynB4Q\"\n  },\n  \"rdfs:label\" : \"test thing\",\n  \"knora-api:hasPermissions\" : \"CR knora-admin:Creator|V http://rdfh.ch/groups/0001/thing-searcher\",\n  \"knora-api:creationDate\" : {\n    \"@type\" : \"xsd:dateTimeStamp\",\n    \"@value\" : \"2019-01-09T15:45:54.502951Z\"\n  },\n  \"@context\" : {\n    \"rdf\" : \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n    \"knora-api\" : \"http://api.knora.org/ontology/knora-api/v2#\",\n    \"rdfs\" : \"http://www.w3.org/2000/01/rdf-schema#\",\n    \"xsd\" : \"http://www.w3.org/2001/XMLSchema#\",\n    \"anything\" : \"http://0.0.0.0:3333/ontology/0001/anything/v2#\"\n  }\n}\n</code></pre> <p>The format of the object of <code>knora-api:hasPermissions</code> is described in Permissions.</p> <p>If permissions are not given, configurable default permissions are used (see Default Object Access Permissions ).</p> <p>To create a resource, the user must have permission to create resources of that class in that project.</p> <p>The predicate <code>knora-api:attachedToUser</code> can be used to specify a creator other than the requesting user only if the requesting user is an administrator of the project or a system administrator. The specified creator must also have permission to create resources of that class in that project.</p> <p>In addition to the creation date, in the body of the request, it is possible to specify a custom IRI ( of Knora IRI form) for a resource through the <code>@id</code> attribute which will then be assigned to the resource; otherwise the resource will get a unique random IRI.</p> <p>A custom resource IRI must be <code>http://rdfh.ch/PROJECT_SHORTCODE/</code> (where <code>PROJECT_SHORTCODE</code> is the shortcode of the project that the resource belongs to) plus a custom ID string.</p> <p>Similarly, it is possible to assign a custom IRI to the values using their <code>@id</code> attributes; if not given, random IRIs will be assigned to the values.</p> <p>A custom value IRI must be the IRI of the containing resource, followed by a <code>/values/</code> and a custom ID string.</p> <p>An optional custom UUID of a value can also be given by adding <code>knora-api:valueHasUUID</code>. Each custom UUID must be base64url-encoded without padding. Each value of the new resource can also have a custom creation date specified by adding <code>knora-api:creationDate</code> (an xsd:dateTimeStamp). For example:</p> <pre><code>{\n   \"@id\" : \"http://rdfh.ch/0001/oveR1dQltEUwNrls9Lu5Rw\",\n   \"@type\" : \"anything:Thing\",\n   \"knora-api:attachedToProject\" : {\n     \"@id\" : \"http://rdfh.ch/projects/0001\"\n   },\n   \"anything:hasInteger\" : {\n       \"@id\" : \"http://rdfh.ch/0001/oveR1dQltEUwNrls9Lu5Rw/values/IN4R19yYR0ygi3K2VEHpUQ\",\n       \"@type\" : \"knora-api:IntValue\",\n       \"knora-api:intValueAsInt\" : 10,\n       \"knora-api:valueHasUUID\" : \"IN4R19yYR0ygi3K2VEHpUQ\",\n       \"knora-api:creationDate\" : {\n               \"@type\" : \"xsd:dateTimeStamp\",\n               \"@value\" : \"2020-06-04T12:58:54.502951Z\"\n       }\n   },\n   \"rdfs:label\" : \"test thing with custom IRI\",\n   \"knora-api:creationDate\" : {\n     \"@type\" : \"xsd:dateTimeStamp\",\n     \"@value\" : \"2019-01-09T15:45:54.502951Z\"\n   },\n   \"@context\" : {\n     \"rdf\" : \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n     \"knora-api\" : \"http://api.knora.org/ontology/knora-api/v2#\",\n     \"rdfs\" : \"http://www.w3.org/2000/01/rdf-schema#\",\n     \"xsd\" : \"http://www.w3.org/2001/XMLSchema#\",\n     \"anything\" : \"http://0.0.0.0:3333/ontology/0001/anything/v2#\"\n  }\n}\n</code></pre> <p>The response is a JSON-LD document containing a preview of the resource.</p>"},{"location":"DSP-API/03-endpoints/api-v2/editing-resources/#modifying-a-resources-values","title":"Modifying a Resource's Values","text":"<p>See Creating and Editing Values.</p>"},{"location":"DSP-API/03-endpoints/api-v2/editing-resources/#modifying-a-resources-metadata","title":"Modifying a Resource's Metadata","text":"<p>You can modify the following metadata attached to a resource:</p> <ul> <li>label</li> <li>permissions</li> <li>last modification date</li> </ul> <p>To do this, use this route:</p> <pre><code>HTTP PUT to http://host/v2/resources\n</code></pre> <p>The request body is a JSON-LD object containing the following information about the resource:</p> <ul> <li><code>@id</code>: the resource's IRI</li> <li><code>@type</code>: the resource's class IRI</li> <li><code>knora-api:lastModificationDate</code>: an <code>xsd:dateTimeStamp</code> representing the last modification date that is currently   attached to the resource, if any. This is used to make sure that the resource has not been modified by someone else   since you last read it.</li> </ul> <p>The submitted JSON-LD object must also contain one or more of the following predicates, representing the metadata you want to change:</p> <ul> <li><code>rdfs:label</code>: a string</li> <li><code>knora-api:hasPermissions</code>, in the format described   in Permissions</li> <li><code>knora-api:newModificationDate</code>: an xsd:dateTimeStamp.</li> </ul> <p>Here is an example:</p> <pre><code>{\n  \"@id\" : \"http://rdfh.ch/0001/a-thing\",\n  \"@type\" : \"anything:Thing\",\n  \"rdfs:label\" : \"this is the new label\",\n  \"knora-api:hasPermissions\" : \"CR knora-admin:Creator|M knora-admin:ProjectMember|V knora-admin:ProjectMember\",\n  \"knora-api:lastModificationDate\" : {\n    \"@type\" : \"xsd:dateTimeStamp\",\n    \"@value\" : \"2017-11-20T15:55:17Z\"\n  },\n  \"knora-api:newModificationDate\" : {\n    \"@type\" : \"xsd:dateTimeStamp\",\n    \"@value\" : \"2018-12-21T16:56:18Z\"\n  },\n  \"@context\" : {\n    \"rdf\" : \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n    \"knora-api\" : \"http://api.knora.org/ontology/knora-api/v2#\",\n    \"rdfs\" : \"http://www.w3.org/2000/01/rdf-schema#\",\n    \"xsd\" : \"http://www.w3.org/2001/XMLSchema#\",\n    \"anything\" : \"http://0.0.0.0:3333/ontology/0001/anything/v2#\"\n  }\n}\n</code></pre> <p>If you submit a <code>knora-api:lastModificationDate</code> that is different from the resource's actual last modification date, you will get an HTTP 409 (Conflict) error.</p> <p>If you submit a <code>knora-api:newModificationDate</code> that is earlier than the resource's <code>knora-api:lastModificationDate</code>, you will get an HTTP 400 (Bad Request) error.</p> <p>A successful response is an HTTP 200 (OK) status containing the resource's metadata.</p>"},{"location":"DSP-API/03-endpoints/api-v2/editing-resources/#deleting-a-resource","title":"Deleting a Resource","text":"<p>Knora does not normally delete resources; instead, it marks them as deleted, which means that they do not appear in normal query results.</p> <p>To mark a resource as deleted, use this route:</p> <pre><code>HTTP POST to http://host/v2/resources/delete\n</code></pre> <p>The request body is a JSON-LD object containing the following information about the resource:</p> <ul> <li><code>@id</code>: the resource's IRI</li> <li><code>@type</code>: the resource's class IRI</li> <li><code>knora-api:lastModificationDate</code>: an <code>xsd:dateTimeStamp</code> representing the last modification date that is currently   attached to the resource, if any. This is used to make sure that the resource has not been modified by someone else   since you last read it.</li> </ul> <pre><code>{\n  \"@id\" : \"http://rdfh.ch/0001/a-thing\",\n  \"@type\" : \"anything:Thing\",\n  \"knora-api:lastModificationDate\" : {\n    \"@type\" : \"xsd:dateTimeStamp\",\n    \"@value\" : \"2019-02-05T17:05:35.776747Z\"\n  },\n  \"knora-api:deleteComment\" : \"This resource was created by mistake.\",\n  \"@context\" : {\n    \"rdf\" : \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n    \"knora-api\" : \"http://api.knora.org/ontology/knora-api/v2#\",\n    \"rdfs\" : \"http://www.w3.org/2000/01/rdf-schema#\",\n    \"xsd\" : \"http://www.w3.org/2001/XMLSchema#\",\n    \"anything\" : \"http://0.0.0.0:3333/ontology/0001/anything/v2#\"\n  }\n}\n</code></pre> <p>The optional property <code>knora-api:deleteComment</code> specifies a comment to be attached to the resource, explaining why it has been marked as deleted.</p> <p>The optional property <code>knora-api:deleteDate</code> (an xsd:dateTimeStamp) indicates when the resource was marked as deleted; if not given, the current time is used.</p> <p>The response is a JSON-LD document containing the predicate <code>knora-api:result</code> with a confirmation message.</p>"},{"location":"DSP-API/03-endpoints/api-v2/editing-resources/#requesting-deleted-resources","title":"Requesting Deleted Resources","text":"<p>Resources marked as deleted are not found in search queries. It is however possible to request them directly or from an ARK URL. In these instances, the API will not return the deleted resource, but instead a generic resource of type  <code>knora-base:DeletedResource</code>. This resource will be similar to the requested resource, having e.g. the same IRI. The resource will contain the deletion date and optionally the deletion comment.</p> <p>The response to requesting a deleted resource will look as the following example:</p> <pre><code>{\n    \"rdfs:label\": \"Deleted Resource\",\n    \"knora-api:versionArkUrl\": {\n        \"@value\": \"http://0.0.0.0:3336/ark:/72163/1/0001/a=thingO.20211214T084407677335Z\",\n        \"@type\": \"xsd:anyURI\"\n    },\n    \"knora-api:attachedToProject\": {\n        \"@id\": \"http://rdfh.ch/projects/0001\"\n    },\n    \"knora-api:userHasPermission\": \"CR\",\n    \"knora-api:attachedToUser\": {\n        \"@id\": \"http://rdfh.ch/users/9XBCrDV3SRa7kS1WwynB4Q\"\n    },\n    \"knora-api:hasPermissions\": \"CR knora-admin:ProjectMember|V knora-admin:ProjectMember\",\n    \"knora-api:isDeleted\": true,\n    \"@type\": \"knora-api:DeletedResource\",\n    \"@id\": \"http://rdfh.ch/0001/a-thing\",\n    \"knora-api:deleteComment\": \"This resource is too boring.\",\n    \"knora-api:arkUrl\": {\n        \"@value\": \"http://0.0.0.0:3336/ark:/72163/1/0001/a=thingO\",\n        \"@type\": \"xsd:anyURI\"\n    },\n    \"knora-api:creationDate\": {\n        \"@value\": \"2021-12-14T08:44:07.677335Z\",\n        \"@type\": \"xsd:dateTimeStamp\"\n    },\n    \"knora-api:deleteDate\": {\n        \"@type\": \"xsd:dateTimeStamp\",\n        \"@value\": \"2021-12-14T08:44:07.372543Z\"\n    },\n    \"@context\": {\n        \"rdf\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n        \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\n        \"xsd\": \"http://www.w3.org/2001/XMLSchema#\",\n        \"knora-api\": \"http://api.knora.org/ontology/knora-api/v2#\"\n    }\n}\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-v2/editing-resources/#links-to-deleted-resources","title":"Links to Deleted Resources","text":"<p>If resource <code>A</code> has a link to resource <code>B</code>, and resource <code>B</code> is later marked as deleted, <code>A</code>'s link will still exist. DSP-API v2 will still return the link when <code>A</code> is queried, but without any information about <code>B</code> (except for <code>B</code>'s IRI). If <code>A</code>'s link is necessary to meet the requirements of a cardinality, marking <code>B</code> as deleted will not violate the cardinality.</p> <p>The reason for this design is that <code>A</code> and <code>B</code> might be in different projects, and each project must retain control of its resources and be able to mark them as deleted, even if they are used by another project.</p>"},{"location":"DSP-API/03-endpoints/api-v2/editing-resources/#erasing-a-resource-from-the-triplestore","title":"Erasing a Resource from the Triplestore","text":"<p>Normally, resources are not actually removed from the triplestore; they are only marked as deleted (see Deleting a Resource). However, sometimes it is necessary to erase a resource from the triplestore. To do so, use this route:</p> <pre><code>HTTP POST to http://host/v2/resources/erase\n</code></pre> <p>The request body is the same as for Deleting a Resource, except that <code>knora-api:deleteComment</code> is not relevant and will be ignored.</p> <p>To do this, a user must be a system administrator or an administrator of the project containing the resource. The user's permissions on the resource are not otherwise checked.</p> <p>A resource cannot be erased if any other resource has a link to it. Any such links must first be changed or marked as deleted (see Updating a Value and Deleting a Value). Then, when the resource is erased, the deleted link values that referred to it will also be erased.</p> <p>This operation cannot be undone (except by restoring the repository from a backup), so use it with care.</p>"},{"location":"DSP-API/03-endpoints/api-v2/editing-values/","title":"Creating and Editing Values","text":""},{"location":"DSP-API/03-endpoints/api-v2/editing-values/#creating-and-editing-values","title":"Creating and Editing Values","text":""},{"location":"DSP-API/03-endpoints/api-v2/editing-values/#creating-a-value","title":"Creating a Value","text":"<p>To create a value in an existing resource, use this route:</p> <pre><code>HTTP POST to http://host/v2/values\n</code></pre> <p>The body of the request is a JSON-LD document in the complex API schema, specifying the resource's IRI and type, the resource property, and the content of the value. The representation of the value is the same as when it is returned in a <code>GET</code> request, except that its IRI and <code>knora-api:attachedToUser</code> are not given. For example, to create an integer value:</p> <pre><code>{\n  \"@id\": \"http://rdfh.ch/0001/a-thing\",\n  \"@type\": \"anything:Thing\",\n  \"anything:hasInteger\": {\n    \"@type\": \"knora-api:IntValue\",\n    \"knora-api:intValueAsInt\": 4\n  },\n  \"@context\": {\n    \"knora-api\": \"http://api.knora.org/ontology/knora-api/v2#\",\n    \"anything\": \"http://0.0.0.0:3333/ontology/0001/anything/v2#\"\n  }\n}\n</code></pre> <p>Each value can have a comment, given in <code>knora-api:valueHasComment</code>. For example:</p> <pre><code>{\n  \"@id\": \"http://rdfh.ch/0001/a-thing\",\n  \"@type\": \"anything:Thing\",\n  \"anything:hasInteger\": {\n    \"@type\": \"knora-api:IntValue\",\n    \"knora-api:intValueAsInt\": 4,\n    \"knora-api:valueHasComment\": \"This is a comment.\"\n  },\n  \"@context\": {\n    \"knora-api\": \"http://api.knora.org/ontology/knora-api/v2#\",\n    \"anything\": \"http://0.0.0.0:3333/ontology/0001/anything/v2#\"\n  }\n}\n</code></pre> <p>Permissions for the new value can be given by adding <code>knora-api:hasPermissions</code>. For example:</p> <pre><code>{\n  \"@id\": \"http://rdfh.ch/0001/a-thing\",\n  \"@type\": \"anything:Thing\",\n  \"anything:hasInteger\": {\n    \"@type\": \"knora-api:IntValue\",\n    \"knora-api:intValueAsInt\": 4,\n    \"knora-api:hasPermissions\": \"CR knora-admin:Creator|V http://rdfh.ch/groups/0001/thing-searcher\"\n  },\n  \"@context\": {\n    \"knora-api\": \"http://api.knora.org/ontology/knora-api/v2#\",\n    \"anything\": \"http://0.0.0.0:3333/ontology/0001/anything/v2#\"\n  }\n}\n</code></pre> <p>Each value can have an optional custom IRI (of Knora IRI form) specified by the <code>@id</code> attribute, a custom creation date specified by adding <code>knora-api:valueCreationDate</code> (an xsd:dateTimeStamp), or a custom UUID given by <code>knora-api:valueHasUUID</code>. Each custom UUID must be base64url-encoded, without padding. If a custom UUID is provided, it will be used in value IRI. If a custom IRI is given for the value, its UUID should match the given custom UUID. If a custom IRI is provided, but there is no custom UUID provided, then the UUID given in the IRI will be assigned to the <code>knora-api:valueHasUUID</code>. A custom value IRI must be the IRI of the containing resource, followed by a <code>/values/</code> and a custom ID string. For example:</p> <pre><code>{\n  \"@id\": \"http://rdfh.ch/0001/a-thing\",\n  \"@type\": \"anything:Thing\",\n  \"anything:hasInteger\": {\n    \"@id\": \"http://rdfh.ch/0001/a-thing/values/IN4R19yYR0ygi3K2VEHpUQ\",\n    \"@type\": \"knora-api:IntValue\",\n    \"knora-api:intValueAsInt\": 21,\n    \"knora-api:valueHasUUID\": \"IN4R19yYR0ygi3K2VEHpUQ\",\n    \"knora-api:valueCreationDate\": {\n      \"@type\": \"xsd:dateTimeStamp\",\n      \"@value\": \"2020-06-04T12:58:54.502951Z\"\n    }\n  },\n  \"@context\": {\n    \"knora-api\": \"http://api.knora.org/ontology/knora-api/v2#\",\n    \"anything\": \"http://0.0.0.0:3333/ontology/0001/anything/v2#\",\n    \"xsd\": \"http://www.w3.org/2001/XMLSchema#\"\n  }\n}\n</code></pre> <p>The format of the object of <code>knora-api:hasPermissions</code> is described in Permissions.</p> <p>If permissions are not given, configurable default permissions are used (see Default Object Access Permissions ).</p> <p>To create a value, the user must have modify permission on the containing resource.</p> <p>The response is a JSON-LD document containing:</p> <ul> <li><code>@id</code>: the IRI of the value that was created.</li> <li><code>@type</code>: the value's type.</li> <li><code>knora-api:valueHasUUID</code>, the value's UUID, which remains stable across value versions   (except for link values, as explained below).</li> </ul>"},{"location":"DSP-API/03-endpoints/api-v2/editing-values/#creating-a-link-between-resources","title":"Creating a Link Between Resources","text":"<p>To create a link, you must create a <code>knora-api:LinkValue</code>, which represents metadata about the link. The property that connects the resource to the <code>LinkValue</code> is a link value property, whose name is constructed by adding <code>Value</code> to the name of the link property (see Links Between Resources). The triple representing the direct link between the resources is created automatically. For example, if the link property that should connect the resources is <code>anything:hasOtherThing</code>, we can create a link like this:</p> <pre><code>{\n  \"@id\": \"http://rdfh.ch/0001/a-thing\",\n  \"@type\": \"anything:Thing\",\n  \"anything:hasOtherThingValue\": {\n    \"@type\": \"knora-api:LinkValue\",\n    \"knora-api:linkValueHasTargetIri\": {\n      \"@id\": \"http://rdfh.ch/0001/tPfZeNMvRVujCQqbIbvO0A\"\n    }\n  },\n  \"@context\": {\n    \"xsd\": \"http://www.w3.org/2001/XMLSchema#\",\n    \"knora-api\": \"http://api.knora.org/ontology/knora-api/v2#\",\n    \"anything\": \"http://0.0.0.0:3333/ontology/0001/anything/v2#\"\n  }\n}\n</code></pre> <p>As with ordinary values, permissions on links can be specified by adding <code>knora-api:hasPermissions</code>.</p> <p>The response is a JSON-LD document containing:</p> <ul> <li><code>@id</code>: the IRI of the value that was created.</li> <li><code>@type</code>: the value's type.</li> <li><code>knora-api:valueHasUUID</code>, the value's UUID, which remains stable across value versions, unless the link is changed to   point to a different resource, in which case it is considered a new link and gets a new UUID. Changing a link's   metadata, without changing its target, creates a new version of the link value with the same UUID.</li> </ul>"},{"location":"DSP-API/03-endpoints/api-v2/editing-values/#creating-a-text-value-without-standoff-markup","title":"Creating a Text Value Without Standoff Markup","text":"<p>Use the predicate <code>knora-api:valueAsString</code> of <code>knora-api:TextValue</code>:</p> <pre><code>{\n  \"@id\": \"http://rdfh.ch/0001/a-thing\",\n  \"@type\": \"anything:Thing\",\n  \"anything:hasText\": {\n    \"@type\": \"knora-api:TextValue\",\n    \"knora-api:valueAsString\": \"This is a text without markup.\"\n  },\n  \"@context\": {\n    \"knora-api\": \"http://api.knora.org/ontology/knora-api/v2#\",\n    \"anything\": \"http://0.0.0.0:3333/ontology/0001/anything/v2#\"\n  }\n}\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-v2/editing-values/#creating-a-text-value-with-standoff-markup","title":"Creating a Text Value with Standoff Markup","text":"<p>Currently, the only way to create a text value with standoff markup is to submit it in XML format using an XML-to-standoff mapping. See here for more detials.</p>"},{"location":"DSP-API/03-endpoints/api-v2/editing-values/#creating-a-text-value-with-standard-mapping","title":"Creating a Text Value with Standard Mapping","text":"<p>To create a value with the standard mapping (<code>http://rdfh.ch/standoff/mappings/StandardMapping</code>), we can make an XML document like this:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;text&gt;\n    This text links to another &lt;a class=\"salsah-link\" href=\"http://rdfh.ch/0001/another-thing\"&gt;resource&lt;/a&gt;.\n&lt;/text&gt;\n</code></pre> <p>This document can then be embedded in a JSON-LD request, using the predicate <code>knora-api:textValueAsXml</code>:</p> <pre><code>{\n  \"@id\": \"http://rdfh.ch/0001/a-thing\",\n  \"@type\": \"anything:Thing\",\n  \"anything:hasText\": {\n    \"@type\": \"knora-api:TextValue\",\n    \"knora-api:textValueAsXml\": \"&lt;?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?&gt;\\n&lt;text&gt;\\n   This text links to another &lt;a class=\\\"salsah-link\\\" href=\\\"http://rdfh.ch/0001/another-thing\\\"&gt;resource&lt;/a&gt;.\\n&lt;/text&gt;\",\n    \"knora-api:textValueHasMapping\": {\n      \"@id\": \"http://rdfh.ch/standoff/mappings/StandardMapping\"\n    }\n  },\n  \"@context\": {\n    \"knora-api\": \"http://api.knora.org/ontology/knora-api/v2#\",\n    \"anything\": \"http://0.0.0.0:3333/ontology/0001/anything/v2#\"\n  }\n}\n</code></pre> <p>Note that quotation marks and line breaks in the XML must be escaped, and that the IRI of the mapping must be provided.</p>"},{"location":"DSP-API/03-endpoints/api-v2/editing-values/#creating-a-text-value-with-a-custom-mapping","title":"Creating a Text Value with a Custom Mapping","text":"<p>To create a text value with custom mapping, the following steps are required:</p> <ol> <li>Optionally, an XSL transformation resource (<code>kb:XSLTransformation</code>) can be created that may be defined as the default    transformation of the mapping.</li> <li>The mapping resource (<code>kb:XMLToStandoffMapping</code>) must be created, if it does not already exist.</li> <li>The text value can be created as in the example above, using the mapping resource IRI in <code>kb:textValueHasMapping</code>.</li> </ol> <p>The <code>kb:XSLTransformation</code> resource is a subclass of <code>kb:TextRepresentation</code>, so it has a <code>kb:hasTextFileValue</code> pointing to a <code>kb:TextFileValue</code> which represents the XSLT file stored in SIPI. For more Details, see Creating File Values.</p> <p>The <code>kb:XMLToStandoffMapping</code> resource requires the mapping XML as specified here. If an XSL transformation has been defined, the IRI the transformation can be placed in the <code>&lt;defaultXSLTransformation&gt;</code> tag of the mapping XML.</p> <p>If a mapping has been defined, then requesting the text value will return both the <code>kb:textValueAsXml</code> and the <code>kb:textValueAsHtml</code> properties, where the XML can be used for editing the value, while the HTML can be used to display it. If no mapping has been defined, only <code>kb:textValueAsXml</code> can be returned.</p>"},{"location":"DSP-API/03-endpoints/api-v2/editing-values/#creating-file-values","title":"Creating File Values","text":"<p>Knora supports the storage of certain types of data as files, using Sipi (see FileValue). DSP-API v2 currently supports using Sipi to store the following types of files:</p> <ul> <li>Images: JPEG, JPEG2000, TIFF, or PNG which are stored internally as JPEG2000</li> <li>Documents: PDF</li> <li>Audio: MPEG or Waveform audio file format (.wav, .x-wav, .vnd.wave)</li> <li>Text files: CSV, ODD, RNG, TXT, XLS, XLSX, XML, XSD, XSL</li> <li>Video files: MP4</li> <li>Archive files: ZIP, TAR, GZIP</li> </ul> <p>Support for other types of files will be added in the future.</p> <p>The following sections describe the steps for creating a file value.</p> <p>Files can be ingested into DSP using SIPI or DSP-INGEST (experimental).</p>"},{"location":"DSP-API/03-endpoints/api-v2/editing-values/#upload-files-to-sipi","title":"Upload Files to Sipi","text":"<p>The first step is to upload one or more files to Sipi, using a <code>multipart/form-data</code> request, where <code>sipihost</code> represents the host and port on which Sipi is running:</p> <pre><code>HTTP POST to http://sipihost/upload?token=TOKEN\n</code></pre> <p>The <code>token</code> parameter must provide the JSON Web Token that Knora returned when the client logged in. Each body part in the request must contain a parameter <code>filename</code>, providing the file's original filename, which both Knora and Sipi will store; these filenames can be descriptive and need not be unique.</p> <p>Sipi stores the file in a temporary location. If the file is an image, it is converted first to JPEG2000 format, and the converted file is stored.</p> <p>Sipi then returns a JSON response that looks something like this:</p> <pre><code>{\n  \"uploadedFiles\": [\n    {\n      \"originalFilename\": \"manuscript-1234-page-1.tiff\",\n      \"internalFilename\": \"3UIsXH9bP0j-BV0D4sN51Xz.jp2\",\n      \"temporaryBaseIIIFUrl\": \"http://sipihost/tmp\"\n    },\n    {\n      \"originalFilename\": \"manuscript-1234-page-2.tiff\",\n      \"internalFilename\": \"2RvJgguglpe-B45EOk0Gx8H.jp2\",\n      \"temporaryBaseIIIFUrl\": \"http://sipihost/tmp\"\n    }\n  ]\n}\n</code></pre> <p>In this example, we uploaded two files to Sipi, so <code>uploadedFiles</code> is an array with two elements. For each file, we have:</p> <ul> <li>the <code>originalFilename</code>, which we submitted when uploading the file</li> <li>the unique <code>internalFilename</code> that Sipi has randomly generated for the file</li> <li>the <code>temporaryBaseIIIFUrl</code>, which we can use to construct a IIIF URL for previewing the file</li> </ul> <p>In the case of an image file, the client may now wish to get a thumbnail of each uploaded image, to allow the user to confirm that the correct files have been uploaded. This can be done by adding IIIF parameters to <code>temporaryBaseIIIFUrl</code>. For example, to get a JPG thumbnail image that is 150 pixels wide, you would add <code>/full/150,/0/default.jpg</code>.</p>"},{"location":"DSP-API/03-endpoints/api-v2/editing-values/#upload-files-to-dsp-ingest","title":"Upload Files to DSP-INGEST","text":"<p>Support for DSP-INGEST is in its early stage and currently mainly intended for ingesting large amounts of data. When a file has been ingested through DSP-INGEST, it is necessary to send the header <code>X-Asset-Ingested</code> along with the request to create the file value resource in DSP-API.</p>"},{"location":"DSP-API/03-endpoints/api-v2/editing-values/#submit-a-file-value-to-knora","title":"Submit A File Value to Knora","text":"<p>A Knora <code>Representation</code> (i.e. a resource containing information about a file) must always have exactly one file value attached to it. (see Representations). Therefore, a request to create a new file value must always be submitted as part of a request to create a new resource (see Creating a Resource). You can also update a file value in an existing <code>Representation</code>; see Updating a Value.</p> <p>Instead of providing the file's complete metadata to Knora, you just provide the unique internal filename generated by Sipi. Here is an example of a request to create a resource of class <code>anything:ThingPicture</code>, which is a subclass of <code>knora-api:StillImageRepresentation</code> and therefore has the property <code>knora-api:hasStillImageFileValue</code>:</p> <pre><code>{\n  \"@type\": \"anything:ThingPicture\",\n  \"knora-api:hasStillImageFileValue\": {\n    \"@type\": \"knora-api:StillImageFileValue\",\n    \"knora-api:fileValueHasFilename\": \"3UIsXH9bP0j-BV0D4sN51Xz.jp2\"\n  },\n  \"knora-api:attachedToProject\": {\n    \"@id\": \"http://rdfh.ch/projects/0001\"\n  },\n  \"rdfs:label\": \"test thing\",\n  \"@context\": {\n    \"rdf\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n    \"knora-api\": \"http://api.knora.org/ontology/knora-api/v2#\",\n    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\n    \"xsd\": \"http://www.w3.org/2001/XMLSchema#\",\n    \"anything\": \"http://0.0.0.0:3333/ontology/0001/anything/v2#\"\n  }\n}\n</code></pre> <p>Knora then gets the rest of the file's metadata from Sipi. If the client's request to Knora is valid, Knora saves the file value in the triplestore and instructs Sipi to move the file to permanent storage. Otherwise, the temporary file that was stored by Sipi is deleted.</p> <p>If you're submitting a PDF document, use the resource class <code>knora-api:DocumentRepresentation</code>, which has the property <code>knora-api:hasDocumentFileValue</code>, pointing to a <code>knora-api:DocumentFileValue</code>.</p> <p>For a text file, use <code>knora-api:TextRepresentation</code>, which has the property <code>knora-api:hasTextFileValue</code>, pointing to a <code>knora-api:TextFileValue</code>.</p> <p>For an archive like zip, use <code>knora-api:ArchiveRepresentation</code>, which has the property <code>knora-api:hasArchiveFileValue</code>, pointing to a <code>knora-api:ArchiveFileValue</code>.</p>"},{"location":"DSP-API/03-endpoints/api-v2/editing-values/#updating-a-value","title":"Updating a Value","text":"<p>To update a value, use this route:</p> <pre><code>HTTP PUT to http://host/v2/values\n</code></pre> <p>Updating a value means creating a new version of an existing value. The new version will have a different IRI. The request is the same as for creating a value, except that the <code>@id</code> of the current value version is given. For example, to update an integer value:</p> <pre><code>{\n  \"@id\": \"http://rdfh.ch/0001/a-thing\",\n  \"@type\": \"anything:Thing\",\n  \"anything:hasInteger\": {\n    \"@id\": \"http://rdfh.ch/0001/a-thing/values/vp96riPIRnmQcbMhgpv_Rg\",\n    \"@type\": \"knora-api:IntValue\",\n    \"knora-api:intValueAsInt\": 5\n  },\n  \"@context\": {\n    \"knora-api\": \"http://api.knora.org/ontology/knora-api/v2#\",\n    \"anything\": \"http://0.0.0.0:3333/ontology/0001/anything/v2#\"\n  }\n}\n</code></pre> <p>The value can be given a comment by using <code>knora-api:valueHasComment</code>. To change only the comment of a value, you can resubmit the existing value with the updated comment.</p> <p>Permissions can be specified by adding <code>knora-api:hasPermissions</code>. Otherwise, the new version has the same permissions as the previous one. To change the permissions on a value, the user must have change rights permission on the value.</p> <p>To update only the permissions on a value, submit it with the new permissions and with its <code>@id</code> and <code>@type</code> but without any other content, like this:</p> <pre><code>{\n  \"@id\": \"http://rdfh.ch/0001/a-thing\",\n  \"@type\": \"anything:Thing\",\n  \"anything:hasInteger\": {\n    \"@id\": \"http://rdfh.ch/0001/a-thing/values/vp96riPIRnmQcbMhgpv_Rg\",\n    \"@type\": \"knora-api:IntValue\",\n    \"knora-api:hasPermissions\": \"CR knora-admin:Creator|V knora-admin:KnownUser\"\n  },\n  \"@context\": {\n    \"knora-api\": \"http://api.knora.org/ontology/knora-api/v2#\",\n    \"anything\": \"http://0.0.0.0:3333/ontology/0001/anything/v2#\"\n  }\n}\n</code></pre> <p>To update a link, the user must have modify permission on the containing resource as well as on the value.</p> <p>To update a value and give it a custom timestamp, add <code>knora-api:valueCreationDate</code> (an xsd:dateTimeStamp).</p> <p>To update a value and give the new version a custom IRI, add <code>knora-api:newValueVersionIri</code>, like this:</p> <pre><code>{\n  \"@id\": \"http://rdfh.ch/0001/a-thing\",\n  \"@type\": \"anything:Thing\",\n  \"anything:hasInteger\": {\n    \"@id\": \"http://rdfh.ch/0001/a-thing/values/vp96riPIRnmQcbMhgpv_Rg\",\n    \"@type\": \"knora-api:IntValue\",\n    \"knora-api:intValueAsInt\": 21,\n    \"knora-api:newValueVersionIri\": {\n      \"@id\": \"http://rdfh.ch/0001/a-thing/values/int-value-IRI\"\n    }\n  },\n  \"@context\": {\n    \"knora-api\": \"http://api.knora.org/ontology/knora-api/v2#\",\n    \"anything\": \"http://0.0.0.0:3333/ontology/0001/anything/v2#\"\n  }\n}\n</code></pre> <p>A custom value IRI must be the IRI of the containing resource, followed by a <code>/values/</code> and a custom ID string.</p> <p>The response is a JSON-LD document containing only <code>@id</code> and <code>@type</code>, returning the IRI and type of the new value version.</p> <p>If you submit an outdated value ID in a request to update a value, the response will be an HTTP 404 (Not Found) error.</p> <p>The response to a value update request contains:</p> <ul> <li><code>@id</code>: the IRI of the value that was created.</li> <li><code>@type</code>: the value's type.</li> <li><code>knora-api:valueHasUUID</code>, the value's UUID, which remains stable across value versions, unless the value is a link   value and is changed to point to a different resource, in which case it is considered a new link and gets a new UUID.</li> </ul>"},{"location":"DSP-API/03-endpoints/api-v2/editing-values/#deleting-a-value","title":"Deleting a Value","text":"<p>Knora does not normally delete values; instead, it marks them as deleted, which means that they do not appear in normal query results.</p> <p>To mark a value as deleted, use this route:</p> <pre><code>HTTP POST to http://host/v2/values/delete\n</code></pre> <p>The request must include the resource's ID and type, the property that points from the resource to the value, and the value's ID and type. For example:</p> <pre><code>{\n  \"@id\": \"http://rdfh.ch/0001/a-thing\",\n  \"@type\": \"anything:Thing\",\n  \"anything:hasInteger\": {\n    \"@id\": \"http://rdfh.ch/0001/a-thing/values/vp96riPIRnmQcbMhgpv_Rg\",\n    \"@type\": \"knora-api:IntValue\",\n    \"knora-api:deleteComment\": \"This value was created by mistake.\"\n  },\n  \"@context\": {\n    \"knora-api\": \"http://api.knora.org/ontology/knora-api/v2#\",\n    \"anything\": \"http://0.0.0.0:3333/ontology/0001/anything/v2#\"\n  }\n}\n</code></pre> <p>The optional property <code>knora-api:deleteComment</code> specifies a comment to be attached to the value, explaining why it has been marked as deleted</p> <p>The optional property <code>knora-api:deleteDate</code> (an xsd:dateTimeStamp) specifies a custom timestamp indicating when the value was deleted. If not specified, the current time is used.</p> <p>The response is a JSON-LD document containing the predicate <code>knora-api:result</code> with a confirmation message.</p>"},{"location":"DSP-API/03-endpoints/api-v2/editing-values/#requesting-deleted-values","title":"Requesting Deleted Values","text":"<p>Values marked as deleted are not found in search queries. But when requesting a resource that has deleted values, these will show up as generic <code>knora-api:DeletedValue</code> values. This value will be similar to the deleted value, having e.g. the same IRI. The <code>DeletedValue</code> will contain the deletion date and optionally the deletion comment.</p> <p>The response to requesting a deleted resource will look as the following example:</p> <pre><code>{\n  \"knora-api:DeletedValue\": [\n    {\n      \"knora-api:versionArkUrl\": {\n        \"@value\": \"http://0.0.0.0:3336/ark:/72163/1/0001/a=thingO/sWSymIzAS_qXqyHLhwbwwAU.20211216T18193124797Z\",\n        \"@type\": \"xsd:anyURI\"\n      },\n      \"knora-api:userHasPermission\": \"RV\",\n      \"knora-api:valueCreationDate\": {\n        \"@value\": \"2021-12-16T18:19:31.247970Z\",\n        \"@type\": \"xsd:dateTimeStamp\"\n      },\n      \"knora-api:deleteDate\": {\n        \"@type\": \"xsd:dateTimeStamp\",\n        \"@value\": \"2021-12-16T18:20:02.550828Z\"\n      },\n      \"knora-api:attachedToUser\": {\n        \"@id\": \"http://rdfh.ch/users/9XBCrDV3SRa7kS1WwynB4Q\"\n      },\n      \"knora-api:valueHasUUID\": \"sWSymIzAS_qXqyHLhwbwwA\",\n      \"knora-api:hasPermissions\": \"CR knora-admin:Creator|M knora-admin:ProjectMember|V knora-admin:KnownUser|RV knora-admin:UnknownUser\",\n      \"knora-api:isDeleted\": true,\n      \"@type\": \"knora-api:DeletedValue\",\n      \"http://www.knora.org/ontology/knora-base#DeletedValue\": \"DeletedValue\",\n      \"@id\": \"http://rdfh.ch/0001/a-thing/values/DrXts3Up3DijGriI403nhg\",\n      \"knora-api:deleteComment\": \"This value is obsolete\",\n      \"knora-api:arkUrl\": {\n        \"@value\": \"http://0.0.0.0:3336/ark:/72163/1/0001/a=thingO/sWSymIzAS_qXqyHLhwbwwAU\",\n        \"@type\": \"xsd:anyURI\"\n      }\n    },\n    {}\n  ]\n}\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-v2/getting-lists/","title":"Getting Lists","text":""},{"location":"DSP-API/03-endpoints/api-v2/getting-lists/#getting-lists","title":"Getting Lists","text":""},{"location":"DSP-API/03-endpoints/api-v2/getting-lists/#getting-a-complete-list","title":"Getting a complete List","text":"<p>In order to request a complete list, make a HTTP GET request to the <code>lists</code> route,  appending the Iri of the list's root node (URL-encoded):</p> <pre><code>HTTP GET to http://host/v2/lists/listRootNodeIri\n</code></pre> <p>Lists are only returned in the complex schema.  The response to a list request is a <code>List</code> (see interface <code>List</code> in module <code>ListResponse</code>). </p>"},{"location":"DSP-API/03-endpoints/api-v2/getting-lists/#getting-a-single-node","title":"Getting a single Node","text":"<p>In order to request a single node of a list, make a HTTP GET request to the <code>node</code> route,  appending the node's Iri (URL-encoded):</p> <pre><code>HTTP GET to http://host/v2/node/nodeIri\n</code></pre> <p>Nodes are only returned in the complex schema.  The response to a node request is a <code>ListNode</code> (see interface <code>List</code> in module <code>ListResponse</code>).</p>"},{"location":"DSP-API/03-endpoints/api-v2/introduction/","title":"Introduction","text":""},{"location":"DSP-API/03-endpoints/api-v2/introduction/#introduction-using-api-v2","title":"Introduction: Using API v2","text":""},{"location":"DSP-API/03-endpoints/api-v2/introduction/#api-v2-path-segment","title":"API v2 Path Segment","text":"<p>Every request to API v2 includes <code>v2</code> as a path segment, e.g. <code>http://host/v2/resources/http%3A%2F%2Frdfh.ch%2Fc5058f3a</code>. Accordingly, requests using any other version of the API will require another path segment.</p>"},{"location":"DSP-API/03-endpoints/api-v2/introduction/#response-formats","title":"Response Formats","text":"<p>All API v2 responses can be returned in JSON-LD, Turtle, or RDF/XML, using HTTP content negotiation. The client can request these formats using the following MIME types:</p> Format MIME Type JSON-LD <code>application/ld+json</code> Turtle <code>text/turtle</code> RDF/XML <code>application/rdf+xml</code>"},{"location":"DSP-API/03-endpoints/api-v2/introduction/#json-ld","title":"JSON-LD","text":"<p>Our preferred format for data exchange is JSON-LD. JSON-LD allows the DSP-API server to provide responses that are relatively easy for automated processes to interpret, since their structure and semantics is explicitly defined. For example, each user-created Knora resource property is identified by an IRI, which can be dereferenced to get more information about it (e.g. its label in different languages). Moreover, each value has a type represented by an IRI. These are either standard RDF types (e.g. XSD datatypes) or more complex types whose IRIs can be dereferenced to get more information about their structure.</p> <p>At the same time, JSON-LD responses are relatively easy for software developers to work with, and are more concise and easier to read than the equivalent XML. Items in a response can have human-readable names, which can nevertheless be expanded to full IRIs. Also, while a format such as Turtle just provides a set of RDF triples, an equivalent JSON-LD response can explicitly provide data in a hierarchical structure, with objects nested inside other objects.</p>"},{"location":"DSP-API/03-endpoints/api-v2/introduction/#hierarchical-vs-flat-json-ld","title":"Hierarchical vs. Flat JSON-LD","text":"<p>The client can choose between hierarchical and flat JSON-LD. In hierarchical JSON-LD, entities with IRIs are inlined (nested) where they are used. If the same entity is used in more than one place, it is inlined only once, and other uses just refer to its IRI. In Knora's flat JSON-LD, all entities with IRIs are located at the top level of the document (in a <code>@graph</code> if there is more than one of them). This setting does not affect blank nodes, which are always inlined (unlike in standard flat JSON-LD). DSP ontologies are always returned in the <code>flat</code> rendering; other kinds of responses default to <code>hierarchical</code>. To use this setting, submit the HTTP header <code>X-Knora-JSON-LD-Rendering</code> with the value <code>hierarchical</code> or <code>flat</code>.</p>"},{"location":"DSP-API/03-endpoints/api-v2/introduction/#knora-iris","title":"Knora IRIs","text":"<p>Resources and entities are identified by IRIs. The format of these IRIs is explained in Knora IRIs.</p>"},{"location":"DSP-API/03-endpoints/api-v2/introduction/#api-schema","title":"API Schema","text":"<p>DSP-API v2 uses RDF data structures that are simpler than the ones actually stored in the triplestore, and more suitable for the development of client software. Thus we refer to the internal schema of data as it is stored in the triplestore, and to external schemas which are used to represent that data in API v2.</p> <p>DSP-API v2 offers a complex schema and a simple one. The main difference is that the complex schema exposes the complexity of value objects, while the simple version does not. A client that needs to edit values must use the complex schema in order to obtain the IRI of each value. A client that reads but does not update data can use the simplified schema. The simple schema is mainly intended to facilitate interoperability with other RDF-based systems in the context of Linked Open Data. It is therefore designed to use the simplest possible datatypes and to require minimal knowledge of Knora.</p> <p>In either case, the client deals only with data whose structure and semantics are defined by external DSP-API ontologies, which are distinct from the internal ontologies that are used to store date in the triplestore. The Knora API server automatically converts back and forth between these internal and external representations. This approach encapsulates the internals and adds a layer of abstraction to them.</p> <p>IRIs representing ontologies and ontology entities are different in different schemas; see Knora IRIs.</p> <p>Some API operations inherently require the client to accept responses in the complex schema. For example, if an ontology is requested using an IRI indicating the simple schema, the ontology will be returned in the simple schema (see Querying, Creating, and Updating Ontologies).</p> <p>Other API operations can return data in either schema. In this case, the complex schema is used by default in the response, unless the request specifically asks for the simple schema. The client can specify the desired schema by using an HTTP header or a URL parameter:</p> <ul> <li>the HTTP header <code>X-Knora-Accept-Schema</code></li> <li>the URL parameter <code>schema</code></li> </ul> <p>Both the HTTP header and the URL parameter accept the values <code>simple</code> or <code>complex</code>.</p>"},{"location":"DSP-API/03-endpoints/api-v2/knora-iris/","title":"IRIs","text":""},{"location":"DSP-API/03-endpoints/api-v2/knora-iris/#knora-iris","title":"Knora IRIs","text":"<p>The IRIs used in Knora repositories and in the DSP-API v2 follow certain conventions.</p>"},{"location":"DSP-API/03-endpoints/api-v2/knora-iris/#project-short-codes","title":"Project Short-Codes","text":"<p>A project short-code is a hexadecimal number of at least four digits, assigned by the DaSCH to uniquely identify a Knora project regardless of where it is hosted. The IRIs of ontologies that are built into Knora do not contain shortcodes; these ontologies implicitly belong to the Knora system project.</p> <p>A user-created ontology IRI must always include its project shortcode.</p> <p>Project ID <code>0000</code> is reserved for shared ontologies (see Shared Ontologies).</p> <p>The range of project IDs from <code>0001</code> to <code>00FF</code> inclusive is reserved for local testing. Thus, the first useful project will be <code>0100</code>.</p> <p>In the beginning, Unil will use the IDs <code>0100</code> to <code>07FF</code>, and Unibas <code>0800</code> to <code>08FF</code>.</p>"},{"location":"DSP-API/03-endpoints/api-v2/knora-iris/#iris-for-ontologies-and-ontology-entities","title":"IRIs for Ontologies and Ontology Entities","text":""},{"location":"DSP-API/03-endpoints/api-v2/knora-iris/#internal-ontology-iris","title":"Internal Ontology IRIs","text":"<p>Knora makes a distinction between internal and external ontologies. Internal ontologies are used in the triplestore, while external ontologies are used in API v2. For each internal ontology, there is a corresponding external ontology. Some internal ontologies are built into Knora, while others are user-created. Knora automatically generates external ontologies based on user-created internal ontologies.</p> <p>Each internal ontology has an IRI, which is also the IRI of the named graph that contains the ontology in the triplestore. An internal ontology IRI has the form:</p> <pre><code>http://www.knora.org/ontology/PROJECT_SHORTCODE/ONTOLOGY_NAME\n</code></pre> <p>For example, the internal ontology IRI based on project code <code>0001</code> and ontology name <code>example</code> would be:</p> <pre><code>http://www.knora.org/ontology/0001/example\n</code></pre> <p>An ontology name must be a valid XML NCName and must be URL safe. The following names are reserved for built-in internal DSP ontologies:</p> <ul> <li><code>knora-base</code></li> <li><code>standoff</code></li> <li><code>salsah-gui</code></li> </ul> <p>Names starting with <code>knora</code> are reserved for future built-in Knora ontologies. A user-created ontology name may not start with the letter <code>v</code> followed by a digit, and may not contain these reserved words:</p> <ul> <li><code>knora</code></li> <li><code>ontology</code></li> <li><code>simple</code></li> <li><code>shared</code></li> </ul>"},{"location":"DSP-API/03-endpoints/api-v2/knora-iris/#external-ontology-iris","title":"External Ontology IRIs","text":"<p>Unlike internal ontology IRIs, external ontology IRIs are meant to be dereferenced as URLs. When an ontology IRI is dereferenced, the ontology itself can be served either in a machine-readable format or as human-readable documentation.</p> <p>The IRI of an external Knora ontology has the form:</p> <pre><code>http://HOST[:PORT]/ontology/PROJECT_SHORTCODE/ONTOLOGY_NAME/API_VERSION\n</code></pre> <p>For built-in and shared ontologies, the host is always <code>api.knora.org</code>. Otherwise, the hostname and port configured in <code>application.conf</code> under <code>app.http.knora-api.host</code> and <code>app.http.knora-api.http-port</code> are used (the port is omitted if it is 80).</p> <p>This means that when a built-in or shared external ontology IRI is dereferenced, the ontology can be served by a DSP-API server running at <code>api.knora.org</code>. When the external IRI of a non-shared, project-specific ontology is dereferenced, the ontology can be served by Knora that hosts the project. During development and testing, this could be <code>localhost</code>.</p> <p>The name of an external ontology is the same as the name of the corresponding internal ontology, with one exception: the external form of <code>knora-base</code> is called <code>knora-api</code>.</p> <p>The API version identifier indicates not only the version of the API, but also an API 'schema'. The DSP-API v2 is available in two schemas:</p> <ul> <li>A complex schema, which is suitable both for reading and for editing   data. The complex schema represents values primarily as complex   objects. Its version identifier is <code>v2</code>.</li> <li>A simple schema, which is suitable for reading data but not for   editing it. The simple schema facilitates interoperability between   DSP ontologies and non-DSP ontologies, since it represents   values primarily as literals. Its version identifier is <code>simple/v2</code>.</li> </ul> <p>Other schemas could be added in the future for more specific use cases.</p> <p>When requesting an ontology, the client requests a particular schema. (This will also be true of most DSP-API v2 requests: the client will be able to specify which schema the response should be provided in.)</p> <p>For example, suppose a DSP-API server is running at <code>knora.example.org</code> and hosts an ontology whose internal IRI is <code>http://www.knora.org/ontology/0001/example</code>. That ontology can then be requested using either of these IRIs:</p> <ul> <li><code>http://knora.example.org/ontology/0001/example/v2</code> (in the complex schema)</li> <li><code>http://knora.example.org/ontology/0001/example/simple/v2</code> (in the simple schema)</li> </ul> <p>While the internal <code>example</code> ontology refers to definitions in <code>knora-base</code>, the external <code>example</code> ontology that is served by the API refers instead to a <code>knora-api</code> ontology, whose IRI depends on the schema being used:</p> <ul> <li><code>http://api.knora.org/ontology/knora-api/v2</code> (in the complex schema)</li> <li><code>http://api.knora.org/ontology/knora-api/simple/v2</code> (in the simple schema)</li> </ul>"},{"location":"DSP-API/03-endpoints/api-v2/knora-iris/#ontology-entity-iris","title":"Ontology Entity IRIs","text":"<p>DSP ontologies use 'hash namespaces' (see URI Namespaces). This means that the IRI of an ontology entity (a class or property definition) is constructed by adding a hash character (<code>#</code>) to the ontology IRI, followed by the name of the entity. In Knora, an entity name must be a valid XML NCName. Thus, if there is a class called <code>ExampleThing</code> in an ontology whose internal IRI is <code>http://www.knora.org/ontology/0001/example</code>, that class has the following IRIs:</p> <ul> <li><code>http://www.knora.org/ontology/0001/example#ExampleThing</code> (in the internal ontology)</li> <li><code>http://HOST[:PORT]/ontology/0001/example/v2#ExampleThing</code> (in the API v2 complex schema)</li> <li><code>http://HOST[:PORT]/ontology/0001/example/simple/v2#ExampleThing</code> (in the API v2 simple schema)</li> </ul>"},{"location":"DSP-API/03-endpoints/api-v2/knora-iris/#shared-ontology-iris","title":"Shared Ontology IRIs","text":"<p>As explained in Shared Ontologies, a user-created ontology can be defined as shared, meaning that it can be used by multiple projects, and that its creators will not change it in ways that could affect other ontologies or data that are based on it.</p> <p>There is currently one project for shared ontologies:</p> <pre><code>http://www.knora.org/ontology/knora-base#DefaultSharedOntologiesProject\n</code></pre> <p>Its project code is <code>0000</code>. Additional projects for shared ontologies may be supported in future.</p> <p>The internal and external IRIs of shared ontologies always use the hostname <code>api.knora.org</code>, and have an additional segment, <code>shared</code>, after <code>ontology</code>. The project code can be omitted, in which case the default shared ontology project, <code>0000</code>, is assumed. The sample shared ontology, <code>example-box</code>, has these IRIs:</p> <ul> <li><code>http://www.knora.org/ontology/shared/example-box</code> (internal)</li> <li><code>http://api.knora.org/ontology/shared/example-box/v2</code> (external, complex schema)</li> <li><code>http://api.knora.org/ontology/shared/example-box/simple/v2</code> (external, simple schema)</li> </ul>"},{"location":"DSP-API/03-endpoints/api-v2/knora-iris/#iris-for-data","title":"IRIs for Data","text":"<p>Knora generates IRIs for data that it creates in the triplestore. Each generated data IRI contains one or more UUID identifiers to make it unique. To keep data IRIs relatively short, each UUID is base64url-encoded, without padding; thus each UUID is a 22-character string. DSP-API supports UUID version 4 or 5.</p> <p>Data IRIs are not currently intended to be dereferenced as URLs. Instead, each Knora resource has a separate permalink.</p> <p>A Knora value does not have a stable IRI throughout its version history. Each time a new version of a value is made, the new version gets a new IRI. Therefore, it would not make sense to publish Knora value IRIs. When designing ontologies for Knora projects, keep in mind that if you want something be directly citable, it needs to be a resource, not a value.</p> <p>The formats of generated data IRIs for different types of objects are as follows:</p> <ul> <li>Resource: <code>http://rdfh.ch/PROJECT_SHORTCODE/RESOURCE_UUID</code>.</li> <li>Value:   <code>http://rdfh.ch/PROJECT_SHORTCODE/RESOURCE_UUID/values/VALUE_UUID</code></li> <li>Standoff tag:   <code>http://rdfh.ch/PROJECT_SHORTCODE/RESOURCE_UUID/values/VALUE_UUID/STANDOFF_UUID</code></li> <li>XML-to-standoff mapping:   <code>http://rdfh.ch/projects/PROJECT_SHORTCODE/mappings/MAPPING_NAME</code></li> <li>XML-to-standoff mapping element:   <code>http://rdfh.ch/projects/PROJECT_SHORTCODE/mappings/MAPPING_NAME/elements/MAPPING_ELEMENT_UUID</code></li> <li>Project: <code>http://rdfh.ch/projects/PROJECT_UUID</code></li> <li>Group: <code>http://rdfh.ch/groups/PROJECT_SHORTCODE/GROUP_UUID</code></li> <li>Permission:   <code>http://rdfh.ch/permissions/PROJECT_SHORTCODE/PERMISSION_UUID</code></li> <li>Lists: <code>http://rdfh.ch/lists/PROJECT_SHORTCODE/LIST_UUID</code></li> <li>User: <code>http://rdfh.ch/users/USER_UUID</code></li> </ul>"},{"location":"DSP-API/03-endpoints/api-v2/ontology-information/","title":"Querying, Creating, and Updating Ontologies","text":""},{"location":"DSP-API/03-endpoints/api-v2/ontology-information/#querying-creating-and-updating-ontologies","title":"Querying, Creating, and Updating Ontologies","text":""},{"location":"DSP-API/03-endpoints/api-v2/ontology-information/#querying-ontology-information","title":"Querying Ontology Information","text":"<p>Before reading this document, you should have a basic understanding of DSP-API v2 external ontology schemas (see API Schema).</p> <p>Each request returns a single RDF graph, which can be represented in JSON-LD, Turtle, or RDF/XML, using HTTP content negotiation (see Response Formats).</p> <p>The response format uses prefixes to shorten IRIs, making them more human-readable. A client may wish to convert these to full IRIs for processing. This can be done with responses in JSON-LD by using a library that implements the JSON-LD API to compact the document with an empty JSON-LD <code>@context</code>.</p>"},{"location":"DSP-API/03-endpoints/api-v2/ontology-information/#querying-ontology-metadata","title":"Querying Ontology Metadata","text":"<p>Requests for ontology metadata can return information about more than one ontology, unlike other requests for ontology information. To get metadata about all ontologies:</p> <pre><code>HTTP GET to http://host/v2/ontologies/metadata\n</code></pre> <p>If you submit a project IRI in the <code>X-Knora-Accept-Project</code> header, only the ontologies for that project will be returned.</p> <p>The response is in the complex API v2 schema. Sample response:</p> <pre><code>{\n  \"@graph\": [\n    {\n      \"knora-api:lastModificationDate\": {\n        \"@value\": \"2017-12-19T15:23:42.166Z\",\n        \"@type\": \"xsd:dateTimeStamp\"\n      },\n      \"rdfs:label\": \"The anything ontology\",\n      \"knora-api:attachedToProject\": {\n        \"@id\": \"http://rdfh.ch/projects/0001\"\n      },\n      \"@type\": \"owl:Ontology\",\n      \"@id\": \"http://0.0.0.0:3333/ontology/0001/anything/v2\"\n    },\n    {\n      \"knora-api:lastModificationDate\": {\n        \"@value\": \"2022-03-23T07:14:17.445208Z\",\n        \"@type\": \"xsd:dateTimeStamp\"\n      },\n      \"rdfs:label\": \"The something ontology\",\n      \"knora-api:attachedToProject\": {\n        \"@id\": \"http://rdfh.ch/projects/0001\"\n      },\n      \"@type\": \"owl:Ontology\",\n      \"@id\": \"http://0.0.0.0:3333/ontology/0001/something/v2\"\n    },\n    {\n      \"knora-api:lastModificationDate\": {\n        \"@value\": \"2022-03-23T07:14:17.445208Z\",\n        \"@type\": \"xsd:dateTimeStamp\"\n      },\n      \"rdfs:label\": \"The images demo ontology\",\n      \"knora-api:attachedToProject\": {\n        \"@id\": \"http://rdfh.ch/projects/00FF\" \n      },\n      \"@type\": \"owl:Ontology\",\n      \"@id\": \"http://0.0.0.0:3333/ontology/00FF/images/v2\"\n    },\n    {\n      \"knora-api:lastModificationDate\": {\n        \"@value\": \"2022-03-23T07:14:17.445208Z\",\n        \"@type\": \"xsd:dateTimeStamp\"\n      },\n      \"rdfs:label\": \"The BEOL ontology\",\n      \"knora-api:attachedToProject\": {\n        \"@id\": \"http://rdfh.ch/projects/yTerZGyxjZVqFMNNKXCDPF\"\n      },\n      \"@type\": \"owl:Ontology\",\n      \"@id\": \"http://0.0.0.0:3333/ontology/0801/beol/v2\"\n    },\n    {\n      \"knora-api:lastModificationDate\": {\n        \"@value\": \"2022-03-23T07:14:17.445208Z\",\n        \"@type\": \"xsd:dateTimeStamp\"\n      },\n      \"rdfs:label\": \"The Biblio ontology\",\n      \"knora-api:attachedToProject\": {\n        \"@id\": \"http://rdfh.ch/projects/yTerZGyxjZVqFMNNKXCDPF\"\n      },\n      \"@type\": \"owl:Ontology\",\n      \"@id\": \"http://0.0.0.0:3333/ontology/0801/biblio/v2\"\n    },\n    {\n      \"knora-api:lastModificationDate\": {\n        \"@value\": \"2022-03-23T07:14:17.445208Z\",\n        \"@type\": \"xsd:dateTimeStamp\"\n      },\n      \"rdfs:label\": \"The Newton-Project ontology\",\n      \"knora-api:attachedToProject\": {\n        \"@id\": \"http://rdfh.ch/projects/yTerZGyxjZVqFMNNKXCDPF\"\n      },\n      \"@type\": \"owl:Ontology\",\n      \"@id\": \"http://0.0.0.0:3333/ontology/0801/newton/v2\"\n    },\n    {\n      \"knora-api:lastModificationDate\": {\n        \"@value\": \"2022-03-23T07:14:17.445208Z\",\n        \"@type\": \"xsd:dateTimeStamp\"\n      },\n      \"rdfs:label\": \"The incunabula ontology\",\n      \"knora-api:attachedToProject\": {\n        \"@id\": \"http://rdfh.ch/projects/0803\"\n      },\n      \"@type\": \"owl:Ontology\",\n      \"@id\": \"http://0.0.0.0:3333/ontology/0803/incunabula/v2\"\n    },\n    {\n      \"knora-api:lastModificationDate\": {\n        \"@value\": \"2022-03-23T07:14:17.445208Z\",\n        \"@type\": \"xsd:dateTimeStamp\"\n      },\n      \"rdfs:label\": \"The dokubib ontology\",\n      \"knora-api:attachedToProject\": {\n        \"@id\": \"http://rdfh.ch/projects/0804\"\n      },\n      \"@type\": \"owl:Ontology\",\n      \"@id\": \"http://0.0.0.0:3333/ontology/0804/dokubib/v2\"\n    },\n    {\n      \"knora-api:lastModificationDate\": {\n        \"@value\": \"2022-03-23T07:14:17.445208Z\",\n        \"@type\": \"xsd:dateTimeStamp\"\n      },\n      \"rdfs:label\": \"The Anton Webern project ontology\",\n      \"knora-api:attachedToProject\": {\n        \"@id\": \"http://rdfh.ch/projects/08AE\"\n      },\n      \"@type\": \"owl:Ontology\",\n      \"@id\": \"http://0.0.0.0:3333/ontology/08AE/webern/v2\"\n    },\n    {\n      \"rdfs:label\": \"The Knora admin ontology\",\n      \"knora-api:attachedToProject\": {\n        \"@id\": \"http://www.knora.org/ontology/knora-admin#SystemProject\"\n      },\n      \"knora-api:isBuiltIn\": true,\n      \"@type\": \"owl:Ontology\",\n      \"@id\": \"http://api.knora.org/ontology/knora-admin/v2\"\n    },\n    {\n      \"rdfs:label\": \"The knora-api ontology in the complex schema\",\n      \"knora-api:attachedToProject\": {\n        \"@id\": \"http://www.knora.org/ontology/knora-admin#SystemProject\"\n      },\n      \"knora-api:isBuiltIn\": true,\n      \"@type\": \"owl:Ontology\",\n      \"@id\": \"http://api.knora.org/ontology/knora-api/v2\"\n    },\n    {\n      \"rdfs:label\": \"The salsah-gui ontology\",\n      \"knora-api:attachedToProject\": {\n        \"@id\": \"http://www.knora.org/ontology/knora-admin#SystemProject\"\n      },\n      \"knora-api:isBuiltIn\": true,\n      \"@type\": \"owl:Ontology\",\n      \"@id\": \"http://api.knora.org/ontology/salsah-gui/v2\"\n    },\n    {\n      \"rdfs:label\": \"The standoff ontology\",\n      \"knora-api:attachedToProject\": {\n        \"@id\": \"http://www.knora.org/ontology/knora-admin#SystemProject\"\n      },\n      \"knora-api:isBuiltIn\": true,\n      \"@type\": \"owl:Ontology\",\n      \"@id\": \"http://api.knora.org/ontology/standoff/v2\"\n    }\n  ],\n  \"@context\": {\n    \"knora-api\": \"http://api.knora.org/ontology/knora-api/v2#\",\n    \"xsd\": \"http://www.w3.org/2001/XMLSchema#\",\n    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\n    \"owl\": \"http://www.w3.org/2002/07/owl#\"\n  }\n}\n</code></pre> <p>To get metadata about the ontologies that belong to one or more particular projects:</p> <pre><code>HTTP GET to http://host/v2/ontologies/metadata/PROJECT_IRI[/PROJECT_IRI...]\n</code></pre> <p>The project IRIs must be URL-encoded.</p> <p>Example response for the <code>anything</code> test project (project IRI <code>http://rdfh.ch/projects/0001</code>):</p> <pre><code>{\n  \"@id\" : \"http://0.0.0.0:3333/ontology/0001/anything/v2\",\n  \"@type\" : \"owl:Ontology\",\n  \"knora-api:attachedToProject\" : {\n    \"@id\" : \"http://rdfh.ch/projects/0001\"\n  },\n  \"knora-api:lastModificationDate\": \"2017-12-19T15:23:42.166Z\",\n  \"rdfs:label\" : \"The anything ontology\",\n  \"@context\" : {\n    \"knora-api\" : \"http://api.knora.org/ontology/knora-api/v2#\",\n    \"rdfs\" : \"http://www.w3.org/2000/01/rdf-schema#\",\n    \"owl\" : \"http://www.w3.org/2002/07/owl#\"\n  }\n}\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-v2/ontology-information/#querying-an-ontology","title":"Querying an Ontology","text":"<p>An ontology can be queried either by using an API route directly or by simply dereferencing the ontology IRI. The API route is as follows:</p> <pre><code>HTTP GET to http://host/v2/ontologies/allentities/ONTOLOGY_IRI\n</code></pre> <p>The ontology IRI must be URL-encoded, and may be in either the complex or the simple schema. The response will be in the same schema. For example, if the server is running on <code>0.0.0.0:3333</code>, you can request the <code>knora-api</code> ontology in the complex schema as follows:</p> <pre><code>HTTP GET to http://0.0.0.0:3333/v2/ontologies/allentities/http%3A%2F%2Fapi.knora.org%2Fontology%2Fknora-api%2Fv2\n</code></pre> <p>By default, this returns the ontology in JSON-LD; to request Turtle or RDF/XML, add an HTTP <code>Accept</code> header (see Response Formats).</p> <p>If the client dereferences a project-specific ontology IRI as a URL, the DSP-API server running on the hostname in the IRI will serve the ontology. For example, if the server is running on <code>0.0.0.0:3333</code>, the IRI <code>http://0.0.0.0:3333/ontology/00FF/images/simple/v2</code> can be dereferenced to request the <code>images</code> sample ontology in the simple schema.</p> <p>If the client dereferences a built-in Knora ontology, such as <code>http://api.knora.org/ontology/knora-api/simple/v2</code>, there must be a DSP-API server running at <code>api.knora.org</code> that can serve the ontology. The DaSCH intends to run such as server. For testing, you can configure your local <code>/etc/hosts</code> file to resolve <code>api.knora.org</code> as <code>localhost</code>.</p>"},{"location":"DSP-API/03-endpoints/api-v2/ontology-information/#differences-between-internal-and-external-ontologies","title":"Differences Between Internal and External Ontologies","text":"<p>The external ontologies used by DSP-API v2 are different to the internal ontologies that are actually stored in the triplestore (see API Schema). In general, the external ontologies use simpler data structures, but they also provide additional information to make it easier for clients to use them. This is illustrated in the examples in the next sections.</p> <p>The internal predicates <code>knora-base:subjectClassConstraint</code> and <code>knora-base:objectClassConstraint</code> (see Constraints on the Types of Property Subjects and Objects) are represented as <code>knora-api:subjectType</code> and <code>knora-api:objectType</code> in external ontologies.</p>"},{"location":"DSP-API/03-endpoints/api-v2/ontology-information/#json-ld-representation-of-an-ontology-in-the-simple-schema","title":"JSON-LD Representation of an Ontology in the Simple Schema","text":"<p>The simple schema is suitable for client applications that need to read but not update data in Knora. For example, here is the response for the <code>images</code> sample ontology in the simple schema, <code>http://0.0.0.0:3333/ontology/00FF/images/simple/v2</code> (simplified for clarity):</p> <pre><code>{\n  \"@id\" : \"http://0.0.0.0:3333/ontology/00FF/images/simple/v2\",\n  \"@type\" : \"owl:Ontology\",\n  \"rdfs:label\" : \"The images demo ontology\",\n  \"@graph\" : [ {\n    \"@id\" : \"images:bild\",\n    \"@type\" : \"owl:Class\",\n    \"knora-api:resourceIcon\" : \"bild.png\",\n    \"rdfs:comment\" : \"An image of the demo image collection\",\n    \"rdfs:label\" : \"Image\",\n    \"rdfs:subClassOf\" : [ {\n      \"@id\" : \"knora-api:StillImageRepresentation\"\n    }, {\n      \"@type\" : \"owl:Restriction\",\n      \"owl:cardinality\" : 1,\n      \"owl:onProperty\" : {\n        \"@id\" : \"knora-api:creationDate\"\n      }\n    }, {\n      \"@type\" : \"owl:Restriction\",\n      \"owl:minCardinality\" : 0,\n      \"owl:onProperty\" : {\n        \"@id\" : \"knora-api:hasIncomingLink\"\n      }\n    }, {\n      \"@type\" : \"owl:Restriction\",\n      \"owl:minCardinality\" : 0,\n      \"owl:onProperty\" : {\n        \"@id\" : \"knora-api:hasStandoffLinkTo\"\n      }\n    }, {\n      \"@type\" : \"owl:Restriction\",\n      \"owl:minCardinality\" : 1,\n      \"owl:onProperty\" : {\n        \"@id\" : \"knora-api:hasStillImageFile\"\n      }\n    }, {\n      \"@type\" : \"owl:Restriction\",\n      \"owl:maxCardinality\" : 1,\n      \"owl:onProperty\" : {\n        \"@id\" : \"knora-api:lastModificationDate\"\n      }\n    }, {\n      \"@type\" : \"owl:Restriction\",\n      \"owl:cardinality\" : 1,\n      \"owl:onProperty\" : {\n        \"@id\" : \"rdfs:label\"\n      }\n    }, {\n      \"@type\" : \"owl:Restriction\",\n      \"owl:cardinality\" : 1,\n      \"owl:onProperty\" : {\n        \"@id\" : \"images:description\"\n      }\n    }, {\n      \"@type\" : \"owl:Restriction\",\n      \"owl:cardinality\" : 1,\n      \"owl:onProperty\" : {\n        \"@id\" : \"images:erfassungsdatum\"\n      }\n    }, {\n      \"@type\" : \"owl:Restriction\",\n      \"owl:maxCardinality\" : 1,\n      \"owl:onProperty\" : {\n        \"@id\" : \"images:urheber\"\n      }\n    } ]\n  }, {\n    \"@id\" : \"images:description\",\n    \"@type\" : \"owl:DatatypeProperty\",\n    \"knora-api:objectType\" : {\n      \"@id\" : \"xsd:string\"\n    },\n    \"knora-api:subjectType\" : {\n      \"@id\" : \"images:bild\"\n    },\n    \"rdfs:label\" : \"Description\",\n    \"rdfs:subPropertyOf\" : [ {\n      \"@id\" : \"knora-api:hasValue\"\n    }, {\n      \"@id\" : \"http://purl.org/dc/terms/description\"\n    } ]\n  }, {\n    \"@id\" : \"images:erfassungsdatum\",\n    \"@type\" : \"owl:DatatypeProperty\",\n    \"knora-api:objectType\" : {\n      \"@id\" : \"knora-api:Date\"\n    },\n    \"knora-api:subjectType\" : {\n      \"@id\" : \"images:bild\"\n    },\n    \"rdfs:label\" : \"Date of acquisition\",\n    \"rdfs:subPropertyOf\" : [ {\n      \"@id\" : \"knora-api:hasValue\"\n    }, {\n      \"@id\" : \"http://purl.org/dc/terms/date\"\n    } ]\n  }, {\n    \"@id\" : \"images:firstname\",\n    \"@type\" : \"owl:DatatypeProperty\",\n    \"knora-api:objectType\" : {\n      \"@id\" : \"xsd:string\"\n    },\n    \"knora-api:subjectType\" : {\n      \"@id\" : \"images:person\"\n    },\n    \"rdfs:comment\" : \"First name of a person\",\n    \"rdfs:label\" : \"First name\",\n    \"rdfs:subPropertyOf\" : {\n      \"@id\" : \"knora-api:hasValue\"\n    }\n  }, {\n    \"@id\" : \"images:lastname\",\n    \"@type\" : \"owl:DatatypeProperty\",\n    \"knora-api:objectType\" : {\n      \"@id\" : \"xsd:string\"\n    },\n    \"knora-api:subjectType\" : {\n      \"@id\" : \"images:person\"\n    },\n    \"rdfs:comment\" : \"Last name of a person\",\n    \"rdfs:label\" : \"Name\",\n    \"rdfs:subPropertyOf\" : {\n      \"@id\" : \"knora-api:hasValue\"\n    }\n  }, {\n    \"@id\" : \"images:person\",\n    \"@type\" : \"owl:Class\",\n    \"knora-api:resourceIcon\" : \"person.png\",\n    \"rdfs:comment\" : \"Person\",\n    \"rdfs:label\" : \"Person\",\n    \"rdfs:subClassOf\" : [ {\n      \"@id\" : \"knora-api:Resource\"\n    }, {\n      \"@type\" : \"owl:Restriction\",\n      \"owl:cardinality\" : 1,\n      \"owl:onProperty\" : {\n        \"@id\" : \"knora-api:creationDate\"\n      }\n    }, {\n      \"@type\" : \"owl:Restriction\",\n      \"owl:minCardinality\" : 0,\n      \"owl:onProperty\" : {\n        \"@id\" : \"knora-api:hasIncomingLink\"\n      }\n    }, {\n      \"@type\" : \"owl:Restriction\",\n      \"owl:minCardinality\" : 0,\n      \"owl:onProperty\" : {\n        \"@id\" : \"knora-api:hasStandoffLinkTo\"\n      }\n    }, {\n      \"@type\" : \"owl:Restriction\",\n      \"owl:maxCardinality\" : 1,\n      \"owl:onProperty\" : {\n        \"@id\" : \"knora-api:lastModificationDate\"\n      }\n    }, {\n      \"@type\" : \"owl:Restriction\",\n      \"owl:cardinality\" : 1,\n      \"owl:onProperty\" : {\n        \"@id\" : \"rdfs:label\"\n      }\n    }, {\n      \"@type\" : \"owl:Restriction\",\n      \"owl:cardinality\" : 1,\n      \"owl:onProperty\" : {\n        \"@id\" : \"images:lastname\"\n      }\n    }, {\n      \"@type\" : \"owl:Restriction\",\n      \"owl:cardinality\" : 1,\n      \"owl:onProperty\" : {\n        \"@id\" : \"images:firstname\"\n      }\n    } ]\n  }, {\n    \"@id\" : \"images:urheber\",\n    \"@type\" : \"owl:ObjectProperty\",\n    \"knora-api:objectType\" : {\n      \"@id\" : \"images:person\"\n    },\n    \"knora-api:subjectType\" : {\n      \"@id\" : \"images:bild\"\n    },\n    \"rdfs:comment\" : \"An entity primarily responsible for making the resource. Examples of a Creator include a person, an organization, or a service. Typically, the name of a Creator should be used to indicate the entity.\",\n    \"rdfs:label\" : \"Creator\",\n    \"rdfs:subPropertyOf\" : {\n      \"@id\" : \"knora-api:hasLinkTo\"\n    }\n  } ],\n  \"@context\" : {\n    \"rdf\" : \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n    \"images\" : \"http://0.0.0.0:3333/ontology/00FF/images/simple/v2#\",\n    \"knora-api\" : \"http://api.knora.org/ontology/knora-api/simple/v2#\",\n    \"owl\" : \"http://www.w3.org/2002/07/owl#\",\n    \"rdfs\" : \"http://www.w3.org/2000/01/rdf-schema#\",\n    \"xsd\" : \"http://www.w3.org/2001/XMLSchema#\"\n  }\n}\n</code></pre> <p>The response format is an RDF graph. The top level object describes the ontology itself, providing its IRI (in the <code>@id</code> member) and its <code>rdfs:label</code>. The <code>@graph</code> member (see Named Graphs in the JSON-LD specification) contains an array of entities that belong to the ontology.</p> <p>In a class definition, cardinalities for properties of the class are represented as in OWL, using objects of type <code>owl:Restriction</code>. The supported cardinalities are the ones indicated in OWL Cardinalities.</p> <p>The class definitions include cardinalities that are directly defined on each class, as well as cardinalities inherited from base classes. For example, we can see cardinalities inherited from <code>knora-api:Resource</code>, such as <code>knora-api:hasStandoffLinkTo</code> and <code>http://schema.org/name</code> (which represents <code>rdfs:label</code>).</p> <p>In the simple schema, Knora value properties can be datatype properties. The <code>knora-base:objectType</code> of a Knora value property such as <code>images:description</code> is a literal datatype, in this case <code>xsd:string</code>. Moreover, <code>images:description</code> is a subproperty of the standard property <code>dcterms:description</code>, whose object can be a literal value. A client that understands <code>rdfs:subPropertyOf</code>, and is familiar with <code>dcterms:description</code>, can then work with <code>images:description</code> on the basis of its knowledge about <code>dcterms:description</code>.</p> <p>By default, values for <code>rdfs:label</code> and <code>rdfs:comment</code> are returned only in the user's preferred language, or in the system default language. To obtain these values in all available languages, add the URL parameter <code>?allLanguages=true</code>. For example, with this parameter, the definition of <code>images:description</code> becomes:</p> <pre><code>{\n  \"@id\" : \"images:description\",\n  \"@type\" : \"owl:DatatypeProperty\",\n  \"knora-api:objectType\" : {\n    \"@id\" : \"xsd:string\"\n  },\n  \"knora-api:subjectType\" : {\n    \"@id\" : \"images:bild\"\n  },\n  \"rdfs:label\" : [ {\n    \"@language\" : \"en\",\n    \"@value\" : \"Description\"\n  }, {\n    \"@language\" : \"de\",\n    \"@value\" : \"Beschreibung\"\n  }, {\n    \"@language\" : \"fr\",\n    \"@value\" : \"Description\"\n  }, {\n    \"@language\" : \"it\",\n    \"@value\" : \"Descrizione\"\n  } ],\n  \"rdfs:subPropertyOf\" : [ {\n    \"@id\" : \"knora-api:hasValue\"\n  }, {\n    \"@id\" : \"http://purl.org/dc/terms/description\"\n  } ]\n}\n</code></pre> <p>To find out more about the <code>knora-api</code> entities used in the response, the client can request the <code>knora-api</code> ontology in the simple schema: <code>http://api.knora.org/ontology/knora-api/simple/v2</code>. For example, <code>images:erfassungsdatum</code> has a <code>knora-api:objectType</code> of <code>knora-api:Date</code>, which is a subtype of <code>xsd:string</code> with a Knora-specific, human-readable format. In the <code>knora-api</code> simple ontology, there is a definition of this type:</p> <pre><code>{\n  \"@id\" : \"http://api.knora.org/ontology/knora-api/simple/v2\",\n  \"@type\" : \"owl:Ontology\",\n  \"rdfs:label\" : \"The knora-api ontology in the simple schema\",\n  \"@graph\" : [ {\n    \"@id\" : \"knora-api:Date\",\n    \"@type\" : \"rdfs:Datatype\",\n    \"rdfs:comment\" : \"Represents a date as a period with different possible precisions.\",\n    \"rdfs:label\" : \"Date literal\",\n    \"rdfs:subClassOf\" : {\n      \"@type\" : \"rdfs:Datatype\",\n      \"owl:onDatatype\" : {\n        \"@id\" : \"xsd:string\"\n      },\n      \"owl:withRestrictions\" : {\n        \"xsd:pattern\" : \"(GREGORIAN|JULIAN|ISLAMIC):\\\\d{1,4}(-\\\\d{1,2}(-\\\\d{1,2})?)?( BC| AD| BCE| CE)?(:\\\\d{1,4}(-\\\\d{1,2}(-\\\\d{1,2})?)?( BC| AD| BCE| CE)?)?\"\n      }\n    }\n  } ],\n  \"@context\" : {\n    \"rdf\" : \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n    \"knora-api\" : \"http://api.knora.org/ontology/knora-api/simple/v2#\",\n    \"owl\" : \"http://www.w3.org/2002/07/owl#\",\n    \"rdfs\" : \"http://www.w3.org/2000/01/rdf-schema#\",\n    \"xsd\" : \"http://www.w3.org/2001/XMLSchema#\"\n  }\n}\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-v2/ontology-information/#json-ld-representation-of-an-ontology-in-the-complex-schema","title":"JSON-LD Representation of an Ontology in the Complex Schema","text":"<p>The complex schema is suitable for client applications that need to update data in Knora. For example, here is the response for the <code>images</code> sample ontology in the complex schema, <code>http://0.0.0.0:3333/ontology/00FF/images/v2</code> (simplified for clarity):</p> <pre><code>{\n  \"@id\" : \"http://0.0.0.0:3333/ontology/00FF/images/v2\",\n  \"@type\" : \"owl:Ontology\",\n  \"knora-api:attachedToProject\" : {\n    \"@id\" : \"http://rdfh.ch/projects/00FF\"\n  },\n  \"rdfs:label\" : \"The images demo ontology\",\n  \"@graph\" : [ {\n    \"@id\" : \"images:bild\",\n    \"@type\" : \"owl:Class\",\n    \"knora-api:canBeInstantiated\" : true,\n    \"knora-api:isResourceClass\" : true,\n    \"knora-api:resourceIcon\" : \"bild.png\",\n    \"rdfs:comment\" : \"An image of the demo image collection\",\n    \"rdfs:label\" : \"Image\",\n    \"rdfs:subClassOf\" : [ {\n      \"@id\" : \"knora-api:StillImageRepresentation\"\n    }, {\n      \"@type\" : \"owl:Restriction\",\n      \"knora-api:isInherited\" : true,\n      \"owl:cardinality\" : 1,\n      \"owl:onProperty\" : {\n        \"@id\" : \"knora-api:attachedToProject\"\n      }\n    }, {\n      \"@type\" : \"owl:Restriction\",\n      \"knora-api:isInherited\" : true,\n      \"owl:cardinality\" : 1,\n      \"owl:onProperty\" : {\n        \"@id\" : \"knora-api:attachedToUser\"\n      }\n    }, {\n      \"@type\" : \"owl:Restriction\",\n      \"knora-api:isInherited\" : true,\n      \"owl:cardinality\" : 1,\n      \"owl:onProperty\" : {\n        \"@id\" : \"knora-api:creationDate\"\n      }\n    }, {\n      \"@type\" : \"owl:Restriction\",\n      \"knora-api:isInherited\" : true,\n      \"owl:minCardinality\" : 0,\n      \"owl:onProperty\" : {\n        \"@id\" : \"knora-api:hasIncomingLink\"\n      }\n    }, {\n      \"@type\" : \"owl:Restriction\",\n      \"knora-api:isInherited\" : true,\n      \"owl:cardinality\" : 1,\n      \"owl:onProperty\" : {\n        \"@id\" : \"knora-api:hasPermissions\"\n      }\n    }, {\n      \"@type\" : \"owl:Restriction\",\n      \"knora-api:isInherited\" : true,\n      \"owl:minCardinality\" : 0,\n      \"owl:onProperty\" : {\n        \"@id\" : \"knora-api:hasStandoffLinkTo\"\n      }\n    }, {\n      \"@type\" : \"owl:Restriction\",\n      \"knora-api:isInherited\" : true,\n      \"owl:minCardinality\" : 0,\n      \"owl:onProperty\" : {\n        \"@id\" : \"knora-api:hasStandoffLinkToValue\"\n      }\n    }, {\n      \"@type\" : \"owl:Restriction\",\n      \"knora-api:isInherited\" : true,\n      \"owl:minCardinality\" : 1,\n      \"owl:onProperty\" : {\n        \"@id\" : \"knora-api:hasStillImageFileValue\"\n      }\n    }, {\n      \"@type\" : \"owl:Restriction\",\n      \"knora-api:isInherited\" : true,\n      \"owl:maxCardinality\" : 1,\n      \"owl:onProperty\" : {\n        \"@id\" : \"knora-api:lastModificationDate\"\n      }\n    }, {\n      \"@type\" : \"owl:Restriction\",\n      \"knora-api:isInherited\" : true,\n      \"owl:cardinality\" : 1,\n      \"owl:onProperty\" : {\n        \"@id\" : \"rdfs:label\"\n      }\n    }, {\n      \"@type\" : \"owl:Restriction\",\n      \"salsah-gui:guiOrder\" : 3,\n      \"owl:cardinality\" : 1,\n      \"owl:onProperty\" : {\n        \"@id\" : \"images:description\"\n      }\n    }, {\n      \"@type\" : \"owl:Restriction\",\n      \"salsah-gui:guiOrder\" : 8,\n      \"owl:cardinality\" : 1,\n      \"owl:onProperty\" : {\n        \"@id\" : \"images:erfassungsdatum\"\n      }\n    }, {\n      \"@type\" : \"owl:Restriction\",\n      \"salsah-gui:guiOrder\" : 12,\n      \"owl:maxCardinality\" : 1,\n      \"owl:onProperty\" : {\n        \"@id\" : \"images:urheber\"\n      }\n    }, {\n      \"@type\" : \"owl:Restriction\",\n      \"salsah-gui:guiOrder\" : 12,\n      \"owl:maxCardinality\" : 1,\n      \"owl:onProperty\" : {\n        \"@id\" : \"images:urheberValue\"\n      }\n    } ]\n  }, {\n    \"@id\" : \"images:description\",\n    \"@type\" : \"owl:ObjectProperty\",\n    \"knora-api:isEditable\" : true,\n    \"knora-api:isResourceProperty\" : true,\n    \"knora-api:objectType\" : {\n      \"@id\" : \"knora-api:TextValue\"\n    },\n    \"knora-api:subjectType\" : {\n      \"@id\" : \"images:bild\"\n    },\n    \"salsah-gui:guiAttribute\" : [ \"rows=10\", \"width=95%\", \"wrap=soft\" ],\n    \"salsah-gui:guiElement\" : {\n      \"@id\" : \"salsah-gui:Textarea\"\n    },\n    \"rdfs:label\" : \"Description\",\n    \"rdfs:subPropertyOf\" : [ {\n      \"@id\" : \"knora-api:hasValue\"\n    }, {\n      \"@id\" : \"http://purl.org/dc/terms/description\"\n    } ]\n  }, {\n    \"@id\" : \"images:erfassungsdatum\",\n    \"@type\" : \"owl:ObjectProperty\",\n    \"knora-api:isEditable\" : true,\n    \"knora-api:isResourceProperty\" : true,\n    \"knora-api:objectType\" : {\n      \"@id\" : \"knora-api:DateValue\"\n    },\n    \"knora-api:subjectType\" : {\n      \"@id\" : \"images:bild\"\n    },\n    \"salsah-gui:guiElement\" : {\n      \"@id\" : \"salsah-gui:Date\"\n    },\n    \"rdfs:label\" : \"Date of acquisition\",\n    \"rdfs:subPropertyOf\" : [ {\n      \"@id\" : \"knora-api:hasValue\"\n    }, {\n      \"@id\" : \"http://purl.org/dc/terms/date\"\n    } ]\n  }, {\n    \"@id\" : \"images:firstname\",\n    \"@type\" : \"owl:ObjectProperty\",\n    \"knora-api:isEditable\" : true,\n    \"knora-api:isResourceProperty\" : true,\n    \"knora-api:objectType\" : {\n      \"@id\" : \"knora-api:TextValue\"\n    },\n    \"knora-api:subjectType\" : {\n      \"@id\" : \"images:person\"\n    },\n    \"salsah-gui:guiAttribute\" : [ \"maxlength=32\", \"size=32\" ],\n    \"salsah-gui:guiElement\" : {\n      \"@id\" : \"salsah-gui:SimpleText\"\n    },\n    \"rdfs:comment\" : \"First name of a person\",\n    \"rdfs:label\" : \"First name\",\n    \"rdfs:subPropertyOf\" : {\n      \"@id\" : \"knora-api:hasValue\"\n    }\n  }, {\n    \"@id\" : \"images:lastname\",\n    \"@type\" : \"owl:ObjectProperty\",\n    \"knora-api:isEditable\" : true,\n    \"knora-api:isResourceProperty\" : true,\n    \"knora-api:objectType\" : {\n      \"@id\" : \"knora-api:TextValue\"\n    },\n    \"knora-api:subjectType\" : {\n      \"@id\" : \"images:person\"\n    },\n    \"salsah-gui:guiAttribute\" : [ \"maxlength=32\", \"size=32\" ],\n    \"salsah-gui:guiElement\" : {\n      \"@id\" : \"salsah-gui:SimpleText\"\n    },\n    \"rdfs:comment\" : \"Last name of a person\",\n    \"rdfs:label\" : \"Name\",\n    \"rdfs:subPropertyOf\" : {\n      \"@id\" : \"knora-api:hasValue\"\n    }\n  }, {\n    \"@id\" : \"images:person\",\n    \"@type\" : \"owl:Class\",\n    \"knora-api:canBeInstantiated\" : true,\n    \"knora-api:isResourceClass\" : true,\n    \"knora-api:resourceIcon\" : \"person.png\",\n    \"rdfs:comment\" : \"Person\",\n    \"rdfs:label\" : \"Person\",\n    \"rdfs:subClassOf\" : [ {\n      \"@id\" : \"knora-api:Resource\"\n    }, {\n      \"@type\" : \"owl:Restriction\",\n      \"knora-api:isInherited\" : true,\n      \"owl:cardinality\" : 1,\n      \"owl:onProperty\" : {\n        \"@id\" : \"knora-api:attachedToProject\"\n      }\n    }, {\n      \"@type\" : \"owl:Restriction\",\n      \"knora-api:isInherited\" : true,\n      \"owl:cardinality\" : 1,\n      \"owl:onProperty\" : {\n        \"@id\" : \"knora-api:attachedToUser\"\n      }\n    }, {\n      \"@type\" : \"owl:Restriction\",\n      \"knora-api:isInherited\" : true,\n      \"owl:cardinality\" : 1,\n      \"owl:onProperty\" : {\n        \"@id\" : \"knora-api:creationDate\"\n      }\n    }, {\n      \"@type\" : \"owl:Restriction\",\n      \"knora-api:isInherited\" : true,\n      \"owl:minCardinality\" : 0,\n      \"owl:onProperty\" : {\n        \"@id\" : \"knora-api:hasIncomingLink\"\n      }\n    }, {\n      \"@type\" : \"owl:Restriction\",\n      \"knora-api:isInherited\" : true,\n      \"owl:cardinality\" : 1,\n      \"owl:onProperty\" : {\n        \"@id\" : \"knora-api:hasPermissions\"\n      }\n    }, {\n      \"@type\" : \"owl:Restriction\",\n      \"knora-api:isInherited\" : true,\n      \"owl:minCardinality\" : 0,\n      \"owl:onProperty\" : {\n        \"@id\" : \"knora-api:hasStandoffLinkTo\"\n      }\n    }, {\n      \"@type\" : \"owl:Restriction\",\n      \"knora-api:isInherited\" : true,\n      \"owl:minCardinality\" : 0,\n      \"owl:onProperty\" : {\n        \"@id\" : \"knora-api:hasStandoffLinkToValue\"\n      }\n    }, {\n      \"@type\" : \"owl:Restriction\",\n      \"knora-api:isInherited\" : true,\n      \"owl:maxCardinality\" : 1,\n      \"owl:onProperty\" : {\n        \"@id\" : \"knora-api:lastModificationDate\"\n      }\n    }, {\n      \"@type\" : \"owl:Restriction\",\n      \"knora-api:isInherited\" : true,\n      \"owl:cardinality\" : 1,\n      \"owl:onProperty\" : {\n        \"@id\" : \"rdfs:label\"\n      }\n    }, {\n      \"@type\" : \"owl:Restriction\",\n      \"salsah-gui:guiOrder\" : 0,\n      \"owl:cardinality\" : 1,\n      \"owl:onProperty\" : {\n        \"@id\" : \"images:lastname\"\n      }\n    }, {\n      \"@type\" : \"owl:Restriction\",\n      \"salsah-gui:guiOrder\" : 1,\n      \"owl:cardinality\" : 1,\n      \"owl:onProperty\" : {\n        \"@id\" : \"images:firstname\"\n      }\n    } ]\n  }, {\n    \"@id\" : \"images:urheber\",\n    \"@type\" : \"owl:ObjectProperty\",\n    \"knora-api:isEditable\" : true,\n    \"knora-api:isLinkProperty\" : true,\n    \"knora-api:isResourceProperty\" : true,\n    \"knora-api:objectType\" : {\n      \"@id\" : \"images:person\"\n    },\n    \"knora-api:subjectType\" : {\n      \"@id\" : \"images:bild\"\n    },\n    \"salsah-gui:guiAttribute\" : \"numprops=2\",\n    \"salsah-gui:guiElement\" : {\n      \"@id\" : \"salsah-gui:Searchbox\"\n    },\n    \"rdfs:comment\" : \"An entity primarily responsible for making the resource. Examples of a Creator include a person, an organization, or a service. Typically, the name of a Creator should be used to indicate the entity.\",\n    \"rdfs:label\" : \"Creator\",\n    \"rdfs:subPropertyOf\" : {\n      \"@id\" : \"knora-api:hasLinkTo\"\n    }\n  }, {\n    \"@id\" : \"images:urheberValue\",\n    \"@type\" : \"owl:ObjectProperty\",\n    \"knora-api:isEditable\" : true,\n    \"knora-api:isLinkValueProperty\" : true,\n    \"knora-api:isResourceProperty\" : true,\n    \"knora-api:objectType\" : {\n      \"@id\" : \"knora-api:LinkValue\"\n    },\n    \"knora-api:subjectType\" : {\n      \"@id\" : \"images:bild\"\n    },\n    \"salsah-gui:guiAttribute\" : \"numprops=2\",\n    \"salsah-gui:guiElement\" : {\n      \"@id\" : \"salsah-gui:Searchbox\"\n    },\n    \"rdfs:comment\" : \"An entity primarily responsible for making the resource. Examples of a Creator include a person, an organization, or a service. Typically, the name of a Creator should be used to indicate the entity.\",\n    \"rdfs:label\" : \"Creator\",\n    \"rdfs:subPropertyOf\" : {\n      \"@id\" : \"knora-api:hasLinkToValue\"\n    }\n  } ],\n  \"@context\" : {\n    \"rdf\" : \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n    \"images\" : \"http://0.0.0.0:3333/ontology/00FF/images/v2#\",\n    \"knora-api\" : \"http://api.knora.org/ontology/knora-api/v2#\",\n    \"owl\" : \"http://www.w3.org/2002/07/owl#\",\n    \"salsah-gui\" : \"http://api.knora.org/ontology/salsah-gui/v2#\",\n    \"rdfs\" : \"http://www.w3.org/2000/01/rdf-schema#\",\n    \"xsd\" : \"http://www.w3.org/2001/XMLSchema#\"\n  }\n}\n</code></pre> <p>In the complex schema, all Knora value properties are object properties, whose objects are IRIs, each of which uniquely identifies a value that contains metadata and can potentially be edited. The <code>knora-base:objectType</code> of a Knora value property such as <code>images:description</code> is a Knora value class, in this case <code>knora-api:TextValue</code>. Similarly, <code>images:erfassungsdatum</code> has a <code>knora-api:objectType</code> of <code>knora-api:DateValue</code>, which has a more complex structure than the <code>knora-api:Date</code> datatype shown in the previous section. A client can find out more about these value classes by requesting the <code>knora-api</code> ontology in the complex schema, <code>http://api.knora.org/ontology/knora-api/v2</code>.</p> <p>Moreover, additional information is provided in the complex schema, to help clients that wish to create or update resources and values. A Knora resource class that can be instantiated is identified with the boolean properties <code>knora-api:isResourceClass</code> and <code>knora-api:canBeInstantiated</code>, to distinguish it from built-in abstract classes. Knora resource properties whose values can be edited by clients are identified with <code>knora-api:isResourceProperty</code> and <code>knora-api:isEditable</code>, to distinguish them from properties whose values are maintained automatically by Knora. Link value properties are shown along with link properties, because a client that updates links will need the IRIs of their link values. The predicate <code>salsah-gui:guiOrder</code> tells a GUI client in what order to display the properties of a class, and the predicates <code>salsah-gui:guiElement</code> and <code>salsah-gui:guiAttribute</code> specify how to configure a GUI element for editing the value of a property. For more information on the <code>salsah-gui</code> ontology, see The SALSAH GUI Ontology.</p>"},{"location":"DSP-API/03-endpoints/api-v2/ontology-information/#querying-class-definition","title":"Querying class definition","text":"<p>To get the definition of a class, use the following route:</p> <pre><code>HTTP GET to http://host/v2/ontologies/classes/CLASS_IRI\n</code></pre> <p>Sample response:</p> <pre><code>{\n    \"knora-api:lastModificationDate\": {\n        \"@value\": \"2023-01-09T15:39:48.548298041Z\",\n        \"@type\": \"xsd:dateTimeStamp\"\n    },\n    \"rdfs:label\": \"The anything ontology\",\n    \"@graph\": [\n        {\n            \"knora-api:isResourceClass\": true,\n            \"rdfs:label\": \"Institution\",\n            \"knora-api:canBeInstantiated\": true,\n            \"rdfs:subClassOf\": [\n                {\n                    \"@id\": \"knora-api:Resource\"\n                },\n                {\n                    \"@type\": \"owl:Restriction\",\n                    \"owl:onProperty\": {\n                        \"@id\": \"knora-api:arkUrl\"\n                    },\n                    \"owl:cardinality\": 1,\n                    \"knora-api:isInherited\": true\n                },\n                {\n                    \"@type\": \"owl:Restriction\",\n                    \"owl:onProperty\": {\n                        \"@id\": \"knora-api:attachedToProject\"\n                    },\n                    \"owl:cardinality\": 1,\n                    \"knora-api:isInherited\": true\n                },\n                {\n                    \"@type\": \"owl:Restriction\",\n                    \"owl:onProperty\": {\n                        \"@id\": \"knora-api:attachedToUser\"\n                    },\n                    \"owl:cardinality\": 1,\n                    \"knora-api:isInherited\": true\n                },\n                {\n                    \"@type\": \"owl:Restriction\",\n                    \"owl:onProperty\": {\n                        \"@id\": \"knora-api:creationDate\"\n                    },\n                    \"owl:cardinality\": 1,\n                    \"knora-api:isInherited\": true\n                },\n                {\n                    \"@type\": \"owl:Restriction\",\n                    \"owl:onProperty\": {\n                        \"@id\": \"knora-api:deleteComment\"\n                    },\n                    \"owl:maxCardinality\": 1,\n                    \"knora-api:isInherited\": true\n                },\n                {\n                    \"@type\": \"owl:Restriction\",\n                    \"owl:onProperty\": {\n                        \"@id\": \"knora-api:deleteDate\"\n                    },\n                    \"owl:maxCardinality\": 1,\n                    \"knora-api:isInherited\": true\n                },\n                {\n                    \"@type\": \"owl:Restriction\",\n                    \"owl:onProperty\": {\n                        \"@id\": \"knora-api:deletedBy\"\n                    },\n                    \"owl:maxCardinality\": 1,\n                    \"knora-api:isInherited\": true\n                },\n                {\n                    \"@type\": \"owl:Restriction\",\n                    \"owl:onProperty\": {\n                        \"@id\": \"knora-api:hasIncomingLinkValue\"\n                    },\n                    \"owl:minCardinality\": 0,\n                    \"knora-api:isInherited\": true\n                },\n                {\n                    \"@type\": \"owl:Restriction\",\n                    \"owl:onProperty\": {\n                        \"@id\": \"knora-api:hasPermissions\"\n                    },\n                    \"owl:cardinality\": 1,\n                    \"knora-api:isInherited\": true\n                },\n                {\n                    \"@type\": \"owl:Restriction\",\n                    \"owl:onProperty\": {\n                        \"@id\": \"knora-api:hasStandoffLinkTo\"\n                    },\n                    \"owl:minCardinality\": 0,\n                    \"knora-api:isInherited\": true\n                },\n                {\n                    \"@type\": \"owl:Restriction\",\n                    \"owl:onProperty\": {\n                        \"@id\": \"knora-api:hasStandoffLinkToValue\"\n                    },\n                    \"owl:minCardinality\": 0,\n                    \"knora-api:isInherited\": true\n                },\n                {\n                    \"@type\": \"owl:Restriction\",\n                    \"owl:onProperty\": {\n                        \"@id\": \"knora-api:isDeleted\"\n                    },\n                    \"owl:maxCardinality\": 1,\n                    \"knora-api:isInherited\": true\n                },\n                {\n                    \"@type\": \"owl:Restriction\",\n                    \"owl:onProperty\": {\n                        \"@id\": \"knora-api:lastModificationDate\"\n                    },\n                    \"owl:maxCardinality\": 1,\n                    \"knora-api:isInherited\": true\n                },\n                {\n                    \"@type\": \"owl:Restriction\",\n                    \"owl:onProperty\": {\n                        \"@id\": \"knora-api:userHasPermission\"\n                    },\n                    \"owl:cardinality\": 1,\n                    \"knora-api:isInherited\": true\n                },\n                {\n                    \"@type\": \"owl:Restriction\",\n                    \"owl:onProperty\": {\n                        \"@id\": \"knora-api:versionArkUrl\"\n                    },\n                    \"owl:cardinality\": 1,\n                    \"knora-api:isInherited\": true\n                },\n                {\n                    \"@type\": \"owl:Restriction\",\n                    \"owl:onProperty\": {\n                        \"@id\": \"knora-api:versionDate\"\n                    },\n                    \"owl:maxCardinality\": 1,\n                    \"knora-api:isInherited\": true\n                },\n                {\n                    \"@type\": \"owl:Restriction\",\n                    \"owl:onProperty\": {\n                        \"@id\": \"rdfs:label\"\n                    },\n                    \"owl:cardinality\": 1,\n                    \"knora-api:isInherited\": true\n                },\n                {\n                    \"@type\": \"owl:Restriction\",\n                    \"owl:onProperty\": {\n                        \"@id\": \"anything:hasName\"\n                    },\n                    \"owl:cardinality\": 1,\n                    \"salsah-gui:guiOrder\": 1\n                },\n                {\n                    \"@type\": \"owl:Restriction\",\n                    \"owl:onProperty\": {\n                        \"@id\": \"anything:hasLocation\"\n                    },\n                    \"owl:cardinality\": 1,\n                    \"salsah-gui:guiOrder\": 2\n                }\n            ],\n            \"rdfs:comment\": \"some comment\",\n            \"@type\": \"owl:Class\",\n            \"@id\": \"anything:Institution\"\n        }\n    ],\n    \"knora-api:attachedToProject\": {\n        \"@id\": \"http://rdfh.ch/projects/0001\"\n    },\n    \"@type\": \"owl:Ontology\",\n    \"@id\": \"http://0.0.0.0:3333/ontology/0001/anything/v2\",\n    \"@context\": {\n        \"rdf\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n        \"knora-api\": \"http://api.knora.org/ontology/knora-api/v2#\",\n        \"anything\": \"http://0.0.0.0:3333/ontology/0001/anything/v2#\",\n        \"owl\": \"http://www.w3.org/2002/07/owl#\",\n        \"salsah-gui\": \"http://api.knora.org/ontology/salsah-gui/v2#\",\n        \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\n        \"xsd\": \"http://www.w3.org/2001/XMLSchema#\"\n    }\n}\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-v2/ontology-information/#ontology-updates","title":"Ontology Updates","text":"<p>The ontology update API must ensure that the ontologies it creates are valid and consistent, and that existing data is not invalidated by a change to an ontology. To make this easier to enforce, the ontology update API allows only one entity to be created or modified at a time. It is not possible to submit an entire ontology all at once. Each update request is a JSON-LD document providing only the information that is relevant to the update.</p> <p>Moreover, the API enforces the following rules:</p> <ul> <li>An entity (i.e. a class or property) cannot be referred to until it has been created.</li> <li>An entity cannot be modified or deleted if it is used in data,   except for changes to its <code>rdfs:label</code> or <code>rdfs:comment</code>.</li> <li>An entity cannot be modified if another entity refers to it, with   one exception: a <code>knora-api:subjectType</code> or <code>knora-api:objectType</code>   that refers to a class will not prevent the class's cardinalities   from being modified.</li> </ul> <p>Because of these rules, some operations have to be done in a specific order:</p> <ul> <li>Properties have to be defined before they can be used in the   cardinalities of a class, but a property's <code>knora-api:subjectType</code>   cannot refer to a class that does not yet exist. The recommended   approach is to first create a class with no cardinalities, then   create the properties that it needs, then add cardinalities for   those properties to the class.</li> <li>To delete a class along with its properties, the client must first   remove the cardinalities from the class, then delete the property   definitions, then delete the class definition.</li> </ul> <p>When changing an existing ontology, the client must always supply the ontology's <code>knora-api:lastModificationDate</code>, which is returned in the response to each update or when querying the ontology. If user A attempts to update an ontology, but user B has already updated it since the last time user A received the ontology's <code>knora-api:lastModificationDate</code>, user A's update will be rejected with an HTTP 409 Conflict error. This means that it is possible for two different users to work concurrently on the same ontology, but this is discouraged since it is likely to lead to confusion.</p> <p>An ontology can be created or updated only by a system administrator, or by a project administrator in the ontology's project.</p> <p>Ontology updates always use the complex schema.</p>"},{"location":"DSP-API/03-endpoints/api-v2/ontology-information/#creating-a-new-ontology","title":"Creating a New Ontology","text":"<p>An ontology is always created within a particular project.</p> <pre><code>HTTP POST to http://host/v2/ontologies\n</code></pre> <pre><code>{\n  \"knora-api:ontologyName\" : \"ONTOLOGY_NAME\",\n  \"knora-api:attachedToProject\" : {\n    \"@id\" : \"PROJECT_IRI\"\n  },\n  \"rdfs:label\" : \"ONTOLOGY_NAME\",\n  \"@context\" : {\n    \"rdfs\" : \"http://www.w3.org/2000/01/rdf-schema#\",\n    \"knora-api\" : \"http://api.knora.org/ontology/knora-api/v2#\"\n  }\n}\n</code></pre> <p>The ontology name must follow the rules given in Knora IRIs.</p> <p>The ontology metadata can have an optional comment given in the request  body as:</p> <pre><code>\"rdfs:comment\": \"some comment\",\n</code></pre> <p>If the ontology is to be shared by multiple projects, it must be created in the default shared ontologies project, <code>http://www.knora.org/ontology/knora-base#DefaultSharedOntologiesProject</code>, and the request must have this additional boolean property:</p> <pre><code>\"knora-api:isShared\" : true\n</code></pre> <p>See Shared Ontologies for details about shared ontologies.</p> <p>A successful response will be a JSON-LD document providing only the ontology's metadata, which includes the ontology's IRI. When the client makes further requests to create entities (classes and properties) in the ontology, it must construct entity IRIs by concatenating the ontology IRI, a <code>#</code> character, and the entity name. An entity name must be a valid XML NCName.</p>"},{"location":"DSP-API/03-endpoints/api-v2/ontology-information/#changing-an-ontologys-metadata","title":"Changing an Ontology's Metadata","text":"<p>One can modify an ontology's metadata by updating its <code>rdfs:label</code> or <code>rdfs:comment</code>  or both. The example below shows the request for changing the label of an ontology.</p> <pre><code>HTTP PUT to http://host/v2/ontologies/metadata\n</code></pre> <pre><code>{\n  \"@id\" : \"ONTOLOGY_IRI\",\n  \"rdfs:label\" : \"NEW_ONTOLOGY_LABEL\",\n  \"knora-api:lastModificationDate\" : {\n    \"@type\" : \"xsd:dateTimeStamp\",\n    \"@value\" : \"ONTOLOGY_LAST_MODIFICATION_DATE\"\n  },\n  \"@context\" : {\n    \"xsd\" : \"http://www.w3.org/2001/XMLSchema#\",\n    \"rdfs\" : \"http://www.w3.org/2000/01/rdf-schema#\",\n    \"knora-api\" : \"http://api.knora.org/ontology/knora-api/v2#\"\n  }\n}\n</code></pre> <p>Similarly, a user can change an ontology's existing comment or add one by specifying  the new comment in the request body:</p> <pre><code>{\n  \"@id\" : \"ONTOLOGY_IRI\",\n  \"rdfs:comment\" : \"NEW_ONTOLOGY_COMMENT\",\n  \"knora-api:lastModificationDate\" : {\n    \"@type\" : \"xsd:dateTimeStamp\",\n    \"@value\" : \"ONTOLOGY_LAST_MODIFICATION_DATE\"\n  },\n  \"@context\" : {\n    \"xsd\" : \"http://www.w3.org/2001/XMLSchema#\",\n    \"rdfs\" : \"http://www.w3.org/2000/01/rdf-schema#\",\n    \"knora-api\" : \"http://api.knora.org/ontology/knora-api/v2#\"\n  }\n}\n</code></pre> <p>The request body can also contain a new label and a new comment for the ontology's metadata.  A successful response will be a JSON-LD document providing only the ontology's metadata.</p>"},{"location":"DSP-API/03-endpoints/api-v2/ontology-information/#deleting-an-ontologys-comment","title":"Deleting an Ontology's comment","text":"<pre><code>HTTP DELETE to http://host/v2/ontologies/comment/ONTOLOGY_IRI?lastModificationDate=ONTOLOGY_LAST_MODIFICATION_DATE\n</code></pre> <p>The ontology IRI and the ontology's last modification date must be URL-encoded.</p> <p>A successful response will be a JSON-LD document containing the ontology's updated metadata.</p>"},{"location":"DSP-API/03-endpoints/api-v2/ontology-information/#deleting-an-ontology","title":"Deleting an Ontology","text":"<p>An ontology can be deleted only if it is not used in data.</p> <pre><code>HTTP DELETE to http://host/v2/ontologies/ONTOLOGY_IRI?lastModificationDate=ONTOLOGY_LAST_MODIFICATION_DATE\n</code></pre> <p>The ontology IRI and the ontology's last modification date must be URL-encoded.</p> <p>A successful response will be a JSON-LD document containing a confirmation message.</p> <p>To check whether an ontology can be deleted:</p> <pre><code>HTTP GET to http://host/v2/ontologies/candeleteontology/ONTOLOGY_IRI\n</code></pre> <p>The response will look like this:</p> <pre><code>{\n    \"knora-api:canDo\": false,\n    \"@context\": {\n        \"knora-api\": \"http://api.knora.org/ontology/knora-api/v2#\"\n    }\n}\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-v2/ontology-information/#creating-a-class-without-cardinalities","title":"Creating a Class Without Cardinalities","text":"<pre><code>HTTP POST to http://host/v2/ontologies/classes\n</code></pre> <pre><code>{\n  \"@id\" : \"ONTOLOGY_IRI\",\n  \"@type\" : \"owl:Ontology\",\n  \"knora-api:lastModificationDate\" : {\n    \"@type\" : \"xsd:dateTimeStamp\",\n    \"@value\" : \"ONTOLOGY_LAST_MODIFICATION_DATE\"\n  },\n  \"@graph\" : [\n    {\n      \"@id\" : \"CLASS_IRI\",\n      \"@type\" : \"owl:Class\",\n      \"rdfs:label\" : {\n        \"@language\" : \"LANGUAGE_CODE\",\n        \"@value\" : \"LABEL\"\n      },\n      \"rdfs:comment\" : {\n        \"@language\" : \"LANGUAGE_CODE\",\n        \"@value\" : \"COMMENT\"\n      },\n      \"rdfs:subClassOf\" : {\n        \"@id\" : \"BASE_CLASS_IRI\"\n      }\n    }\n  ],\n  \"@context\" : {\n    \"knora-api\" : \"http://api.knora.org/ontology/knora-api/v2#\",\n    \"owl\" : \"http://www.w3.org/2002/07/owl#\",\n    \"rdfs\" : \"http://www.w3.org/2000/01/rdf-schema#\",\n    \"xsd\" : \"http://www.w3.org/2001/XMLSchema#\"\n  }\n}\n</code></pre> <p>Values for <code>rdfs:label</code> must be submitted in at least one language, either as an object or as an array of objects.</p> <p>At least one base class must be provided, which can be <code>knora-api:Resource</code> or any of its subclasses.</p> <p>A successful response will be a JSON-LD document providing the new class definition (but not any of the other entities in the ontology).</p>"},{"location":"DSP-API/03-endpoints/api-v2/ontology-information/#creating-a-class-with-cardinalities","title":"Creating a Class With Cardinalities","text":"<p>This can work if the new class will have cardinalities for properties that have no <code>knora-api:subjectType</code>, or if the new class will be a subclass of their <code>knora-api:subjectType</code>.</p> <pre><code>HTTP POST to http://host/v2/ontologies/classes\n</code></pre> <pre><code>{\n  \"@id\" : \"ONTOLOGY_IRI\",\n  \"@type\" : \"owl:Ontology\",\n  \"knora-api:lastModificationDate\" : {\n    \"@type\" : \"xsd:dateTimeStamp\",\n    \"@value\" : \"ONTOLOGY_LAST_MODIFICATION_DATE\"\n  },\n  \"@graph\" : [\n    {\n      \"@id\" : \"CLASS_IRI\",\n      \"@type\" : \"owl:Class\",\n      \"rdfs:label\" : {\n        \"@language\" : \"LANGUAGE_CODE\",\n        \"@value\" : \"LABEL\"\n      },\n      \"rdfs:comment\" : {\n        \"@language\" : \"LANGUAGE_CODE\",\n        \"@value\" : \"COMMENT\"\n      },\n      \"rdfs:subClassOf\" : [ {\n        \"@id\" : \"BASE_CLASS_IRI\"\n      }, {\n        \"@type\": \"owl:Restriction\",\n        \"OWL_CARDINALITY_PREDICATE\": \"OWL_CARDINALITY_VALUE\",\n        \"owl:onProperty\": {\n          \"@id\" : \"PROPERTY_IRI\"\n        }\n      } ]\n    }\n  ],\n  \"@context\" : {\n    \"knora-api\" : \"http://api.knora.org/ontology/knora-api/v2#\",\n    \"owl\" : \"http://www.w3.org/2002/07/owl#\",\n    \"rdfs\" : \"http://www.w3.org/2000/01/rdf-schema#\",\n    \"xsd\" : \"http://www.w3.org/2001/XMLSchema#\"\n  }\n}\n</code></pre> <p><code>OWL_CARDINALITY_PREDICATE</code> and <code>OWL_CARDINALITY_VALUE</code> must correspond to the supported combinations given in OWL Cardinalities. (The placeholder <code>OWL_CARDINALITY_VALUE</code> is shown here in quotes, but it should be an unquoted integer.)</p> <p>Values for <code>rdfs:label</code> must be submitted in at least one language, either as an object or as an array of objects.</p> <p>At least one base class must be provided.</p> <p>When a cardinality on a link property is submitted, an identical cardinality on the corresponding link value property is automatically added (see Links Between Resources).</p> <p>A successful response will be a JSON-LD document providing the new class definition (but not any of the other entities in the ontology).</p>"},{"location":"DSP-API/03-endpoints/api-v2/ontology-information/#changing-the-labels-of-a-class","title":"Changing the Labels of a Class","text":"<p>This operation is permitted even if the class is used in data.</p> <pre><code>HTTP PUT to http://host/v2/ontologies/classes\n</code></pre> <pre><code>{\n  \"@id\" : \"ONTOLOGY_IRI\",\n  \"@type\" : \"owl:Ontology\",\n  \"knora-api:lastModificationDate\" : {\n    \"@type\" : \"xsd:dateTimeStamp\",\n    \"@value\" : \"ONTOLOGY_LAST_MODIFICATION_DATE\"\n  },\n  \"@graph\" : [\n    {\n      \"@id\" : \"CLASS_IRI\",\n      \"@type\" : \"owl:Class\",\n      \"rdfs:label\" : {\n        \"@language\" : \"LANGUAGE_CODE\",\n        \"@value\" : \"LABEL\"\n      }\n    }\n  ],\n  \"@context\" : {\n    \"knora-api\" : \"http://api.knora.org/ontology/knora-api/v2#\",\n    \"owl\" : \"http://www.w3.org/2002/07/owl#\",\n    \"rdfs\" : \"http://www.w3.org/2000/01/rdf-schema#\",\n    \"xsd\" : \"http://www.w3.org/2001/XMLSchema#\"\n  }\n}\n</code></pre> <p>Values for <code>rdfs:label</code> must be submitted in at least one language, either as an object or as an array of objects. The submitted labels will replace the existing ones.</p> <p>To get the current labels use the class definition.</p>"},{"location":"DSP-API/03-endpoints/api-v2/ontology-information/#changing-the-comments-of-a-class","title":"Changing the Comments of a Class","text":"<p>This operation is permitted even if the class is used in data.</p> <pre><code>HTTP PUT to http://host/v2/ontologies/classes\n</code></pre> <pre><code>{\n  \"@id\" : \"ONTOLOGY_IRI\",\n  \"@type\" : \"owl:Ontology\",\n  \"knora-api:lastModificationDate\" : {\n    \"@type\" : \"xsd:dateTimeStamp\",\n    \"@value\" : \"ONTOLOGY_LAST_MODIFICATION_DATE\"\n  },\n  \"@graph\" : [\n    {\n      \"@id\" : \"CLASS_IRI\",\n      \"@type\" : \"owl:Class\",\n      \"rdfs:comment\" : {\n        \"@language\" : \"LANGUAGE_CODE\",\n        \"@value\" : \"COMMENT\"\n      }\n    }\n  ],\n  \"@context\" : {\n    \"rdf\" : \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n    \"knora-api\" : \"http://api.knora.org/ontology/knora-api/v2#\",\n    \"owl\" : \"http://www.w3.org/2002/07/owl#\",\n    \"rdfs\" : \"http://www.w3.org/2000/01/rdf-schema#\",\n    \"xsd\" : \"http://www.w3.org/2001/XMLSchema#\"\n  }\n}\n</code></pre> <p>Values for <code>rdfs:comment</code> must be submitted in at least one language, either as an object or as an array of objects. The submitted comments will replace the existing ones.</p> <p>To get the current comments use the class definition.</p>"},{"location":"DSP-API/03-endpoints/api-v2/ontology-information/#deleting-the-comments-of-a-class","title":"Deleting the Comments of a Class","text":"<p>This operation is permitted even if the class is used in data.</p> <pre><code>HTTP DELETE to http://host/v2/ontologies/classes/comment/CLASS_IRI?lastModificationDate=ONTOLOGY_LAST_MODIFICATION_DATE\n</code></pre> <p>The class IRI and the ontology's last modification date must be URL-encoded.</p> <p>All values i.e. all languages for <code>rdfs:comment</code> are deleted.</p> <p>A successful response will be a JSON-LD document providing the class definition.</p>"},{"location":"DSP-API/03-endpoints/api-v2/ontology-information/#creating-a-property","title":"Creating a Property","text":"<pre><code>HTTP POST to http://host/v2/ontologies/properties\n</code></pre> <pre><code>{\n  \"@id\" : \"ONTOLOGY_IRI\",\n  \"@type\" : \"owl:Ontology\",\n  \"knora-api:lastModificationDate\" : {\n    \"@type\" : \"xsd:dateTimeStamp\",\n    \"@value\" : \"ONTOLOGY_LAST_MODIFICATION_DATE\"\n  },\n  \"@graph\" : [\n    {\n      \"@id\" : \"PROPERTY_IRI\",\n      \"@type\" : \"owl:ObjectProperty\",\n      \"knora-api:subjectType\" : {\n        \"@id\" : \"SUBJECT_TYPE\"\n      },\n      \"knora-api:objectType\" : {\n        \"@id\" : \"OBJECT_TYPE\"\n      },\n      \"rdfs:label\" : {\n        \"@language\" : \"LANGUAGE_CODE\",\n        \"@value\" : \"LABEL\"\n      },\n      \"rdfs:comment\" : {\n        \"@language\" : \"LANGUAGE_CODE\",\n        \"@value\" : \"COMMENT\"\n      },\n      \"rdfs:subPropertyOf\" : {\n        \"@id\" : \"BASE_PROPERTY_IRI\"\n      },\n      \"salsah-gui:guiElement\" : {\n        \"@id\" : \"GUI_ELEMENT_IRI\"\n      },\n      \"salsah-gui:guiAttribute\" : [ \"GUI_ATTRIBUTE\" ]\n    }\n  ],\n  \"@context\" : {\n    \"knora-api\" : \"http://api.knora.org/ontology/knora-api/v2#\",\n    \"salsah-gui\" : \"http://api.knora.org/ontology/salsah-gui/v2#\",\n    \"owl\" : \"http://www.w3.org/2002/07/owl#\",\n    \"rdfs\" : \"http://www.w3.org/2000/01/rdf-schema#\",\n    \"xsd\" : \"http://www.w3.org/2001/XMLSchema#\"\n  }\n}\n</code></pre> <p>Values for <code>rdfs:label</code> must be submitted in at least one language, either as an object or as an array of objects.</p> <p>At least one base property must be provided, which can be <code>knora-api:hasValue</code>, <code>knora-api:hasLinkTo</code>, or any of their subproperties, with the exception of file properties (subproperties of <code>knora-api:hasFileValue</code>) and link value properties (subproperties of <code>knora-api:hasLinkToValue</code>).</p> <p>If the property is a link property, the corresponding link value property (see Links Between Resources) will automatically be created.</p> <p>The property definition must specify its <code>knora-api:objectType</code>. If the new property is a subproperty of <code>knora-api:hasValue</code>, its <code>knora-api:objectType</code> must be one of the built-in subclasses of <code>knora-api:Value</code>, which are defined in the <code>knora-api</code> ontology in the complex schema. If the new property is a subproperty of <code>knora-base:hasLinkTo</code>, its <code>knora-api:objectType</code> must be a subclass of <code>knora-api:Resource</code>.</p> <p>To improve consistency checking, it is recommended, but not required, to provide <code>knora-api:subjectType</code>, which must be a subclass of <code>knora-api:Resource</code>.</p> <p>The predicates <code>salsah-gui:guiElement</code> and <code>salsah-gui:guiAttribute</code> are optional. If provided, the object of <code>guiElement</code> must be one of the OWL named individuals defined in The SALSAH GUI Ontology. Some GUI elements take required or optional attributes, which are provided as objects of <code>salsah-gui:guiAttribute</code>; see The SALSAH GUI Ontology for details.</p> <p>A successful response will be a JSON-LD document providing the new property definition (but not any of the other entities in the ontology).</p>"},{"location":"DSP-API/03-endpoints/api-v2/ontology-information/#changing-the-labels-of-a-property","title":"Changing the Labels of a Property","text":"<p>This operation is permitted even if the property is used in data.</p> <pre><code>HTTP PUT to http://host/v2/ontologies/properties\n</code></pre> <pre><code>{\n  \"@id\" : \"ONTOLOGY_IRI\",\n  \"@type\" : \"owl:Ontology\",\n  \"knora-api:lastModificationDate\" : {\n    \"@type\" : \"xsd:dateTimeStamp\",\n    \"@value\" : \"ONTOLOGY_LAST_MODIFICATION_DATE\"\n  },\n  \"@graph\" : [\n    {\n      \"@id\" : \"PROPERTY_IRI\",\n      \"@type\" : \"owl:ObjectProperty\",\n      \"rdfs:label\" : {\n        \"@language\" : \"LANGUAGE_CODE\",\n        \"@value\" : \"LABEL\"\n      }\n    }\n  ],\n  \"@context\" : {\n    \"knora-api\" : \"http://api.knora.org/ontology/knora-api/v2#\",\n    \"owl\" : \"http://www.w3.org/2002/07/owl#\",\n    \"rdfs\" : \"http://www.w3.org/2000/01/rdf-schema#\",\n    \"xsd\" : \"http://www.w3.org/2001/XMLSchema#\"\n  }\n}\n</code></pre> <p>Values for <code>rdfs:label</code> must be submitted in at least one language, either as an object or as an array of objects.</p>"},{"location":"DSP-API/03-endpoints/api-v2/ontology-information/#changing-the-comments-of-a-property","title":"Changing the Comments of a Property","text":"<p>This operation is permitted even if the property is used in data.</p> <pre><code>HTTP PUT to http://host/v2/ontologies/properties\n</code></pre> <pre><code>{\n  \"@id\" : \"ONTOLOGY_IRI\",\n  \"@type\" : \"owl:Ontology\",\n  \"knora-api:lastModificationDate\" : {\n    \"@type\" : \"xsd:dateTimeStamp\",\n    \"@value\" : \"ONTOLOGY_LAST_MODIFICATION_DATE\"\n  },\n  \"@graph\" : [\n    {\n      \"@id\" : \"PROPERTY_IRI\",\n      \"@type\" : \"owl:ObjectProperty\",\n      \"rdfs:comment\" : {\n        \"@language\" : \"LANGUAGE_CODE\",\n        \"@value\" : \"COMMENT\"\n      }\n    }\n  ],\n  \"@context\" : {\n    \"knora-api\" : \"http://api.knora.org/ontology/knora-api/v2#\",\n    \"owl\" : \"http://www.w3.org/2002/07/owl#\",\n    \"rdfs\" : \"http://www.w3.org/2000/01/rdf-schema#\",\n    \"xsd\" : \"http://www.w3.org/2001/XMLSchema#\"\n  }\n}\n</code></pre> <p>Values for <code>rdfs:comment</code> must be submitted in at least one language, either as an object or as an array of objects.</p>"},{"location":"DSP-API/03-endpoints/api-v2/ontology-information/#deleting-the-comments-of-a-property","title":"Deleting the Comments of a Property","text":"<p>This operation is permitted even if the property is used in data.</p> <pre><code>HTTP DELETE to http://host/v2/ontologies/properties/comment/PROPERTY_IRI?lastModificationDate=ONTOLOGY_LAST_MODIFICATION_DATE\n</code></pre> <p>The property IRI and the ontology's last modification date must be URL-encoded.</p> <p>All values i.e. all languages for <code>rdfs:comment</code> are deleted.</p> <p>If the property is a link property, the <code>rdfs:comment</code> of its corresponding link value property will automatically be deleted.</p> <p>A successful response will be a JSON-LD document providing the property definition.</p>"},{"location":"DSP-API/03-endpoints/api-v2/ontology-information/#changing-the-gui-element-and-gui-attributes-of-a-property","title":"Changing the GUI Element and GUI Attributes of a Property","text":"<p>This operation is permitted even if the property is used in data.</p> <pre><code>HTTP PUT to http://host/v2/ontologies/properties/guielement\n</code></pre> <pre><code>{\n  \"@id\": \"ONTOLOGY_IRI\",\n  \"@type\": \"owl:Ontology\",\n  \"knora-api:lastModificationDate\": {\n    \"@type\": \"xsd:dateTimeStamp\",\n    \"@value\": \"ONTOLOGY_LAST_MODIFICATION_DATE\"\n  },\n  \"@graph\": [\n    {\n      \"@id\": \"PROPERTY_IRI\",\n      \"@type\": \"owl:ObjectProperty\",\n      \"salsah-gui:guiElement\": {\n        \"@id\": \"salsah-gui:Textarea\"\n      },\n      \"salsah-gui:guiAttribute\": [\n        \"cols=80\",\n        \"rows=24\"\n      ]\n    }\n  ],\n  \"@context\": {\n    \"rdf\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n    \"knora-api\": \"http://api.knora.org/ontology/knora-api/v2#\",\n    \"salsah-gui\": \"http://api.knora.org/ontology/salsah-gui/v2#\",\n    \"owl\": \"http://www.w3.org/2002/07/owl#\",\n    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\n    \"xsd\": \"http://www.w3.org/2001/XMLSchema#\"\n  }\n}\n</code></pre> <p>To remove the values of <code>salsah-gui:guiElement</code> and <code>salsah-gui:guiAttribute</code> from the property definition, submit the request without those predicates.</p>"},{"location":"DSP-API/03-endpoints/api-v2/ontology-information/#adding-cardinalities-to-a-class","title":"Adding Cardinalities to a Class","text":"<p>If the class (or any of its sub-classes) is used in data,  it is not allowed to add cardinalities <code>owl:minCardinality</code> greater than 0 or <code>owl:cardinality 1</code> to the class.</p> <pre><code>HTTP POST to http://host/v2/ontologies/cardinalities\n</code></pre> <pre><code>{\n  \"@id\" : \"ONTOLOGY_IRI\",\n  \"@type\" : \"owl:Ontology\",\n  \"knora-api:lastModificationDate\" : {\n    \"@type\" : \"xsd:dateTimeStamp\",\n    \"@value\" : \"ONTOLOGY_LAST_MODIFICATION_DATE\"\n  },\n  \"@graph\" : [ \n    {\n      \"@id\" : \"CLASS_IRI\",\n      \"@type\" : \"owl:Class\",\n      \"rdfs:subClassOf\" : {\n        \"@type\": \"owl:Restriction\",\n        \"OWL_CARDINALITY_PREDICATE\": \"OWL_CARDINALITY_VALUE\",\n        \"owl:onProperty\": {\n          \"@id\" : \"PROPERTY_IRI\"\n        }\n      }\n    }\n  ],\n  \"@context\" : {\n    \"knora-api\" : \"http://api.knora.org/ontology/knora-api/v2#\",\n    \"owl\" : \"http://www.w3.org/2002/07/owl#\",\n    \"rdfs\" : \"http://www.w3.org/2000/01/rdf-schema#\",\n    \"xsd\" : \"http://www.w3.org/2001/XMLSchema#\"\n  }\n}\n</code></pre> <p>At least one cardinality must be submitted.</p> <p><code>OWL_CARDINALITY_PREDICATE</code> and <code>OWL_CARDINALITY_VALUE</code> must correspond to the supported combinations given in OWL Cardinalities. (The placeholder <code>OWL_CARDINALITY_VALUE</code> is shown here in quotes, but it should be an unquoted integer.)</p> <p>When a cardinality on a link property is submitted, an identical cardinality on the corresponding link value property is automatically added (see Links Between Resources).</p> <p>A successful response will be a JSON-LD document providing the new class definition (but not any of the other entities in the ontology).</p>"},{"location":"DSP-API/03-endpoints/api-v2/ontology-information/#replacing-the-cardinalities-of-a-class","title":"Replacing the Cardinalities of a Class","text":"<p>It is possible to replace all cardinalities on properties used by a class. If it succeeds the request will effectively replace all direct cardinalities of the class as specified. That is, it removes all the cardinalities from the class and replaces them with the submitted cardinalities.  Meaning that, if no cardinalities are submitted (i.e. the request contains no <code>rdfs:subClassOf</code>),  the class is left with no cardinalities.</p> <p>The request will fail if any of the \"Pre-Update Checks\" fails.  A partial update of the ontology will not be performed.</p>"},{"location":"DSP-API/03-endpoints/api-v2/ontology-information/#pre-update-checks","title":"Pre-Update Checks","text":"<ul> <li>Ontology Check<ul> <li>Any given cardinality on a property must be included in any of the existing cardinalities    for the same property of the super-classes.</li> <li>Any given cardinality on a property must include the effective cardinalities    for the same property of all subclasses,    taking into account the respective inherited cardinalities from the class hierarchy of the subclasses.</li> </ul> </li> <li>Consistency Check with existing data<ul> <li>Given that instances of the class or any of its subclasses exist,   then these instances are checked if they conform to the given cardinality.</li> </ul> </li> </ul> <p>Subproperty handling for cardinality pre-update checks</p> <p>The Pre-Update check does not take into account any <code>subproperty</code> relations between the properties.  Every cardinality is checked against only the given property and not its subproperties,  neither in the ontology nor the consistency check with existing data.  This means that currently it is necessary to maintain the cardinalities on all subproperties of a property  in sync with the cardinalities on the superproperty.</p> <pre><code>HTTP PUT to http://host/v2/ontologies/cardinalities\n</code></pre> <pre><code>{\n  \"@id\" : \"ONTOLOGY_IRI\",\n  \"@type\" : \"owl:Ontology\",\n  \"knora-api:lastModificationDate\" : {\n    \"@type\" : \"xsd:dateTimeStamp\",\n    \"@value\" : \"ONTOLOGY_LAST_MODIFICATION_DATE\"\n  },\n  \"@graph\" : [ {\n    \"@id\" : \"CLASS_IRI\",\n    \"@type\" : \"owl:Class\",\n    \"rdfs:subClassOf\" : {\n      \"@type\": \"owl:Restriction\",\n      \"OWL_CARDINALITY_PREDICATE\": \"OWL_CARDINALITY_VALUE\",\n      \"owl:onProperty\": {\n        \"@id\" : \"PROPERTY_IRI\"\n      }\n    }\n  } ],\n  \"@context\" : {\n    \"knora-api\" : \"http://api.knora.org/ontology/knora-api/v2#\",\n    \"owl\" : \"http://www.w3.org/2002/07/owl#\",\n    \"rdfs\" : \"http://www.w3.org/2000/01/rdf-schema#\",\n    \"xsd\" : \"http://www.w3.org/2001/XMLSchema#\"\n  }\n}\n</code></pre> <p><code>OWL_CARDINALITY_PREDICATE</code> and <code>OWL_CARDINALITY_VALUE</code> must correspond to the supported combinations given in OWL Cardinalities. (The placeholder <code>OWL_CARDINALITY_VALUE</code> is shown here in quotes, but it should be an unquoted integer.)</p> <p>When a cardinality on a link property is submitted, an identical cardinality on the corresponding link value property is automatically added (see Links Between Resources).</p> <p>A successful response will be a JSON-LD document providing the new class definition (but not any of the other entities in the ontology). If any of the \"Pre-Update Checks\" fail the endpoint will respond with a 400 Bad Request containing the reasons why the update failed.</p> <p>The \"Pre-Update Checks\" are available on a dedicated endpoint. For a check whether a particular cardinality can be set on a class/property combination, use the following request:</p> <pre><code>HTTP GET to http://host/v2/ontologies/canreplacecardinalities/CLASS_IRI?propertyIri=PROPERTY_IRI&amp;newCardinality=[0-1|1|1-n|0-n]\n</code></pre> <p>The response will look like this:</p> <p>Failure:</p> <pre><code>{\n  \"knora-api:canDo\": false,\n  \"knora-api:cannotDoReason\": \"An explanation, understandable to humans, why the update cannot be carried out.\",\n  \"knora-api:cannotDoContext\": {\n    \"knora-api:canSetCardinalityCheckFailure\": [\n      {\n        \"knora-api:canSetCardinalityOntologySuperClassCheckFailed\": [\n          {\n            \"@id\": \"http://0.0.0.0:3333/ontology/0801/biblio/v2#somePublicationInstance\"\n          },\n          {\n            \"@id\": \"http://0.0.0.0:3333/ontology/0801/biblio/v2#someArticleInstance\"\n          }\n        ]\n      },\n      {\n        \"knora-api:canSetCardinalityOntologySubclassCheckFailed\": {\n          \"@id\": \"http://0.0.0.0:3333/ontology/0801/biblio/v2#someJournalArticleInstance\"\n        }\n      }\n    ]\n  },\n  \"@context\": {\n    \"knora-api\": \"http://api.knora.org/ontology/knora-api/v2#\"\n  }\n}\n</code></pre> <p>Success:</p> <pre><code>{\n    \"knora-api:canDo\": true,\n    \"@context\": {\n        \"knora-api\": \"http://api.knora.org/ontology/knora-api/v2#\"\n    } \n}\n</code></pre> <p>Note: The following check is still available but deprecated - use the more detailed check above.</p> <p>To check whether all class's cardinalities can be replaced:</p> <pre><code>HTTP GET to http://host/v2/ontologies/canreplacecardinalities/CLASS_IRI\n</code></pre> <p>The response will look like this:</p> <pre><code>{\n    \"knora-api:canDo\": false,\n    \"@context\": {\n        \"knora-api\": \"http://api.knora.org/ontology/knora-api/v2#\"\n    }\n}\n</code></pre> <p>The <code>ontologies/canreplacecardinalities/CLASS_IRI</code> request is only checking if the class is in use. </p>"},{"location":"DSP-API/03-endpoints/api-v2/ontology-information/#delete-a-single-cardinality-from-a-class","title":"Delete a single cardinality from a class","text":"<p>If a class is used in data, it is only allowed to delete a cardinality, if the property a cardinality refers to, is not used inside the data. Also, the property isn't allowed to be used inside the data in any subclasses of this class.</p> <pre><code>HTTP PATCH to http://host/v2/ontologies/cardinalities\n</code></pre> <pre><code>{\n  \"@id\" : \"ONTOLOGY_IRI\",\n  \"@type\" : \"owl:Ontology\",\n  \"knora-api:lastModificationDate\" : {\n    \"@type\" : \"xsd:dateTimeStamp\",\n    \"@value\" : \"ONTOLOGY_LAST_MODIFICATION_DATE\"\n  },\n  \"@graph\" : [ {\n    \"@id\" : \"CLASS_IRI\",\n    \"@type\" : \"owl:Class\",\n    \"rdfs:subClassOf\" : {\n      \"@type\": \"owl:Restriction\",\n      \"OWL_CARDINALITY_PREDICATE\": \"OWL_CARDINALITY_VALUE\",\n      \"owl:onProperty\": {\n        \"@id\" : \"PROPERTY_IRI\"\n      }\n    }\n  } ],\n  \"@context\" : {\n    \"knora-api\" : \"http://api.knora.org/ontology/knora-api/v2#\",\n    \"owl\" : \"http://www.w3.org/2002/07/owl#\",\n    \"rdfs\" : \"http://www.w3.org/2000/01/rdf-schema#\",\n    \"xsd\" : \"http://www.w3.org/2001/XMLSchema#\"\n  }\n}\n</code></pre> <p><code>OWL_CARDINALITY_PREDICATE</code> and <code>OWL_CARDINALITY_VALUE</code> must correspond to the supported combinations given in OWL Cardinalities. (The placeholder <code>OWL_CARDINALITY_VALUE</code> is shown here in quotes, but it should be an unquoted integer.)</p> <p>When a cardinality on a link property is submitted, an identical cardinality on the corresponding link value property is automatically added (see Links Between Resources).</p> <p>A successful response will be a JSON-LD document providing the new class definition (but not any of the other entities in the ontology).</p> <p>To check whether a class's cardinality can be deleted:</p> <pre><code>HTTP POST to http://host/v2/ontologies/candeletecardinalities\n</code></pre> <p>The response will look like this:</p> <pre><code>{\n    \"knora-api:canDo\": false,\n    \"@context\": {\n        \"knora-api\": \"http://api.knora.org/ontology/knora-api/v2#\"\n    }\n}\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-v2/ontology-information/#changing-the-gui-order-of-cardinalities","title":"Changing the GUI Order of Cardinalities","text":"<p>To change the GUI order of one or more cardinalities in a class:</p> <pre><code>HTTP PUT to http://host/v2/ontologies/guiorder\n</code></pre> <p>This can be done even if the class is used in data.</p> <p>The request body includes the cardinalities whose GUI order should be changed, using the predicate <code>salsah-gui:guiOrder</code>, whose object is an integer:</p> <pre><code>{\n  \"@id\" : \"ONTOLOGY_IRI\",\n  \"@type\" : \"owl:Ontology\",\n  \"knora-api:lastModificationDate\" : {\n    \"@type\" : \"xsd:dateTimeStamp\",\n    \"@value\" : \"ONTOLOGY_LAST_MODIFICATION_DATE\"\n  },\n  \"@graph\" : [ {\n    \"@id\" : \"CLASS_IRI\",\n    \"@type\" : \"owl:Class\",\n    \"rdfs:subClassOf\" : {\n      \"@type\": \"owl:Restriction\",\n      \"OWL_CARDINALITY_PREDICATE\": \"OWL_CARDINALITY_VALUE\",\n      \"owl:onProperty\": {\n        \"@id\" : \"PROPERTY_IRI\"\n      },\n      \"salsah-gui:guiOrder\": \"GUI_ORDER_VALUE\"\n    }\n  } ],\n  \"@context\" : {\n    \"rdf\" : \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n    \"knora-api\" : \"http://api.knora.org/ontology/knora-api/v2#\",\n    \"salsah-gui\" : \"http://api.knora.org/ontology/salsah-gui/v2#\",\n    \"owl\" : \"http://www.w3.org/2002/07/owl#\",\n    \"rdfs\" : \"http://www.w3.org/2000/01/rdf-schema#\",\n    \"xsd\" : \"http://www.w3.org/2001/XMLSchema#\"\n  }\n}\n</code></pre> <p>Only the cardinalities whose GUI order is to be changed need to be included in the request. The <code>OWL_CARDINALITY_PREDICATE</code> and <code>OWL_CARDINALITY_VALUE</code> are ignored; only the <code>GUI_ORDER_VALUE</code> is changed.</p>"},{"location":"DSP-API/03-endpoints/api-v2/ontology-information/#deleting-a-property","title":"Deleting a Property","text":"<p>A property can be deleted only if no other ontology entity refers to it, and if it is not used in data.</p> <pre><code>HTTP DELETE to http://host/v2/ontologies/properties/PROPERTY_IRI?lastModificationDate=ONTOLOGY_LAST_MODIFICATION_DATE\n</code></pre> <p>The property IRI and the ontology's last modification date must be URL-encoded.</p> <p>If the property is a link property, the corresponding link value property (see Links Between Resources) will automatically be deleted.</p> <p>A successful response will be a JSON-LD document providing only the ontology's metadata.</p> <p>To check whether a property can be deleted:</p> <pre><code>HTTP GET to http://host/v2/ontologies/candeleteproperty/PROPERTY_IRI\n</code></pre> <p>The response will look like this:</p> <pre><code>{\n    \"knora-api:canDo\": false,\n    \"@context\": {\n        \"knora-api\": \"http://api.knora.org/ontology/knora-api/v2#\"\n    }\n}\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-v2/ontology-information/#deleting-a-class","title":"Deleting a Class","text":"<p>A class can be deleted only if no other ontology entity refers to it, and if it is not used in data.</p> <pre><code>HTTP DELETE to http://host/v2/ontologies/classes/CLASS_IRI?lastModificationDate=ONTOLOGY_LAST_MODIFICATION_DATE\n</code></pre> <p>The class IRI and the ontology's last modification date must be URL-encoded.</p> <p>A successful response will be a JSON-LD document providing only the ontology's metadata.</p> <p>To check whether a class can be deleted:</p> <pre><code>HTTP GET to http://host/v2/ontologies/candeleteclass/CLASS_IRI\n</code></pre> <p>The response will look like this:</p> <pre><code>{\n    \"knora-api:canDo\": false,\n    \"@context\": {\n        \"knora-api\": \"http://api.knora.org/ontology/knora-api/v2#\"\n    }\n}\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-v2/permalinks/","title":"Permalinks","text":""},{"location":"DSP-API/03-endpoints/api-v2/permalinks/#permalinks","title":"Permalinks","text":"<p>Knora provides a permanent, citable URL for each resource and value. These URLs use Archival Resource Key (ARK) Identifiers, and are designed to remain valid even if the resource itself is moved from one Knora repository to another.</p>"},{"location":"DSP-API/03-endpoints/api-v2/permalinks/#obtaining-ark-urls","title":"Obtaining ARK URLs","text":"<p>In the complex schema, a resource or value is always returned with two ARK URLs: one that will always refer to the latest version of the resource or value (<code>knora-api:arkUrl</code>), and one that refers specifically to the version being returned (<code>knora-api:versionArkUrl</code>). For example:</p> <pre><code>{\n  \"@id\" : \"http://rdfh.ch/0803/2a6221216701\",\n  \"@type\" : \"incunabula:book\",\n  \"incunabula:book_comment\" : {\n    \"@id\" : \"http://rdfh.ch/0803/2a6221216701/values/56c287fc9505\",\n    \"@type\" : \"knora-api:TextValue\",\n    \"knora-api:arkUrl\" : {\n      \"@type\" : \"xsd:anyURI\",\n      \"@value\" : \"http://ark.dasch.swiss/ark:/72163/1/0803/2a6221216701W/dhaRsvZATjmOxhCOOzHqewB\"\n    },\n    \"knora-api:versionArkUrl\" : {\n      \"@type\" : \"xsd:anyURI\",\n      \"@value\" : \"http://ark.dasch.swiss/ark:/72163/1/0803/2a6221216701W/dhaRsvZATjmOxhCOOzHqewB.20160302T150521Z\"\n    },\n    \"knora-api:attachedToUser\" : {\n      \"@id\" : \"http://rdfh.ch/users/91e19f1e01\"\n    },\n    \"knora-api:hasPermissions\" : \"CR knora-admin:Creator|M knora-admin:ProjectMember|V knora-admin:UnknownUser\",\n    \"knora-api:userHasPermission\" : \"V\",\n    \"knora-api:valueAsString\" : \"Katalogaufnahme anhand ISTC und v.d.Haegen\",\n    \"knora-api:valueCreationDate\" : {\n      \"@type\" : \"xsd:dateTimeStamp\",\n      \"@value\" : \"2016-03-02T15:05:21Z\"\n    },\n    \"knora-api:valueHasUUID\" : \"dhaRsvZATjmOxhCOOzHqew\"\n  },\n  \"knora-api:arkUrl\" : {\n    \"@type\" : \"xsd:anyURI\",\n    \"@value\" : \"http://ark.dasch.swiss/ark:/72163/1/0803/2a6221216701W\"\n  },\n  \"knora-api:versionArkUrl\" : {\n    \"@type\" : \"xsd:anyURI\",\n    \"@value\" : \"http://ark.dasch.swiss/ark:/72163/1/0803/2a6221216701W.20160302T150521Z\"\n  },\n  \"knora-api:attachedToProject\" : {\n    \"@id\" : \"http://rdfh.ch/projects/0803\"\n  },\n  \"knora-api:attachedToUser\" : {\n    \"@id\" : \"http://rdfh.ch/users/91e19f1e01\"\n  },\n  \"knora-api:creationDate\" : {\n    \"@type\" : \"xsd:dateTimeStamp\",\n    \"@value\" : \"2016-03-02T15:05:21Z\"\n  },\n  \"knora-api:hasPermissions\" : \"CR knora-admin:Creator|M knora-admin:ProjectMember|V knora-admin:UnknownUser\",\n  \"knora-api:userHasPermission\" : \"V\",\n  \"rdfs:label\" : \"Reise ins Heilige Land\",\n  \"@context\" : {\n    \"rdf\" : \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n    \"knora-api\" : \"http://api.knora.org/ontology/knora-api/v2#\",\n    \"rdfs\" : \"http://www.w3.org/2000/01/rdf-schema#\",\n    \"incunabula\" : \"http://0.0.0.0:3333/ontology/0803/incunabula/v2#\",\n    \"xsd\" : \"http://www.w3.org/2001/XMLSchema#\"\n  }\n}\n</code></pre> <p>In the simple schema, resources are returned with ARK URLs, but values are returned as literals, so ARK URLs are not provided for values.</p> <p>For more information on getting past versions of resources and values, see:</p> <ul> <li>Get a Full Representation of a Version of a Resource by IRI</li> <li>Get a Version of a Value in a Resource</li> <li>Get the Version History of a Resource</li> </ul>"},{"location":"DSP-API/03-endpoints/api-v2/permalinks/#resolving-knora-ark-urls","title":"Resolving Knora ARK URLs","text":"<p>A Knora ARK URL is intended to be resolved by the Knora ARK resolver.</p>"},{"location":"DSP-API/03-endpoints/api-v2/permalinks/#knora-ark-url-format","title":"Knora ARK URL Format","text":"<p>For details, see Archival Resource Key (ARK) Identifiers.</p>"},{"location":"DSP-API/03-endpoints/api-v2/permalinks/#ark-urls-for-projects","title":"ARK URLs for Projects","text":"<p>The format of a Knora project ARK URL is as follows:</p> <pre><code>http://HOST/ark:/NAAN/VERSION/PROJECT\n</code></pre> <p><code>NAAN</code> is a Name Assigning Authority Number, <code>VERSION</code> is the version number of the Knora ARK URL format (currently always 1), and <code>PROJECT</code> is the project's short-code.</p> <p>For example, given a project with ID <code>0001</code>, and using the DaSCH's ARK resolver hostname and NAAN, the ARK URL for the project itself is:</p> <pre><code>http://ark.dasch.swiss/ark:/72163/1/0001\n</code></pre> <p>This could redirect to a page describing the project.</p>"},{"location":"DSP-API/03-endpoints/api-v2/permalinks/#ark-urls-for-resources","title":"ARK URLs for Resources","text":"<p>The format of a Knora resource ARK URL is as follows:</p> <pre><code>http://HOST/ark:/NAAN/VERSION/PROJECT/RESOURCE_UUID[.TIMESTAMP]\n</code></pre> <p><code>NAAN</code> is a Name Assigning Authority Number, <code>VERSION</code> is the version number of the Knora ARK URL format (currently always 1), <code>PROJECT</code> is the project's short-code, and <code>RESOURCE_UUID</code> is the resource's UUID.</p> <p>For example, given the Knora resource IRI <code>http://rdfh.ch/0001/0C-0L1kORryKzJAJxxRyRQ</code>, and using the DaSCH's ARK resolver hostname and NAAN, the corresponding ARK URL without a timestamp is:</p> <pre><code>http://ark.dasch.swiss/ark:/72163/1/0001/0C=0L1kORryKzJAJxxRyRQY\n</code></pre> <p>The same ARK URL with an optional timestamp is:</p> <pre><code>http://ark.dasch.swiss/ark:/72163/1/0001/0C=0L1kORryKzJAJxxRyRQY.20180604T085622513Z\n</code></pre> <p>Without a timestamp, a Knora resource ARK URL refers to the latest version of the resource at the time when the URL is resolved.</p>"},{"location":"DSP-API/03-endpoints/api-v2/permalinks/#ark-urls-for-values","title":"ARK URLs for Values","text":"<p>The format of a Knora value ARK URL is as follows:</p> <pre><code>http://HOST/ark:/NAAN/VERSION/PROJECT/RESOURCE_UUID/VALUE_UUID[.TIMESTAMP]\n</code></pre> <p><code>NAAN</code> is a Name Assigning Authority Number, <code>VERSION</code> is the version number of the Knora ARK URL format (currently always 1), <code>PROJECT</code> is the project's short-code, <code>RESOURCE_UUID</code> is the resource's UUID, and <code>VALUE_UUID</code> is the value's <code>knora-api:valueHasUUID</code>.</p> <p>For example, given a value with <code>knora-api:valueHasUUID \"4OOf3qJUTnCDXlPNnygSzQ\"</code> in the resource <code>http://rdfh.ch/0001/0C-0L1kORryKzJAJxxRyRQ</code>, and using the DaSCH's ARK resolver hostname and NAAN, the corresponding ARK URL without a timestamp is:</p> <pre><code>http://ark.dasch.swiss/ark:/72163/1/0001/0C=0L1kORryKzJAJxxRyRQY/4OOf3qJUTnCDXlPNnygSzQX\n</code></pre> <p>The same ARK URL with an optional timestamp is:</p> <pre><code>http://ark.dasch.swiss/ark:/72163/1/0001/0C=0L1kORryKzJAJxxRyRQY/4OOf3qJUTnCDXlPNnygSzQX.20180604T085622513Z\n</code></pre> <p>Without a timestamp, a Knora value ARK URL refers to the latest version of the value at the time when the URL is resolved.</p>"},{"location":"DSP-API/03-endpoints/api-v2/query-language/","title":"Gravsearch - Virtual Graph Search","text":""},{"location":"DSP-API/03-endpoints/api-v2/query-language/#gravsearch-virtual-graph-search","title":"Gravsearch: Virtual Graph Search","text":""},{"location":"DSP-API/03-endpoints/api-v2/query-language/#basic-concept","title":"Basic Concept","text":"<p>Gravsearch is intended to offer the advantages of SPARQL endpoints (particularly the ability to perform queries using complex search criteria) while avoiding their drawbacks in terms of performance and security (see The Enduring Myth of the SPARQL Endpoint). It also has the benefit of enabling clients to work with a simpler RDF data model than the one the API actually uses to store data in the triplestore and makes it possible to provide better error-checking.</p> <p>Rather than being processed directly by the triplestore, a Gravsearch query is interpreted by the API, which enforces certain restrictions on the query, and implements paging and permission checking. The API server generates SPARQL based on the Gravsearch query submitted, queries the triplestore, filters the results according to the user's permissions, and returns each page of query results as an API response. Thus, Gravsearch is a hybrid between a RESTful API and a SPARQL endpoint.</p> <p>A Gravsearch query conforms to a subset of the syntax of a SPARQL CONSTRUCT query, with some additional restrictions and functionality. In particular, the variable representing the top-level (or 'main') resource that will appear in each search result must be identified, statements must be included to specify the types of the entities being queried, OFFSET is used to control paging, and <code>ORDER BY</code> is used to sort the results.</p> <p>It is certainly possible to write Gravsearch queries by hand, but we expect that in general, they will be automatically generated by client software, e.g. by a client user interface.</p> <p>For a more detailed overview of Gravsearch, see Gravsearch: Transforming SPARQL to query humanities data.</p>"},{"location":"DSP-API/03-endpoints/api-v2/query-language/#submitting-gravsearch-queries","title":"Submitting Gravsearch Queries","text":"<p>The recommended way to submit a Gravsearch query is via HTTP POST:</p> <pre><code>HTTP POST to http://host/v2/searchextended\n</code></pre> <p>This works like query via POST directly in the SPARQL 1.1 Protocol: the query is sent unencoded as the HTTP request message body, in the UTF-8 charset.</p> <p>It is also possible to submit a Gravsearch query using HTTP GET. The entire query must be URL-encoded and included as the last element of the URL path:</p> <pre><code>HTTP GET to http://host/v2/searchextended/QUERY\n</code></pre> <p>The response to a Gravsearch query is an RDF graph, which can be requested in various formats (see Responses Describing Resources).</p> <p>To request the number of results rather than the results themselves, you can do a count query:</p> <pre><code>HTTP POST to http://host/v2/searchextended/count\n</code></pre> <p>The response to a count query request is an object with one predicate, <code>http://schema.org/numberOfItems</code>, with an integer value.</p> <p>If a gravsearch query times out, a <code>504 Gateway Timeout</code> will be returned.</p>"},{"location":"DSP-API/03-endpoints/api-v2/query-language/#gravsearch-and-api-schemas","title":"Gravsearch and API Schemas","text":"<p>A Gravsearch query can be written in either of the two DSP-API v2 schemas. The simple schema is easier to work with, and is sufficient if you don't need to query anything below the level of a DSP-API value. If your query needs to refer to standoff markup, you must use the complex schema. Each query must use a single schema, with one exception (see Date Comparisons).</p> <p>Gravsearch query results can be requested in the simple or complex schema; see API Schema.</p> <p>All examples hereafter run with the DSP stack started locally. If you access another stack, you can check  the IRI of the ontology you are targeting by requesting the ontologies metadata.</p>"},{"location":"DSP-API/03-endpoints/api-v2/query-language/#using-the-simple-schema","title":"Using the Simple Schema","text":"<p>To write a query in the simple schema, use the <code>knora-api</code> ontology in the simple schema, and use the simple schema for any other DSP ontologies the query refers to, e.g.:</p> <pre><code>PREFIX knora-api: &lt;http://api.knora.org/ontology/knora-api/simple/v2#&gt;\nPREFIX incunabula: &lt;http://0.0.0.0:3333/ontology/0803/incunabula/simple/v2#&gt;\n</code></pre> <p>In the simple schema, DSP-API values are represented as literals, which can be used in <code>FILTER</code> expressions (see Filtering on Values in the Simple Schema).</p>"},{"location":"DSP-API/03-endpoints/api-v2/query-language/#using-the-complex-schema","title":"Using the Complex Schema","text":"<p>To write a query in the complex schema, use the <code>knora-api</code> ontology in the complex schema, and use the complex schema for any other DSP ontologies the query refers to, e.g.:</p> <pre><code>PREFIX knora-api: &lt;http://api.knora.org/ontology/knora-api/v2#&gt;\nPREFIX incunabula: &lt;http://0.0.0.0:3333/ontology/0803/incunabula/v2#&gt;\n</code></pre> <p>In the complex schema, DSP-API values are represented as objects belonging to subclasses of <code>knora-api:Value</code>, e.g. <code>knora-api:TextValue</code>, and have predicates of their own, which can be used in <code>FILTER</code> expressions (see Filtering on Values in the Complex Schema).</p>"},{"location":"DSP-API/03-endpoints/api-v2/query-language/#main-and-dependent-resources","title":"Main and Dependent Resources","text":"<p>The main resource is the top-level resource in a search result. Other resources that are in some way connected to the main resource are referred to as dependent resources. If the client asks for a resource A relating to a resource B, then all matches for A will be presented as main resources and those for B as dependent resources. The main resource must be represented by a variable, marked with <code>knora-api:isMainResource</code>, as explained under CONSTRUCT Clause.</p>"},{"location":"DSP-API/03-endpoints/api-v2/query-language/#virtual-incoming-links","title":"Virtual incoming Links","text":"<p>Depending on the ontology design, a resource A points to B or vice versa. For example, a page A is part of a book B using the property <code>incunabula:partOf</code>. If A is marked as the main resource, then B is nested as a dependent resource in its link value <code>incunabula:partOfValue</code>. But in case B is marked as the main resource, B does not have a link value pointing to A because in fact B is pointed to by A. Instead, B has a virtual property <code>knora-api:hasIncomingLink</code> containing A's link value:</p> <pre><code>\"knora-api:hasIncomingLinkValue\" : {\n    \"@id\" : \"http://rdfh.ch/A/values/xy\",\n    \"@type\" : \"knora-api:LinkValue\",\n    \"knora-api:linkValueHasSource\" : {\n      \"@id\" : \"http://rdfh.ch/A\",\n      \"@type\" : \"incunabula:page\",\n      \"incunabula:partOfValue\" : {\n        \"@id\" : \"http://rdfh.ch/A/values/xy\",\n        \"@type\" : \"knora-api:LinkValue\",\n        \"knora-api:linkValueHasTargetIri\" : {\n          \"@id\" : \"http://rdfh.ch/B\"\n        }\n      }\n    }\n  },\n</code></pre> <p>Note that the virtually inserted link value inverts the relation by using <code>knora-api:linkValueHasSource</code>. The source of the link is A and its target B is only represented by an IRI (<code>knora-api:linkValueHasTargetIri</code>) since B is the main resource.</p>"},{"location":"DSP-API/03-endpoints/api-v2/query-language/#graph-patterns-and-result-graphs","title":"Graph Patterns and Result Graphs","text":"<p>The WHERE clause of a Gravsearch query specifies a graph pattern. Each query result will match this graph pattern, and will have the form of a graph whose starting point is a main resource. The query's graph pattern, and hence each query result graph, can span zero more levels of relations between resources. For example, a query could request regions in images on pages of books written by a certain author, articles by authors who were students of a particular professor, or authors of texts that refer to events that took place within a certain date range.</p>"},{"location":"DSP-API/03-endpoints/api-v2/query-language/#permission-checking","title":"Permission Checking","text":"<p>Each matching resource is returned with the values that the user has permission to see. If the user does not have permission to see a matching main resource, it is hidden in the results. If a user does not have permission to see a matching dependent resource, the link value is hidden.</p>"},{"location":"DSP-API/03-endpoints/api-v2/query-language/#paging","title":"Paging","text":"<p>Gravsearch results are returned in pages. The maximum number of main resources per page is determined by the API (and can be configured in <code>application.conf</code> via the setting <code>app/v2/resources-sequence/results-per-page</code>). If some resources have been filtered out because the user does not have permission to see them, a page could contain fewer results, or no results. If it is possible that more results are available in subsequent pages, the Gravsearch response will contain the predicate <code>knora-api:mayHaveMoreResults</code> with the boolean value <code>true</code>, otherwise it will not contain this predicate. Therefore, to retrieve all available results, the client must request each page one at a time, until the response does not contain <code>knora-api:mayHaveMoreResults</code>.</p>"},{"location":"DSP-API/03-endpoints/api-v2/query-language/#inference","title":"Inference","text":"<p>Gravsearch queries are understood to imply a subset of RDFS reasoning. This is done by the API by expanding the incoming query.</p> <p>Specifically, if a statement pattern specifies a property, the pattern will also match subproperties of that property, and if a statement specifies that a subject has a particular <code>rdf:type</code>, the statement will also match subjects belonging to subclasses of that type.</p> <p>If you know that reasoning will not return any additional results for your query, you can disable it by adding this line to the <code>WHERE</code> clause, which may improve query performance:</p> <pre><code>knora-api:GravsearchOptions knora-api:useInference false .\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-v2/query-language/#gravsearch-syntax","title":"Gravsearch Syntax","text":"<p>Every Gravsearch query is a valid SPARQL 1.1 CONSTRUCT query. However, Gravsearch only supports a subset of the elements that can be used in a SPARQL Construct query, and a Gravsearch CONSTRUCT Clause has to indicate which variable is to be used for the main resource in each search result.</p>"},{"location":"DSP-API/03-endpoints/api-v2/query-language/#supported-sparql-syntax","title":"Supported SPARQL Syntax","text":"<p>The current version of Gravsearch accepts <code>CONSTRUCT</code> queries whose <code>WHERE</code> clauses use the following patterns, with the specified restrictions:</p> <ul> <li><code>OPTIONAL</code>: cannot be nested in a <code>UNION</code>.</li> <li><code>UNION</code>: cannot be nested in a <code>UNION</code>.</li> <li><code>FILTER</code>: may contain a complex expression using the Boolean   operators AND and OR, as well as comparison operators. The left   argument of a comparison operator must be a query variable.   A Knora ontology entity IRI used in a <code>FILTER</code> must be a property IRI.</li> <li><code>FILTER NOT EXISTS</code></li> <li><code>MINUS</code></li> <li><code>OFFSET</code>: the <code>OFFSET</code> is needed for paging. It does not actually   refer to the number of triples to be returned, but to the   requested page of results. The default value is 0, which refers   to the first page of results.</li> <li><code>ORDER BY</code>: In SPARQL, the result of a <code>CONSTRUCT</code> query is an   unordered set of triples. However, a Gravsearch query returns an   ordered list of resources, which can be ordered by the values of   specified properties. If the query is written in the complex schema,   items below the level of DSP-API values may not be used in <code>ORDER BY</code>.</li> <li><code>BIND</code>: The value assigned must be a DSP resource IRI.</li> </ul>"},{"location":"DSP-API/03-endpoints/api-v2/query-language/#resources-properties-and-values","title":"Resources, Properties, and Values","text":"<p>Resources can be represented either by an IRI or by a variable, except for the main resource, which must be represented by a variable.</p> <p>It is possible to do a Gravsearch query in which the IRI of the main resource is already known, e.g. to request specific information about that resource and perhaps about linked resources. In this case, the IRI of the main resource must be assigned to a variable using <code>BIND</code>. Note that <code>BIND</code> statements slow the query down, therefore we recommend that you do not use them unless you have to.</p> <p>Properties can be represented by an IRI or a query variable. If a property is represented by a query variable, it can be restricted to certain property IRIs using a <code>FILTER</code>.</p> <p>A Knora value (i.e. a value attached to a <code>knora-api:Resource</code>) must be represented as a query variable.</p>"},{"location":"DSP-API/03-endpoints/api-v2/query-language/#filtering-on-values","title":"Filtering on Values","text":""},{"location":"DSP-API/03-endpoints/api-v2/query-language/#filtering-on-values-in-the-simple-schema","title":"Filtering on Values in the Simple Schema","text":"<p>In the simple schema, a variable representing a DSP-API value can be used directly in a <code>FILTER</code> expression. For example:</p> <pre><code>?book incunabula:title ?title .\nFILTER(?title = \"Zeitgl\u00f6cklein des Lebens und Leidens Christi\")\n</code></pre> <p>Here the type of <code>?title</code> is <code>xsd:string</code>.</p> <p>The following value types can be compared with literals in <code>FILTER</code> expressions in the simple schema:</p> <ul> <li>Text values (<code>xsd:string</code>)</li> <li>URI values (<code>xsd:anyURI</code>)</li> <li>Integer values (<code>xsd:integer</code>)</li> <li>Decimal values (<code>xsd:decimal</code>)</li> <li>Boolean values (<code>xsd:boolean</code>)</li> <li>Date values (<code>knora-api:Date</code>)</li> <li>List values (<code>knora-api:ListNode</code>)</li> </ul> <p>List values can only be searched for using the equal operator (<code>=</code>), performing an exact match on a list node's label. Labels can be given in different languages for a specific list node. If one of the given list node labels matches, it is considered a match. Note that in the simple schema, uniqueness is not guaranteed (as opposed to the complex schema).</p> <p>A DSP-API value may not be represented as the literal object of a predicate; for example, this is not allowed:</p> <pre><code>?book incunabula:title \"Zeitgl\u00f6cklein des Lebens und Leidens Christi\" .\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-v2/query-language/#filtering-on-values-in-the-complex-schema","title":"Filtering on Values in the Complex Schema","text":"<p>In the complex schema, variables representing DSP-API values are not literals. You must add something to the query (generally a statement) to get a literal from a DSP-API value. For example:</p> <pre><code>?book incunabula:title ?title .\n?title knora-api:valueAsString \"Zeitgl\u00f6cklein des Lebens und Leidens Christi\" .\n</code></pre> <p>Here the type of <code>?title</code> is <code>knora-api:TextValue</code>. Note that no <code>FILTER</code> is needed in this example. But if you want to use a different comparison operator, you need a <code>FILTER</code>:</p> <pre><code>?page incunabula:seqnum ?seqnum .\n?seqnum knora-api:intValueAsInt ?seqnumInt .\nFILTER(?seqnumInt &lt;= 10)\n</code></pre> <p>To match a date value in the complex schema, you must use the <code>knora-api:toSimpleDate</code> function in a <code>FILTER</code> (see Date Comparisons). The predicates of <code>knora-api:DateValue</code> (<code>knora-api:dateValueHasStartYear</code>, etc.) are not available in Gravsearch.</p>"},{"location":"DSP-API/03-endpoints/api-v2/query-language/#date-comparisons","title":"Date Comparisons","text":"<p>In the simple schema, you can compare a date value directly with a <code>knora-api:Date</code> in a <code>FILTER</code>:</p> <pre><code>?book incunabula:pubdate ?pubdate .\nFILTER(?pubdate &lt; \"JULIAN:1497\"^^knora-api:Date)\n</code></pre> <p>In the complex schema, you must use the function <code>knora-api:toSimpleDate</code>, passing it the variable representing the date value. The date literal used in the comparison must still be a <code>knora-api:Date</code> in the simple schema. This is the only case in which you can use both schemas in a single query:</p> <pre><code>PREFIX incunabula: &lt;http://0.0.0.0:3333/ontology/0803/incunabula/v2#&gt;\nPREFIX knora-api: &lt;http://api.knora.org/ontology/knora-api/v2#&gt;\nPREFIX knora-api-simple: &lt;http://api.knora.org/ontology/knora-api/simple/v2#&gt;\n\nCONSTRUCT {\n    ?book knora-api:isMainResource true .\n    ?book incunabula:pubdate ?pubdate .\n} WHERE {\n    ?book a incunabula:book .\n    ?book incunabula:pubdate ?pubdate .\n    FILTER(knora-api:toSimpleDate(?pubdate) &lt; \"JULIAN:1497\"^^knora-api-simple:Date)\n} ORDER BY ?pubdate\n</code></pre> <p>You can also use <code>knora-api:toSimpleDate</code> with to search for date tags in standoff text markup (see Matching Standoff Dates).</p> <p>Note that the given date value for comparison must have the following format: </p> <pre><code>(GREGORIAN|JULIAN|ISLAMIC):\\d{1,4}(-\\d{1,2}(-\\d{1,2})?)?( BC| AD| BCE| CE)?(:\\d{1,4}(-\\d{1,2}(-\\d{1,2})?)?( BC| AD| BCE| CE)?)?\n</code></pre> <p>E.g. an exact date like <code>GREGORIAN:2015-12-03</code> or a period like <code>GREGORIAN:2015-12-03:2015-12-04</code>. Dates may also have month or year precision, e.g. <code>ISLAMIC:1407-02</code> (the whole month of december) or <code>JULIAN:1330</code>  (the whole year 1330). An optional ERA indicator term (<code>BCE</code>, <code>CE</code>, or <code>BC</code>, <code>AD</code>) can be added to the date, when no  era is provided the default era <code>AD</code> will be considered. Era can be given as <code>GREGORIAN:1220 BC</code> or in range as  <code>GREGORIAN:600 BC:480 BC</code>.</p>"},{"location":"DSP-API/03-endpoints/api-v2/query-language/#searching-for-matching-words","title":"Searching for Matching Words","text":"<p>The function <code>knora-api:matchText</code> searches for matching words anywhere in a text value and is implemented using a full-text search index if available. The first argument must represent a text value (a <code>knore-api:TextValue</code> in the complex schema, or an <code>xsd:string</code> in the simple schema). The second argument is a string literal containing the words to be matched, separated by spaces. The function supports the Lucene Query Parser syntax. Note that Lucene's default operator is a logical OR when submitting several search terms.</p> <p>This function can only be used as the top-level expression in a <code>FILTER</code>.</p> <p>For example, to search for titles that contain the words 'Zeitgl\u00f6cklein' and 'Lebens':</p> <pre><code>?book incunabule:title ?title .\nFILTER knora-api:matchText(?title, \"Zeitgl\u00f6cklein Lebens\")\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-v2/query-language/#filtering-text-by-language","title":"Filtering Text by Language","text":"<p>To filter a text value by language in the simple schema, use the SPARQL <code>lang</code> function on the text value, e.g.:</p> <pre><code>FILTER(lang(?text) = \"fr\")\n</code></pre> <p>In the complex schema, the <code>lang</code> function is not supported. Use the text value's <code>knora-api:textValueHasLanguage</code> predicate instead:</p> <pre><code>?text knora-api:textValueHasLanguage \"fr\" .\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-v2/query-language/#regular-expressions","title":"Regular Expressions","text":"<p>The SPARQL <code>regex</code> function is supported. In the simple schema, you can use it directly on the text value, e.g.</p> <pre><code>?book incunabula:title ?title .\nFILTER regex(?title, \"Zeit\", \"i\")\n</code></pre> <p>In the complex schema, use it on the object of the text value's <code>knora-api:valueAsString</code> predicate:</p> <pre><code>?book incunabula:title ?title .\n?title knora-api:valueAsString ?titleStr .\nFILTER regex(?titleStr, \"Zeit\", \"i\")\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-v2/query-language/#searching-for-text-markup","title":"Searching for Text Markup","text":"<p>To refer to standoff markup in text values, you must write your query in the complex schema.</p> <p>A <code>knora-api:TextValue</code> can have the property <code>knora-api:textValueHasStandoff</code>, whose objects are the standoff markup tags in the text. You can match the tags you're interested in using <code>rdf:type</code> or other properties of each tag.</p>"},{"location":"DSP-API/03-endpoints/api-v2/query-language/#matching-text-in-a-standoff-tag","title":"Matching Text in a Standoff Tag","text":"<p>The function <code>knora-api:matchTextInStandoff</code> searches for standoff tags containing certain terms. The implementation is optimised using the full-text search index if available. The function takes three arguments:</p> <ol> <li>A variable representing a text value.</li> <li>A variable representing a standoff tag.</li> <li>A string literal containing space-separated search terms.</li> </ol> <p>This function can only be used as the top-level expression in a <code>FILTER</code>. For example:</p> <pre><code>PREFIX knora-api: &lt;http://api.knora.org/ontology/knora-api/v2#&gt;\nPREFIX standoff: &lt;http://api.knora.org/ontology/standoff/v2#&gt;\nPREFIX beol: &lt;http://0.0.0.0:3333/ontology/0801/beol/v2#&gt;\n\nCONSTRUCT {\n    ?letter knora-api:isMainResource true .\n    ?letter beol:hasText ?text .\n} WHERE {\n    ?letter a beol:letter .\n    ?letter beol:hasText ?text .\n    ?text knora-api:textValueHasStandoff ?standoffParagraphTag .\n    ?standoffParagraphTag a standoff:StandoffParagraphTag .\n    FILTER knora-api:matchTextInStandoff(?text, ?standoffParagraphTag, \"Grund Richtigkeit\")\n}\n</code></pre> <p>Here we are looking for letters containing the words \"Grund\" and \"Richtigkeit\" within a single paragraph.</p>"},{"location":"DSP-API/03-endpoints/api-v2/query-language/#matching-standoff-links","title":"Matching Standoff Links","text":"<p>If you are only interested in specifying that a resource has some text value containing a standoff link to another resource, the most efficient way is to use the property <code>knora-api:hasStandoffLinkTo</code>, whose subjects and objects are resources. This property is automatically maintained by the API. For example:</p> <pre><code>PREFIX knora-api: &lt;http://api.knora.org/ontology/knora-api/v2#&gt;\nPREFIX beol: &lt;http://0.0.0.0:3333/ontology/0801/beol/v2#&gt;\n\nCONSTRUCT {\n    ?letter knora-api:isMainResource true .\n    ?letter beol:hasText ?text .\n} WHERE {\n    ?letter a beol:letter .\n    ?letter beol:hasText ?text .\n    ?letter knora-api:hasStandoffLinkTo ?person .\n    ?person a beol:person .\n    ?person beol:hasIAFIdentifier ?iafIdentifier .\n    ?iafIdentifier knora-api:valueAsString \"(VIAF)271899510\" .\n}\n</code></pre> <p>Here we are looking for letters containing a link to the historian Claude Jordan, who is identified by his Integrated Authority File identifier, <code>(VIAF)271899510</code>.</p> <p>However, if you need to specify the context in which the link tag occurs, you must use the function <code>knora-api:standoffLink</code>. It takes three arguments:</p> <ol> <li>A variable or IRI representing the resource that is the source of the link.</li> <li>A variable representing the standoff link tag.</li> <li>A variable or IRI representing the resource that is the target of the link.</li> </ol> <p>This function can only be used as the top-level expression in a <code>FILTER</code>. For example:</p> <pre><code>PREFIX knora-api: &lt;http://api.knora.org/ontology/knora-api/v2#&gt;\nPREFIX standoff: &lt;http://api.knora.org/ontology/standoff/v2#&gt;\nPREFIX beol: &lt;http://0.0.0.0:3333/ontology/0801/beol/v2#&gt;\n\nCONSTRUCT {\n    ?letter knora-api:isMainResource true .\n    ?letter beol:hasText ?text .\n} WHERE {\n    ?letter a beol:letter .\n    ?letter beol:hasText ?text .\n    ?text knora-api:textValueHasStandoff ?standoffLinkTag .\n    ?standoffLinkTag a knora-api:StandoffLinkTag .\n    FILTER knora-api:standoffLink(?letter, ?standoffLinkTag, ?person)\n    ?person a beol:person .\n    ?person beol:hasIAFIdentifier ?iafIdentifier .\n    ?iafIdentifier knora-api:valueAsString \"(VIAF)271899510\" .\n    ?standoffLinkTag knora-api:standoffTagHasStartParent ?standoffItalicTag .\n    ?standoffItalicTag a standoff:StandoffItalicTag .\n}\n</code></pre> <p>This has the same effect as the previous example, except that because we are matching the link tag itself, we can specify that its immediate parent is a <code>StandoffItalicTag</code>.</p> <p>If you actually want to get the target of the link (in this example, <code>?person</code>) in the search results, you need to add a statement like <code>?letter knora-api:hasStandoffLinkTo ?person .</code> to the <code>WHERE</code> clause and to the <code>CONSTRUCT</code> clause:</p> <pre><code>PREFIX knora-api: &lt;http://api.knora.org/ontology/knora-api/v2#&gt;\nPREFIX standoff: &lt;http://api.knora.org/ontology/standoff/v2#&gt;\nPREFIX beol: &lt;http://0.0.0.0:3333/ontology/0801/beol/v2#&gt;\n\nCONSTRUCT {\n    ?letter knora-api:isMainResource true .\n    ?letter beol:hasText ?text .\n    ?letter knora-api:hasStandoffLinkTo ?person .\n} WHERE {\n    ?letter a beol:letter .\n    ?letter beol:hasText ?text .\n    ?text knora-api:textValueHasStandoff ?standoffLinkTag .\n    ?standoffLinkTag a knora-api:StandoffLinkTag .\n    FILTER knora-api:standoffLink(?letter, ?standoffLinkTag, ?person)\n    ?person a beol:person .\n    ?person beol:hasIAFIdentifier ?iafIdentifier .\n    ?iafIdentifier knora-api:valueAsString \"(VIAF)271899510\" .\n    ?standoffLinkTag knora-api:standoffTagHasStartParent ?standoffItalicTag .\n    ?standoffItalicTag a standoff:StandoffItalicTag .\n    ?letter knora-api:hasStandoffLinkTo ?person .\n}\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-v2/query-language/#matching-standoff-dates","title":"Matching Standoff Dates","text":"<p>You can use the <code>knora-api:toSimpleDate</code> function (see @refDate Comparisons) to match dates in standoff date tags, i.e. instances of <code>knora-api:StandoffDateTag</code> or of one of its subclasses. For example, here we are looking for a text containing an <code>anything:StandoffEventTag</code> (which is a project-specific subclass of <code>knora-api:StandoffDateTag</code>) representing an event that occurred sometime during the month of December 2016:</p> <pre><code>PREFIX knora-api: &lt;http://api.knora.org/ontology/knora-api/v2#&gt;\nPREFIX anything: &lt;http://0.0.0.0:3333/ontology/0001/anything/v2#&gt;\nPREFIX knora-api-simple: &lt;http://api.knora.org/ontology/knora-api/simple/v2#&gt;\n\nCONSTRUCT {\n    ?thing knora-api:isMainResource true .\n    ?thing anything:hasText ?text .\n} WHERE {\n    ?thing a anything:Thing .\n    ?thing anything:hasText ?text .\n    ?text knora-api:textValueHasStandoff ?standoffEventTag .\n    ?standoffEventTag a anything:StandoffEventTag .\n    FILTER(knora-api:toSimpleDate(?standoffEventTag) = \"GREGORIAN:2016-12 CE\"^^knora-api-simple:Date)\n}\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-v2/query-language/#matching-ancestor-tags","title":"Matching Ancestor Tags","text":"<p>Suppose we want to search for a standoff date in a paragraph, but we know that the paragraph tag might not be the immediate parent of the date tag. For example, the date tag might be in an italics tag, which is in a paragraph tag. In that case, we can use the inferred property <code>knora-api:standoffTagHasStartAncestor</code>. We can modify the previous example to do this:</p> <pre><code>PREFIX knora-api: &lt;http://api.knora.org/ontology/knora-api/v2#&gt;\nPREFIX standoff: &lt;http://api.knora.org/ontology/standoff/v2#&gt;\nPREFIX anything: &lt;http://0.0.0.0:3333/ontology/0001/anything/v2#&gt;\nPREFIX knora-api-simple: &lt;http://api.knora.org/ontology/knora-api/simple/v2#&gt;\n\nCONSTRUCT {\n    ?thing knora-api:isMainResource true .\n    ?thing anything:hasText ?text .\n} WHERE {\n    ?thing a anything:Thing .\n    ?thing anything:hasText ?text .\n    ?text knora-api:textValueHasStandoff ?standoffDateTag .\n    ?standoffDateTag a knora-api:StandoffDateTag .\n    FILTER(knora-api:toSimpleDate(?standoffDateTag) = \"GREGORIAN:2016-12-24 CE\"^^knora-api-simple:Date)\n    ?standoffDateTag knora-api:standoffTagHasStartAncestor ?standoffParagraphTag .\n    ?standoffParagraphTag a standoff:StandoffParagraphTag .\n}\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-v2/query-language/#filtering-on-rdfslabel","title":"Filtering on <code>rdfs:label</code>","text":"<p>The <code>rdfs:label</code> of a resource is not a DSP-API value, but you can still search for it. This can be done in the same ways in the simple or complex schema:</p> <p>Using a string literal object:</p> <pre><code>?book rdfs:label \"Zeitgl\u00f6cklein des Lebens und Leidens Christi\" .\n</code></pre> <p>Using a variable and a FILTER:</p> <pre><code>?book rdfs:label ?label .\nFILTER(?label = \"Zeitgl\u00f6cklein des Lebens und Leidens Christi\")\n</code></pre> <p>Using the <code>regex</code> function:</p> <pre><code>?book rdfs:label ?bookLabel .\nFILTER regex(?bookLabel, \"Zeit\", \"i\")\n</code></pre> <p>To match words in an <code>rdfs:label</code> using the full-text search index, use the <code>knora-api:matchLabel</code> function, which works like <code>knora-api:matchText</code>, except that the first argument is a variable representing a resource:</p> <pre><code>FILTER knora-api:matchLabel(?book, \"Zeitgl\u00f6cklein\")\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-v2/query-language/#filtering-on-resource-iris","title":"Filtering on Resource IRIs","text":"<p>A <code>FILTER</code> can compare a variable with another variable or IRI representing a resource. For example, to find a letter whose author and recipient are different persons:</p> <pre><code>PREFIX beol: &lt;http://0.0.0.0:3333/ontology/0801/beol/v2#&gt;\nPREFIX knora-api: &lt;http://api.knora.org/ontology/knora-api/v2#&gt;\n\nCONSTRUCT {\n    ?letter knora-api:isMainResource true .\n    ?letter beol:hasAuthor ?person1 .\n    ?letter beol:hasRecipient ?person2 .\n} WHERE {\n    ?letter a beol:letter .\n    ?letter beol:hasAuthor ?person1 .\n    ?letter beol:hasRecipient ?person2 .\n    FILTER(?person1 != ?person2) .\n}\nOFFSET 0\n</code></pre> <p>To find a letter whose author is not a person with a specified IRI:</p> <pre><code>PREFIX beol: &lt;http://0.0.0.0:3333/ontology/0801/beol/v2#&gt;\nPREFIX knora-api: &lt;http://api.knora.org/ontology/knora-api/v2#&gt;\n\nCONSTRUCT {\n    ?letter knora-api:isMainResource true .\n    ?letter beol:hasAuthor ?person1 .\n    ?letter beol:hasRecipient ?person2 .\n} WHERE {\n    ?letter a beol:letter .\n    ?letter beol:hasAuthor ?person1 .\n    ?letter beol:hasRecipient ?person2 .\n    FILTER(?person1 != &lt;http://rdfh.ch/0801/F4n1xKa3TCiR4llJeElAGA&gt;) .\n}\nOFFSET 0\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-v2/query-language/#construct-clause","title":"CONSTRUCT Clause","text":"<p>In the <code>CONSTRUCT</code> clause of a Gravsearch query, the variable representing the main resource must be indicated with <code>knora-api:isMainResource true</code>. Exactly one variable representing a resource must be marked in this way.</p> <p>Any other statements in the <code>CONSTRUCT</code> clause must also be present in the WHERE clause. If a variable representing a resource or value is used in the <code>WHERE</code> clause but not in the <code>CONSTRUCT</code> clause, the matching resources or values will not be included in the results.</p> <p>If the query is written in the complex schema, all variables in the <code>CONSTRUCT</code> clause must refer to DSP-API resources, DSP-API values, or properties. Data below the level of values may not be mentioned in the <code>CONSTRUCT</code> clause.</p> <p>Predicates from the <code>rdf</code>, <code>rdfs</code>, and <code>owl</code> ontologies may not be used in the <code>CONSTRUCT</code> clause. The <code>rdfs:label</code> of each matching resource is always returned, so there is no need to mention it in the query.</p>"},{"location":"DSP-API/03-endpoints/api-v2/query-language/#gravsearch-by-example","title":"Gravsearch by Example","text":"<p>In this section, we provide some sample queries of different complexity to illustrate the usage of Gravsearch.</p>"},{"location":"DSP-API/03-endpoints/api-v2/query-language/#getting-all-the-components-of-a-compound-resource","title":"Getting All the Components of a Compound Resource","text":"<p>In order to get all the components of a compound resource, the following Gravsearch query can be sent to the API.</p> <p>In this case, the compound resource is an <code>incunabula:book</code> identified by the IRI <code>http://rdfh.ch/0803/c5058f3a</code> and the components are of type <code>incunabula:page</code> (test data for the Incunabula project). Since inference is assumed, we can use <code>knora-api:StillImageRepresentation</code> (<code>incunabula:page</code> is one of its subclasses). This makes the query more generic and allows for reuse (for instance, a client would like to query different types of compound resources defined in different ontologies).</p> <p><code>ORDER BY</code> is used to sort the components by their sequence number.</p> <p><code>OFFSET</code> is set to 0 to get the first page of results.</p> <pre><code>PREFIX knora-api: &lt;http://api.knora.org/ontology/knora-api/simple/v2#&gt;\n\nCONSTRUCT {\n   ?component knora-api:isMainResource true . # marking of the component searched for as the main resource, required\n   ?component knora-api:seqnum ?seqnum . # return the sequence number in the response\n   ?component knora-api:hasStillImageFileValue ?file . # return the StillImageFile in the response\n} WHERE {\n   ?component a knora-api:StillImageRepresentation . # restriction of the type of component\n   ?component knora-api:isPartOf &lt;http://rdfh.ch/0803/c5058f3a&gt; . # component relates to a compound resource via this property\n   ?component knora-api:seqnum ?seqnum . # component must have a sequence number\n   ?component knora-api:hasStillImageFileValue ?file . # component must have a StillImageFile\n}\nORDER BY ASC(?seqnum) # order by sequence number, ascending\nOFFSET 0 # get first page of results\n</code></pre> <p>The <code>incunabula:book</code> with the IRI <code>http://rdfh.ch/0803/c5058f3a</code> has 402 pages. (This result can be obtained by doing a count query; see Submitting Gravsearch Queries.) However, with <code>OFFSET 0</code>, only the first page of results is returned. The same query can be sent again with <code>OFFSET 1</code> to get the next page of results, and so forth. When a page of results is not full (see settings in <code>app/v2</code> in <code>application.conf</code>) or is empty, no more results are available.</p> <p>By design, it is not possible for the client to get more than one page of results at a time; this is intended to prevent performance problems that would be caused by huge responses. A client that wants to download all the results of a query must request each page sequentially.</p> <p>Let's assume the client is not interested in all of the book's pages, but just in first ten of them. In that case, the sequence number can be restricted using a <code>FILTER</code> that is added to the query's <code>WHERE</code> clause:</p> <pre><code>FILTER (?seqnum &lt;= 10)\n</code></pre> <p>The first page starts with sequence number 1, so with this <code>FILTER</code> only the first ten pages are returned.</p> <p>This query would be exactly the same in the complex schema, except for the expansion of the <code>knora-api</code> prefix:</p> <pre><code>PREFIX knora-api: &lt;http://api.knora.org/ontology/knora-api/v2#&gt;\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-v2/query-language/#traversing-multiple-links","title":"Traversing Multiple Links","text":"<p>Here we are looking for regions of pages that are part of books that have a particular title. In the simple schema:</p> <pre><code>PREFIX incunabula: &lt;http://0.0.0.0:3333/ontology/0803/incunabula/simple/v2#&gt;\nPREFIX knora-api: &lt;http://api.knora.org/ontology/knora-api/simple/v2#&gt;\n\nCONSTRUCT {\n  ?region knora-api:isMainResource true ;\n    knora-api:isRegionOf ?page .\n\n  ?page incunabula:partOf ?book .\n\n  ?book incunabula:title ?title .\n} WHERE {\n  ?region a knora-api:Region ;\n    knora-api:isRegionOf ?page .\n\n  ?page a incunabula:page ;\n    incunabula:partOf ?book .\n\n  ?book incunabula:title ?title .\n\n  FILTER(?title = \"Zeitgl\u00f6cklein des Lebens und Leidens Christi\")\n}\n</code></pre> <p>In the complex schema:</p> <pre><code>PREFIX incunabula: &lt;http://0.0.0.0:3333/ontology/0803/incunabula/v2#&gt;\nPREFIX knora-api: &lt;http://api.knora.org/ontology/knora-api/v2#&gt;\n\nCONSTRUCT {\n  ?region knora-api:isMainResource true ;\n    knora-api:isRegionOf ?page .\n\n  ?page incunabula:partOf ?book .\n\n  ?book incunabula:title ?title .\n} WHERE {\n  ?region a knora-api:Region ;\n    knora-api:isRegionOf ?page .\n\n  ?page a incunabula:page ;\n    incunabula:partOf ?book .\n\n  ?book incunabula:title ?title .\n\n  ?title knora-api:valueAsString \"Zeitgl\u00f6cklein des Lebens und Leidens Christi\" .\n}\n</code></pre> <p>If we remove the line <code>?book incunabula:title ?title .</code> from the <code>CONSTRUCT</code> clause, so that the <code>CONSTRUCT</code> clause no longer mentions <code>?title</code>, the response will contain the same matching resources, but the titles of those resources will not be included in the response.</p>"},{"location":"DSP-API/03-endpoints/api-v2/query-language/#requesting-a-graph-starting-with-a-known-resource","title":"Requesting a Graph Starting with a Known Resource","text":"<p>Here the IRI of the main resource is already known and we want specific information about it, as well as about related resources. In this case, the IRI of the main resource must be assigned to a variable using <code>BIND</code>:</p> <pre><code>PREFIX beol: &lt;http://0.0.0.0:3333/ontology/0801/beol/simple/v2#&gt;\nPREFIX knora-api: &lt;http://api.knora.org/ontology/knora-api/simple/v2#&gt;\n\nCONSTRUCT {\n  ?letter knora-api:isMainResource true ;\n    beol:creationDate ?date ;\n    ?linkingProp1 ?person1 .\n\n  ?person1 beol:hasFamilyName ?familyName .\n} WHERE {\n  BIND(&lt;http://rdfh.ch/0801/_B3lQa6tSymIq7_7SowBsA&gt; AS ?letter)\n\n  ?letter a beol:letter ;\n    beol:creationDate ?date ;\n    ?linkingProp1 ?person1 .\n\n  FILTER(?linkingProp1 = beol:hasAuthor || ?linkingProp1 = beol:hasRecipient)\n\n  ?person1 beol:hasFamilyName ?familyName .\n} ORDER BY ?date\n</code></pre> <p>This query would be the same in the complex schema, except for the prefix expansions:</p> <pre><code>PREFIX beol: &lt;http://0.0.0.0:3333/ontology/0801/beol/v2#&gt;\nPREFIX knora-api: &lt;http://api.knora.org/ontology/knora-api/v2#&gt;\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-v2/query-language/#searching-for-a-list-value-referring-to-a-particular-list-node","title":"Searching for a List Value Referring to a Particular List Node","text":"<p>Since list nodes are represented by their IRI in the complex schema, uniqueness is guranteed (as opposed to the simple schema). Also all the subnodes of the given list node are considered a match.</p> <pre><code>PREFIX knora-api: &lt;http://api.knora.org/ontology/knora-api/v2#&gt;\nPREFIX anything: &lt;http://0.0.0.0:3333/ontology/0001/anything/v2#&gt;\n\nCONSTRUCT {\n    ?thing knora-api:isMainResource true .\n    ?thing anything:hasListItem ?listItem .\n} WHERE {\n    ?thing anything:hasListItem ?listItem .\n    ?listItem knora-api:listValueAsListNode &lt;http://rdfh.ch/lists/0001/treeList02&gt; .\n}\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-v2/query-language/#type-inference","title":"Type Inference","text":"<p>Gravsearch needs to be able to determine the types of the entities that query variables and IRIs refer to in the <code>WHERE</code> clause. In most cases, it can infer these from context and from the ontologies used. In particular, it needs to know:</p> <ul> <li>The type of the subject and object of each statement.</li> <li>The type that is expected as the object of each predicate.</li> </ul>"},{"location":"DSP-API/03-endpoints/api-v2/query-language/#type-annotations","title":"Type Annotations","text":"<p>When one or more types cannot be inferred, Gravsearch will return an error message indicating the entities for which it could not determine types. The missing information must then be given by adding type annotations to the query. This can always done by adding statements with the predicate <code>rdf:type</code>. The subject must be a resource or value, and the object must either be <code>knora-api:Resource</code> (if the subject is a resource) or the subject's specific type (if it is a value).</p> <p>For example, consider this query that uses a non-DSP property:</p> <pre><code>PREFIX incunabula: &lt;http://0.0.0.0:3333/ontology/0803/incunabula/simple/v2#&gt;\nPREFIX knora-api: &lt;http://api.knora.org/ontology/knora-api/simple/v2#&gt;\nPREFIX dcterms: &lt;http://purl.org/dc/terms/&gt;\n\nCONSTRUCT {\n    ?book knora-api:isMainResource true ;\n        dcterms:title ?title .\n\n} WHERE {\n    ?book dcterms:title ?title .\n}\n</code></pre> <p>This produces the error message:</p> <pre><code>The types of one or more entities could not be determined:\n  ?book, &lt;http://purl.org/dc/terms/title&gt;, ?title\n</code></pre> <p>To solve this problem, it is enough to specify the types of <code>?book</code> and <code>?title</code>; the type of the expected object of <code>dcterms:title</code> can then be inferred from the type of <code>?title</code>.</p> <pre><code>PREFIX incunabula: &lt;http://0.0.0.0:3333/ontology/0803/incunabula/simple/v2#&gt;\nPREFIX knora-api: &lt;http://api.knora.org/ontology/knora-api/simple/v2#&gt;\nPREFIX dcterms: &lt;http://purl.org/dc/terms/&gt;\n\nCONSTRUCT {\n    ?book knora-api:isMainResource true ;\n        dcterms:title ?title .\n\n} WHERE {\n\n    ?book rdf:type incunabula:book ;\n        dcterms:title ?title .\n\n    ?title rdf:type xsd:string .\n\n}\n</code></pre> <p>It would also be possible to annotate the property itself, using the predicate <code>knora-api:objectType</code>; then the type of <code>?title</code> would be inferred:</p> <pre><code>PREFIX incunabula: &lt;http://0.0.0.0:3333/ontology/0803/incunabula/simple/v2#&gt;\nPREFIX knora-api: &lt;http://api.knora.org/ontology/knora-api/simple/v2#&gt;\nPREFIX dcterms: &lt;http://purl.org/dc/terms/&gt;\n\nCONSTRUCT {\n    ?book knora-api:isMainResource true ;\n        dcterms:title ?title .\n\n} WHERE {\n\n    ?book rdf:type incunabula:book ;\n        dcterms:title ?title .\n\n    dcterms:title knora-api:objectType xsd:string .\n\n}\n</code></pre> <p>Note that it only makes sense to use <code>dcterms:title</code> in the simple schema, because its object is supposed to be a literal.</p> <p>Here is another example, using a non-DSP class:</p> <pre><code>PREFIX knora-api: &lt;http://api.knora.org/ontology/knora-api/simple/v2#&gt;\nPREFIX foaf: &lt;http://xmlns.com/foaf/0.1/&gt;\n\nCONSTRUCT {\n    ?person knora-api:isMainResource true .\n} WHERE {\n    ?person a foaf:Person .\n    ?person foaf:familyName ?familyName .\n    FILTER(?familyName = \"Meier\")\n}\n</code></pre> <p>This produces the error message:</p> <pre><code>Types could not be determined for one or more entities: ?person\n</code></pre> <p>The solution is to specify that <code>?person</code> is a <code>knora-api:Resource</code>:</p> <pre><code>PREFIX knora-api: &lt;http://api.knora.org/ontology/knora-api/simple/v2#&gt;\nPREFIX foaf: &lt;http://xmlns.com/foaf/0.1/&gt;\n\nCONSTRUCT {\n    ?person knora-api:isMainResource true .\n} WHERE {\n    ?person a foaf:Person .\n    ?person a knora-api:Resource .\n    ?person foaf:familyName ?familyName .\n    FILTER(?familyName = \"Meier\")\n}\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-v2/query-language/#inconsistent-types","title":"Inconsistent Types","text":"<p>Gravsearch will also reject a query if an entity is used with inconsistent types. For example:</p> <pre><code>PREFIX incunabula: &lt;http://0.0.0.0:3333/ontology/0803/incunabula/simple/v2#&gt;\nPREFIX knora-api: &lt;http://api.knora.org/ontology/knora-api/simple/v2#&gt;\n\nCONSTRUCT {\n    ?book knora-api:isMainResource true ;\n        incunabula:pubdate ?pubdate .\n} WHERE {\n    ?book a incunabula:book ;\n        incunabula:pubdate ?pubdate .\n\n  FILTER(?pubdate = \"JULIAN:1497-03-01\") .\n}\n</code></pre> <p>This returns the error message:</p> <pre><code>One or more entities have inconsistent types:\n\n&lt;http://0.0.0.0:3333/ontology/0803/incunabula/simple/v2#pubdate&gt;\n  knora-api:objectType &lt;http://api.knora.org/ontology/knora-api/simple/v2#Date&gt; ;\n  knora-api:objectType &lt;http://www.w3.org/2001/XMLSchema#string&gt; .\n\n?pubdate rdf:type &lt;http://api.knora.org/ontology/knora-api/simple/v2#Date&gt; ;\n  rdf:type &lt;http://www.w3.org/2001/XMLSchema#string&gt; .\n</code></pre> <p>This is because the <code>incunabula</code> ontology says that the object of <code>incunabula:pubdate</code> must be a <code>knora-api:Date</code>, but the <code>FILTER</code> expression compares <code>?pubdate</code> with an <code>xsd:string</code>. The solution is to specify the type of the literal in the <code>FILTER</code>:</p> <pre><code>PREFIX incunabula: &lt;http://0.0.0.0:3333/ontology/0803/incunabula/simple/v2#&gt;\nPREFIX knora-api: &lt;http://api.knora.org/ontology/knora-api/simple/v2#&gt;\n\nCONSTRUCT {\n    ?book knora-api:isMainResource true ;\n        incunabula:pubdate ?pubdate .\n} WHERE {\n    ?book a incunabula:book ;\n        incunabula:pubdate ?pubdate .\n\n  FILTER(?pubdate = \"JULIAN:1497-03-01\"^^knora-api:Date) .\n}\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-v2/query-language/#scoping-issues","title":"Scoping Issues","text":"<p>SPARQL is evaluated from the bottom up. A <code>UNION</code> block therefore opens a new scope, in which variables bound at higher levels are not necessarily in scope. This can cause unexpected results if queries are not carefully designed. Gravsearch tries to prevent this by rejecting queries in the following cases.</p>"},{"location":"DSP-API/03-endpoints/api-v2/query-language/#filter-in-union","title":"FILTER in UNION","text":"<p>A <code>FILTER</code> in a <code>UNION</code> block can only use variables that are bound in the same block, otherwise the query will be rejected. This query is invalid because <code>?text</code> is not bound in the <code>UNION</code> block containing the <code>FILTER</code> where the variable is used:</p> <pre><code>PREFIX knora-api: &lt;http://api.knora.org/ontology/knora-api/simple/v2#&gt;\nPREFIX mls: &lt;http://0.0.0.0:3333/ontology/0807/mls/simple/v2#&gt;\n\nCONSTRUCT {\n    ?lemma knora-api:isMainResource true .\n    ?lemma mls:hasLemmaText ?text .        \n} WHERE {\n    ?lemma a mls:Lemma .\n    ?lemma mls:hasLemmaText ?text .\n\n    {\n        ?lemma mls:hasPseudonym ?pseudo .\n        FILTER regex(?pseudo, \"Abel\", \"i\") .\n    } UNION {\n        FILTER regex(?text, \"Abel\", \"i\") .\n    }\n}\nORDER BY ASC(?text)\nOFFSET 0\n</code></pre> <p>It can be corrected like this:</p> <pre><code>PREFIX knora-api: &lt;http://api.knora.org/ontology/knora-api/simple/v2#&gt;\nPREFIX mls: &lt;http://0.0.0.0:3333/ontology/0807/mls/simple/v2#&gt;\n\nCONSTRUCT {\n    ?lemma knora-api:isMainResource true .\n    ?lemma mls:hasLemmaText ?text .        \n} WHERE {\n    ?lemma a mls:Lemma .\n    ?lemma mls:hasLemmaText ?text .\n\n    {\n        ?lemma mls:hasPseudonym ?pseudo .\n        FILTER regex(?pseudo, \"Abel\", \"i\") .\n    } UNION {\n        ?lemma mls:hasLemmaText ?text .\n        FILTER regex(?text, \"Abel\", \"i\") .\n    }\n}\nORDER BY ASC(?text)\nOFFSET 0\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-v2/query-language/#order-by","title":"ORDER BY","text":"<p>A variable used in <code>ORDER BY</code> must be bound at the top level of the <code>WHERE</code> clause. This query is invalid, because <code>?int</code> is not bound at the top level of the <code>WHERE</code> clause:</p> <pre><code>PREFIX knora-api: &lt;http://api.knora.org/ontology/knora-api/v2#&gt;\nPREFIX anything: &lt;http://0.0.0.0:3333/ontology/0001/anything/v2#&gt;\n\nCONSTRUCT {\n    ?thing knora-api:isMainResource true .\n    ?thing anything:hasInteger ?int .\n    ?thing anything:hasRichtext ?richtext .\n    ?thing anything:hasText ?text .\n} WHERE {\n    ?thing a knora-api:Resource .\n    ?thing a anything:Thing .\n\n    {\n        ?thing anything:hasRichtext ?richtext .\n        FILTER knora-api:matchText(?richtext, \"test\")\n        ?thing anything:hasInteger ?int .\n    }\n    UNION\n    {\n        ?thing anything:hasText ?text .\n        FILTER knora-api:matchText(?text, \"test\")\n        ?thing anything:hasInteger ?int .\n    }\n}\nORDER BY (?int)\n</code></pre> <p>It can be corrected like this:</p> <pre><code>PREFIX knora-api: &lt;http://api.knora.org/ontology/knora-api/v2#&gt;\nPREFIX anything: &lt;http://0.0.0.0:3333/ontology/0001/anything/v2#&gt;\n\nCONSTRUCT {\n    ?thing knora-api:isMainResource true .\n    ?thing anything:hasInteger ?int .\n    ?thing anything:hasRichtext ?richtext .\n    ?thing anything:hasText ?text .\n} WHERE {\n    ?thing a knora-api:Resource .\n    ?thing a anything:Thing .\n    ?thing anything:hasInteger ?int .\n\n    {\n        ?thing anything:hasRichtext ?richtext .\n        FILTER knora-api:matchText(?richtext, \"test\")\n    }\n    UNION\n    {\n        ?thing anything:hasText ?text .\n        FILTER knora-api:matchText(?text, \"test\")\n    }\n}\nORDER BY (?int)\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-v2/query-language/#query-optimization-by-dependency","title":"Query Optimization by Dependency","text":"<p>The query performance of triplestores, such as Fuseki, is highly dependent on the order of query patterns. To improve performance, Gravsearch automatically reorders the statement patterns in the WHERE clause according to their dependencies on each other, to minimise the number of possible matches for each pattern.</p> <p>Consider the following Gravsearch query:</p> <pre><code>PREFIX beol: &lt;http://0.0.0.0:3333/ontology/0801/beol/v2#&gt;\nPREFIX knora-api: &lt;http://api.knora.org/ontology/knora-api/v2#&gt;\n\nCONSTRUCT {\n  ?letter knora-api:isMainResource true .\n  ?letter ?linkingProp1  ?person1 .\n  ?letter ?linkingProp2  ?person2 .\n  ?letter beol:creationDate ?date .\n} WHERE {\n  ?letter beol:creationDate ?date .\n\n  ?letter ?linkingProp1 ?person1 .\n  FILTER(?linkingProp1 = beol:hasAuthor || ?linkingProp1 = beol:hasRecipient )\n\n  ?letter ?linkingProp2 ?person2 .\n  FILTER(?linkingProp2 = beol:hasAuthor || ?linkingProp2 = beol:hasRecipient )\n\n  ?person1 beol:hasIAFIdentifier ?gnd1 .\n  ?gnd1 knora-api:valueAsString \"(DE-588)118531379\" .\n\n  ?person2 beol:hasIAFIdentifier ?gnd2 .\n  ?gnd2 knora-api:valueAsString \"(DE-588)118696149\" .\n} ORDER BY ?date\n</code></pre> <p>Gravsearch optimises the performance of this query by moving these statements to the top of the WHERE clause:</p> <pre><code>  ?gnd1 knora-api:valueAsString \"(DE-588)118531379\" .\n  ?gnd2 knora-api:valueAsString \"(DE-588)118696149\" .\n</code></pre> <p>The rest of the WHERE clause then reads:</p> <pre><code>  ?person1 beol:hasIAFIdentifier ?gnd1 .\n  ?person2 beol:hasIAFIdentifier ?gnd2 .\n  ?letter ?linkingProp1 ?person1 .\n  FILTER(?linkingProp1 = beol:hasAuthor || ?linkingProp1 = beol:hasRecipient )\n\n  ?letter ?linkingProp2 ?person2 .\n  FILTER(?linkingProp2 = beol:hasAuthor || ?linkingProp2 = beol:hasRecipient )\n ?letter beol:creationDate ?date .\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-v2/reading-and-searching-resources/","title":"Reading and Searching Resources","text":""},{"location":"DSP-API/03-endpoints/api-v2/reading-and-searching-resources/#reading-and-searching-resources","title":"Reading and Searching Resources","text":"<p>To retrieve an existing resource, the HTTP method <code>GET</code> has to be used. Reading resources may require authentication, since some resources may have restricted viewing permissions.</p>"},{"location":"DSP-API/03-endpoints/api-v2/reading-and-searching-resources/#responses-describing-resources","title":"Responses Describing Resources","text":"<p>Resources can be returned in JSON-LD, Turtle, or RDF/XML, using HTTP content negotiation (see Response Formats).</p> <p>Operations for reading and searching resources can return responses in either the simple or the complex ontology schema. The complex schema is used by default. To receive a response in the simple schema, use the HTTP request header or URL parameter described in API Schema.</p> <p>Each DSP-API v2 response describing one or more resources returns a single RDF graph. For example, a request for a single resource returns that resource and all its values. In a full-text search, the resource is returned with the values that matched the search criteria. A response to an extended search may represent a whole graph of interconnected resources.</p> <p>In JSON-LD, if only one resource is returned, it is the top-level object; if more than one resource is returned, they are represented as an array of objects of the <code>@graph</code> member of the top-level object (see Named Graphs in the JSON-LD specification).</p> <p>In the complex schema, dependent resources, i.e. resources that are referred to by other resources on the top level, are nested in link value objects. If resources on the top level are referred to by other resources and  these links are part of the response, virtual incoming links are generated; see Gravsearch: Virtual Graph Search).</p> <p>See the interfaces <code>Resource</code> and <code>ResourcesSequence</code> in module <code>ResourcesResponse</code> (exists for both API schemas: <code>ApiV2Simple</code> and <code>ApiV2WithValueObjects</code>).</p>"},{"location":"DSP-API/03-endpoints/api-v2/reading-and-searching-resources/#requesting-text-markup-as-xml","title":"Requesting Text Markup as XML","text":"<p>When requesting a text value with standoff markup, there are three possibilities:</p> <ol> <li>The text value uses standard mapping.</li> <li>The text value uses a custom mapping which does not specify an XSL transformation.</li> <li>The text value uses a custom mapping which specifies an XSL transformation.</li> </ol> <p>In the first case, the mapping will be defined as:</p> <pre><code>\"kb:textValueHasMapping\": {\n        \"@id\": \"http://rdfh.ch/standoff/mappings/StandardMapping\"\n    }\n</code></pre> <p>the text value will only be available as <code>kb:textValueAsXml</code>, which will be of the following structure:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;text documentType=\"html\"&gt;\n   ...\n&lt;/text&gt;\n</code></pre> <p>where the content of <code>&lt;text&gt;</code> is a limited set of HTML tags that can be handled by CKEditor in DSP-APP. This allows for both displaying and editing the text value.</p> <p>In the second and third case, <code>kb:textValueHasMapping</code> will point to the custom mapping  that may or may not specify an XSL transformation.</p> <p>If no transformation is specified (second case), the text value will be returned only as <code>kb:textValueAsXml</code>. This property will be a string containing the contents of the initially uploaded XML.</p> <p>Note: The returned XML document is equivalent to the uploaded document but it is not necessarily identical - the order of the attributes in one element may vary from the original.</p> <p>In the third case, when a transformation is specified, both <code>kb:textValueAsXml</code> and <code>kb:textValueAsHtml</code> will be returned. <code>kb:textValueAsHtml</code> is the result of the XSL transformation applied to <code>kb:textValueAsXml</code>. The HTML representation is intended to display the text value in a human readable and properly styled way,  while the XML representation can be used to update the text value.</p>"},{"location":"DSP-API/03-endpoints/api-v2/reading-and-searching-resources/#get-the-representation-of-a-resource-by-iri","title":"Get the Representation of a Resource by IRI","text":""},{"location":"DSP-API/03-endpoints/api-v2/reading-and-searching-resources/#get-a-full-representation-of-a-resource-by-iri","title":"Get a Full Representation of a Resource by IRI","text":"<p>A full representation of resource can be obtained by making a GET request to the API providing its IRI. Because a DSP IRI has the format of a URL, its IRI has to be URL-encoded.</p> <p>To get the resource with the IRI <code>http://rdfh.ch/c5058f3a</code> (a book from the sample Incunabula project, which is included in the DSP-API  server's test data), make a HTTP GET request to the <code>resources</code> route (path segment <code>resources</code> in the API call) and append the URL-encoded IRI:</p> <pre><code>HTTP GET to http://host/v2/resources/http%3A%2F%2Frdfh.ch%2Fc5058f3a\n</code></pre> <p>If necessary, several resources can be queried at the same time, their IRIs separated by slashes. Please note that the amount of resources that can be queried in one requested is limited. See the settings for <code>app/v2</code> in <code>application.conf</code>.</p> <p>More formally, the URL looks like this:</p> <pre><code>HTTP GET to http://host/v2/resources/resourceIRI(/anotherResourceIri)*\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-v2/reading-and-searching-resources/#get-a-full-representation-of-a-version-of-a-resource-by-iri","title":"Get a Full Representation of a Version of a Resource by IRI","text":"<p>To get a specific past version of a resource, use the route described in Get a Full Representation of a Resource by IRI, and add the URL parameter <code>?version=TIMESTAMP</code>, where <code>TIMESTAMP</code> is an xsd:dateTimeStamp in the UTC timezone. The timestamp can either be URL-encoded, or submitted with all punctuation (<code>-</code>, <code>:</code>, and <code>.</code>) removed (this is to accept timestamps from DSP's ARK URLs).</p> <p>The resource will be returned with the values that it had at the specified time. Since DSP only versions values, not resource metadata (e.g. <code>rdfs:label</code>), the current metadata will be returned.</p> <p>Each value will be returned with the permissions that are attached to the current version of the value (see Permissions).</p> <p>The returned resource will include the predicate <code>knora-api:versionDate</code>, containing the timestamp that was submitted, and its <code>knora-api:versionArkUrl</code> (see Resource Permalinks) will contain the same timestamp.</p>"},{"location":"DSP-API/03-endpoints/api-v2/reading-and-searching-resources/#get-a-value-in-a-resource","title":"Get a Value in a Resource","text":"<p>To get a specific value of a resource, use this route:</p> <pre><code>HTTP GET to http://host/v2/values/resourceIRI/valueUUID\n</code></pre> <p>The resource IRI must be URL-encoded. The path element <code>valueUUID</code> is the string object of the value's <code>knora-api:valueHasUUID</code>.</p> <p>The value will be returned within its containing resource, in the same format as for Responses Describing Resources, but without any of the resource's other values.</p>"},{"location":"DSP-API/03-endpoints/api-v2/reading-and-searching-resources/#get-a-version-of-a-value-in-a-resource","title":"Get a Version of a Value in a Resource","text":"<p>To get a particular version of a specific value of a resource, use the route described in Get a Value in a Resource, and add the URL parameter <code>?version=TIMESTAMP</code>, where <code>TIMESTAMP</code> is an xsd:dateTimeStamp in the UTC timezone. The timestamp can either be URL-encoded, or submitted with all punctuation (<code>-</code>, <code>:</code>, and <code>.</code>) removed (this is to accept timestamps from DSP's ARK URLs).</p> <p>The value will be returned within its containing resource, in the same format as for Responses Describing Resources, but without any of the resource's other values.</p> <p>Since DSP only versions values, not resource metadata (e.g. <code>rdfs:label</code>), the current resource metadata will be returned.</p> <p>The value will be returned with the permissions that are attached to its current version (see Permissions).</p>"},{"location":"DSP-API/03-endpoints/api-v2/reading-and-searching-resources/#get-the-version-history-of-a-resource","title":"Get the Version History of a Resource","text":"<p>To get a list of the changes that have been made to a resource since its creation, use this route:</p> <pre><code>HTTP GET to http://host/v2/resources/history/resourceIRI[?startDate=START_DATE&amp;endDate=END_DATE]\n</code></pre> <p>The resource IRI must be URL-encoded. The start and end dates are optional, and are URL-encoded timestamps in xsd:dateTimeStamp format. The start date is inclusive, and the end date is exclusive. If the start date is not provided, the resource's history since its creation is returned. If the end date is not provided, the resource's history up to the present is returned.</p> <p>The response is a list of changes made to the resource, in reverse chronological order. Each entry has the properties <code>knora-api:author</code> (the IRI of the user who made the change) and <code>knora-api:versionDate</code> (the date when the change was made). For example:</p> <pre><code>{\n  \"@graph\" : [ {\n    \"knora-api:author\" : {\n      \"@id\" : \"http://rdfh.ch/users/BhkfBc3hTeS_IDo-JgXRbQ\"\n    },\n    \"knora-api:versionDate\" : {\n      \"@type\" : \"xsd:dateTimeStamp\",\n      \"@value\" : \"2019-02-11T09:05:10Z\"\n    }\n  }, {\n    \"knora-api:author\" : {\n      \"@id\" : \"http://rdfh.ch/users/9XBCrDV3SRa7kS1WwynB4Q\"\n    },\n    \"knora-api:versionDate\" : {\n      \"@type\" : \"xsd:dateTimeStamp\",\n      \"@value\" : \"2019-02-10T10:30:10Z\"\n    }\n  }, {\n    \"knora-api:author\" : {\n      \"@id\" : \"http://rdfh.ch/users/BhkfBc3hTeS_IDo-JgXRbQ\"\n    },\n    \"knora-api:versionDate\" : {\n      \"@type\" : \"xsd:dateTimeStamp\",\n      \"@value\" : \"2019-02-10T10:05:10Z\"\n    }\n  } ],\n  \"@context\" : {\n    \"rdf\" : \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n    \"rdfs\" : \"http://www.w3.org/2000/01/rdf-schema#\",\n    \"xsd\" : \"http://www.w3.org/2001/XMLSchema#\",\n    \"knora-api\" : \"http://api.knora.org/ontology/knora-api/v2#\"\n  }\n}\n</code></pre> <p>The entries include all the dates when the resource's values were created or modified (within the requested date range), as well as the date when the resource was created (if the requested date range allows it). Each date is included only once. Since DSP only versions values, not resource metadata (e.g. <code>rdfs:label</code>), changes to a resource's metadata are not included in its version history.</p> <p>To request the resource as it was at each of these dates, see Get a Full Representation of a Version of a Resource by IRI.  For consistency in citation, we recommend using these dates when requesting resource versions.</p>"},{"location":"DSP-API/03-endpoints/api-v2/reading-and-searching-resources/#get-the-preview-of-a-resource-by-iri","title":"Get the preview of a resource by IRI","text":"<p>In some cases, the client may only want to request the preview of a resource, which just provides its metadata (e.g. its IRI, <code>rdfs:label</code>, and type), without its values.</p> <p>This works exactly like making a conventional resource request, using the path segment <code>resourcespreview</code>:</p> <pre><code>HTTP GET to http://host/v2/resourcespreview/resourceIRI(/anotherResourceIri)*\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-v2/reading-and-searching-resources/#get-a-graph-of-resources","title":"Get a Graph of Resources","text":"<p>DSP can return a graph of connections between resources, e.g. for generating a network diagram.</p> <pre><code>HTTP GET to http://host/v2/graph/resourceIRI[depth=Integer]\n[direction=outbound|inbound|both][excludeProperty=propertyIri]\n</code></pre> <p>The first parameter must be preceded by a question mark <code>?</code>, any following parameter by an ampersand <code>&amp;</code>.</p> <ul> <li><code>depth</code> must be at least 1. The maximum depth is a DSP configuration setting.   The default is 4.</li> <li><code>direction</code> specifies the direction of the links to be queried, i.e. links to   and/or from the given resource. The default is <code>outbound</code>.</li> <li><code>excludeProperty</code> is an optional link property to be excluded from the   results.</li> </ul> <p>To accommodate large graphs, the graph response format is very concise, and is therefore simpler than the usual resources response format. Each resource represented only by its IRI, class, and label. Direct links are shown instead of link values. For example:</p> <pre><code>{\n  \"@graph\" : [ {\n    \"@id\" : \"http://rdfh.ch/0001/0C-0L1kORryKzJAJxxRyRQ\",\n    \"@type\" : \"anything:Thing\",\n    \"rdfs:label\" : \"Sierra\"\n  }, {\n    \"@id\" : \"http://rdfh.ch/0001/A67ka6UQRHWf313tbhQBjw\",\n    \"@type\" : \"anything:Thing\",\n    \"rdfs:label\" : \"Victor\"\n  }, {\n    \"@id\" : \"http://rdfh.ch/0001/Lz7WEqJETJqqsUZQYexBQg\",\n    \"@type\" : \"anything:Thing\",\n    \"rdfs:label\" : \"Foxtrot\"\n  }, {\n    \"@id\" : \"http://rdfh.ch/0001/WLSHxQUgTOmG1T0lBU2r5w\",\n    \"@type\" : \"anything:Thing\",\n    \"anything:hasOtherThing\" : {\n      \"@id\" : \"http://rdfh.ch/0001/A67ka6UQRHWf313tbhQBjw\"\n    },\n    \"rdfs:label\" : \"Tango\"\n  }, {\n    \"@id\" : \"http://rdfh.ch/0001/start\",\n    \"@type\" : \"anything:Thing\",\n    \"anything:hasOtherThing\" : [ {\n      \"@id\" : \"http://rdfh.ch/0001/0C-0L1kORryKzJAJxxRyRQ\"\n    }, {\n      \"@id\" : \"http://rdfh.ch/0001/WLSHxQUgTOmG1T0lBU2r5w\"\n    }, {\n      \"@id\" : \"http://rdfh.ch/0001/tPfZeNMvRVujCQqbIbvO0A\"\n    } ],\n    \"rdfs:label\" : \"Romeo\"\n  }, {\n    \"@id\" : \"http://rdfh.ch/0001/tPfZeNMvRVujCQqbIbvO0A\",\n    \"@type\" : \"anything:Thing\",\n    \"anything:hasOtherThing\" : {\n      \"@id\" : \"http://rdfh.ch/0001/Lz7WEqJETJqqsUZQYexBQg\"\n    },\n    \"rdfs:label\" : \"Echo\"\n  } ],\n  \"@context\" : {\n    \"rdf\" : \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n    \"knora-api\" : \"http://api.knora.org/ontology/knora-api/v2#\",\n    \"rdfs\" : \"http://www.w3.org/2000/01/rdf-schema#\",\n    \"xsd\" : \"http://www.w3.org/2001/XMLSchema#\",\n    \"anything\" : \"http://0.0.0.0:3333/ontology/0001/anything/v2#\"\n  }\n}\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-v2/reading-and-searching-resources/#search-for-resources","title":"Search for Resources","text":""},{"location":"DSP-API/03-endpoints/api-v2/reading-and-searching-resources/#search-for-a-resource-by-its-rdfslabel","title":"Search for a Resource by its <code>rdfs:label</code>","text":"<p>DSP offers the possibility to search for resources by their <code>rdfs:label</code>. The use case for this search is to find a specific resource as you type. E.g., the user wants to get a list of resources whose <code>rdfs:label</code> contain some search terms separated by a whitespace character:</p> <ul> <li>Zeit</li> <li>Zeitg</li> <li>...</li> <li>Zeitgl\u00f6cklein d</li> <li>...</li> <li>Zeitgl\u00f6cklein des Lebens</li> </ul> <p>With each character added to the last term, the selection gets more specific. The first term should at least contain three characters. To make this kind of \"search as you type\" possible, a wildcard character is automatically added to the last search term. </p> <p>Characters provided by the user that have a special meaning in the Lucene Query Parser  syntax need to be escaped. If a user wants to search for the string \"Zeit-Gl\u00f6cklein\", she needs to type \"Zeit-Gl\u00f6cklein\". The special characters that need escaping are:  <code>+</code>, <code>-</code>, <code>&amp;</code>, <code>|</code>, <code>!</code>, <code>(</code>, <code>)</code>, <code>[</code>, <code>]</code>, <code>{</code>, <code>}</code>, <code>^</code>, <code>\"</code>, <code>~</code>, <code>*</code>, <code>?</code>, <code>:</code>, <code>\\</code>, <code>/</code></p> <pre><code>HTTP GET to http://host/v2/searchbylabel/searchValue[limitToResourceClass=resourceClassIRI]\n[limitToProject=projectIRI][offset=Integer]\n</code></pre> <p>The first parameter must be preceded by a question mark <code>?</code>, any following parameter by an ampersand <code>&amp;</code>.</p> <p>The default value for the parameter <code>offset</code> is 0, which returns the first page of search results. Subsequent pages of results can be fetched by increasing <code>offset</code> by one. The amount of results per page is defined in <code>app/v2</code> in <code>application.conf</code>.</p> <p>For performance reasons, standoff markup is not queried for this route.</p> <p>To request the number of results rather than the results themselves, you can do a count query:</p> <pre><code>HTTP GET to http://host/v2/searchbylabel/count/searchValue[limitToResourceClass=resourceClassIRI][limitToProject=projectIRI][offset=Integer]\n</code></pre> <p>The response to a count query request is an object with one predicate, <code>http://schema.org/numberOfItems</code>, with an integer value.</p>"},{"location":"DSP-API/03-endpoints/api-v2/reading-and-searching-resources/#full-text-search","title":"Full-text Search","text":"<p>DSP offers a full-text search that searches through all textual representations of values and <code>rdfs:label</code> of resources.  Full-text search supports the  Lucene Query Parser syntax. Note that Lucene's default operator is a logical OR when submitting several search terms.</p> <p>The search index used by DSP transforms all text into lower case characters and splits text into tokens by whitespace.  For example, if a text value is: <code>The cake needs flour, sugar, and butter.</code>,  the tokens are <code>the</code>, <code>cake</code>, <code>needs</code>, <code>flour,</code>, <code>sugar,</code>, <code>and</code>, <code>butter.</code>. Note that punctuation marks like <code>,</code> and <code>.</code> are left with the word where they occurred. Therefore, if you search for <code>sugar</code> you would have to use <code>sugar*</code> or <code>sugar?</code>  to get results that contain <code>sugar,</code> or <code>sugar.</code> as well. The reason for this kind of tokenization is  that some users need to be able to search explicitly for special characters including punctuation marks.</p> <p>Alphabetic, numeric, symbolic, and diacritical Unicode characters  which are not in the first 127 ASCII characters (the \"Basic Latin\" Unicode block)  are converted into their ASCII equivalents, if one exists, e.g. <code>\u00e9</code> or <code>\u00e4</code> are converted into <code>e</code> and <code>a</code>.</p> <p>Please note that the search terms have to be URL-encoded.</p> <pre><code>HTTP GET to http://host/v2/search/searchValue[limitToResourceClass=resourceClassIRI]\n[limitToStandoffClass=standoffClassIri][limitToProject=projectIRI][offset=Integer]\n</code></pre> <p>The first parameter has to be preceded by a question mark <code>?</code>, any following parameter by an ampersand <code>&amp;</code>.</p> <p>A search value must have a minimal length of three characters (default value)  as defined in <code>search-value-min-length</code> in <code>application.conf</code>.</p> <p>A search term may contain wildcards. A <code>?</code> represents a single character.  It has to be URL-encoded as <code>%3F</code> since it has a special meaning in the URL syntax.  For example, the term <code>Uniform</code> can be search for like this:</p> <pre><code>HTTP GET to http://host/v2/search/Unif%3Frm\n</code></pre> <p>A <code>*</code> represents zero, one or multiple characters. For example, the term <code>Uniform</code> can be searched for like this:</p> <pre><code>HTTP GET to http://host/v2/search/Uni*m\n</code></pre> <p>The default value for the parameter <code>offset</code> is 0 which returns the first page of search results. Subsequent pages of results can be fetched by increasing <code>offset</code> by one. The amount of results per page is defined in <code>results-per-page</code> in <code>application.conf</code>.</p> <p>If the parameter <code>limitToStandoffClass</code> is provided, DSP will look for search terms that are marked up with the indicated standoff class.</p> <p>If the parameter <code>returnFiles=true</code> is provided, DSP will return any file value attached to each matching resource.</p> <p>To request the number of results rather than the results themselves, you can do a count query:</p> <pre><code>HTTP GET to http://host/v2/search/count/searchValue[limitToResourceClass=resourceClassIRI][limitToStandoffClass=standoffClassIri][limitToProject=projectIRI][offset=Integer]\n</code></pre> <p>The first parameter has to be preceded by a question mark <code>?</code>, any following parameter by an ampersand <code>&amp;</code>.</p> <p>The response to a count query request is an object with one predicate, <code>http://schema.org/numberOfItems</code>, with an integer value.</p>"},{"location":"DSP-API/03-endpoints/api-v2/reading-and-searching-resources/#gravsearch","title":"Gravsearch","text":"<p>For more complex queries than a full-text search, DSP offers a query language called Gravsearch: Virtual Graph Search).</p>"},{"location":"DSP-API/03-endpoints/api-v2/reading-and-searching-resources/#support-of-teixml","title":"Support of TEI/XML","text":"<p>To convert standoff markup to TEI/XML, see TEI/XML.</p>"},{"location":"DSP-API/03-endpoints/api-v2/reading-and-searching-resources/#iiif-manifests","title":"IIIF Manifests","text":"<p>This is an experimental feature and may change.</p> <p>To generate a IIIF manifest for a resource, containing the still image representations that have <code>knora-api:isPartOf</code> (or a subproperty) pointing to that resource:</p> <pre><code>HTTP GET to http://host/v2/resources//iiifmanifest/RESOURCE_IRI\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-v2/reading-and-searching-resources/#reading-resources-by-class-from-a-project","title":"Reading Resources by Class from a Project","text":"<p>To facilitate the development of tabular user interfaces for data entry, it is possible to get a paged list of all the resources belonging to a particular class in a given project, sorted by the value of a property:</p> <pre><code>HTTP GET to http://host/v2/resources?resourceClass=RESOURCE_CLASS_IRI&amp;page=PAGE[&amp;orderByProperty=PROPERTY_IRI]\n</code></pre> <p>This is useful only if the project does not contain a large amount of data; otherwise, you should use Gravsearch to search using more specific criteria.</p> <p>The specified class and property are used without inference; they will not match subclasses or subproperties.</p> <p>The HTTP header <code>X-Knora-Accept-Project</code> must be submitted; its value is a DSP project IRI. In the request URL, the values of <code>resourceClass</code> and <code>orderByProperty</code> are URL-encoded IRIs in the complex schema. The <code>orderByProperty</code> parameter is optional; if it is not supplied, resources will be sorted alphabetically by resource IRI (an arbitrary but consistent order). The value of <code>page</code> is a 0-based integer page number. Paging works as it does in Gravsearch).</p>"},{"location":"DSP-API/03-endpoints/api-v2/reading-and-searching-resources/#get-the-full-history-of-a-resource-and-its-values-as-events","title":"Get the Full History of a Resource and its Values as Events","text":"<p>To get a list of the changes that have been made to a resource and its values since its creation as events ordered by  date:</p> <pre><code>HTTP GET to http://host/v2/resources/resourceHistoryEvents/&lt;resourceIRI&gt;\n</code></pre> <p>The resource IRI must be URL-encoded. The response is a list of events describing changes made to the resource and its values,  in chronological order. Each entry has the properties:   <code>knora-api:eventType</code> (the type of the operation performed on a specific date. The operation can be either  <code>createdResource</code>, <code>updatedResourceMetadata</code>, <code>deletedResource</code>, <code>createdValue</code>, <code>updatedValueContent</code>,   <code>updatedValuePermissions</code>, or <code>deletedValue</code>.),  <code>knora-api:versionDate</code> (the date when the change was made), <code>knora-api:author</code> (the IRI of the user who made the change), <code>knora-api:eventBody</code> (the information necessary to make the same request). </p> <p>For example, the following response contains the list of events describing the version history of the resource  <code>http://rdfh.ch/0001/thing-with-history</code> ordered by date:</p> <pre><code>{\n  \"@graph\" : [ \n        {\n            \"knora-api:eventType\": \"createdResource\",\n            \"knora-api:author\": {\n                \"@id\": \"http://rdfh.ch/users/9XBCrDV3SRa7kS1WwynB4Q\"\n            },\n            \"knora-api:eventBody\": {\n                \"rdfs:label\": \"A thing with version history\",\n                \"knora-api:resourceIri\": \"http://rdfh.ch/0001/thing-with-history\",\n                \"knora-api:resourceClassIri\": \"http://www.knora.org/ontology/0001/anything#Thing\",\n                \"knora-api:hasPermissions\": \"CR knora-admin:Creator|M knora-admin:ProjectMember|V knora-admin:UnknownUser\",\n                \"knora-api:creationDate\": {\n                    \"@value\": \"2019-02-08T15:05:10Z\",\n                    \"@type\": \"xsd:dateTimeStamp\"\n                },\n                \"knora-api:attachedToProject\": {\n                    \"@id\": \"http://rdfh.ch/projects/0001\"\n                }\n            },\n            \"knora-api:versionDate\": {\n                \"@value\": \"2019-02-08T15:05:10Z\",\n                \"@type\": \"xsd:dateTimeStamp\"\n            }\n        },\n        {\n            \"knora-api:eventType\": \"createdValue\",\n            \"knora-api:author\": {\n                \"@id\": \"http://rdfh.ch/users/9XBCrDV3SRa7kS1WwynB4Q\"\n            },\n            \"knora-api:eventBody\": {\n                \"knora-api:resourceIri\": \"http://rdfh.ch/0001/thing-with-history\",\n            \"knora-api:resourceClassIri\": \"http://www.knora.org/ontology/0001/anything#Thing\",\n                \"knora-api:valueCreationDate\": {\n                    \"@value\": \"2019-02-10T10:30:10Z\",\n                    \"@type\": \"xsd:dateTimeStamp\"\n                },\n                \"knora-api:valueHasUUID\": \"IZGOjVqxTfSNO4ieKyp0SA\",\n                \"knora-api:hasPermissions\": \"V knora-admin:UnknownUser|M knora-admin:ProjectMember\",\n                \"@type\": \"knora-base:LinkValue\",\n                \"http://www.knora.org/ontology/0001/anything#hasOtherThingValue\": {\n                    \"knora-api:linkValueHasTargetIri\": {\n                        \"@id\": \"http://rdfh.ch/0001/2qMtTWvVRXWMBcRNlduvCQ\"\n                    }\n                },\n                \"rdf:Property\": \"http://www.knora.org/ontology/0001/anything#hasOtherThingValue\",\n                \"@id\": \"http://rdfh.ch/0001/thing-with-history/values/3a\"\n            },\n            \"knora-api:versionDate\": {\n                \"@value\": \"2019-02-10T10:30:10Z\",\n                \"@type\": \"xsd:dateTimeStamp\"\n            }\n        },\n        {\n            \"knora-api:eventType\": \"updatedValueContent\",\n            \"knora-api:author\": {\n                \"@id\": \"http://rdfh.ch/users/BhkfBc3hTeS_IDo-JgXRbQ\"\n            },\n            \"knora-api:eventBody\": {\n                \"knora-api:resourceIri\": \"http://rdfh.ch/0001/thing-with-history\",\n                \"knora-api:resourceClassIri\": \"http://www.knora.org/ontology/0001/anything#Thing\"\n                \"http://www.knora.org/ontology/0001/anything#hasText\": {\n                    \"knora-api:valueAsString\": \"two\"\n                },\n                \"knora-api:valueCreationDate\": {\n                    \"@value\": \"2019-02-11T10:05:10Z\",\n                    \"@type\": \"xsd:dateTimeStamp\"\n                },\n                \"knora-base:previousValue\": \"http://rdfh.ch/0001/thing-with-history/values/2a\",\n                \"knora-api:valueHasUUID\": \"W5fm67e0QDWxRZumcXcs6g\",\n                \"@type\": \"knora-base:TextValue\",\n                \"rdf:Property\": \"http://www.knora.org/ontology/0001/anything#hasText\",\n                \"@id\": \"http://rdfh.ch/0001/thing-with-history/values/2b\"\n            },\n            \"knora-api:versionDate\": {\n                \"@value\": \"2019-02-11T10:05:10Z\",\n                \"@type\": \"xsd:dateTimeStamp\"\n            }\n        },\n        {\n            \"knora-api:eventType\": \"deletedValue\",\n            \"knora-api:author\": {\n                \"@id\": \"http://rdfh.ch/users/9XBCrDV3SRa7kS1WwynB4Q\"\n            },\n            \"knora-api:eventBody\": {\n                \"knora-api:resourceIri\": \"http://rdfh.ch/0001/thing-with-history\",\n                \"knora-api:resourceClassIri\": \"http://www.knora.org/ontology/0001/anything#Thing\",\n                \"knora-base:previousValue\": \"http://rdfh.ch/0001/thing-with-history/values/3a\",\n                \"knora-api:deleteDate\": {\n                    \"@type\": \"xsd:dateTimeStamp\",\n                    \"@value\": \"2019-02-13T09:00:10Z\"\n                },\n                \"knora-api:isDeleted\": true,\n                \"@type\": \"knora-base:LinkValue\",\n                \"rdf:Property\": \"http://www.knora.org/ontology/0001/anything#hasOtherThingValue\",\n                \"@id\": \"http://rdfh.ch/0001/thing-with-history/values/3b\"\n            },\n            \"knora-api:versionDate\": {\n                \"@value\": \"2019-02-13T09:00:10Z\",\n                \"@type\": \"xsd:dateTimeStamp\"\n            }\n        }\n    ],\n  \"@context\" : {\n    \"rdf\" : \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n    \"rdfs\" : \"http://www.w3.org/2000/01/rdf-schema#\",\n    \"xsd\" : \"http://www.w3.org/2001/XMLSchema#\",\n    \"knora-api\" : \"http://api.knora.org/ontology/knora-api/v2#\"\n  }\n}\n</code></pre> <p>Since the history of changes made to the metadata of a resource is not part of resouce's version history, there are no  events describing the changes on metadata elements like its <code>rdfs:label</code> or <code>rdfs:comment</code>.  The only record depicting a change in a resource's metadata is the <code>knora-api:lastModificationDate</code> of the resource. Thus  the event <code>updatedResourceMetadata</code> indicates a change in a resource's metadata, its <code>knora-api:eventBody</code> contains the  payload needed to update the value of the resource's <code>lastModificationDate</code>, see  modifying metadata of a resource.</p>"},{"location":"DSP-API/03-endpoints/api-v2/reading-and-searching-resources/#get-the-full-history-of-all-resources-of-a-project-as-events","title":"Get the Full History of all Resources of a Project as Events","text":"<p>To get a list of the changes that have been made to the resources and their values of a project as events ordered by  date:</p> <pre><code>HTTP GET to http://host/v2/resources/projectHistoryEvents/&lt;projectIRI&gt;\n</code></pre> <p>The project IRI must be URL-encoded. The response contains the resource history events of all resources that belong to  the specified project.</p>"},{"location":"DSP-API/03-endpoints/api-v2/reading-user-permissions/","title":"Reading the User's Permissions on Resources and Values","text":""},{"location":"DSP-API/03-endpoints/api-v2/reading-user-permissions/#reading-the-users-permissions-on-resources-and-values","title":"Reading the User's Permissions on Resources and Values","text":"<p>In the complex API schema, each resource and value is returned with the predicate <code>knora-api:userHasPermission</code>. The object of this predicate is a string containing a permission code, which indicates the requesting user's maximum permission on the resource or value. These are the possible permission codes, in ascending order:</p> <ul> <li><code>RV</code>: restricted view permission (least privileged)</li> <li><code>V</code>: view permission</li> <li><code>M</code> modify permission</li> <li><code>D</code>: delete permission</li> <li><code>CR</code>: change rights permission (most privileged)</li> </ul> <p>Each permission implies all lesser permissions. For more details, see Permissions.</p>"},{"location":"DSP-API/03-endpoints/api-v2/text/custom-standoff/","title":"Custom Standoff Mapping","text":""},{"location":"DSP-API/03-endpoints/api-v2/text/custom-standoff/#xml-to-standoff-mapping-in-api-v2","title":"XML to Standoff Mapping in API v2","text":""},{"location":"DSP-API/03-endpoints/api-v2/text/custom-standoff/#creating-a-custom-mapping","title":"Creating a custom Mapping","text":"<p>The DSP-API's standard standoff mapping only supports a few HTML tags. In order to submit more complex XML markup, a custom mapping has to be created first. A mapping expresses the relations between XML elements and attributes, and their corresponding standoff classes and properties. The relations expressed in a mapping are one-to-one relations, so the XML can be recreated from the data in RDF. However, since HTML offers a very limited set of elements, custom mappings support the combination of element names and classes. In this way, the same element can be used several times in combination with another classname (please note that <code>&lt;a&gt;</code> without a class is a hyperlink whereas <code>&lt;a class=\"salsah-link\"&gt;</code> is an internal link/standoff link).</p> <p>With a mapping, a default XSL transformation may be provided to transform the XML to HTML before sending it back to the client. This is useful when the client is a web-browser expecting HTML (instead of XML).</p>"},{"location":"DSP-API/03-endpoints/api-v2/text/custom-standoff/#basic-structure-of-a-mapping","title":"Basic Structure of a Mapping","text":"<p>The mapping is written in XML itself (for a formal description, see <code>webapi/src/resources/mappingXMLToStandoff.xsd</code>). It has the following structure (the indentation corresponds to the nesting in XML):</p> <ul> <li><code>&lt;mapping&gt;</code>: the root element<ul> <li><code>&lt;defaultXSLTransformation&gt; (optional)</code>: the IRI of the   default XSL transformation to be applied to the XML when   reading it back from DSP-API. The XSL transformation is   expected to produce HTML. If given, the IRI has to refer to   a resource of type <code>knora-base:XSLTransformation</code>.</li> <li><code>&lt;mappingElement&gt;</code>: an element of the mapping (at least one)<ul> <li><code>&lt;tag&gt;</code>: information about the XML element that is mapped to a standoff class<ul> <li><code>&lt;name&gt;</code>: name of the XML element</li> <li><code>&lt;class&gt;</code>: value of the class attribute of   the XML element, if any. If the element has   no class attribute, the keyword <code>noClass</code>   has to be used.</li> <li><code>&lt;namespace&gt;</code>: the namespace the XML element   belongs to, if any. If the element does not   belong to a namespace, the keyword   <code>noNamespace</code> has to be used.</li> <li><code>&lt;separatesWords&gt;</code>: a Boolean value   indicating whether this tag separates words   in the text. Once an XML document is   converted to RDF-standoff the markup is   stripped from the text, possibly leading to   continuous text that has been separated by   tags before. For structural tags like   paragraphs etc., <code>&lt;separatesWords&gt;</code> can be   set to <code>true</code> in which case a special   separator is inserted in the text in the   RDF representation. In this way, words stay   separated and are represented in the   fulltext index as such.</li> </ul> </li> <li><code>&lt;standoffClass&gt;</code>: information about the standoff class the XML element is mapped to<ul> <li><code>&lt;classIri&gt;</code>: IRI of the standoff class the XML element is mapped to</li> <li><code>&lt;attributes&gt;</code>: XML attributes to be mapped to standoff properties (other than <code>id</code> or <code>class</code>), if any<ul> <li><code>&lt;attribute&gt;</code>: an XML attribute to be mapped to a standoff property, may be repeated<ul> <li><code>&lt;attributeName&gt;</code>: the name of the XML attribute</li> <li><code>&lt;namespace&gt;</code>: the namespace the attribute belongs to, if any.    If the attribute does not belong to a namespace, the keyword <code>noNamespace</code> has to be used.</li> <li><code>&lt;propertyIri&gt;</code>: the IRI of the standoff property the XML attribute is mapped to.</li> </ul> </li> </ul> </li> <li><code>&lt;datatype&gt;</code>: the data type of the standoff class, if any.<ul> <li><code>&lt;type&gt;</code>: the IRI of the data type standoff class</li> <li><code>&lt;attributeName&gt;</code>: the name of the attribute holding the typed value in the expected standard format</li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> <p>XML structure of a mapping:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;mapping&gt;\n    &lt;defaultXSLTransformation&gt;Iri of a knora-base:XSLTransformation&lt;/defaultXSLTransformation&gt;\n    &lt;mappingElement&gt;\n        &lt;tag&gt;\n            &lt;name&gt;XML element name&lt;/name&gt;\n            &lt;class&gt;XML class name or \"noClass\"&lt;/class&gt;\n            &lt;namespace&gt;XML namespace or \"noNamespace\"&lt;/namespace&gt;\n            &lt;separatesWords&gt;true or false&lt;/separatesWords&gt;\n        &lt;/tag&gt;\n        &lt;standoffClass&gt;\n            &lt;classIri&gt;standoff class Iri&lt;/classIri&gt;\n            &lt;attributes&gt;\n                &lt;attribute&gt;\n                    &lt;attributeName&gt;XML attribute name&lt;/attributeName&gt;\n                    &lt;namespace&gt;XML namespace or \"noNamespace\"&lt;/namespace&gt;\n                    &lt;propertyIri&gt;standoff property Iri&lt;/propertyIri&gt;\n                &lt;/attribute&gt;\n            &lt;/attributes&gt;\n            &lt;datatype&gt;\n                &lt;type&gt;standoff data type class&lt;/type&gt;\n                &lt;attributeName&gt;XML attribute with the typed value&lt;/attributeName&gt;\n            &lt;/datatype&gt;\n        &lt;/standoffClass&gt;\n    &lt;/mappingElement&gt;\n    &lt;mappingElement&gt;\n       ...\n    &lt;/mappingElement&gt;\n&lt;/mapping&gt;\n</code></pre> <p>Please note that the absence of an XML namespace and/or a class have to be explicitly stated using the keywords <code>noNamespace</code> and <code>noClass</code>. This is because we use XML Schema validation to ensure the one-to-one relations between XML elements and standoff classes. XML Schema validation's unique checks do not support optional values.</p>"},{"location":"DSP-API/03-endpoints/api-v2/text/custom-standoff/#id-and-class-attributes","title":"<code>id</code> and <code>class</code> Attributes","text":"<p>The <code>id</code> and <code>class</code> attributes are supported by default and do not have to be included in the mapping like other attributes. The <code>id</code> attribute identifies an element and must be unique in the document. <code>id</code> is an optional attribute. The <code>class</code> attribute allows for the reuse of an element in the mapping, i.e. the same element can be combined with different class names and mapped to different standoff classes (mapping element <code>&lt;class&gt;</code> in <code>&lt;tag&gt;</code>).</p>"},{"location":"DSP-API/03-endpoints/api-v2/text/custom-standoff/#respecting-cardinalities","title":"Respecting Cardinalities","text":"<p>A mapping from XML elements and attributes to standoff classes and standoff properties must respect the cardinalities defined in the ontology for those very standoff classes. If an XML element is mapped to a certain standoff class and this class requires a standoff property, an attribute must be defined for the XML element mapping to that very standoff property. Equally, all mappings for attributes of an XML element must have corresponding cardinalities for standoff properties defined for the standoff class the XML element maps to.</p> <p>However, since an XML attribute may occur once at maximum, it makes sense to make the corresponding standoff property required (<code>owl:cardinality</code> of one) in the ontology or optional (<code>owl:maxCardinality</code> of one), but not allowing it more than once.</p>"},{"location":"DSP-API/03-endpoints/api-v2/text/custom-standoff/#standoff-data-types","title":"Standoff Data Types","text":"<p>DSP-API allows the use of all its value types as standoff data types (defined in <code>knora-base.ttl</code>):</p> <ul> <li><code>knora-base:StandoffLinkTag</code>: Represents a reference to a    resource (the IRI of the target resource must be submitted in the   data type attribute).</li> <li><code>knora-base:StandoffInternalReferenceTag</code>: Represents an internal   reference inside a document (the id of the target element inside the   same document must be indicated in the data type attribute); see   Internal References in an XML Document.</li> <li><code>knora-base:StandoffUriTag</code>: Represents a reference to a URI (the   URI of the target resource must be submitted in the data type   attribute).</li> <li><code>knora-base:StandoffDateTag</code>: Represents a date (a date   string must be submitted in the data type attribute, e.g.   <code>GREGORIAN:2017-01-27</code>).</li> <li><code>knora-base:StandoffColorTag</code>: Represents a color (a hexadecimal   RGB color string must be submitted in the data type attribute, e.g.   <code>#0000FF</code>).</li> <li><code>knora-base:StandoffIntegerTag</code>: Represents an integer (the integer   must be submitted in the data type attribute).</li> <li><code>knora-base:StandoffDecimalTag</code>: Represents a number with fractions   (the decimal number must be submitted in the data type attribute,   e.g. <code>1.1</code>).</li> <li><code>knora-base:StandoffIntervalTag</code>: Represents an interval (two   decimal numbers separated with a comma must be submitted in the data   type attribute, e.g. <code>1.1,2.2</code>).</li> <li><code>knora-base:StandoffBooleanTag</code>: Represents a Boolean value (<code>true</code>   or <code>false</code> must be submitted in the data type attribute).</li> <li><code>knora-base:StandoffTimeTag</code>: Represents a timestamp value (an <code>xsd:dateTimeStamp</code>   must be submitted in the data type attribute).</li> </ul> <p>The basic idea is that parts of a text can be marked up in a way that allows using DSP-API's built-in data types. In order to do so, the typed values have to be provided in a standardized way in an attribute that has to be defined in the mapping.</p> <p>Data type standoff classes are standoff classes with predefined properties (e.g., a <code>knora-base:StandoffLinkTag</code> has a <code>knora-base:standoffTagHasLink</code> and a <code>knora-base:StandoffIntegerTag</code> has a <code>knora-base:valueHasInteger</code>). Please note the data type standoff classes can not be combined, i.e. a standoff class can only be the subclass of one data type standoff class. However, standoff data type classes can be subclassed and extended further by assigning properties to them (see below).</p> <p>The following simple mapping illustrates this principle:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;mapping&gt;\n     &lt;mappingElement&gt;\n        &lt;tag&gt;\n            &lt;name&gt;text&lt;/name&gt;\n            &lt;class&gt;noClass&lt;/class&gt;\n            &lt;namespace&gt;noNamespace&lt;/namespace&gt;\n            &lt;separatesWords&gt;false&lt;/separatesWords&gt;\n        &lt;/tag&gt;\n        &lt;standoffClass&gt;\n            &lt;classIri&gt;http://www.knora.org/ontology/standoff#StandoffRootTag&lt;/classIri&gt;\n        &lt;/standoffClass&gt;\n    &lt;/mappingElement&gt;\n\n    &lt;mappingElement&gt;\n        &lt;tag&gt;\n            &lt;name&gt;mydate&lt;/name&gt;\n            &lt;class&gt;noClass&lt;/class&gt;\n            &lt;namespace&gt;noNamespace&lt;/namespace&gt;\n            &lt;separatesWords&gt;false&lt;/separatesWords&gt;\n        &lt;/tag&gt;\n        &lt;standoffClass&gt;\n            &lt;classIri&gt;http://www.knora.org/ontology/0001/anything#StandoffEventTag&lt;/classIri&gt;\n            &lt;attributes&gt;\n                &lt;attribute&gt;\n                    &lt;attributeName&gt;description&lt;/attributeName&gt;\n                    &lt;namespace&gt;noNamespace&lt;/namespace&gt;\n                    &lt;propertyIri&gt;http://www.knora.org/ontology/0001/anything#standoffEventTagHasDescription&lt;/propertyIri&gt;\n                &lt;/attribute&gt;\n            &lt;/attributes&gt;\n            &lt;datatype&gt;\n                &lt;type&gt;http://www.knora.org/ontology/knora-base#StandoffDateTag&lt;/type&gt;\n                &lt;attributeName&gt;knoraDate&lt;/attributeName&gt;\n            &lt;/datatype&gt;\n        &lt;/standoffClass&gt;\n    &lt;/mappingElement&gt;\n&lt;/mapping&gt;\n</code></pre> <p><code>&lt;datatype&gt;</code> must hold the IRI of a standoff data type class (see list above). The <code>&lt;classIri&gt;</code> must be a subclass of this type or this type itself (the latter is probably not recommendable since semantics are missing: what is the meaning of the date?). In the example above, the standoff class is <code>anything:StandoffEventTag</code> which has the following definition in the ontology <code>anything-onto.ttl</code>:</p> <pre><code>anything:StandoffEventTag rdf:type owl:Class ;\n\n    rdfs:subClassOf knora-base:StandoffDateTag,\n                   [\n                      rdf:type owl:Restriction ;\n                      owl:onProperty :standoffEventTagHasDescription ;\n                      owl:cardinality \"1\"^^xsd:nonNegativeInteger\n                   ] ;\n\n    rdfs:label \"Represents an event in a TextValue\"@en ;\n\n    rdfs:comment \"\"\"Represents an event in a TextValue\"\"\"@en .\n</code></pre> <p><code>anything:StandoffEventTag</code> is a subclass of <code>knora-base:StandoffDateTag</code> and therefore has the data type date. It also requires the standoff property <code>anything:standoffEventTagHasDescription</code> which is defined as an attribute in the mapping.</p> <p>Once the mapping has been created, an XML like the following could be sent to DSP-API and converted to standoff:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;text&gt;\n    We had a party on &lt;mydate description=\"new year\" knoraDate=\"GREGORIAN:2016-12-31\"&gt;New Year's Eve&lt;/mydate&gt;. \n    It was a lot of fun.\n&lt;/text&gt;\n</code></pre> <p>The attribute holds the date in the format of a DSP-API date string (the format is also documented in the typescript type alias <code>dateString</code> in module <code>basicMessageComponents</code>. There you will also find documentation about the other types like color etc.). DSP-API date strings have this format: <code>GREGORIAN|JULIAN):YYYY[-MM[-DD]][:YYYY[-MM[-DD]]]</code>. This allows for different formats as well as for imprecision and periods. Intervals are submitted as one attribute in the following format: <code>interval-attribute=\"1.0,2.0\"</code> (two decimal numbers separated with a comma).</p> <p>You will find a sample mapping with all the data types and a sample XML file in the the test data: <code>test_data/test_route/texts/mappingForHTML.xml</code> and <code>test_data/test_route/texts/HTML.xml</code>.</p>"},{"location":"DSP-API/03-endpoints/api-v2/text/custom-standoff/#internal-references-in-an-xml-document","title":"Internal References in an XML Document","text":"<p>Internal references inside an XML document can be represented using the data type standoff class <code>knora-base:StandoffInternalReferenceTag</code> or a subclass of it. This class has a standoff property that points to a standoff node representing the target XML element when converted to RDF.</p> <p>The following example shows the definition of a mapping element for an internal reference (for reasons of simplicity, only the mapping element for the element is question is depicted):</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;mappingElement&gt;\n    &lt;tag&gt;\n        &lt;name&gt;ref&lt;/name&gt;\n        &lt;class&gt;noClass&lt;/class&gt;\n        &lt;namespace&gt;noNamespace&lt;/namespace&gt;\n        &lt;separatesWords&gt;false&lt;/separatesWords&gt;\n    &lt;/tag&gt;\n    &lt;standoffClass&gt;\n        &lt;classIri&gt;http://www.knora.org/ontology/knora-base#StandoffInternalReferenceTag&lt;/classIri&gt;\n        &lt;datatype&gt;\n            &lt;type&gt;http://www.knora.org/ontology/knora-base#StandoffInternalReferenceTag&lt;/type&gt;\n            &lt;attributeName&gt;internalRef&lt;/attributeName&gt;\n        &lt;/datatype&gt;\n    &lt;/standoffClass&gt;\n&lt;/mappingElement&gt;\n</code></pre> <p>Now, an internal reference to an element in the same document can be made that will be converted to a pointer in RDF:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;text&gt;\n    This is an &lt;sample id=\"1\"&gt;element&lt;/sample&gt; and here is a reference to &lt;ref internalRef=\"#1\"&gt;it&lt;/ref&gt;.\n&lt;/text&gt;\n</code></pre> <p>An internal reference in XML has to start with a <code>#</code> followed by the value of the <code>id</code> attribute of the element referred to.</p>"},{"location":"DSP-API/03-endpoints/api-v2/text/custom-standoff/#predefined-standoff-classes-and-properties","title":"Predefined Standoff Classes and Properties","text":"<p>The standoff ontology <code>standoff-onto.ttl</code> offers a set of predefined standoff classes that can be used in a custom mapping like the following:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;mapping&gt;\n    &lt;mappingElement&gt;\n        &lt;tag&gt;\n            &lt;name&gt;myDoc&lt;/name&gt;\n            &lt;class&gt;noClass&lt;/class&gt;\n            &lt;namespace&gt;noNamespace&lt;/namespace&gt;\n            &lt;separatesWords&gt;false&lt;/separatesWords&gt;\n        &lt;/tag&gt;\n        &lt;standoffClass&gt;\n            &lt;classIri&gt;http://www.knora.org/ontology/standoff#StandoffRootTag&lt;/classIri&gt;\n            &lt;attributes&gt;\n                &lt;attribute&gt;\n                    &lt;attributeName&gt;documentType&lt;/attributeName&gt;\n                    &lt;namespace&gt;noNamespace&lt;/namespace&gt;\n                    &lt;propertyIri&gt;http://www.knora.org/ontology/standoff#standoffRootTagHasDocumentType&lt;/propertyIri&gt;\n                &lt;/attribute&gt;\n            &lt;/attributes&gt;\n        &lt;/standoffClass&gt;\n    &lt;/mappingElement&gt;\n\n    &lt;mappingElement&gt;\n        &lt;tag&gt;\n            &lt;name&gt;p&lt;/name&gt;\n            &lt;class&gt;noClass&lt;/class&gt;\n            &lt;namespace&gt;noNamespace&lt;/namespace&gt;\n            &lt;separatesWords&gt;true&lt;/separatesWords&gt;\n        &lt;/tag&gt;\n        &lt;standoffClass&gt;\n            &lt;classIri&gt;http://www.knora.org/ontology/standoff#StandoffParagraphTag&lt;/classIri&gt;\n        &lt;/standoffClass&gt;\n    &lt;/mappingElement&gt;\n\n    &lt;mappingElement&gt;\n        &lt;tag&gt;\n            &lt;name&gt;i&lt;/name&gt;\n            &lt;class&gt;noClass&lt;/class&gt;\n            &lt;namespace&gt;noNamespace&lt;/namespace&gt;\n            &lt;separatesWords&gt;false&lt;/separatesWords&gt;\n        &lt;/tag&gt;\n        &lt;standoffClass&gt;\n            &lt;classIri&gt;http://www.knora.org/ontology/standoff#StandoffItalicTag&lt;/classIri&gt;\n        &lt;/standoffClass&gt;\n    &lt;/mappingElement&gt;\n&lt;/mapping&gt;\n</code></pre> <p>Predefined standoff classes may be used by various projects, each providing a custom mapping to be able to recreate the original XML from RDF. Predefined standoff classes may also be inherited and extended in project specific ontologies.</p> <p>The mapping above allows for an XML like this:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;myDoc documentType=\"letter\"&gt;\n    &lt;p&gt;\n        This my text that is &lt;i&gt;very&lt;/i&gt; interesting.\n    &lt;/p&gt;\n    &lt;p&gt;\n        And here it goes on.\n    &lt;/p&gt;\n&lt;/myDoc&gt;\n</code></pre>"},{"location":"DSP-API/03-endpoints/api-v2/text/custom-standoff/#respecting-property-types","title":"Respecting Property Types","text":"<p>When mapping XML attributes to standoff properties, attention has to be paid to the properties' object constraints.</p> <p>In the ontology, standoff property literals may have one of the following <code>knora-base:objectDatatypeConstraint</code>:</p> <ul> <li><code>xsd:string</code></li> <li><code>xsd:integer</code></li> <li><code>xsd:boolean</code></li> <li><code>xsd:decimal</code></li> <li><code>xsd:anyURI</code></li> </ul> <p>In XML, all attribute values are submitted as strings. However, these string representations need to be convertible to the types defined in the ontology. If they are not, the request will be rejected. It is recommended to enforce types on attributes by applying XML Schema validations (restrictions).</p> <p>Links (object property) to a <code>knora-base:Resource</code> can be represented using the data type standoff class <code>knora-base:StandoffLinkTag</code>, internal links using the data type standoff class <code>knora-base:StandoffInternalReferenceTag</code>.</p>"},{"location":"DSP-API/03-endpoints/api-v2/text/custom-standoff/#validating-a-mapping-and-sending-it-to-dsp-api","title":"Validating a Mapping and sending it to DSP-API","text":"<p>A mapping can be validated before sending it to DSP-API with the following XML Schema file: <code>webapi/src/resources/mappingXMLToStandoff.xsd</code>. Any mapping that does not conform to this XML Schema file will be rejected by DSP-API.</p> <p>The mapping has to be sent as a multipart request to the standoff route using the path segment <code>mapping</code>:</p> <pre><code>HTTP POST http://host/v2/mapping\n</code></pre> <p>The multipart request consists of two named parts:</p> <pre><code>\"json\":\n\n  {\n      \"knora-api:mappingHasName\": \"My Mapping\",\n      \"knora-api:attachedToProject\": \"projectIRI\",\n      \"rdfs:label\": \"MappingNameSegment\",\n      \"@context\": {\n          \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\n          \"knora-api\": \"http://api.knora.org/ontology/knora-api/v2#\"\n      }\n  }\n\n\"xml\":\n\n  &lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n  &lt;mapping&gt;\n      ...\n  &lt;/mapping&gt;\n</code></pre> <p>A successful response returns the IRI of the mapping. However, the IRI of a mapping is predictable: it consists of the project Iri followed by <code>/mappings/</code> and the <code>knora-api:mappingHasName</code> submitted in the JSON-LD (if the name already exists, the request will be rejected). Once created, a mapping can be used to create TextValues in Knora. The formats are documented in the v2 typescript interfaces <code>AddMappingRequest</code> and <code>AddMappingResponse</code> in module <code>MappingFormats</code></p>"},{"location":"DSP-API/03-endpoints/api-v2/text/overview/","title":"Overview","text":"<p>DSP-API supports various ways of handling textual data:</p>"},{"location":"DSP-API/03-endpoints/api-v2/text/overview/#text-in-rdf","title":"Text in RDF","text":"<p>Textual data can be included directly in the data stored in DSP-API.  This is the default way of handling text in the DSP.  There are three ways of representing textual data in DSP-API, two of which are fully supported by DSP-APP and DSP-TOOLS.</p> <p>Texts stored in RDF can be searched using both full-text search and structured queries.</p>"},{"location":"DSP-API/03-endpoints/api-v2/text/overview/#simple-text","title":"Simple Text","text":"<p>If a text requires no formatting, it can simply be stored as a string in a <code>knora-base:TextValue</code>.  This is sufficient in many cases, especially for shorter texts like names, titles, identifiers, etc.</p>"},{"location":"DSP-API/03-endpoints/api-v2/text/overview/#text-with-formatting","title":"Text with Formatting","text":"<p>For text requiring regular markup, <code>knora-base:TextValue</code> can be used  in combination with the DSP's standard standoff markup.</p> <p>This allows for the following markup:</p> <ul> <li>structural markup<ul> <li>paragraphs</li> <li>headings levels 1-6</li> <li>ordered lists</li> <li>unordered lists</li> <li>tables</li> <li>line breaks</li> <li>horizontal rules</li> <li>code blocks</li> <li>block quotes</li> </ul> </li> <li>typographical markup<ul> <li>italics</li> <li>bold</li> <li>underline</li> <li>strikethrough</li> <li>subscript</li> <li>superscript</li> </ul> </li> <li>semantic markup<ul> <li>links</li> <li>DSP internal links</li> </ul> </li> </ul> <p>DSP-APP provides a text editor for conveniently editing text with standard standoff markup.</p> <p>More details can be found here.</p>"},{"location":"DSP-API/03-endpoints/api-v2/text/overview/#text-with-custom-markup","title":"Text with Custom Markup","text":"<p>It is possible to create custom XML-to-Schema mappings, which allows for creating project specific custom markup for text values.  Details can be found here.</p> <p>Info</p> <p>Custom markup is not supported by DSP-TOOLS and is view-only in DSP-APP. Creating custom markup is relatively involved,  so that it should only be used by projects working with complex textual data.</p>"},{"location":"DSP-API/03-endpoints/api-v2/text/overview/#file-based","title":"File Based","text":"<p>Text files of various formats (Word, PDF, XML, etc.) can be uploaded to the media file server.  For more details, see here</p> <p>This allows for easy upload and retrieval of the file.  However, it does not allow for searching within the file content.</p>"},{"location":"DSP-API/03-endpoints/api-v2/text/overview/#tei-xml","title":"TEI XML","text":"<p>All text values in DSP-API using stanodff markup can be converted to TEI XML as described here.</p> <p>Info</p> <p>Improved support for TEI XML is in planning.</p>"},{"location":"DSP-API/03-endpoints/api-v2/text/standard-standoff/","title":"Standard Standoff Markup Mapping","text":"<p>A mapping allows for the conversion of XML to standoff representation in RDF and back.  In order to create a <code>TextValue</code> with markup,  the text has to be provided in XML format,  along with the IRI of the mapping that will be used to convert the markup to standoff.</p> <p>DSP-API offers a standard mapping with the IRI <code>http://rdfh.ch/standoff/mappings/StandardMapping</code>.  The standard mapping covers the HTML elements and attributes  supported by the GUI's text editor, CKEditor.  (Please note that the HTML has to be encoded in strict XML syntax.  CKeditor offers the possibility to define filter rules. They should reflect the elements supported by the mapping.) The standard mapping contains the following elements and attributes  that are mapped to standoff classes and properties defined in the ontology:</p> <ul> <li><code>&lt;text&gt;</code> \u2192 <code>standoff:StandoffRootTag</code></li> <li><code>&lt;p&gt;</code> \u2192 <code>standoff:StandoffParagraphTag</code></li> <li><code>&lt;em&gt;</code> \u2192 <code>standoff:StandoffItalicTag</code></li> <li><code>&lt;strong&gt;</code> \u2192 <code>standoff:StandoffBoldTag</code></li> <li><code>&lt;u&gt;</code> \u2192 <code>standoff:StandoffUnderlineTag</code></li> <li><code>&lt;sub&gt;</code> \u2192 <code>standoff:StandoffSubscriptTag</code></li> <li><code>&lt;sup&gt;</code> \u2192 <code>standoff:StandoffSuperscriptTag</code></li> <li><code>&lt;strike&gt;</code> \u2192 <code>standoff:StandoffStrikeTag</code></li> <li><code>&lt;a href=\"URL\"&gt;</code> \u2192 <code>knora-base:StandoffUriTag</code></li> <li><code>&lt;a class=\"salsah-link\" href=\"Knora IRI\"&gt;</code> \u2192 <code>knora-base:StandoffLinkTag</code></li> <li><code>&lt;a class=\"internal-link\" href=\"#fragment\"&gt;</code> \u2192 <code>knora-base:StandoffInternalReferenceTag</code></li> <li><code>&lt;h1&gt;</code> to <code>&lt;h6&gt;</code> \u2192 <code>standoff:StandoffHeader1Tag</code> to <code>standoff:StandoffHeader6Tag</code></li> <li><code>&lt;ol&gt;</code> \u2192 <code>standoff:StandoffOrderedListTag</code></li> <li><code>&lt;ul&gt;</code> \u2192 <code>standoff:StandoffUnrderedListTag</code></li> <li><code>&lt;li&gt;</code> \u2192 <code>standoff:StandoffListElementTag</code></li> <li><code>&lt;tbody&gt;</code> \u2192 <code>standoff:StandoffTableBodyTag</code></li> <li><code>&lt;table&gt;</code> \u2192 <code>standoff:StandoffTableTag</code></li> <li><code>&lt;tr&gt;</code> \u2192 <code>standoff:StandoffTableRowTag</code></li> <li><code>&lt;td&gt;</code> \u2192 <code>standoff:StandoffTableCellTag</code></li> <li><code>&lt;br&gt;</code> \u2192 <code>standoff:StandoffBrTag</code></li> <li><code>&lt;hr&gt;</code> \u2192 <code>standoff:StandoffLineTag</code></li> <li><code>&lt;pre&gt;</code> \u2192 <code>standoff:StandoffPreTag</code></li> <li><code>&lt;cite&gt;</code> \u2192 <code>standoff:StandoffCiteTag</code></li> <li><code>&lt;blockquote&gt;</code> \u2192 <code>standoff:StandoffBlockquoteTag</code></li> <li><code>&lt;code&gt;</code> \u2192 <code>standoff:StandoffCodeTag</code></li> </ul> <p>The HTML produced by CKEditor is wrapped in an XML doctype and a pair of root tags <code>&lt;text&gt;...&lt;/text&gt;</code>  and then sent to the DSP-API. The XML sent to the GUI by the DSP-API is unwrapped accordingly. Although the GUI supports HTML5, it is treated as if it was XHTML in strict XML notation.</p> <p>Text with standard standoff markup can be transformed to TEI XML as described here.</p>"},{"location":"DSP-API/03-endpoints/api-v2/text/tei-xml/","title":"TEI XML","text":""},{"location":"DSP-API/03-endpoints/api-v2/text/tei-xml/#teixml-converting-standoff-to-teixml","title":"TEI/XML: Converting Standoff to TEI/XML","text":""},{"location":"DSP-API/03-endpoints/api-v2/text/tei-xml/#general","title":"General","text":"<p>DSP-API offers a way to convert standoff markup to TEI/XML. The conversion is based on the assumption that a whole resource is to be turned into a TEI document. There is a basic distinction between the body and the header of a TEI document. The resource's property that contains the text with standoff markup is mapped to the TEI document's body. Other of the resource's property may be mapped to the TEI header.</p>"},{"location":"DSP-API/03-endpoints/api-v2/text/tei-xml/#standard-standoff-to-tei-conversion","title":"Standard Standoff to TEI Conversion","text":"<p>DSP-API offers a built-in conversion form standard standoff entities (defined in the <code>standoff</code> ontology) tags to TEI.</p> <p>Note</p> <p>As TEI provides a wide range of Elements and Attributes  which can have different meaning depending on the markup practices of a project, whereas DSP standard standoff has a very limited tagset, this conversion is oppinionated by necessity and may not be appropriate for all projects.</p> <p>In order to obtain a resource as a TEI document, the following request has to be performed.  Please note that the URL parameters have to be URL-encoded.</p> <pre><code>HTTP GET to http://host/v2/tei/resourceIri?textProperty=textPropertyIri\n</code></pre> <p>In addition to the resource's Iri, the Iri of the property containing the text with standoff has to be submitted.  This will be converted to the TEI body.  Please note that the resource can only have one instance of this property and the text must have standoff markup.</p> <p>The test data contain the resource <code>http://rdfh.ch/0001/thing_with_richtext_with_markup</code>  with the text property <code>http://0.0.0.0:3333/ontology/0001/anything/v2#hasRichtext</code>  that can be converted to TEI as follows:</p> <pre><code>HTTP GET to http://host/v2/tei/http%3A%2F%2Frdfh.ch%2F0001%2Fthing_with_richtext_with_markup?textProperty=http%3A%2F%2F0.0.0.0%3A3333%2Fontology%2F0001%2Fanything%2Fv2%23hasRichtext\n</code></pre> <p>The response to this request is a TEI XML document:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;TEI xmlns=\"http://www.tei-c.org/ns/1.0\" version=\"3.3.0\"&gt;\n  &lt;teiHeader&gt;\n    &lt;fileDesc&gt;\n      &lt;titleStmt&gt;\n        &lt;title&gt;test thing with markup&lt;/title&gt;\n      &lt;/titleStmt&gt;\n      &lt;publicationStmt&gt;\n        &lt;p&gt;\n             This is the TEI/XML representation of a resource identified by the Iri http://rdfh.ch/0001/thing_with_richtext_with_markup.\n         &lt;/p&gt;\n      &lt;/publicationStmt&gt;\n      &lt;sourceDesc&gt;\n        &lt;p&gt;Representation of the resource's text as TEI/XML&lt;/p&gt;\n      &lt;/sourceDesc&gt;\n    &lt;/fileDesc&gt;\n  &lt;/teiHeader&gt;\n  &lt;text&gt;\n    &lt;body&gt;\n      &lt;p&gt;\n        This is a test that contains marked up elements. \n        This is &lt;hi rend=\"italic\"&gt;interesting text&lt;/hi&gt; in italics.\n        This is &lt;hi rend=\"italic\"&gt;boring text&lt;/hi&gt; in italics.\n      &lt;/p&gt;\n    &lt;/body&gt;\n  &lt;/text&gt;\n&lt;/TEI&gt;        \n</code></pre> <p>The body of the TEI document contains the standoff markup as XML.  The header contains contains some basic metadata about the resource such as the <code>rdfs:label</code> an its IRI.  However, this might not be sufficient for more advanced use cases like digital edition projects.  In that case, a custom conversion has to be performed (see below).</p>"},{"location":"DSP-API/03-endpoints/api-v2/text/tei-xml/#custom-conversion","title":"Custom Conversion","text":"<p>If a project defines its own standoff entities, a custom conversion can be provided (body of the TEI document).  Also for the TEI header, a custom conversion can be provided.</p> <p>For the custom conversion, additional configuration is required.</p> <p>TEI body:</p> <ul> <li>additional mapping from standoff to XML (URL parameter <code>mappingIri</code>)</li> <li>XSL transformation to turn the XML into a valid TEI body (referred to by the mapping).</li> </ul> <p>The mapping has to refer to a <code>defaultXSLTransformation</code> that transforms the XML that was created from standoff markup  (see XML To Standoff Mapping).  This step is necessary because the mapping assumes a one to one relation  between standoff classes and properties and XML elements and attributes. For example, we may want to convert a <code>standoff:StandoffItalicTag</code> into TEI/XML.  TEI expresses this as <code>&lt;hi rend=\"italic\"&gt;...&lt;/hi&gt;</code>.  In the mapping, the <code>standoff:StandoffItalicTag</code> may be mapped to a temporary XML element  that is going to be converted to <code>&lt;hi rend=\"italic\"&gt;...&lt;/hi&gt;</code> in a further step by the XSLT. </p> <p>For sample data, see <code>webapi/_test_data/test_route/texts/beol/BEOLTEIMapping.xml</code> (mapping)  and <code>webapi/_test_data/test_route/texts/beol/standoffToTEI.xsl</code>.  The standoff entities are defined in <code>beol-onto.ttl</code>.</p> <p>TEI header:</p> <ul> <li>Gravsearch template to query the resources metadata, results are serialized to RDF/XML (URL parameter <code>gravsearchTemplateIri</code>)</li> <li>XSL transformation to turn that RDF/XML into a valid TEI header (URL parameter <code>teiHeaderXSLTIri</code>)</li> </ul> <p>The Gravsearch template is expected to be of type <code>knora-base:TextRepresentation</code>  and to contain a placeholder <code>$resourceIri</code> that is to be replaced by the actual resource Iri. The Gravsearch template is expected to contain a query involving the text property (URL parameter <code>textProperty</code>)  and more properties that are going to be mapped to the TEI header.  The Gravsearch template is a simple text file with the files extension <code>.txt</code>.</p> <p>A Gravsearch template may look like this (see <code>test_data/test_route/texts/beol/gravsearch.txt</code>):</p> <pre><code>PREFIX beol: &lt;http://0.0.0.0:3333/ontology/0801/beol/simple/v2#&gt;\nPREFIX knora-api: &lt;http://api.knora.org/ontology/knora-api/simple/v2#&gt;\nPREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;\n\n    CONSTRUCT {\n        ?letter knora-api:isMainResource true .\n\n        ?letter beol:creationDate ?date .\n\n        ?letter beol:hasText ?text .\n\n        ?letter beol:hasAuthor ?person1 .\n\n        ?person1 beol:hasFamilyName ?name1 .\n\n        ?person1 beol:hasGivenName ?givenName1 .\n\n        ?person1 beol:hasIAFIdentifier ?iaf1 .\n\n        ?letter beol:hasRecipient ?person2 .\n\n        ?person2 beol:hasFamilyName ?name2 .\n\n        ?person2 beol:hasGivenName ?givenName2 .\n\n        ?person2 beol:hasIAFIdentifier ?iaf2 .\n\n\n    } WHERE {\n        BIND(&lt;$resourceIri&gt; as ?letter)\n        ?letter a knora-api:Resource .\n        ?letter a beol:letter .\n\n        ?letter beol:creationDate ?date .\n\n        beol:creationDate knora-api:objectType knora-api:Date .\n        ?date a knora-api:Date .\n\n        ?letter beol:hasText ?text .\n\n        beol:hasText knora-api:objectType xsd:string .\n\n        ?text a xsd:string .\n\n        ?letter beol:hasAuthor ?person1 .\n\n        ?person1 beol:hasFamilyName ?name1 .\n\n        ?person1 beol:hasGivenName ?givenName1 .\n\n        ?person1 beol:hasIAFIdentifier ?iaf1 .\n\n        ?name1 a xsd:string .\n\n        ?givenName1 a xsd:string .\n\n        ?iaf1 a xsd:string .\n\n        ?person2 beol:hasFamilyName ?name2 .\n\n        ?person2 beol:hasGivenName ?givenName2 .\n\n        ?person2 beol:hasIAFIdentifier ?iaf2 .\n\n        ?name2 a xsd:string .\n\n        ?givenName2 a xsd:string .\n\n        ?iaf2 a xsd:string .\n\n        beol:hasGivenName knora-api:objectType xsd:string .\n        beol:hasFamilyName knora-api:objectType xsd:string .\n        beol:hasIAFIdentifier knora-api:objectType xsd:string .\n\n        beol:hasAuthor knora-api:objectType knora-api:Resource .\n\n        ?letter beol:hasRecipient ?person2 .\n\n        beol:hasRecipient knora-api:objectType knora-api:Resource .\n\n        ?person1 a knora-api:Resource .\n        ?person2 a knora-api:Resource .\n\n    }\n</code></pre> <p>Note the placeholder <code>BIND(&lt;$resourceIri&gt; as ?letter)</code> that is going to be replaced  by the Iri of the resource the request is performed for. The query asks for information about the letter's text <code>beol:hasText</code> and information about its author and recipient.  This information is converted to the TEI header in the format required by correspSearch.</p> <p>To write the XSLT, do the Gravsearch query and request the data as RDF/XML using content negotiation  (see Introduction).</p> <p>The Gravsearch query's result may look like this (<code>RDF/XML</code>):</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;rdf:RDF\n    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n    xmlns:knora-api=\"http://api.knora.org/ontology/knora-api/v2#\"\n    xmlns:beol=\"http://0.0.0.0:3333/ontology/0801/beol/v2#\"&gt;\n&lt;beol:letter rdf:about=\"http://rdfh.ch/0801/MbZdHVcsR_Ky5pZoytaiBA\"&gt;\n    &lt;beol:creationDate rdf:resource=\"http://rdfh.ch/0801/MbZdHVcsR_Ky5pZoytaiBA/values/Ob_1YRO_QmaDxTRI64vGOQ\"/&gt;\n    &lt;beol:hasAuthorValue rdf:resource=\"http://rdfh.ch/0801/MbZdHVcsR_Ky5pZoytaiBA/values/zt4a3XoESTq9To4mSN8Dug\"/&gt;\n    &lt;beol:hasRecipientValue rdf:resource=\"http://rdfh.ch/0801/MbZdHVcsR_Ky5pZoytaiBA/values/pVerHO_FRXePZQT9kgEp_Q\"/&gt;\n    &lt;rdfs:label rdf:datatype=\"http://www.w3.org/2001/XMLSchema#string\"&gt;Testletter&lt;/rdfs:label&gt;\n&lt;/beol:letter&gt;\n&lt;knora-api:DateValue rdf:about=\"http://rdfh.ch/0801/MbZdHVcsR_Ky5pZoytaiBA/values/Ob_1YRO_QmaDxTRI64vGOQ\"&gt;\n    &lt;knora-api:dateValueHasCalendar rdf:datatype=\"http://www.w3.org/2001/XMLSchema#string\"&gt;GREGORIAN&lt;/knora-api:dateValueHasCalendar&gt;\n    &lt;knora-api:dateValueHasEndDay rdf:datatype=\"http://www.w3.org/2001/XMLSchema#integer\"&gt;10&lt;/knora-api:dateValueHasEndDay&gt;\n    &lt;knora-api:dateValueHasEndEra rdf:datatype=\"http://www.w3.org/2001/XMLSchema#string\"&gt;CE&lt;/knora-api:dateValueHasEndEra&gt;\n    &lt;knora-api:dateValueHasEndMonth rdf:datatype=\"http://www.w3.org/2001/XMLSchema#integer\"&gt;6&lt;/knora-api:dateValueHasEndMonth&gt;\n    &lt;knora-api:dateValueHasEndYear rdf:datatype=\"http://www.w3.org/2001/XMLSchema#integer\"&gt;1703&lt;/knora-api:dateValueHasEndYear&gt;\n    &lt;knora-api:dateValueHasStartDay rdf:datatype=\"http://www.w3.org/2001/XMLSchema#integer\"&gt;10&lt;/knora-api:dateValueHasStartDay&gt;\n    &lt;knora-api:dateValueHasStartEra rdf:datatype=\"http://www.w3.org/2001/XMLSchema#string\"&gt;CE&lt;/knora-api:dateValueHasStartEra&gt;\n    &lt;knora-api:dateValueHasStartMonth rdf:datatype=\"http://www.w3.org/2001/XMLSchema#integer\"&gt;6&lt;/knora-api:dateValueHasStartMonth&gt;\n    &lt;knora-api:dateValueHasStartYear rdf:datatype=\"http://www.w3.org/2001/XMLSchema#integer\"&gt;1703&lt;/knora-api:dateValueHasStartYear&gt;\n    &lt;knora-api:valueAsString rdf:datatype=\"http://www.w3.org/2001/XMLSchema#string\"&gt;GREGORIAN:1703-06-10 CE&lt;/knora-api:valueAsString&gt;\n&lt;/knora-api:DateValue&gt;\n&lt;knora-api:LinkValue rdf:about=\"http://rdfh.ch/0801/MbZdHVcsR_Ky5pZoytaiBA/values/zt4a3XoESTq9To4mSN8Dug\"&gt;\n    &lt;knora-api:linkValueHasTarget&gt;\n        &lt;beol:person rdf:about=\"http://rdfh.ch/0801/_9LEnLM7TFuPRjTshOTJpQ\"&gt;\n            &lt;beol:hasFamilyName rdf:resource=\"http://rdfh.ch/0801/_9LEnLM7TFuPRjTshOTJpQ/values/NG42jDqSTz2U35N6sJ8cqg\"/&gt;\n            &lt;beol:hasGivenName rdf:resource=\"http://rdfh.ch/0801/_9LEnLM7TFuPRjTshOTJpQ/values/W2lVG1mvQU2MauAvCGB13w\"/&gt;\n            &lt;beol:hasIAFIdentifier rdf:resource=\"http://rdfh.ch/0801/_9LEnLM7TFuPRjTshOTJpQ/values/N2TVtntdToqJQpdZhYPc5g\"/&gt;\n            &lt;rdfs:label rdf:datatype=\"http://www.w3.org/2001/XMLSchema#string\"&gt;Johann Jacob Scheuchzer&lt;/rdfs:label&gt;\n        &lt;/beol:person&gt;\n    &lt;/knora-api:linkValueHasTarget&gt;\n&lt;/knora-api:LinkValue&gt;\n&lt;knora-api:TextValue rdf:about=\"http://rdfh.ch/0801/_9LEnLM7TFuPRjTshOTJpQ/values/NG42jDqSTz2U35N6sJ8cqg\"&gt;\n    &lt;knora-api:valueAsString rdf:datatype=\"http://www.w3.org/2001/XMLSchema#string\"&gt;Scheuchzer&lt;/knora-api:valueAsString&gt;\n&lt;/knora-api:TextValue&gt;\n&lt;knora-api:TextValue rdf:about=\"http://rdfh.ch/0801/_9LEnLM7TFuPRjTshOTJpQ/values/W2lVG1mvQU2MauAvCGB13w\"&gt;\n    &lt;knora-api:valueAsString rdf:datatype=\"http://www.w3.org/2001/XMLSchema#string\"&gt;Johann Jacob&lt;/knora-api:valueAsString&gt;\n&lt;/knora-api:TextValue&gt;\n&lt;knora-api:TextValue rdf:about=\"http://rdfh.ch/0801/_9LEnLM7TFuPRjTshOTJpQ/values/N2TVtntdToqJQpdZhYPc5g\"&gt;\n    &lt;knora-api:valueAsString rdf:datatype=\"http://www.w3.org/2001/XMLSchema#string\"&gt;(DE-588)118607308&lt;/knora-api:valueAsString&gt;\n&lt;/knora-api:TextValue&gt;\n&lt;knora-api:LinkValue rdf:about=\"http://rdfh.ch/0801/MbZdHVcsR_Ky5pZoytaiBA/values/pVerHO_FRXePZQT9kgEp_Q\"&gt;\n    &lt;knora-api:linkValueHasTarget&gt;\n        &lt;beol:person rdf:about=\"http://rdfh.ch/0801/JaQwPsYEQJ6GQrAgKC0Gkw\"&gt;\n            &lt;beol:hasFamilyName rdf:resource=\"http://rdfh.ch/0801/JaQwPsYEQJ6GQrAgKC0Gkw/values/k1Exqf93SsWi7LWK9ozXkw\"/&gt;\n            &lt;beol:hasGivenName rdf:resource=\"http://rdfh.ch/0801/JaQwPsYEQJ6GQrAgKC0Gkw/values/gkqK5Ij_R7mtO59xfSDGJA\"/&gt;\n            &lt;beol:hasIAFIdentifier rdf:resource=\"http://rdfh.ch/0801/JaQwPsYEQJ6GQrAgKC0Gkw/values/C-Dl15S-SV63L1KCCPFfew\"/&gt;\n            &lt;rdfs:label rdf:datatype=\"http://www.w3.org/2001/XMLSchema#string\"&gt;Jacob Hermann&lt;/rdfs:label&gt;\n        &lt;/beol:person&gt;\n    &lt;/knora-api:linkValueHasTarget&gt;\n&lt;/knora-api:LinkValue&gt;\n&lt;knora-api:TextValue rdf:about=\"http://rdfh.ch/0801/JaQwPsYEQJ6GQrAgKC0Gkw/values/k1Exqf93SsWi7LWK9ozXkw\"&gt;\n    &lt;knora-api:valueAsString rdf:datatype=\"http://www.w3.org/2001/XMLSchema#string\"&gt;Hermann&lt;/knora-api:valueAsString&gt;\n&lt;/knora-api:TextValue&gt;\n&lt;knora-api:TextValue rdf:about=\"http://rdfh.ch/0801/JaQwPsYEQJ6GQrAgKC0Gkw/values/gkqK5Ij_R7mtO59xfSDGJA\"&gt;\n    &lt;knora-api:valueAsString rdf:datatype=\"http://www.w3.org/2001/XMLSchema#string\"&gt;Jacob&lt;/knora-api:valueAsString&gt;\n&lt;/knora-api:TextValue&gt;\n&lt;knora-api:TextValue rdf:about=\"http://rdfh.ch/0801/JaQwPsYEQJ6GQrAgKC0Gkw/values/C-Dl15S-SV63L1KCCPFfew\"&gt;\n    &lt;knora-api:valueAsString rdf:datatype=\"http://www.w3.org/2001/XMLSchema#string\"&gt;(DE-588)119112450&lt;/knora-api:valueAsString&gt;\n&lt;/knora-api:TextValue&gt;\n\n&lt;/rdf:RDF&gt;\n</code></pre> <p>In order to convert the metadata (not the actual standoff markup),  a <code>knora-base:knora-base:XSLTransformation</code> has to be provided.  For our example, it looks like this (see <code>test_data/test_route/texts/beol/header.xsl</code>):</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;xsl:transform xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n               xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n               xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n               xmlns:rdfs1=\"http://www.w3.org/2000/01/rdf-schema#\"\n               xmlns:beol=\"http://0.0.0.0:3333/ontology/0801/beol/v2#\"\n               xmlns:knora-api=\"http://api.knora.org/ontology/knora-api/v2#\"\n               exclude-result-prefixes=\"rdf beol knora-api xs rdfs1\" version=\"2.0\"&gt;\n\n    &lt;xsl:output method=\"xml\" omit-xml-declaration=\"yes\" encoding=\"utf-8\" indent=\"yes\"/&gt;\n\n    &lt;!-- make IAF id a URL --&gt;\n    &lt;xsl:function name=\"knora-api:iaf\" as=\"xs:anyURI\"&gt;\n        &lt;xsl:param name=\"input\" as=\"xs:string\"/&gt;\n        &lt;xsl:value-of select=\"replace($input, '\\(DE-588\\)', 'http://d-nb.info/gnd/')\"/&gt;\n    &lt;/xsl:function&gt;\n\n    &lt;!-- make a standard date (Gregorian calendar assumed) --&gt;\n    &lt;xsl:function name=\"knora-api:dateformat\" as=\"element()*\"&gt;\n        &lt;xsl:param name=\"input\" as=\"element()*\"/&gt;\n\n        &lt;xsl:choose&gt;\n            &lt;xsl:when test=\"$input/knora-api:dateValueHasStartYear/text() = $input/knora-api:dateValueHasEndYear/text() and $input/knora-api:dateValueHasStartMonth/text() = $input/knora-api:dateValueHasEndMonth/text() and $input/knora-api:dateValueHasStartDay/text() = $input/knora-api:dateValueHasEndDay/text()\"&gt;\n                &lt;!-- no period, day precision --&gt;\n                &lt;date&gt;\n                    &lt;xsl:attribute name=\"when\"&gt;\n                        &lt;xsl:value-of select=\"format-number($input/knora-api:dateValueHasStartYear/text(), '0000')\"/&gt;-&lt;xsl:value-of select=\"format-number($input/knora-api:dateValueHasStartMonth/text(), '00')\"/&gt;-&lt;xsl:value-of select=\"format-number($input/knora-api:dateValueHasStartMonth/text(), '00')\"/&gt;\n                    &lt;/xsl:attribute&gt;\n                &lt;/date&gt;\n\n            &lt;/xsl:when&gt;\n            &lt;xsl:otherwise&gt;\n                &lt;!-- period --&gt;\n                &lt;date&gt;\n                    &lt;xsl:attribute name=\"notBefore\"&gt;\n                        &lt;xsl:value-of select=\"format-number($input/knora-api:dateValueHasStartYear/text(), '0000')\"/&gt;-&lt;xsl:value-of select=\"format-number($input/knora-api:dateValueHasStartMonth/text(), '00')\"/&gt;-&lt;xsl:value-of select=\"format-number($input/knora-api:dateValueHasStartDay/text(), '00')\"/&gt;\n                    &lt;/xsl:attribute&gt;\n\n                    &lt;xsl:attribute name=\"notAfter\"&gt;\n                        &lt;xsl:value-of select=\"format-number($input/knora-api:dateValueHasEndYear/text(), '0000')\"/&gt;-&lt;xsl:value-of select=\"format-number($input/knora-api:dateValueHasEndMonth/text(), '00')\"/&gt;-&lt;xsl:value-of select=\"format-number($input/knora-api:dateValueHasEndDay/text(), '00')\"/&gt;\n                    &lt;/xsl:attribute&gt;\n                &lt;/date&gt;\n\n            &lt;/xsl:otherwise&gt;\n        &lt;/xsl:choose&gt;\n\n\n    &lt;/xsl:function&gt;\n\n    &lt;xsl:template match=\"rdf:RDF\"&gt;\n        &lt;xsl:variable name=\"resourceIri\" select=\"beol:letter/@rdf:about\"/&gt;\n        &lt;xsl:variable name=\"label\" select=\"beol:letter/rdfs1:label/text()\"/&gt;\n\n\n        &lt;teiHeader&gt;\n            &lt;fileDesc&gt;\n                &lt;titleStmt&gt;\n                    &lt;title&gt;\n                        &lt;xsl:value-of select=\"$label\"/&gt;\n                    &lt;/title&gt;\n                &lt;/titleStmt&gt;\n                &lt;publicationStmt&gt;\n                    &lt;p&gt; This is the TEI/XML representation of the resource identified by the Iri\n                        &lt;xsl:value-of select=\"$resourceIri\"/&gt;. &lt;/p&gt;\n                &lt;/publicationStmt&gt;\n                &lt;sourceDesc&gt;\n                    &lt;p&gt;Representation of the resource's text as TEI/XML&lt;/p&gt;\n                &lt;/sourceDesc&gt;\n            &lt;/fileDesc&gt;\n            &lt;profileDesc&gt;\n\n                &lt;correspDesc&gt;\n                    &lt;xsl:attribute name=\"ref\"&gt;\n                        &lt;xsl:value-of select=\"$resourceIri\"/&gt;\n                    &lt;/xsl:attribute&gt;\n                    &lt;xsl:apply-templates/&gt;\n                &lt;/correspDesc&gt;\n            &lt;/profileDesc&gt;\n        &lt;/teiHeader&gt;\n    &lt;/xsl:template&gt;\n\n    &lt;xsl:template match=\"beol:letter/beol:hasAuthorValue\"&gt;\n        &lt;xsl:variable name=\"authorValue\" select=\"@rdf:resource\"/&gt;\n\n        &lt;xsl:variable name=\"authorIAFValue\"\n                      select=\"//knora-api:LinkValue[@rdf:about=$authorValue]//beol:hasIAFIdentifier/@rdf:resource\"/&gt;\n        &lt;xsl:variable name=\"authorFamilyNameValue\"\n                      select=\"//knora-api:LinkValue[@rdf:about=$authorValue]//beol:hasFamilyName/@rdf:resource\"/&gt;\n        &lt;xsl:variable name=\"authorGivenNameValue\"\n                      select=\"//knora-api:LinkValue[@rdf:about=$authorValue]//beol:hasGivenName/@rdf:resource\"/&gt;\n\n        &lt;correspAction type=\"sent\"&gt;\n\n            &lt;xsl:variable name=\"authorIAFText\"\n                          select=\"//knora-api:TextValue[@rdf:about=$authorIAFValue]/knora-api:valueAsString/text()\"/&gt;\n            &lt;xsl:variable name=\"authorFamilyNameText\"\n                          select=\"//knora-api:TextValue[@rdf:about=$authorFamilyNameValue]/knora-api:valueAsString/text()\"/&gt;\n            &lt;xsl:variable name=\"authorGivenNameText\"\n                          select=\"//knora-api:TextValue[@rdf:about=$authorGivenNameValue]/knora-api:valueAsString/text()\"/&gt;\n\n            &lt;persName&gt;\n                &lt;xsl:attribute name=\"ref\"&gt;&lt;xsl:value-of select=\"knora-api:iaf($authorIAFText)\"\n                /&gt;&lt;/xsl:attribute&gt;\n                &lt;xsl:value-of select=\"$authorFamilyNameText\"/&gt;, &lt;xsl:value-of\n                    select=\"$authorGivenNameText\"/&gt;\n            &lt;/persName&gt;\n\n            &lt;xsl:variable name=\"dateValue\" select=\"//beol:creationDate/@rdf:resource\"/&gt;\n\n            &lt;xsl:variable name=\"dateObj\"\n                          select=\"//knora-api:DateValue[@rdf:about=$dateValue]\"/&gt;\n\n            &lt;xsl:copy-of select=\"knora-api:dateformat($dateObj)\"/&gt;\n\n        &lt;/correspAction&gt;\n    &lt;/xsl:template&gt;\n\n    &lt;xsl:template match=\"beol:letter/beol:hasRecipientValue\"&gt;\n        &lt;xsl:variable name=\"recipientValue\" select=\"@rdf:resource\"/&gt;\n\n        &lt;xsl:variable name=\"recipientIAFValue\"\n                      select=\"//knora-api:LinkValue[@rdf:about=$recipientValue]//beol:hasIAFIdentifier/@rdf:resource\"/&gt;\n        &lt;xsl:variable name=\"recipientFamilyNameValue\"\n                      select=\"//knora-api:LinkValue[@rdf:about=$recipientValue]//beol:hasFamilyName/@rdf:resource\"/&gt;\n        &lt;xsl:variable name=\"recipientGivenNameValue\"\n                      select=\"//knora-api:LinkValue[@rdf:about=$recipientValue]//beol:hasGivenName/@rdf:resource\"/&gt;\n\n        &lt;correspAction type=\"received\"&gt;\n\n            &lt;xsl:variable name=\"recipientIAFText\"\n                          select=\"//knora-api:TextValue[@rdf:about=$recipientIAFValue]/knora-api:valueAsString/text()\"/&gt;\n            &lt;xsl:variable name=\"recipientFamilyNameText\"\n                          select=\"//knora-api:TextValue[@rdf:about=$recipientFamilyNameValue]/knora-api:valueAsString/text()\"/&gt;\n            &lt;xsl:variable name=\"recipientGivenNameText\"\n                          select=\"//knora-api:TextValue[@rdf:about=$recipientGivenNameValue]/knora-api:valueAsString/text()\"/&gt;\n\n            &lt;persName&gt;\n                &lt;xsl:attribute name=\"ref\"&gt;&lt;xsl:value-of select=\"knora-api:iaf($recipientIAFText)\"\n                /&gt;&lt;/xsl:attribute&gt;\n                &lt;xsl:value-of select=\"$recipientFamilyNameText\"/&gt;, &lt;xsl:value-of\n                    select=\"$recipientGivenNameText\"/&gt;\n            &lt;/persName&gt;\n\n        &lt;/correspAction&gt;\n    &lt;/xsl:template&gt;\n\n    &lt;!-- ignore text if there is no template for the element containing it --&gt;\n    &lt;xsl:template match=\"text()\"&gt; &lt;/xsl:template&gt;\n\n\n&lt;/xsl:transform&gt;\n</code></pre> <p>You can use the functions <code>knora-api:iaf</code> and <code>knora-api:dateformat</code> in your own XSLT in case you want to support <code>correspSearch</code>.</p> <p>The complete request looks like this:</p> <pre><code>HTTP GET request to http://host/v2/tei/resourceIri&amp;textProperty=textPropertyIri&amp;mappingIri=mappingIri&amp;gravsearchTemplateIri=gravsearchTemplateIri&amp;teiHeaderXSLTIri=teiHeaderXSLTIri\n</code></pre>"},{"location":"DSP-API/03-endpoints/instrumentation/health/","title":"Health Endpoint","text":""},{"location":"DSP-API/03-endpoints/instrumentation/health/#health","title":"Health","text":"<p>The health endpoint provides information about the health state of the dsp-stack.</p>"},{"location":"DSP-API/03-endpoints/instrumentation/health/#example-request","title":"Example request","text":"<p><code>GET /health</code></p>"},{"location":"DSP-API/03-endpoints/instrumentation/health/#example-response","title":"Example response","text":"<pre><code>{\n    \"name\":\"AppState\",\n    \"message\" : \"Application is healthy\",\n    \"severity\":\"non fatal\",\n    \"status\":\"healthy\"\n}\n</code></pre>"},{"location":"DSP-API/03-endpoints/instrumentation/introduction/","title":"Introduction","text":""},{"location":"DSP-API/03-endpoints/instrumentation/introduction/#instrumentation","title":"Instrumentation","text":"<p>The instrumentation endpoints are running on a separate port (default <code>3339</code>) defined in <code>application.conf</code> under the key: <code>app.instrumentaion-server-config.port</code> and can also be set through the environment variable: <code>KNORA_INSTRUMENTATION_SERVER_PORT</code>.</p> <p>The exposed endpoints are:</p> <ul> <li><code>/metrics</code> - a metrics endpoint, backed by the ZIO metrics backend exposing metrics in the prometheus format</li> <li><code>/health</code> - provides information about the health state, see Health Endpoint</li> </ul>"},{"location":"DSP-API/03-endpoints/instrumentation/metrics/","title":"Metrics Endpoint","text":""},{"location":"DSP-API/03-endpoints/instrumentation/metrics/#metrics-endpoint","title":"Metrics Endpoint","text":"<p>The metrics endpoint exposes metrics gathered through the ZIO metrics frontend in the Prometheus format. Additionally, ZIO runtime, JVM and ZIO-HTTP metrics are also exposed.</p>"},{"location":"DSP-API/03-endpoints/instrumentation/metrics/#configuration","title":"Configuration","text":"<p>The refresh interval is configured in <code>application.conf</code> under the key: <code>app.instrumentaion-server-config.interval</code> which es per default set to <code>5 seconds</code>.</p>"},{"location":"DSP-API/03-endpoints/instrumentation/metrics/#example-request","title":"Example request","text":"<p><code>GET /metrics</code></p>"},{"location":"DSP-API/03-endpoints/instrumentation/metrics/#example-response","title":"Example response","text":"<pre><code># TYPE jvm_memory_pool_allocated_bytes_total counter\n# HELP jvm_memory_pool_allocated_bytes_total Some help\njvm_memory_pool_allocated_bytes_total{pool=\"G1 Survivor Space\"}  4828024.0 1671021037947\n# TYPE jvm_memory_pool_allocated_bytes_total counter\n# HELP jvm_memory_pool_allocated_bytes_total Some help\njvm_memory_pool_allocated_bytes_total{pool=\"G1 Eden Space\"}  3.3554432E7 1671021037947\n# TYPE zio_fiber_successes counter\n# HELP zio_fiber_successes Some help\nzio_fiber_successes 17.0 1671021037947\n# TYPE zio_fiber_lifetimes histogram\n# HELP zio_fiber_lifetimes Some help\nzio_fiber_lifetimes_bucket{le=\"1.0\"}  17.0 1671021037947\nzio_fiber_lifetimes_bucket{le=\"2.0\"}  17.0 1671021037947\n...\n</code></pre>"},{"location":"DSP-API/03-endpoints/instrumentation/metrics/#zio-http-metrics","title":"ZIO-HTTP metrics","text":"<p>Metrics of all routes served by ZIO-HTTP (default: port <code>5555</code>) are exposed through a default metrics middleware.  However, instead of <code>http_concurrent_requests_total</code> etc. they are labeled <code>zio_http_concurrent_requests_total</code> etc. with <code>zio</code> prepended, so that they are clearly distinguishable while we still run ZIO-HTTP and Pekko-HTTP in parallel. </p> <p>To prevent excessive amounts of labels, it is considered good practice,  to replace dynamic path segments with slugs (e.g. <code>/projects/shortcode/0000</code> with <code>/projects/shortcode/:shortcode</code>).  Like this, requesting different projects by identifier will add multiple values to the histogram of a single route, instead of creating a histogram for each project:</p> <pre><code>zio_http_request_duration_seconds_bucket{method=\"GET\",path=\"/admin/projects/shortcode/:shortcode\",status=\"200\",le=\"0.005\"} 0.0 1676481606015\n...\n</code></pre> <p>Instead of:</p> <pre><code>zio_http_request_duration_seconds_bucket{method=\"GET\",path=\"/admin/projects/shortcode/0000\",status=\"200\",le=\"0.005\"} 0.0 1676481606015\nzio_http_request_duration_seconds_bucket{method=\"GET\",path=\"/admin/projects/shortcode/0001\",status=\"200\",le=\"0.005\"} 0.0 1676481606015\n...\n</code></pre> <p>This is achieved by providing the middleware a <code>pathLabelMapper</code>; when adding new routes, it is advisable to assert that this replacement works correctly for the newly added route.</p>"},{"location":"DSP-API/04-publishing-deployment/configuration/","title":"Configuration","text":""},{"location":"DSP-API/04-publishing-deployment/configuration/#configuration","title":"Configuration","text":"<p>All configuration for Knora is done in <code>application.conf</code>. Besides the Knora application specific configuration, there we can also find configuration for the underlying Pekko library.</p> <p>For optimal performance it is important to tune the configuration to the hardware used, mainly to the number of CPUs and cores per CPU.</p> <p>The relevant sections for tuning are:</p> <ul> <li><code>pekko.actor.deployment</code></li> <li><code>knora-actor-dispatcher</code></li> <li><code>knora-blocking-dispatcher</code></li> </ul>"},{"location":"DSP-API/04-publishing-deployment/configuration/#system-environment-variables","title":"System Environment Variables","text":"<p>A number of core settings is additionally configurable through system environment variables. These are:</p> key in application.conf environment variable default value pekko.log-config-on-start KNORA_AKKA_LOG_CONFIG_ON_START off pekko.loglevel KNORA_AKKA_LOGLEVEL INFO pekko.stdout-loglevel KNORA_AKKA_STDOUT_LOGLEVEL INFO app.print-extended-config KNORA_WEBAPI_PRINT_EXTENDED_CONFIG false app.bcrypt-password-strength KNORA_WEBAPI_BCRYPT_PASSWORD_STRENGTH 12 app.jwt.secret KNORA_WEBAPI_JWT_SECRET_KEY super-secret-key app.jwt.expiration KNORA_WEBAPI_JWT_LONGEVITY 30 days app.jwt.issuer KNORA_WEBAPI_JWT_ISSUER 0.0.0.0:3333 app.dsp-ingest.audience KNORA_WEBAPI_DSP_INGEST_AUDIENCE http://localhost:3340 app.dsp-ingest.base-url KNORA_WEBAPI_DSP_INGEST_BASE_URL http://localhost:3340 app.cookie-domain KNORA_WEBAPI_COOKIE_DOMAIN localhost app.allow-reload-over-http KNORA_WEBAPI_ALLOW_RELOAD_OVER_HTTP false app.ark.resolver KNORA_WEBAPI_ARK_RESOLVER_URL http://0.0.0.0:3336 app.ark.assigned-number KNORA_WEBAPI_ARK_NAAN 72163 app.knora-api.internal-host KNORA_WEBAPI_KNORA_API_INTERNAL_HOST 0.0.0.0 app.knora-api.internal-port KNORA_WEBAPI_KNORA_API_INTERNAL_PORT 3333 app.knora-api.external-protocol KNORA_WEBAPI_KNORA_API_EXTERNAL_PROTOCOL http app.knora-api.external-host KNORA_WEBAPI_KNORA_API_EXTERNAL_HOST 0.0.0.0 app.knora-api.external-port KNORA_WEBAPI_KNORA_API_EXTERNAL_PORT 3333 app.sipi.internal-protocol KNORA_WEBAPI_SIPI_INTERNAL_PROTOCOL http app.sipi.internal-host KNORA_WEBAPI_SIPI_INTERNAL_HOST localhost app.sipi.internal-port KNORA_WEBAPI_SIPI_INTERNAL_PORT 1024 app.sipi.external-protocol KNORA_WEBAPI_SIPI_EXTERNAL_PROTOCOL http app.sipi.external-host KNORA_WEBAPI_SIPI_EXTERNAL_HOST localhost app.sipi.external-port KNORA_WEBAPI_SIPI_EXTERNAL_PORT 443 app.ark.resolver KNORA_WEBAPI_ARK_RESOLVER_URL http://0.0.0.0:3336 app.ark.assigned-number KNORA_WEBAPI_ARK_NAAN 72163 app.salsah1.base-url KNORA_WEBAPI_SALSAH1_BASE_URL http://localhost:3335 app.triplestore.dbtype KNORA_WEBAPI_TRIPLESTORE_DBTYPE fuseki app.triplestore.use-https KNORA_WEBAPI_TRIPLESTORE_USE_HTTPS false app.triplestore.host KNORA_WEBAPI_TRIPLESTORE_HOST localhost app.triplestore.auto-init KNORA_WEBAPI_TRIPLESTORE_AUTOINIT false app.triplestore.fuseki.port KNORA_WEBAPI_TRIPLESTORE_FUSEKI_PORT 3030 app.triplestore.fuseki.repository-name KNORA_WEBAPI_TRIPLESTORE_FUSEKI_REPOSITORY_NAME knora-test app.triplestore.fuseki.username KNORA_WEBAPI_TRIPLESTORE_FUSEKI_USERNAME admin app.triplestore.fuseki.password KNORA_WEBAPI_TRIPLESTORE_FUSEKI_PASSWORD test app.cache-service.enabled KNORA_WEBAPI_CACHE_SERVICE_ENABLED true"},{"location":"DSP-API/04-publishing-deployment/configuration/#selectively-disabling-routes","title":"Selectively Disabling Routes","text":"<p>In <code>application.conf</code> the setting <code>app.routes-to-reject</code> contains a list of strings, representing routes which should be rejected.</p> <p>For Example, the string <code>\"v2/users\"</code> would lead to rejection of any route which contains this string.</p>"},{"location":"DSP-API/04-publishing-deployment/configuration/#startup-flags","title":"Startup Flags","text":"<p>There is a number of flags that can be set on startup, they will override any value set in the application configuration file:</p> <ul> <li><code>loadDemoData</code>, <code>--loadDemoData</code>, <code>-d</code>: Loads the demo data.</li> <li><code>allowReloadOverHTTP</code>, <code>--allow-reload-over-http</code>, <code>-r</code>: Allows   reloading of data over HTTP.</li> <li><code>-c</code>: Print the configuration at startup.</li> <li><code>--help</code>: Shows the help message with all startup flags.</li> </ul>"},{"location":"DSP-API/04-publishing-deployment/publishing/","title":"Publishing","text":""},{"location":"DSP-API/04-publishing-deployment/publishing/#publishing","title":"Publishing","text":"<p>DSP is published as a set of Docker images under the DaSCH Dockerhub Organization.</p> <p>The following Docker images are published:</p> <ul> <li>DSP-API</li> <li>Sipi (includes DSP's specific Sipi scripts)</li> <li>DSP-APP</li> </ul> <p>DSP's Docker images are published automatically through Github CI each time a pull-request is merged into the <code>main</code> branch.</p> <p>Each image is tagged with a version number, which is derived by using the result of <code>git describe</code>. The describe version is built from the <code>last tag + number of commits since tag + short hash</code>, e.g., <code>8.0.0-7-ga7827e9</code>.</p> <p>The images can be published locally by running:</p> <pre><code>make docker-build\n</code></pre> <p>or to Dockerhub:</p> <pre><code>make docker-publish\n</code></pre>"},{"location":"DSP-API/04-publishing-deployment/updates/","title":"Updating Repositories when Upgrading DSP-API","text":""},{"location":"DSP-API/04-publishing-deployment/updates/#updating-repositories-when-upgrading-knora","title":"Updating Repositories When Upgrading Knora","text":"<p>When a new version of Knora introduces changes that are not backwards-compatible with existing data, your repository will need to be updated.</p>"},{"location":"DSP-API/04-publishing-deployment/updates/#upgrading-from-knora-version-700-or-later","title":"Upgrading from Knora Version 7.0.0 or Later","text":"<p>In most cases, Knora will update your repository automatically when it starts. If manual changes are needed, these will be described in the release notes, and must be done first.</p> <p>Before starting a new version of Knora, back up your repository, so you can restore it in case the automatic repository update fails. For Fuseki use <code>fuseki-dump-repository.sh</code> script located in <code>webapi/scripts</code>.</p> <p>For information on command-line options, run the script with no arguments.</p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0001-record-architecture-decisions/","title":"ADR-0001 Record architectural decisions as ADR","text":"<p>Date: 2022-03-14</p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0001-record-architecture-decisions/#status","title":"Status","text":"<p>Accepted</p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0001-record-architecture-decisions/#context","title":"Context","text":"<p>We need to record the architectural decisions made on this project.</p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0001-record-architecture-decisions/#decision","title":"Decision","text":"<p>We will use Architectural Decision Records, as described by Michael Nygard.</p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0001-record-architecture-decisions/#consequences","title":"Consequences","text":"<p>See Michael Nygard's article, linked above. For a lightweight ADR toolset, see Nat Pryce's adr-tools.</p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0002-change-cache-service-manager-from-akka-actor-to-zlayer/","title":"ADR-0002 Change Cache Service Manager from Akka-Actor to ZLayer","text":"<p>Date: 2022-04-06</p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0002-change-cache-service-manager-from-akka-actor-to-zlayer/#status","title":"Status","text":"<p>Accepted</p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0002-change-cache-service-manager-from-akka-actor-to-zlayer/#context","title":"Context","text":"<p>The <code>org.knora.webapi.store.cacheservice.CacheServiceManager</code> was implemented as an <code>Akka-Actor</code>.</p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0002-change-cache-service-manager-from-akka-actor-to-zlayer/#decision","title":"Decision","text":"<p>As part of the move from <code>Akka</code> to <code>ZIO</code>,  it was decided that the <code>CacheServiceManager</code>  and the whole implementation of the in-memory and Redis backed cache  is refactored using ZIO.</p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0002-change-cache-service-manager-from-akka-actor-to-zlayer/#consequences","title":"Consequences","text":"<p>The usage from other actors stays the same. The actor messages and responses don't change.</p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0003-change-iiif-service-manager-and-sipi-implementation-to-zlayer/","title":"ADR-0003 Change IIIF Service Manager and Sipi implementation to zlayer","text":"<p>Date: 2022-04-29</p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0003-change-iiif-service-manager-and-sipi-implementation-to-zlayer/#status","title":"Status","text":"<p>Accepted</p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0003-change-iiif-service-manager-and-sipi-implementation-to-zlayer/#context","title":"Context","text":"<p>Both <code>org.knora.webapi.store.iiif.IIIFServiceManager</code> and <code>org.knora.webapi.store.iiif.impl.IIIFServiceSipiImpl</code> where implemented as Akka-Actors </p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0003-change-iiif-service-manager-and-sipi-implementation-to-zlayer/#decision","title":"Decision","text":"<p>As part of the move from <code>Akka</code> to <code>ZIO</code>,  it was decided that the <code>IIIFServiceManager</code> and the <code>IIIFServiceSipiImpl</code> is refactored using ZIO.</p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0003-change-iiif-service-manager-and-sipi-implementation-to-zlayer/#consequences","title":"Consequences","text":"<p>The usage from other actors stays the same. The actor messages and responses don't change.</p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0004-change-triplestore-service-manager-and-fuseki-implementation-to-zlayer/","title":"ADR-0004 Change Triplestore Service Manager and Fuseki implementation to ZLayer","text":"<p>Date: 2022-05-23</p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0004-change-triplestore-service-manager-and-fuseki-implementation-to-zlayer/#status","title":"Status","text":"<p>Accepted</p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0004-change-triplestore-service-manager-and-fuseki-implementation-to-zlayer/#context","title":"Context","text":"<p>Both <code>org.knora.webapi.store.triplestore.TriplestoreServiceManager</code>  and <code>org.knora.webapi.store.triplestore.impl.TriplestoreServiceHttpConnectorImpl</code> where implemented as Akka-Actors.</p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0004-change-triplestore-service-manager-and-fuseki-implementation-to-zlayer/#decision","title":"Decision","text":"<p>As part of the move from <code>Akka</code> to <code>ZIO</code>,  it was decided that the <code>TriplestoreServiceManager</code>  and the <code>TriplestoreServiceHttpConnectorImpl</code>  is refactored using ZIO.</p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0004-change-triplestore-service-manager-and-fuseki-implementation-to-zlayer/#consequences","title":"Consequences","text":"<p>The usage from other actors stays the same. The actor messages and responses don't change.</p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0005-change-respondermanager-to-a-simple-case-class/","title":"ADR-0005 Change ResponderManager to a simple case class","text":"<p>Date: 2022-06-06</p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0005-change-respondermanager-to-a-simple-case-class/#status","title":"Status","text":"<p>Accepted</p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0005-change-respondermanager-to-a-simple-case-class/#context","title":"Context","text":"<p>The <code>org.knora.webapi.responders.ResponderManager</code> was implemented as an Akka-Actor.</p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0005-change-respondermanager-to-a-simple-case-class/#decision","title":"Decision","text":"<p>In preparation of the move from <code>Akka</code> to <code>ZIO</code>, it was decided that the <code>ResponderManager</code> is refactored using plain <code>case</code> classes.</p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0005-change-respondermanager-to-a-simple-case-class/#consequences","title":"Consequences","text":"<p>The actor messages and responses don't change.  All calls made previously to the <code>ResponderManager</code> and the <code>StorageManager</code>  are now changed to the <code>ApplicationActor</code>  which will route the calls to either the <code>ResponderManager</code>  or the <code>StorageManager</code>, based on the message type.  The <code>ApplicationActor</code> is the only actor that is allowed to make calls  to either the <code>ResponderManager</code> or the <code>StorageManager</code>.  All requests from routes are now routed to the <code>ApplicationActor</code>.</p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0006-use-zio-http/","title":"ADR-0006 Use ZIO HTTP","text":"<p>Date: 2022-12-01</p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0006-use-zio-http/#status","title":"Status","text":"<p>Accepted</p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0006-use-zio-http/#context","title":"Context","text":"<p>The current routes use the <code>Akka Http</code> library.  Because of changes to the licensing of the <code>Akka</code> framework,  we want to move away from using <code>Akka Http</code>.  This also fits the general strategic decision to use ZIO for the backend.</p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0006-use-zio-http/#decision","title":"Decision","text":"<p>In preparation of the move from <code>Akka</code> to <code>ZIO</code>,  it was decided that the routes should be ported to use the <code>ZIO HTTP</code> server / library instead of <code>Akka Http</code>.</p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0006-use-zio-http/#consequences","title":"Consequences","text":"<p>In a first step only the routes are going to be ported, one by one,  to use <code>ZIO HTTP</code> instead of being routed through <code>Akka Http</code>.  The <code>Akka Actor System</code> still remains and will be dealt with later.</p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0007-zio-fication-of-responders/","title":"ADR-0007 ZIO-fication of Responders","text":"<p>Date: 2023-02-20</p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0007-zio-fication-of-responders/#status","title":"Status","text":"<p>Accepted</p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0007-zio-fication-of-responders/#context","title":"Context","text":"<p>In order to remove all Akka dependencies, we have to migrate the existing <code>Responder</code>s to a <code>ZIO</code> based implementation. This migration should be possible to do on a per <code>Responder</code> basis so that we do not do a single \"big-bang\" release with too much code changed at once.</p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0007-zio-fication-of-responders/#status-quo","title":"Status Quo","text":"<p>The central and only <code>Actor</code> is the <code>RoutingActor</code> which contains instances of each <code>Responder</code> as a field. Each of the <code>Responder</code>s needs an <code>ActorRef</code> to the <code>RoutingActor</code> and used the Akka \"ask pattern\" for communication with the other <code>Responders</code>. This means a <code>Responder</code> can only be created inside the <code>RoutingActor</code> because the <code>RoutingActor</code> must know every <code>Responder</code> in order to route the message but the <code>Responder</code> needs the <code>ActorRef</code> in order to communicate with the other <code>Responders</code>. This leads to a circular dependency between the <code>RoutingActor</code> and all Akka based <code>Responders</code>.</p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0007-zio-fication-of-responders/#goal","title":"Goal","text":"<p>In the long term all <code>Responders</code> do not contain any Akka dependency anymore and all implementations currently returning a <code>Future</code> will return a <code>zio.Task</code>.</p> <p>The <code>zio.Task</code> is a very suitable replacement for the <code>Future</code> because:</p> <ul> <li>a <code>Future[A]</code> will complete with either a value <code>A</code> or with a failure <code>Throwable</code>.</li> <li>a <code>zio.Task[A]</code> will succeed with either a value <code>A</code> or fail with an error of type <code>Throwable</code>.</li> </ul> <p>Ideally all <code>Responders</code> will directly call the necessary components directly through invoking methods. However, this will not be possible in the beginning as there are <code>Responders</code> who call on each other creating yet another circular dependency which we cannot simply recreate with <code>ZLayer</code> dependency injection. Hence, a message like communication pattern through a central component the <code>MessageRelay</code> will be introduced which can replace the existing Akka \"ask pattern\" one to one in the ziofied component.</p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0007-zio-fication-of-responders/#solution","title":"Solution","text":"<p>The <code>MessageRelay</code> is capable of relaying message to subscribed <code>MessageHandler</code>s and replaces the existing Akka \"ask pattern\" with the <code>RoutingActor</code>. Messages which will have a <code>MessageHandler</code> implementation must <code>extend</code> the <code>RelayedMessage</code> trait so that these are routed to the <code>MessageRelay</code> from the <code>RoutingActor</code>. All other messages will be handled as before.</p> <p>In ziofied <code>Responders</code> we can use the <code>MessageRelay</code> for communication with all other <code>Responders</code> in a similar fashion as the Akka \"ask pattern\" by invoking the method <code>MessageRelay#ask(ResponderRequest): Task[Any]</code>. A special <code>MessageHandler</code> will route all messages which do not implement the <code>RelayedMessage</code> trait back to the <code>RoutingActor</code>, this is the <code>AppRouterRelayingMessageHandler</code>.</p> <p>In the long run we will prefer to invoke methods on the respective ziofied services directly. This is now already possible for example with the <code>TriplestoreServive</code>, i.e. instead of calling <code>MessageRelay#ask[SparqlSelectResul](SparqlSelectRequest)</code> it is much easier and more importantly typesafe to call <code>TriplestoreService#sparqlHttpSelect(String): UIO[SparqlSelectResult]</code>.</p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0007-zio-fication-of-responders/#communication-between-akka-based-responder-and-another-akka-based-responder","title":"Communication between Akka based Responder and another Akka based Responder","text":"<p>Nothing changes with regard to existing communication patterns:</p> <pre><code>sequenceDiagram\n    autonumber\n    AkkaResponder -&gt;&gt; RoutingActor: \"ask(Request)\"\n    activate RoutingActor\n    RoutingActor -&gt;&gt; OtherAkkaResponder: \"sends message to\"\n    activate OtherAkkaResponder\n    OtherAkkaResponder -&gt;&gt; RoutingActor: \"returns response\"\n    deactivate OtherAkkaResponder\n    RoutingActor -&gt;&gt; AkkaResponder: \"returns response\"\n    deactivate RoutingActor</code></pre>"},{"location":"DSP-API/05-internals/design/adr/ADR-0007-zio-fication-of-responders/#communication-between-akka-based-responder-and-ziofied-responder","title":"Communication between Akka based Responder and ziofied Responder","text":"<p>The <code>AkkaResponder</code> code remains unchanged and will still <code>ask</code> the <code>ActorRef</code> to the <code>RoutingActor</code>. The <code>RoutingActor</code> will forward the message to the <code>MessageRelay</code> and return its response to the <code>AkkaResponder</code>.</p> <pre><code>sequenceDiagram\n    autonumber\n    AkkaResponder -&gt;&gt; RoutingActor: \"ask(RelayedMessage)\"\n    activate RoutingActor\n    RoutingActor -&gt;&gt; MessageRelay: \"messageRelay.ask(RelayedMessage)\"\n    activate MessageRelay\n    MessageRelay -&gt;&gt; MessageRelay: \"finds MessageHandler\"\n    MessageRelay -&gt;&gt; ZioResponder: \"calls .handle(Request)\"\n    activate ZioResponder\n    ZioResponder -&gt;&gt; MessageRelay: \"returns response\"\n    deactivate ZioResponder\n    MessageRelay -&gt;&gt; RoutingActor: \"returns response\"\n    deactivate MessageRelay\n    RoutingActor -&gt;&gt; AkkaResponder: \"returns response\"\n    deactivate RoutingActor</code></pre>"},{"location":"DSP-API/05-internals/design/adr/ADR-0007-zio-fication-of-responders/#communication-between-ziofied-responder-and-akka-based-responder","title":"Communication between ziofied Responder and Akka based Responder","text":"<p>The <code>AppRouterRelayingMessageHandler</code> route all messages which do not implement the <code>RelayedMessage</code> trait to the <code>RoutingActor</code>.</p> <pre><code>sequenceDiagram\n    autonumber\n    ZioResponder -&gt;&gt; MessageRelay: \"ask(Request)\"\n    activate MessageRelay\n    MessageRelay -&gt;&gt; MessageRelay: \"finds MessageHandler\"\n    MessageRelay -&gt;&gt; AppRouterRelayingMessageHandler: \"calls .handle(Request)\"\n    activate AppRouterRelayingMessageHandler\n    AppRouterRelayingMessageHandler -&gt;&gt; RoutingActor: \"sends message to\"\n    deactivate AppRouterRelayingMessageHandler\n    activate RoutingActor\n    RoutingActor -&gt;&gt; AkkaResponder: \"calls AkkaResponder\"\n    activate AkkaResponder\n    AkkaResponder -&gt;&gt; RoutingActor: \"returns response\"\n    deactivate AkkaResponder\n    RoutingActor -&gt;&gt; MessageRelay: \"returns response\"\n    deactivate RoutingActor\n    MessageRelay -&gt;&gt; ZioResponder: \"returns response\"\n    deactivate MessageRelay</code></pre>"},{"location":"DSP-API/05-internals/design/adr/ADR-0007-zio-fication-of-responders/#communication-between-two-ziofied-responders","title":"Communication between two ziofied Responders","text":""},{"location":"DSP-API/05-internals/design/adr/ADR-0007-zio-fication-of-responders/#variant-using-the-messagerelay","title":"Variant using the MessageRelay","text":"<pre><code>sequenceDiagram\n    autonumber\n    ZioResponder -&gt;&gt; MessageRelay: \"ask(Request)\"\n    activate MessageRelay\n    MessageRelay -&gt;&gt; MessageRelay: \"finds MessageHandler\"\n    MessageRelay -&gt;&gt; OtherZioResponder: \"calls .handle(Request)\"\n    activate OtherZioResponder\n    OtherZioResponder -&gt;&gt; MessageRelay: \"returns response\"\n    deactivate OtherZioResponder\n    MessageRelay -&gt;&gt; ZioResponder: \"returns response\"\n    deactivate MessageRelay</code></pre>"},{"location":"DSP-API/05-internals/design/adr/ADR-0007-zio-fication-of-responders/#variant-if-other-responder-is-a-direct-dependency","title":"Variant if other Responder is a direct dependency","text":"<pre><code>sequenceDiagram\n    autonumber\n    ZioResponder -&gt;&gt; TriplestoreService: \"calls method\"\n    activate TriplestoreService\n    TriplestoreService -&gt;&gt; ZioResponder: \"returns response\"\n    deactivate TriplestoreService</code></pre>"},{"location":"DSP-API/05-internals/design/adr/ADR-0007-zio-fication-of-responders/#decision","title":"Decision","text":"<p>In preparation of the move from <code>Akka</code> to <code>ZIO</code>,  it was decided that the <code>Responders</code> should be ported to use return <code>ZIO</code>s and the <code>MessageRelay</code>  instead of <code>Future</code>s and the <code>ActorRef</code> to the <code>RoutingActor</code>.</p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0007-zio-fication-of-responders/#consequences","title":"Consequences","text":"<p>In a first step only the <code>Responders</code> are going to be ported, one by one, to use the above pattern.  The <code>Akka Actor System</code> still remains, will be used in the test and will be removed in a later step. Due to the added indirections and the blocking nature of <code>Unsafe.unsafe(implicit u =&gt; r.unsafe.run(effect))</code>  it is necessary to spin up more <code>RoutingActor</code> instances as otherwise deadlocks will occur. This should not be a problem as any shared state, e.g. caches,  is not held within the <code>RoutingActor</code> or one of its contained <code>Responder</code> instances.</p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0008-replace-akka-with-pekko/","title":"ADR-0006 Replace Akka with Pekko","text":""},{"location":"DSP-API/05-internals/design/adr/ADR-0008-replace-akka-with-pekko/#status","title":"Status","text":"<p>Accepted</p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0008-replace-akka-with-pekko/#context","title":"Context","text":"<p>On 7. September 2022 Lightbend announced a  license change for the Akka project,  the TL;DR being that you will need a commercial license to use future versions of Akka (2.7+) in production  if you exceed a certain revenue threshold.</p> <p>For now, we have staid on Akka 2.6, the current latest version that is still available under the original license.  Historically Akka has been incredibly stable, and combined with our limited use of features,  we did not expect this to be a problem.</p> <p>However, the last update of Akka 2.6 is announced to be in September 2023.</p> <p>Will critical vulnerabilities and bugs be patched in 2.6.x? Yes, critical security updates and critical bugs will be patched in Akka v2.6.x    under the current Apache 2 license until September of 2023.</p> <p>As a result, we will not receive further updates and we will never get support for Scala 3 for Akka.</p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0008-replace-akka-with-pekko/#proposal","title":"Proposal","text":"<p>Apache Pekko is based on the latest version of Akka in the v2.6.x series.  It is currently an incubator project in the ASF.  All Akka modules currently in use in the dsp-api are already released and ported to  pekko:  https://mvnrepository.com/artifact/org.apache.pekko</p> <p>The latest stable version 1.0.1  is compatible with Akka v2.6.x series and meant to be a plug in replacement.</p> <p>Scala 3.3.0 is the minimum Scala 3 version supported. Scala 2.12 and 2.13 are still supported.</p> <p>The migration guide</p> <p>Our current migration to another http server implementation is currently on hold,  but we might want to switch to Pekko so that we could receive security updates and bugfixes.</p> <p>The proof of concept implementation has been shared in the pull request  here,  allowing for further testing and validation of the proposed switch to Pekko.</p>"},{"location":"DSP-API/05-internals/design/adr/ADR-0008-replace-akka-with-pekko/#decision","title":"Decision","text":"<p>We replace Akka and Akka/Http with Apache Pekko.</p>"},{"location":"DSP-API/05-internals/design/api-admin/administration/","title":"Admin API Design","text":""},{"location":"DSP-API/05-internals/design/api-admin/administration/#administration","title":"Administration","text":""},{"location":"DSP-API/05-internals/design/api-admin/administration/#permissions","title":"Permissions","text":"<p>The permissions API endpoint is described here.</p> <p>The default permissions when a project is created are described here.</p> <p>DSP's concept of access control is that permissions  can only be granted to groups and not to individual users. There are two distinct ways of granting permission.</p> <ol> <li>An object (a resource or value) can grant permissions to groups of users.</li> <li>Permissions can be granted directly to a group of users (not bound to a specific object).</li> </ol> <p>There are six built-in groups:  UnknownUser, KnownUser, Creator, ProjectMember, ProjectAdmin, and SystemAdmin.  These groups can be used in the same way as normal user created groups for permission management, i.e. can be used to give certain groups of users, certain permissions, without the need to explicitly create them.</p> <p>A user becomes implicitly a member of such a group by satisfying certain conditions:</p> <ul> <li> <p>knora-admin:UnknownUser:   Any user who has not logged into the DSP is automatically assigned to this group.   Group IRI: <code>http://www.knora.org/ontology/knora-admin#UnknownUser</code></p> </li> <li> <p>knora-admin:KnownUser:   Any user who has logged into the DSP is automatically assigned to this group.   Group IRI: <code>http://www.knora.org/ontology/knora-admin#KnownUser</code></p> </li> <li> <p>knora-admin:Creator:   When checking a user\u2019s permissions on an object, the user is automatically assigned to this group    if they are the creator of the object.   Group IRI: <code>http://www.knora.org/ontology/knora-admin#Creator</code></p> </li> <li> <p>knora-admin:ProjectMember:   When checking a user\u2019s permissions, the user is automatically assigned to this group    by being a member of a project designated by the <code>knora-admin:isInProject</code> property.   Group IRI: <code>http://www.knora.org/ontology/knora-admin#ProjectMember</code></p> </li> <li> <p>knora-admin:ProjectAdmin:   When checking a user's permission, the user is automatically assigned to this group    through the <code>knora-admin:isInProjectAdminGroup</code> property, which points to the  project in question.   Group IRI: <code>http://www.knora.org/ontology/knora-admin#ProjectAdmin</code></p> </li> <li> <p>knora-admin:SystemAdmin:   Membership is received by setting the property <code>knora-admin:isInSystemAdminGroup</code> to <code>true</code> on a <code>knora-admin:User</code>.   Group IRI: <code>http://www.knora.org/ontology/knora-admin#SystemAdmin</code></p> </li> </ul> <p>There are three kinds of permissions:</p> <ol> <li>object access permissions, which contain permissions     that point from explicit objects (resources/values) to groups.</li> <li>administrative permissions, which contain permissions     that are put on instances of <code>knora-admin:Permission</code> objects directly affecting groups. </li> <li>default object access permissions which are also put on instances of <code>knora-admin:Permission</code>,    and which also directly affect groups.</li> </ol>"},{"location":"DSP-API/05-internals/design/api-admin/administration/#object-access-permissions","title":"Object Access Permissions","text":"<p>An object (resource / value) can grant the following permissions, which are stored in a compact format in a single string, which is the object of the predicate <code>knora-base:hasPermissions</code>:</p> <ol> <li>Restricted view permission (RV): Allows a restricted view of    the object, e.g. a view of an image with a watermark.</li> <li>View permission (V): Allows an unrestricted view of the    object. Having view permission on a resource only affects the    user's ability to view information about the resource other than    its values. To view a value, she must have view permission on the    value itself.</li> <li>Modify permission (M): For values, this permission allows a    new version of a value to be created. For resources, this allows    the user to create a new value (as opposed to a new version of an    existing value), or to change information about the resource other    than its values. When he wants to make a new version of a value,    his permissions on the containing resource are not relevant.    However, when he wants to change the target of a link, the old    link must be deleted and a new one created, so he needs modify    permission on the resource.</li> <li>Delete permission (D): Allows the item to be marked as deleted.</li> <li>Change rights permission (CR): Allows the permissions granted by the object to be changed.</li> </ol> <p>Each permission in the above list implies all lower-numbered permissions.</p> <p>A user's permission level on a particular object is calculated in the following way:</p> <ol> <li>Make a list of the groups that the user belongs to, including    Creator and/or ProjectMember and/or ProjectAdmin if applicable.</li> <li>Make a list of the permissions that she can obtain on the    object, by iterating over the permissions that the object    grants. For each permission, if she is in the specified group,    add the specified permission to the list of permissions she can    obtain.</li> <li>From the resulting list, select the highest-level permission.</li> <li>If the result is that she would have no permissions, give her    whatever permission UnknownUser would have.</li> </ol> <p>The format of the object of <code>knora-base:hasPermissions</code> is as follows:</p> <ul> <li>Each permission is represented by the one-letter or two-letter   abbreviation given above.</li> <li>Each permission abbreviation is followed by a space, then a   comma-separated list of groups that the permission is granted   to.</li> <li>The IRIs of built-in groups are shortened using the knora-admin   prefix.</li> <li>Multiple permissions are separated by a vertical bar (|).</li> </ul> <p>For example, if an object grants view permission to unknown and known users, and modify permission to project members, the resulting permission literal would be: <code>V knora-admin:UnknownUser,knora-admin:KnownUser|M knora-admin:ProjectMember</code>.</p>"},{"location":"DSP-API/05-internals/design/api-admin/administration/#administrative-permissions","title":"Administrative Permissions","text":"<p>The following permissions can be set via instances of <code>knora-admin:AdministrativePermission</code> on any group belonging to a project. For users that are members of a number of groups with administrative permissions attached, the final set of permissions is additive and most permissive. The administrative permissions are stored in a compact format in a single string, which is the object of the predicate <code>knora-base:hasPermissions</code> attached to an instance of the <code>knora-admin:AdministrativePermission</code> class. The following permission values can be used:</p> <ol> <li>Resource / Value Creation Permissions:     1) ProjectResourceCreateAllPermission:         - description: gives the permission to create resources inside the project.         - usage: used as a value for knora-base:hasPermissions.     2) ProjectResourceCreateRestrictedPermission:         - description: gives restricted resource creation permission inside the project.         - usage: used as a value for knora-base:hasPermissions.         - value: <code>RestrictedProjectResourceCreatePermission</code>           followed by a comma-separated list of ResourceClasses           the user should only be able to create instances of.</li> <li>Project Administration Permissions:     1) ProjectAdminAllPermission:         - description: gives the user the permission to do anything           on project level, i.e. create new groups, modify all           existing groups (group info, group membership,           resource creation permissions, project administration           permissions, and default permissions).         - usage: used as a value for knora-base:hasPermissions.     2) ProjectAdminGroupAllPermission:         - description: gives the user the permission to modify           group info and group membership on all groups           belonging to the project.         - usage: used as a value for the knora-base:hasPermissions property.     3) ProjectAdminGroupRestrictedPermission:         - description: gives the user the permission to modify           group info and group membership on certain groups           belonging to the project.         - usage: used as a value for knora-base:hasPermissions         - value: <code>ProjectGroupAdminRestrictedPermission</code> followed by           a comma-separated list of <code>knora-admin:UserGroup</code>.     4) ProjectAdminRightsAllPermission:         - description: gives the user the permission to change the           permissions on all objects belonging to the project           (e.g., default permissions attached to groups and           permissions on objects).         - usage: used as a value for the knora-base:hasPermissions property.</li> </ol> <p>The administrative permissions are stored in a compact format in a single string, which is the object of the predicate <code>knora-base:hasPermissions</code> attached to an instance of the <code>knora-admin:AdministrativePermission</code> class.</p> <ul> <li>The format of the object of <code>knora-base:hasPermissions</code> is as follows:<ul> <li>Each permission is represented by the name given above.</li> <li>Each permission is followed by a space, then if applicable, by comma separated list of IRIs, as defined above.</li> <li>The IRIs of built-in values (e.g., built-in groups, resource   classes, etc.) are shortened using the knora-admin prefix <code>knora-admin:</code>.</li> <li>Multiple permissions are separated by a vertical bar (|).</li> </ul> </li> </ul> <p>For example, if an administrative permission grants the <code>knora-admin:ProjectMember</code> group the permission to create all resources (ProjectResourceCreateAllPermission), the resulting administrative permission object with the compact form literal would be: :</p> <pre><code>&lt;http://rdfh.ch/permissions/001\n        rdf:type knora-admin:AdministrativePermission ;\n        knora-admin:forProject &lt;http://rdfh.ch/projects/00FF&gt;;\n        knora-admin:forGroup knora-admin:ProjectMember ;\n        knora-base:hasPermissions \"ProjectResourceCreateAllPermission\"^^xsd:string .\n</code></pre>"},{"location":"DSP-API/05-internals/design/api-admin/administration/#default-object-access-permissions","title":"Default Object Access Permissions","text":"<p>Default Object Access Permissions are used when new objects (resources and/or values) are created. They represent object access permissions with which the new object will be initially outfitted. As with administrative permissions, these default object access permissions can be defined for any number of groups. Additionally, they can be also defined for resource classes and properties.</p> <p>The following default object access permissions can be attached to groups, resource classes and/or properties via instances of knora-admin:DefaultObjectAccessPermission (described further bellow). The default object access permissions correspond to the earlier described object access permission:</p> <ol> <li>Default Restricted View Permission (RV):<ul> <li>description: any object, created by a user inside a group   holding this permission, is restricted to carry this permission</li> <li>value: <code>RV</code> followed by a comma-separated list of <code>knora-admin:UserGroup</code></li> </ul> </li> <li>Default View Permission (V):<ul> <li>description: any object, created by a user inside a group   holding this permission, is restricted to carry this permission</li> <li>value: <code>V</code> followed by a comma-separated list of <code>knora-admin:UserGroup</code></li> </ul> </li> <li>Default Modify Permission (M) accompanied by a list of groups.<ul> <li>description: any object, created by a user inside a group   holding this permission, is restricted to carry this permission</li> <li>value: <code>M</code> followed by a comma-separated list of <code>knora-admin:UserGroup</code></li> </ul> </li> <li>Default Delete Permission (D) accompanied by a list of groups.<ul> <li>description: any object, created by a user inside a group   holding this permission, is restricted to carry this permission</li> <li>value: <code>D</code> followed by a comma-separated list of <code>knora-admin:UserGroup</code></li> </ul> </li> <li>Default Change Rights Permission (CR) accompanied by a list of groups.<ul> <li>description: any object, created by a user inside a group   holding this permission, is restricted to carry this permission</li> <li>value: <code>CR</code> followed by a comma-separated list of <code>knora-admin:UserGroup</code></li> </ul> </li> </ol> <p>A single instance of <code>knora-admin:DefaultObjectAccessPermission</code> must always reference a project, but can only reference either a group (<code>knora-admin:forGroup</code> property), a resource class (<code>knora-admin:forResourceClass</code>), a property (<code>knora-admin:forProperty</code>), or a combination of resource class and property.</p> <p>Example default object access permission instance:</p> <pre><code>&lt;http://rdfh.ch/permissions/002\n        rdf:type knora-admin:DefaultObjectAccessPermission ;\n        knora-admin:forProject &lt;http://rdfh.ch/projects/00FF&gt;;\n        knora-admin:forGroup knora-admin:ProjectMember ;\n        knora-base:hasPermissions \"CR knora-admin:Creator|M knora-admin:ProjectMember|V knora-admin:KnownUser\"^^xsd:string .\n</code></pre> <p>This instance is setting default object access permissions to the project member group of a project, giving change right permission to the creator, modify permission to all project members, and view permission to known users. Further, this implicitly applies to all resource classes and all their properties inside the project.</p>"},{"location":"DSP-API/05-internals/design/api-admin/administration/#permission-precedence-rules","title":"Permission Precedence Rules","text":"<p>For both administrative permissions and default object access permissions, the resulting permissions are derived by applying precedence rules, for the case that the user is member of more than one group.</p> <p>The following list is sorted by the permission precedence level in descending order:</p> <ul> <li>permissions on <code>knora-admin:ProjectAdmin</code> (highest level)</li> <li>permissions on resource classes and property combination (own project)</li> <li>permissions on resource classes and property combination (<code>knora-admin:SystemProject</code>)</li> <li>permissions on resource classes / properties (own project)</li> <li>permissions on resource classes / properties (<code>knora-admin:SystemProject</code>)</li> <li>permissions on custom groups</li> <li>permissions on <code>knora-admin:ProjectMember</code></li> <li>permissions on <code>knora-admin:KnownUser</code> (lowest level)</li> </ul> <p>The permissions on resource classes / properties are only relevant for default object access permissions.</p> <p>Administrative Permissions: When a user performs an operation requiring administrative permissions, then only the permissions from the highest level are taken into account. If a user is a member of more than one group on the same level (only possible for custom groups) then the defined permissions are summed up and all are taken into account.</p> <p>Default Object Access Permissions: When a user creates a resource or value, then only the default object permissions from the highest level are applied. If a user is a member of more than one group on the same level (only possible for custom groups) then the defined permissions are summed up and the most permissive are applied.</p> <p>In the case of the user belonging to the SystemAdmin group, but which is not member of a project and thus not member of any group belonging to the project, the default object access permissions from the ProjectAdmin, ProjectMember, or KnownUser group will be applied in the order of precedence. If no permissions are defined on either of these groups, then the resulting permission will be <code>CR knora-admin:Creator</code>.</p>"},{"location":"DSP-API/05-internals/design/api-admin/administration/#implicit-permissions","title":"Implicit Permissions","text":"<p>The <code>knora-admin:SystemAdmin</code> group receives implicitly the following permissions:</p> <ul> <li>receives implicitly ProjectAdminAllPermission for all projects.</li> <li>receives implicitly ProjectResourceCreateAllPermission for all projects.</li> <li>receives implicitly CR on all objects from all projects.</li> </ul> <p>Theses permissions are baked into the system, and cannot be changed.</p>"},{"location":"DSP-API/05-internals/design/api-admin/administration/#default-permissions-matrix-for-new-projects","title":"Default Permissions Matrix for new Projects","text":"<p>The access control matrix defines what are the default operations a subject (i.e. User), being a member of a built-in group (represented by row headers), is permitted to perform on an object (represented by column headers). The different operation abbreviations used are defined as follows:</p> <ul> <li> <p>C: Create - the subject inside the group is allowed to create the object.</p> </li> <li> <p>U: Update - the subject inside the group is allowed to update the object.</p> </li> <li> <p>R: Read - the subject inside the group is allowed to read all information about the object.</p> </li> <li> <p>D: Delete - the subject inside the group is allowed to delete the object.</p> </li> <li> <p>P: Permission - the subject inside the group is allowed to change the permissions on the object.</p> </li> <li> <p>-: none - none or not applicable</p> </li> </ul> Built-In Group Project Group User Resource Value SystemAdmin <code>CRUD</code> <code>CRUDP</code> <code>CRUDP</code> all <code>CRUDP</code> all <code>CRUDP</code> all ProjectAdmin <code>-RUD</code> <code>CRUDP</code> <code>CRUDP</code> +/- project <code>CRUDP</code> (in project) <code>CRUDP</code> (in project) ProjectMember <code>----</code> <code>-----</code> <code>-----</code> <code>CRU--</code> (in project) <code>-----</code> (in project) Creator <code>----</code> <code>-----</code> <code>-----</code> <code>-----</code> (his resource) <code>-----</code> (his value) KnownUser <code>C---</code> <code>C----</code> <code>CRUD-</code> himself <code>-----</code> (in project) <code>-----</code> (in project) <p>Default Permissions Matrix for new Projects</p> <p>The explicitly defined default permissions for a new project are as follows:</p> <ul> <li> <p><code>knora-admin:ProjectAdmin</code> group:</p> <ul> <li>Administrative Permissions:<ul> <li>ProjectResourceCreateAllPermission.</li> <li>ProjectAdminAllPermission.</li> </ul> </li> <li>Default Object Access Permissions:<ul> <li>CR for the knora-admin:ProjectAdmin group</li> <li>D for the knora-admin:ProjectAdmin group</li> <li>M for the knora-admin:ProjectAdmin group</li> <li>V for the knora-admin:ProjectAdmin group</li> <li>RV for the knora-admin:ProjectAdmin group</li> </ul> </li> </ul> </li> <li> <p>The <code>knora-admin:ProjectMember</code> group:</p> <ul> <li>Administrative Permissions:<ul> <li>ProjectResourceCreateAllPermission.</li> </ul> </li> <li>Default Object Access Permissions:<ul> <li>M for the knora-admin:ProjectMember group</li> <li>V for the knora-admin:ProjectMember group</li> <li>RV for the knora-admin:ProjectMember group</li> </ul> </li> </ul> </li> </ul>"},{"location":"DSP-API/05-internals/design/api-admin/administration/#basic-workflows-involving-permissions","title":"Basic Workflows involving Permissions","text":""},{"location":"DSP-API/05-internals/design/api-admin/administration/#creating-a-new-resource","title":"Creating a new Resource","text":""},{"location":"DSP-API/05-internals/design/api-admin/administration/#accessing-a-resourcevalue","title":"Accessing a Resource/Value","text":""},{"location":"DSP-API/05-internals/design/api-admin/administration/#project-group-administration","title":"Project / Group Administration","text":""},{"location":"DSP-API/05-internals/design/api-admin/administration/#implementation","title":"Implementation","text":"<p>The requirements for defining default permissions imposed by all the different use cases are very broad. Potentially, we need to be able to define default permissions per project, per group, per resource class, per resource property, and all their possible combinations.</p> <p>For this reason, we introduce the knora-admin:Permission class with two sub-classes, namely knora-admin:AdministrativePermission and knora-admin:DefaultObjectAccessPermission, which instances will carry all the necessary information.</p>"},{"location":"DSP-API/05-internals/design/api-admin/administration/#permission-class-hierarchy-and-structure","title":"Permission Class Hierarchy and Structure","text":"<p>The following graphs show the class hierarchy and the structure of each permission class.</p> <p>Permission Class Hierarchy</p> <p></p> <p>Administrative Permission Structure:</p> <p></p> <p>and the same as RDF:</p> <pre><code>&lt;http://rdfh.ch/permissions/[UUID]&gt; rdf:type knora-admin:AdministrativePermission ;\n     knora-admin:forProject &lt;http://rdfh.ch/projects/[shortcode]&gt; ;\n     knora-admin:forGroup &lt;http://rdfh.ch/groups/[shortcode]/[UUID]&gt; ;\n     knora-base:hasPermissions \"ProjectResourceCreateAllPermission|\n                                ProjectResourceCreateRestrictedPermission \"&lt;Resource Class IRI&gt;\"|\n                                ProjectAdminAllPermission|\n                                ProjectAdminGroupAllPermission|\n                                ProjectAdminGroupRestrictedPermission \"&lt;http://rdfh.ch/groups/[shortcode]/[UUID]&gt;, &lt;http://rdfh.ch/groups/[shortcode]/[UUID]&gt;\"|\n                                ProjectAdminRightsAllPermission\"^^xsd:string .\n</code></pre> <p>Default Object Access Permission Structure:</p> <p></p> <p>and the same as RDF:</p> <pre><code>&lt;http://rdfh.ch/permissions/[UUID]&gt; rdf:type knora-admin:DefaultObjectAccessPermission ;\n     knora-admin:forProject &lt;http://rdfh.ch/projects/[shortcode]&gt; ;\n     knora-admin:forGroup &lt;http://rdfh.ch/groups/[shortcode]/[UUID]&gt; ;\n     knora-admin:forResourceClass \"Resource Class Name\" ;\n     knora-admin:forProperty \"Resource Property Name\" ;\n     knora-base:hasPermissions \"RV &lt;http://rdfh.ch/groups/[shortcode]/[UUID]&gt;|\n                                 V &lt;http://rdfh.ch/groups/[shortcode]/[UUID]&gt;|\n                                 M &lt;http://rdfh.ch/groups/[shortcode]/[UUID]&gt;|\n                                 D &lt;http://rdfh.ch/groups/[shortcode]/[UUID]&gt;|\n                                CR &lt;http://rdfh.ch/groups/[shortcode]/[UUID]&gt;\"^^xsd:string .\n</code></pre>"},{"location":"DSP-API/05-internals/design/api-admin/administration/#querying-permission-instances","title":"Querying Permission Instances","text":"<p>The properties forProject and either of forGroup, forResourceClass, and forProperty form together a compound key, allowing finding existing permission instances, that address the same set of Project / Group / ResourceClass / Property combination, thus making it possible to extend or change the attached permissions.</p> <p>Administrative Permission Instances: For each group inside the project, there can be zero or one instance holding administrative permission information. Querying is straitforward by using the knora-admin:forProject and knora-admin:forGroup properties as the compound key.</p> <p>Default Object Access Permission Instances: For each group, resource class, or property inside the project, there can be zero or one instances holding default object access permission informations. Querying is straitforward by using the knora-admin:forProject and either knora-admin:forGroup, knora-admin:forResourceClass, or knora-admin:forProperty properties as part of the compound key.</p>"},{"location":"DSP-API/05-internals/design/api-admin/administration/#example-data-stored-in-the-permissions-graph","title":"Example Data stored in the permissions graph","text":"<p>Administrative permissions on a 'ProjectAdmin' group:</p> <pre><code>&lt;http://rdfh.ch/permissions/[UUID]&gt; rdf:type knora-admin:AdministrativePermission ;\n     knora-admin:forProject &lt;http://rdfh.ch/projects/00FF&gt; ;\n     knora-admin:forGroup knora-admin:ProjectAdmin ;\n     knora-base:hasPermissions \"ProjectResourceCreateAllPermission|\n                                ProjectAdminAllPermission\"^^xsd:string .\n</code></pre> <p>Administrative permissions on a 'ProjectMember' group:</p> <pre><code>&lt;http://rdfh.ch/permissions/[UUID]&gt; rdf:type knora-admin:AdministrativePermission ;\n     knora-admin:forProject &lt;http://rdfh.ch/projects/00FF&gt; ;\n     knora-admin:forGroup knora-admin:ProjectMember ;\n     knora-base:hasPermissions \"ProjectResourceCreateAllPermission\"^^xsd:string .\n</code></pre> <p>Administrative permission restricting project admin permission on a group:</p> <pre><code>&lt;http://rdfh.ch/permissions/[UUID]&gt; rdf:type knora-admin:Permission ;\n     knora-admin:forProject &lt;http://rdfh.ch/projects/[shortcode]&gt; ;\n     knora-admin:forGroup &lt;http://rdfh.ch/groups/[shortcode]/[UUID]&gt; ;\n     knora-base:hasPermissions \"ProjectGroupAdminRestrictedPermission &lt;http://rdfh.ch/groups/[shortcode]/[UUID]&gt;\"^^xsd:string .\n</code></pre> <p>Administrative permission restricting resource creation for a group:</p> <pre><code>&lt;http://rdfh.ch/permissions/[UUID]&gt; rdf:type knora-admin:AdministrativePermission ;\n     knora-admin:forProject &lt;http://rdfh.ch/projects/[shortcode]&gt; ;\n     knora-admin:forGroup &lt;http://rdfh.ch/groups/[shortcode]/[UUID]&gt; ;\n     knora-base:hasPermissions \"ProjectResourceCreateRestrictedPermission &lt;http://www.knora.org/ontology/00FF/images#Person&gt;\"^^xsd:string .\n</code></pre> <p>Default object access permission on a 'ProjectMember' group:</p> <pre><code>&lt;http://rdfh.ch/permissions/[UUID]&gt; rdf:type knora-admin:DefaultObjectAccessPermission ;\n     knora-admin:forProject &lt;http://rdfh.ch/projects/00FF&gt; ;\n     knora-admin:forGroup knora-admin:ProjectMember ;\n     knora-base:hasPermissions \"CR knora-admin:Creator|\n                                 M &lt;http://rdfh.ch/groups/[shortcode]/[UUID]&gt;|\n                                 V knora-admin:KnownUser\"^^xsd:string .\n</code></pre> <p>Default object access permission on a resource class:</p> <pre><code>&lt;http://rdfh.ch/permissions/[UUID]&gt; rdf:type knora-admin:DefaultObjectAccessPermission ;\n     knora-admin:forProject &lt;http://rdfh.ch/projects/[shortcode]&gt; ;\n     knora-admin:forResourceClass &lt;http://www.knora.org/ontology/00FF/images#person&gt; ;\n     knora-base:hasPermissions \"CR knora-admin:Creator,knora-admin:ProjectMember|\n                                 V knora-admin:KnownUser,knora-admin:UnknownUser\"^^xsd:string .\n</code></pre> <p>Default object access permission on a resource property:</p> <pre><code>&lt;http://rdfh.ch/permissions/[UUID]&gt; rdf:type knora-admin:DefaultObjectAccessPermission ;\n     knora-admin:forProject &lt;http://rdfh.ch/projects/[shortcode]&gt; ;\n     knora-admin:forProperty &lt;http://www.knora.org/ontology/00FF/images#lastname&gt; ;\n     knora-base:hasPermissions \"D knora-admin:ProjectMember,knora-admin:Creator|\n                                V knora-admin:KnownUser,knora-admin:UnknownUser\"^^ .\n</code></pre> <p>Default object access permission on a resource class and property:</p> <pre><code>&lt;http://rdfh.ch/permissions/[UUID]&gt; rdf:type knora-admin:DefaultObjectAccessPermission ;\n     knora-admin:forProject &lt;http://rdfh.ch/projects/[shortcode]&gt; ;\n     knora-admin:forResourceClass &lt;http://www.knora.org/ontology/00FF/images#person&gt; ;\n     knora-admin:forProperty &lt;http://www.knora.org/ontology/00FF/images#lastname&gt; ;\n     knora-base:hasPermissions \"CR knora-admin:Creator,knora-admin:ProjectMember|\n                                 V knora-admin:KnownUser,knora-admin:UnknownUser\"^^xsd:string .\n</code></pre> <p>Default object access permission on a knora-admin property:</p> <pre><code>&lt;http://rdfh.ch/permissions/[UUID]&gt; rdf:type knora-admin:DefaultObjectAccessPermission ;\n     knora-admin:forProject knora-admin:SystemProject ;\n     knora-admin:forProperty &lt;http://www.knora.org/ontology/knora-admin#hasStillImageFileValue&gt; ;\n     knora-base:hasPermissions \"RV knora-admin:UnknownUser|\n                                 V knora-admin:KnownUser|\n                                 M knora-admin:ProjectMember,knora-admin:Creator\"^^xsd:string .\n</code></pre> <p>A the time the user's <code>UserProfile</code> is queried, all permissions for all projects and groups the user is a member of are also queried. This information is then stored as an easy accessible object inside the <code>UserProfile</code>, being readily available wherever needed. As this is a somewhat expensive operation, built-in caching mechanism at different levels (e.g., UsersResponder, PermissionsResponder), will be applied.</p>"},{"location":"DSP-API/05-internals/design/api-v2/ark/","title":"Archival Resource Key (ARK)","text":""},{"location":"DSP-API/05-internals/design/api-v2/ark/#archival-resource-key-ark-identifiers","title":"Archival Resource Key (ARK) Identifiers","text":""},{"location":"DSP-API/05-internals/design/api-v2/ark/#requirements","title":"Requirements","text":"<p>Knora must produce an ARK URL for each resource and each value. The ARK identifiers used by Knora must respect the draft ARK specification. The format of Knora\u2019s ARK URLs must be able to change over time, while ensuring that previously generated ARK URLs still work.</p>"},{"location":"DSP-API/05-internals/design/api-v2/ark/#design","title":"Design","text":""},{"location":"DSP-API/05-internals/design/api-v2/ark/#ark-url-format","title":"ARK URL Format","text":"<p>The format of a Knora ARK URL is as follows:</p> <pre><code>http://HOST/ark:/NAAN/VERSION/PROJECT/RESOURCE_UUID[/VALUE_UUID][.TIMESTAMP]\n</code></pre> <ul> <li> <p><code>HOST</code>: the hostname of the ARK resolver.</p> </li> <li> <p><code>NAAN</code>: the Name Assigning Authority Number (NAAN) that the ARK resolver uses.</p> </li> <li> <p><code>VERSION</code>: the version of the Knora ARK URL format being used (always 1 for now).</p> </li> <li> <p><code>PROJECT</code>: the short code of the   project that the resource belongs to.</p> </li> <li> <p><code>RESOURCE_UUID</code>: the resource's unique ID, which is normally a   base64url-encoded UUID, as described in   IRIs for Data.</p> </li> <li> <p><code>VALUE_UUID</code>: optionally, the <code>knora-base:valueHasUUID</code> of one of the   resource's values, normally a   base64url-encoded UUID, as described in   IRIs for Data.</p> </li> <li> <p><code>TIMESTAMP</code>: an optional timestamp indicating that the ARK URL represents   the state of the resource at a specific time in the past. The format   of the timestamp is an ISO 8601   date in Coordinated universal time (UTC), including date, time, and an optional   nano-of-second field (of at most 9 digits), without the characters <code>-</code>, <code>:</code>, and <code>.</code> (because   <code>-</code> and <code>.</code> are reserved characters in ARK, and <code>:</code> would have to be URL-encoded).   Example: <code>20180528T155203897Z</code>.</p> </li> </ul> <p>Following the ARK ID spec, <code>/</code> represents object hierarchy and <code>.</code> represents an object variant. A value is thus contained in a resource, which is contained in its project, which is contained in a repository (represented by the URL version number). A timestamp is a type of variant.</p> <p>Since sub-objects are optional, there is also implicitly an ARK URL for each project, as well as for the repository as a whole.</p> <p>The <code>RESOURCE_UUID</code> and <code>VALUE_UUID</code> are processed as follows:</p> <ol> <li> <p>A check digit is calculated, using the algorithm in    the Scala class <code>org.knora.webapi.util.Base64UrlCheckDigit</code>, and appended    to the UUID.</p> </li> <li> <p>Any <code>-</code> characters in the resulting string are replaced with <code>=</code>, because    <code>base64url</code> encoding uses <code>-</code>, which is a reserved character in ARK URLs.</p> </li> </ol> <p>For example, given a project with ID <code>0001</code>, and using the DaSCH's ARK resolver hostname and NAAN, the ARK URL for the project itself is:</p> <pre><code>http://ark.dasch.swiss/ark:/72163/1/0001\n</code></pre> <p>Given the Knora resource IRI <code>http://rdfh.ch/0001/0C-0L1kORryKzJAJxxRyRQ</code>, the corresponding ARK URL without a timestamp is:</p> <pre><code>http://ark.dasch.swiss/ark:/72163/1/0001/0C=0L1kORryKzJAJxxRyRQY\n</code></pre> <p>The same ARK URL with an optional timestamp is:</p> <pre><code>http://ark.dasch.swiss/ark:/72163/1/0001/0C=0L1kORryKzJAJxxRyRQY.20180528T155203897Z\n</code></pre> <p>Given a value with <code>knora-api:valueHasUUID \"4OOf3qJUTnCDXlPNnygSzQ\"</code> in the resource <code>http://rdfh.ch/0001/0C-0L1kORryKzJAJxxRyRQ</code>, and using the DaSCH's ARK resolver hostname and NAAN, the corresponding ARK URL without a timestamp is:</p> <pre><code>http://ark.dasch.swiss/ark:/72163/1/0001/0C=0L1kORryKzJAJxxRyRQY/4OOf3qJUTnCDXlPNnygSzQX\n</code></pre> <p>The same ARK URL with an optional timestamp is:</p> <pre><code>http://ark.dasch.swiss/ark:/72163/1/0001/0C=0L1kORryKzJAJxxRyRQY/4OOf3qJUTnCDXlPNnygSzQX.20180604T085622513Z\n</code></pre>"},{"location":"DSP-API/05-internals/design/api-v2/ark/#serving-ark-urls","title":"Serving ARK URLs","text":"<p><code>SmartIri</code> converts Knora resource IRIs to ARK URLs. This conversion is invoked in <code>ReadResourceV2.toJsonLD</code>, when returning a resource's metadata in JSON-LD format.</p>"},{"location":"DSP-API/05-internals/design/api-v2/ark/#resolving-knora-ark-urls","title":"Resolving Knora ARK URLs","text":"<p>A Knora ARK URL is intended to be resolved by the Knora ARK resolver.</p>"},{"location":"DSP-API/05-internals/design/api-v2/content-wrappers/","title":"Content Wrappers","text":""},{"location":"DSP-API/05-internals/design/api-v2/content-wrappers/#content-wrappers","title":"Content Wrappers","text":"<p>Whenever possible, the same data structures are used to represent the same types of data, regardless of the API operation (reading, creating, or modifying). However, often more data is available in output than in input. For example, when a value is read from the triplestore, its IRI is available, but when it is being created, it does not yet have an IRI.</p> <p>The implementation of API v2 therefore uses content wrappers. For each type, there is a case class that represents the lowest common denominator of the type, the data that will be present regardless of the API operation. For example, the trait <code>ValueContentV2</code> represents a Knora value, regardless of whether it is received as input or returned as output. Case classes such as <code>DateValueContentV2</code> and <code>TextValueContentV2</code> implement this trait.</p> <p>An instance of this lowest-common-denominator class, or \"content class\", can then be wrapped in an instance of an operation-specific class that carries additional data. For example, when a Knora value is returned from the triplestore, a <code>ValueContentV2</code> is wrapped in a <code>ReadValueV2</code>, which additionally contains the value's IRI. When a value is created, it is wrapped in a <code>CreateValueV2</code>, which has the resource IRI and the property IRI, but not the value IRI.</p> <p>A read wrapper can be wrapped in another read wrapper; for example, a <code>ReadResourceV2</code> contains <code>ReadValueV2</code> objects.</p> <p>In general, DSP-API v2 responders deal only with the internal schema. (The exception is <code>OntologyResponderV2</code>, which can return ontology information that exists only in an external schema.) Therefore, a content class needs to be able to convert itself from the internal schema to an external schema (when it is being used for output) and vice versa (when it is being used for input). Each content class class should therefore extend <code>KnoraContentV2</code>, and thus have a <code>toOntologySchema</code> method or converting itself between internal and external schemas, in either direction:</p> <pre><code>/**\n  * A trait for content classes that can convert themselves between internal and internal schemas.\n  *\n  * @tparam C the type of the content class that extends this trait.\n  */\ntrait KnoraContentV2[C &lt;: KnoraContentV2[C]] {\n    this: C =&gt;\n    def toOntologySchema(targetSchema: OntologySchema): C\n}\n</code></pre> <p>Since read wrappers are used only for output, they need to be able convert themselves only from the internal schema to an external schema. Each read wrapper class should extend <code>KnoraReadV2</code>, and thus have a method for doing this:</p> <pre><code>/**\n  * A trait for read wrappers that can convert themselves to external schemas.\n  *\n  * @tparam C the type of the read wrapper that extends this trait.\n  */\ntrait KnoraReadV2[C &lt;: KnoraReadV2[C]] {\n    this: C =&gt;\n    def toOntologySchema(targetSchema: ApiV2Schema): C\n}\n</code></pre>"},{"location":"DSP-API/05-internals/design/api-v2/gravsearch/","title":"Gravsearch Design","text":""},{"location":"DSP-API/05-internals/design/api-v2/gravsearch/#gravsearch-design","title":"Gravsearch Design","text":"<p>For a detailed overview of Gravsearch, see Gravsearch: Transforming SPARQL to query humanities data.</p>"},{"location":"DSP-API/05-internals/design/api-v2/gravsearch/#type-inspection","title":"Type Inspection","text":"<p>The code that converts Gravsearch queries into SPARQL queries, and processes the query results, needs to know the types of the entities that are used in the input query. As explained in Type Inference, these types can be inferred, or they can be specified in the query using type annotations.</p> <p>Type inspection is implemented in the package <code>org.knora.webapi.messages.util.search.gravsearch.types</code>. The entry point to this package is <code>GravsearchTypeInspectionRunner</code>, which is instantiated by <code>SearchResponderV2</code>. The result of type inspection is a <code>GravsearchTypeInspectionResult</code>, in which each typeable entity in the input query is associated with a <code>GravsearchEntityTypeInfo</code>, which can be either:</p> <ul> <li>A <code>PropertyTypeInfo</code>, which specifies the type of object that a property is expected to have.</li> <li>A <code>NonPropertyTypeInfo</code>, which specifies the type of a variable, or the type of an IRI representing a resource or value.</li> </ul>"},{"location":"DSP-API/05-internals/design/api-v2/gravsearch/#identifying-typeable-entities","title":"Identifying Typeable Entities","text":"<p>After parsing a Gravsearch query, <code>SearchResponderV2</code> calls <code>GravsearchTypeInspectionRunner.inspectTypes</code>, passing the WHERE clause of the input query. This method first identifies the entities whose types need to be determined. Each of these entities is represented as a <code>TypeableEntity</code>. To do this, <code>GravsearchTypeInspectionRunner</code> uses <code>QueryTraverser</code> to traverse the WHERE clause, collecting typeable entities in a visitor called <code>TypeableEntityCollectingWhereVisitor</code>. The entities that are considered to need type information are:</p> <ul> <li>All variables.</li> <li>All IRIs except for those that represent type annotations or types.</li> </ul>"},{"location":"DSP-API/05-internals/design/api-v2/gravsearch/#the-type-inspection-pipeline","title":"The Type Inspection Pipeline","text":"<p><code>GravsearchTypeInspectionRunner</code> contains a pipeline of type inspectors, each of which extends <code>GravsearchTypeInspector</code>. There are two type inspectors in the pipeline:</p> <ul> <li><code>AnnotationReadingGravsearchTypeInspector</code>: reads    type annotations included in a Gravsearch query.</li> <li><code>InferringGravsearchTypeInspector</code>: infers the types of entities from the context in which they are used, as well   as from ontology information that it requests from <code>OntologyResponderV2</code>.</li> </ul> <p>Each type inspector takes as input, and returns as output, an <code>IntermediateTypeInspectionResult</code>, which associates each <code>TypeableEntity</code> with zero or more types. Initially, each <code>TypeableEntity</code> has no types.  Each type inspector adds whatever types it finds for each entity. </p> <p>At the end of the pipeline, each entity should have exactly one type. Therefore, to only keep the most specific type for an entity,  the method <code>refineDeterminedTypes</code> refines the determined types by removing those that are base classes of others. However, it can be that inconsistent types are determined for entities. For example, in cases where multiple resource class types  are determined, but one is not a base class of the others. From the following statement </p> <pre><code>{ ?document a beol:manuscript . } UNION { ?document a beol:letter .}\n</code></pre> <p>two inconsistent types can be inferred for <code>?document</code>: <code>beol:letter</code> and <code>beol:manuscript</code>. In these cases, a sanitizer <code>sanitizeInconsistentResourceTypes</code> replaces the inconsistent resource types by  their common base resource class (in the above example, it would be <code>beol:writtenSource</code>). </p> <p>Lastly, an error is returned if</p> <ul> <li>An entity's type could not be determined. The client must add a type annotation to make the query work.</li> <li>Inconsistent types could not be sanitized (an entity appears to have more than one type). The client must correct the query.</li> </ul> <p>If there are no errors, <code>GravsearchTypeInspectionRunner</code> converts the pipeline's output to a <code>GravsearchTypeInspectionResult</code>, in which each entity is associated with exactly one type.</p>"},{"location":"DSP-API/05-internals/design/api-v2/gravsearch/#annotationreadinggravsearchtypeinspector","title":"AnnotationReadingGravsearchTypeInspector","text":"<p>This inspector uses <code>QueryTraverser</code> to traverse the WHERE clause, collecting type annotations in a visitor called <code>AnnotationCollectingWhereVisitor</code>. It then converts each annotation to a <code>GravsearchEntityTypeInfo</code>.</p>"},{"location":"DSP-API/05-internals/design/api-v2/gravsearch/#inferringgravsearchtypeinspector","title":"InferringGravsearchTypeInspector","text":"<p>This inspector first uses <code>QueryTraverser</code> to traverse the WHERE clause, assembling an index of usage information about typeable entities in a visitor called <code>UsageIndexCollectingWhereVisitor</code>. The <code>UsageIndex</code> contains, for example, an index of all the entities that are used as subjects, predicates, or objects, along with the statements in which they are used. It also contains sets of all the Knora class and property IRIs that are used in the WHERE clause. <code>InferringGravsearchTypeInspector</code> then asks <code>OntologyResponderV2</code> for information about those classes and properties, as well as about the classes that are subject types or object types of those properties.</p> <p>Next, the inspector runs inference rules (which extend <code>InferenceRule</code>) on each <code>TypeableEntity</code>. Each rule takes as input a <code>TypeableEntity</code>, the usage index, the ontology information, and the <code>IntermediateTypeInspectionResult</code>, and returns a new <code>IntermediateTypeInspectionResult</code>. For example, <code>TypeOfObjectFromPropertyRule</code> infers an entity's type if the entity is used as the object of a statement and the predicate's <code>knora-api:objectType</code> is known. For each <code>TypeableEntity</code>,  if a type is inferred from a property, the entity and the inferred type are added to  <code>IntermediateTypeInspectionResult.entitiesInferredFromProperty</code>.</p> <p>The inference rules are run repeatedly, because the output of one rule may allow another rule to infer additional information. There are two pipelines of rules: a pipeline for the first iteration of type inference, and a pipeline for subsequent iterations. This is because some rules can return additional information if they are run more than once on the same entity, while others cannot.</p> <p>The number of iterations is limited to <code>InferringGravsearchTypeInspector.MAX_ITERATIONS</code>, but in practice two iterations are sufficient for most realistic queries, and it is difficult to design a query that requires more than six iterations.</p>"},{"location":"DSP-API/05-internals/design/api-v2/gravsearch/#transformation-of-a-gravsearch-query","title":"Transformation of a Gravsearch Query","text":"<p>A Gravsearch query submitted by the client is parsed by <code>GravsearchParser</code> and preprocessed by <code>GravsearchTypeInspector</code> to get type information about the elements used in the query (resources, values, properties etc.) and do some basic sanity checks.</p> <p>In <code>SearchResponderV2</code>, two queries are generated from a given Gravsearch query: a prequery and a main query.</p>"},{"location":"DSP-API/05-internals/design/api-v2/gravsearch/#query-transformers","title":"Query Transformers","text":"<p>The Gravsearch query is passed to <code>QueryTraverser</code> along with a query transformer. Query transformers are classes that implement traits supported by <code>QueryTraverser</code>:</p> <ul> <li><code>WhereTransformer</code>: instructions how to convert statements in the WHERE clause of a SPARQL query    (to generate the prequery's Where clause).</li> </ul> <p>To improve query performance, this trait defines the method <code>optimiseQueryPatterns</code> whose implementation can call  private methods to optimise the generated SPARQL. For example, before transformation of statements in WHERE clause, query  pattern orders must be optimised by moving <code>LuceneQueryPatterns</code> to the beginning and <code>isDeleted</code> statement patterns to the end of the WHERE clause. </p> <ul> <li><code>AbstractPrequeryGenerator</code> (extends <code>WhereTransformer</code>): converts a Gravsearch query into a prequery;    this one has two implementations for regular search queries and for count queries.</li> <li><code>SelectTransformer</code> (extends <code>WhereTransformer</code>): transforms a Select query into a Select query with simulated RDF inference.</li> <li><code>ConstructTransformer</code>: transforms a Construct query into a Construct query with simulated RDF inference.</li> </ul>"},{"location":"DSP-API/05-internals/design/api-v2/gravsearch/#prequery","title":"Prequery","text":"<p>The purpose of the prequery is to get an ordered collection of results representing only the IRIs of one page of matching resources and values. Sort criteria can be submitted by the user, but the result is always deterministic also without sort criteria. This is necessary to support paging. A prequery is a SPARQL SELECT query.</p> <p>The classes involved in generating prequeries can be found in <code>org.knora.webapi.messages.util.search.gravsearch.prequery</code>.</p> <p>If the client submits a count query, the prequery returns the overall number of hits, but not the results themselves.</p> <p>In a first step, before transforming the WHERE clause, query patterns must be further optimised by removing the <code>rdfs:type</code> statement for entities whose type could be inferred from their use with a property IRI, since there would be no need  for explicit <code>rdfs:type</code> statements for them (unless the property IRI from which the type of an entity must be inferred from  is wrapped in an <code>OPTIONAL</code> block). This optimisation takes the Gravsearch query as input (rather than the generated SPARQL), because it uses type information that refers to entities in the Gravsearch query, and the generated SPARQL might have different entities.</p> <p>Next, the Gravsearch query's WHERE clause is transformed and the prequery (SELECT and WHERE clause) is generated from this result. The transformation of the Gravsearch query's WHERE clause relies on the implementation of the abstract class <code>AbstractPrequeryGenerator</code>.</p> <p><code>AbstractPrequeryGenerator</code> contains members whose state is changed during the iteration over the statements of the input query. They can then be used to create the converted query.</p> <ul> <li><code>mainResourceVariable: Option[QueryVariable]</code>:    SPARQL variable representing the main resource of the input query.    Present in the prequery's SELECT clause.</li> <li><code>dependentResourceVariables: mutable.Set[QueryVariable]</code>:    a set of SPARQL variables representing dependent resources in the input query.    Used in an aggregation function in the prequery's SELECT clause (see below).</li> <li><code>dependentResourceVariablesGroupConcat: Set[QueryVariable]</code>:    a set of SPARQL variables representing an aggregation of dependent resources.    Present in the prequery's SELECT clause.</li> <li><code>valueObjectVariables: mutable.Set[QueryVariable]</code>:    a set of SPARQL variables representing value objects.    Used in an aggregation function in the prequery's SELECT clause (see below).</li> <li><code>valueObjectVarsGroupConcat: Set[QueryVariable]</code>:    a set of SPARQL variables representing an aggregation of value objects.    Present in the prequery's SELECT clause.</li> </ul> <p>The variables mentioned above are present in the prequery's result rows because they are part of the prequery's SELECT clause.</p> <p>The following example illustrates the handling of variables. The following Gravsearch query looks for pages with a sequence number of 10 that are part of a book:</p> <pre><code>PREFIX incunabula: &lt;http://0.0.0.0:3333/ontology/0803/incunabula/simple/v2#&gt;\nPREFIX knora-api: &lt;http://api.knora.org/ontology/knora-api/simple/v2#&gt;\n\n    CONSTRUCT {\n        ?page knora-api:isMainResource true .\n\n        ?page knora-api:isPartOf ?book .\n\n        ?page incunabula:seqnum ?seqnum .\n    } WHERE {\n\n        ?page a incunabula:page .\n\n        ?page knora-api:isPartOf ?book .\n\n        ?book a incunabula:book .\n\n        ?page incunabula:seqnum ?seqnum .\n\n        FILTER(?seqnum = 10)\n\n    }\n</code></pre> <p>The prequery's SELECT clause is built by <code>NonTriplestoreSpecificGravsearchToPrequeryTransformer.getSelectColumns</code>, based on the variables used in the input query's <code>CONSTRUCT</code> clause. The resulting SELECT clause looks as follows:</p> <pre><code>SELECT DISTINCT\n    ?page\n    (GROUP_CONCAT(DISTINCT(IF(BOUND(?book), STR(?book), \"\")); SEPARATOR='') AS ?book__Concat)\n    (GROUP_CONCAT(DISTINCT(IF(BOUND(?seqnum), STR(?seqnum), \"\")); SEPARATOR='') AS ?seqnum__Concat)\n    (GROUP_CONCAT(DISTINCT(IF(BOUND(?book__LinkValue), STR(?book__LinkValue), \"\")); SEPARATOR='') AS ?book__LinkValue__Concat)\n    WHERE {...}\n    GROUP BY ?page\n    ORDER BY ASC(?page)\n    LIMIT 25\n</code></pre> <p><code>?page</code> represents the main resource. When accessing the prequery's result rows, <code>?page</code> contains the IRI of the main resource. The prequery's results are grouped by the main resource so that there is exactly one result row per matching main resource. <code>?page</code> is also used as a sort criterion although none has been defined in the input query. This is necessary to make paging work: results always have to be returned in the same order (the prequery is always deterministic). Like this, results can be fetched page by page using LIMIT and OFFSET.</p> <p>Grouping by main resource requires other results to be aggregated using the function <code>GROUP_CONCAT</code>. <code>?book</code> is used as an argument of the aggregation function. The aggregation's result is accessible in the prequery's result rows as <code>?book__Concat</code>. The variable <code>?book</code> is bound to an IRI. Since more than one IRI could be bound to a variable representing a dependent resource, the results have to be aggregated. <code>GROUP_CONCAT</code> takes two arguments: a collection of strings (IRIs in our use case) and a separator (we use the non-printing Unicode character <code>INFORMATION SEPARATOR ONE</code>). When accessing <code>?book__Concat</code> in the prequery's results containing the IRIs of dependent resources,  the string has to be split with the separator used in the aggregation function. The result is a collection of IRIs representing dependent resources. The same logic applies to value objects.</p> <p>Each <code>GROUP_CONCAT</code> checks whether the concatenated variable is bound in each result in the group; if a variable is unbound, we concatenate an empty string. This is necessary because, in Apache Jena (and perhaps other triplestores), \"If <code>GROUP_CONCAT</code> has an unbound value in the list of values to concat, the overall result is 'error'\" (see this Jena issue).</p> <p>If the input query contains a <code>UNION</code>, and a variable is bound in one branch of the <code>UNION</code> and not in another branch, it is possible that the prequery will return more than one row per main resource. To deal with this situation, <code>SearchResponderV2</code> merges rows that contain the same main resource IRI.</p>"},{"location":"DSP-API/05-internals/design/api-v2/gravsearch/#main-query","title":"Main Query","text":"<p>The purpose of the main query is to get all requested information  about the main resource, dependent resources, and value objects. The IRIs of those resources and value objects were returned by the prequery. Since the prequery only returns resources and value objects matching the input query's criteria, the main query can specifically ask for more detailed information on these resources and values  without having to reconsider these criteria.</p>"},{"location":"DSP-API/05-internals/design/api-v2/gravsearch/#generating-the-main-query","title":"Generating the Main Query","text":"<p>The main query is a SPARQL CONSTRUCT query. Its generation is handled by the method <code>GravsearchMainQueryGenerator.createMainQuery</code>. It takes three arguments: <code>mainResourceIris: Set[IriRef], dependentResourceIris: Set[IriRef], valueObjectIris: Set[IRI]</code>.</p> <p>These sets are constructed based on information about variables representing dependent resources and value objects in the prequery, which is provided by <code>NonTriplestoreSpecificGravsearchToPrequeryTransformer</code>:</p> <ul> <li><code>dependentResourceVariablesGroupConcat</code>: <code>Set(QueryVariable(book__Concat))</code></li> <li><code>valueObjectVariablesGroupConcat</code>: <code>Set(QueryVariable(seqnum__Concat), QueryVariable(book__LinkValue__Concat))</code></li> </ul> <p>From the given Iris, statements are generated that ask for complete information on exactly these resources and values. For any given resource Iri, only the values present in <code>valueObjectIris</code> are to be queried. This is achieved by using SPARQL's <code>VALUES</code> expression for the main resource and dependent resources as well as for values.</p>"},{"location":"DSP-API/05-internals/design/api-v2/gravsearch/#processing-the-main-querys-results","title":"Processing the Main Query's results","text":"<p>To do the permission checking, the results of the main query are passed to <code>ConstructResponseUtilV2.splitMainResourcesAndValueRdfData</code>, which transforms a <code>SparqlConstructResponse</code> (a set of RDF triples) into a structure organized by main resource Iris. In this structure, dependent resources and values are nested and can be accessed via their main resource, and resources and values that the user does not have permission to see are filtered out. As a result, a page of results may contain fewer than the maximum allowed number of results per page, even if more pages of results are available.</p> <p><code>MainQueryResultProcessor.getRequestedValuesFromResultsWithFullGraphPattern</code> then filters out values that the user did not explicitly ask for in the input query.</p> <p>Finally, <code>ConstructResponseUtilV2.createApiResponse</code> transforms the query results into an API response (a <code>ReadResourcesSequenceV2</code>). If the number of main resources found (even if filtered out because of permissions) is equal to the maximum allowed page size, the predicate <code>knora-api:mayHaveMoreResults: true</code> is included in the response.</p>"},{"location":"DSP-API/05-internals/design/api-v2/gravsearch/#inference","title":"Inference","text":"<p>Gravsearch queries support a subset of RDFS reasoning  (see Inference in the API documentation on Gravsearch).  This is implemented as follows:</p> <p>To simulate RDF inference, the API expands all <code>rdfs:subClassOf</code> and <code>rdfs:subPropertyOf</code> statements  using <code>UNION</code> statements for all subclasses and subproperties from the ontologies  (equivalent to <code>rdfs:subClassOf*</code> and <code>rdfs:subPropertyOf*</code>).  Similarly, the API replaces <code>knora-api:standoffTagHasStartAncestor</code> with <code>knora-base:standoffTagHasStartParent*</code>.</p>"},{"location":"DSP-API/05-internals/design/api-v2/gravsearch/#optimisation-of-generated-sparql","title":"Optimisation of generated SPARQL","text":"<p>The triplestore-specific transformers in <code>SparqlTransformer.scala</code> can run optimisations on the generated SPARQL, in the method <code>optimiseQueryPatterns</code> inherited from <code>WhereTransformer</code>. For example, <code>moveLuceneToBeginning</code> moves Lucene queries to the beginning of the block in which they occur.</p>"},{"location":"DSP-API/05-internals/design/api-v2/gravsearch/#query-optimization-by-topological-sorting-of-statements","title":"Query Optimization by Topological Sorting of Statements","text":"<p>In Jena Fuseki, the performance of a query highly depends on the order of the query statements.  For example, a query such as the one below:</p> <pre><code>PREFIX beol: &lt;http://0.0.0.0:3333/ontology/0801/beol/v2#&gt;\nPREFIX knora-api: &lt;http://api.knora.org/ontology/knora-api/v2#&gt;\n\nCONSTRUCT {\n  ?letter knora-api:isMainResource true .\n  ?letter ?linkingProp1  ?person1 .\n  ?letter ?linkingProp2  ?person2 .\n  ?letter beol:creationDate ?date .\n} WHERE {\n  ?letter beol:creationDate ?date .\n\n  ?letter ?linkingProp1 ?person1 .\n  FILTER(?linkingProp1 = beol:hasAuthor || ?linkingProp1 = beol:hasRecipient )\n\n  ?letter ?linkingProp2 ?person2 .\n  FILTER(?linkingProp2 = beol:hasAuthor || ?linkingProp2 = beol:hasRecipient )\n\n  ?person1 beol:hasIAFIdentifier ?gnd1 .\n  ?gnd1 knora-api:valueAsString \"(DE-588)118531379\" .\n\n  ?person2 beol:hasIAFIdentifier ?gnd2 .\n  ?gnd2 knora-api:valueAsString \"(DE-588)118696149\" .\n} ORDER BY ?date\n</code></pre> <p>takes a very long time with Fuseki. The performance of this query can be improved by moving up the statements with literal objects that are not dependent on any other statement:</p> <pre><code>  ?gnd1 knora-api:valueAsString \"(DE-588)118531379\" .\n  ?gnd2 knora-api:valueAsString \"(DE-588)118696149\" .\n</code></pre> <p>The rest of the query then reads:</p> <pre><code>  ?person1 beol:hasIAFIdentifier ?gnd1 .\n  ?person2 beol:hasIAFIdentifier ?gnd2 .\n  ?letter ?linkingProp1 ?person1 .\n  FILTER(?linkingProp1 = beol:hasAuthor || ?linkingProp1 = beol:hasRecipient )\n\n  ?letter ?linkingProp2 ?person2 .\n  FILTER(?linkingProp2 = beol:hasAuthor || ?linkingProp2 = beol:hasRecipient )\n ?letter beol:creationDate ?date .\n</code></pre> <p>Since users cannot be expected to know about performance of triplestores in order to write efficient queries,  an optimization method to automatically rearrange the statements of the given queries has been implemented.  Upon receiving the Gravsearch query, the algorithm converts the query to a graph. For each statement pattern, the subject of the statement is the origin node, the predicate is a directed edge, and the object  is the target node. For the query above, this conversion would result in the following graph:</p> <p></p> <p>The Graph for Scala library is used to construct the graph and sort it using Kahn's  topological sorting algorithm.</p> <p>The algorithm returns the nodes of the graph ordered in several layers, where the  root element <code>?letter</code> is in layer 0, <code>[?date, ?person1, ?person2]</code> are in layer 1, <code>[?gnd1, ?gnd2]</code> in layer 2, and the  leaf nodes <code>[(DE-588)118531379, (DE-588)118696149]</code> are given in the last layer (i.e. layer 3).  According to Kahn's algorithm, there are multiple valid permutations of the topological order. The graph in the example above has 24 valid permutations of topological order. Here are two of them (nodes are ordered from left to right with the  highest order to the lowest):</p> <ul> <li><code>(?letter, ?date, ?person2, ?person1, ?gnd2, ?gnd1, (DE-588)118696149, (DE-588)118531379)</code> </li> <li><code>(?letter, ?date, ?person1, ?person2, ?gnd1, ?gnd2, (DE-588)118531379, (DE-588)118696149)</code>.   </li> </ul> <p>From all valid topological orders, one is chosen based on certain criteria; for example, the leaf node should not  belong to a statement that has predicate <code>rdf:type</code>, since that could match all resources of the specified type. Once the best order is chosen, it is used to re-arrange the query statements. Starting from the last leaf node, i.e.  <code>(DE-588)118696149</code>, the method finds the statement pattern which has this node as its object, and brings this statement  to the top of the query. This rearrangement continues so that the statements with the fewest dependencies on other  statements are all brought to the top of the query. The resulting query is as follows:</p> <pre><code>PREFIX beol: &lt;http://0.0.0.0:3333/ontology/0801/beol/v2#&gt;\nPREFIX knora-api: &lt;http://api.knora.org/ontology/knora-api/v2#&gt;\n\nCONSTRUCT {\n  ?letter knora-api:isMainResource true .\n  ?letter ?linkingProp1  ?person1 .\n  ?letter ?linkingProp2  ?person2 .\n  ?letter beol:creationDate ?date .\n} WHERE {\n  ?gnd2 knora-api:valueAsString \"(DE-588)118696149\" .\n  ?gnd1 knora-api:valueAsString \"(DE-588)118531379\" .\n  ?person2 beol:hasIAFIdentifier ?gnd2 .\n  ?person1 beol:hasIAFIdentifier ?gnd1 .\n  ?letter ?linkingProp2 ?person2 .\n  ?letter ?linkingProp1 ?person1 .\n  ?letter beol:creationDate ?date .\n  FILTER(?linkingProp1 = beol:hasAuthor || ?linkingProp1 = beol:hasRecipient )\n  FILTER(?linkingProp2 = beol:hasAuthor || ?linkingProp2 = beol:hasRecipient )\n} ORDER BY ?date\n</code></pre> <p>Note that position of the FILTER statements does not play a significant role in the optimization. </p> <p>If a Gravsearch query contains statements in <code>UNION</code>, <code>OPTIONAL</code>, <code>MINUS</code>, or <code>FILTER NOT EXISTS</code>, they are reordered  by defining a graph per block. For example, consider the following query with <code>UNION</code>:</p> <pre><code>{\n    ?thing anything:hasRichtext ?richtext .\n    FILTER knora-api:matchText(?richtext, \"test\")\n    ?thing anything:hasInteger ?int .\n    ?int knora-api:intValueAsInt 1 .\n}\nUNION\n{\n    ?thing anything:hasText ?text .\n    FILTER knora-api:matchText(?text, \"test\")\n    ?thing anything:hasInteger ?int .\n    ?int knora-api:intValueAsInt 3 .\n}\n</code></pre> <p>This would result in one graph per block of the <code>UNION</code>. Each graph is then sorted, and the statements of its  block are rearranged according to the topological order of graph. This is the result:</p> <pre><code>{\n   ?int knora-api:intValueAsInt 1 .\n    ?thing anything:hasRichtext ?richtext .\n    ?thing anything:hasInteger ?int .\n    FILTER(knora-api:matchText(?richtext, \"test\"))\n} UNION {\n    ?int knora-api:intValueAsInt 3 .\n    ?thing anything:hasText ?text .\n    ?thing anything:hasInteger ?int .\n    FILTER(knora-api:matchText(?text, \"test\"))\n}\n</code></pre>"},{"location":"DSP-API/05-internals/design/api-v2/gravsearch/#cyclic-graphs","title":"Cyclic Graphs","text":"<p>The topological sorting algorithm can only be used for DAGs (directed acyclic graphs). However, a Gravsearch query can contains statements that result in a cyclic graph, e.g.:</p> <pre><code>PREFIX anything: &lt;http://0.0.0.0:3333/ontology/0001/anything/simple/v2#&gt;\nPREFIX knora-api: &lt;http://api.knora.org/ontology/knora-api/simple/v2#&gt;\n\nCONSTRUCT {\n    ?thing knora-api:isMainResource true .\n} WHERE {\n  ?thing anything:hasOtherThing ?thing1 .\n  ?thing1 anything:hasOtherThing ?thing2 .\n  ?thing2 anything:hasOtherThing ?thing . \n}\n</code></pre> <p>In this case, the algorithm tries to break the cycles in order to sort the graph. If this is not possible, the query statements are not reordered.</p>"},{"location":"DSP-API/05-internals/design/api-v2/how-to-add-a-route/","title":"How to Add an API v2 Route","text":""},{"location":"DSP-API/05-internals/design/api-v2/how-to-add-a-route/#how-to-add-an-api-v2-route","title":"How to Add an API v2 Route","text":""},{"location":"DSP-API/05-internals/design/api-v2/how-to-add-a-route/#write-sparql-templates","title":"Write SPARQL templates","text":"<p>Add any SPARQL templates you need to <code>src/main/twirl/queries/sparql/v2</code>, using the Twirl template engine.</p>"},{"location":"DSP-API/05-internals/design/api-v2/how-to-add-a-route/#write-responder-request-and-response-messages","title":"Write Responder Request and Response Messages","text":"<p>Add a file to the <code>org.knora.webapi.messages.v2.responder</code> package, containing case classes for your responder's request and response messages. Add a trait that the responder's request messages extend. Each request message type should contain a <code>UserADM</code>.</p> <p>Request and response messages should be designed following the patterns described in JSON-LD Parsing and Formatting. Each responder's request messages should extend a responder-specific trait, so that <code>ResponderManager</code> will know which responder to route those messages to.</p>"},{"location":"DSP-API/05-internals/design/api-v2/how-to-add-a-route/#write-a-responder","title":"Write a Responder","text":"<p>Write a Pekko actor class that extends <code>org.knora.webapi.responders.Responder</code>, and add it to the <code>org.knora.webapi.responders.v2</code> package.</p> <p>Give your responder a <code>receive(msg: YourCustomType)</code> method that handles each of your request message types by generating a <code>Future</code> containing a response message.</p> <p>Add the path of your responder to the <code>org.knora.webapi.responders</code> package object, and add code to <code>ResponderManager</code> to instantiate the new responder. Then add a <code>case</code> to the <code>receive</code> method in <code>ResponderManager</code>, to match messages that extend your request message trait, and pass them them to that responder's receive method. The responder's resulting <code>Future</code> must be passed to the <code>ActorUtil.future2Message</code>. See Futures with Pekko and Error Handling for details.</p>"},{"location":"DSP-API/05-internals/design/api-v2/how-to-add-a-route/#write-a-route","title":"Write a Route","text":"<p>Add a class to the <code>org.knora.webapi.routing.v2</code> package for your route, using the Pekko HTTP Routing DSL. See the routes in that package for examples. Typically, each route route will construct a responder request message and pass it to <code>RouteUtilV2.runRdfRouteWithFuture</code> to handle the request.</p> <p>Finally, add your route's <code>knoraApiPath</code> function to the <code>apiRoutes</code> member variable in <code>KnoraService</code>. Any exception thrown inside the route will be handled by the <code>KnoraExceptionHandler</code>, so that the correct client response (including the HTTP status code) will be returned.</p>"},{"location":"DSP-API/05-internals/design/api-v2/json-ld/","title":"JSON-LD Parsing and Formatting","text":""},{"location":"DSP-API/05-internals/design/api-v2/json-ld/#json-ld-parsing-and-formatting","title":"JSON-LD Parsing and Formatting","text":""},{"location":"DSP-API/05-internals/design/api-v2/json-ld/#jsonldutil","title":"JsonLDUtil","text":"<p>Knora provides a utility object called <code>JsonLDUtil</code>, which wraps the titanium-json-ld Java library, and parses JSON-LD text to a Knora data structure called <code>JsonLDDocument</code>. These classes provide commonly needed functionality for extracting and validating data from JSON-LD documents, as well as for constructing new documents.</p>"},{"location":"DSP-API/05-internals/design/api-v2/json-ld/#parsing-json-ld","title":"Parsing JSON-LD","text":"<p>A route that expects a JSON-LD request must first parse the JSON-LD using <code>JsonLDUtil</code> . For example, this is how <code>ValuesRouteV2</code> parses a JSON-LD request to create a value:</p> <pre><code>post {\n            entity(as[String]) { jsonRequest =&gt;\n                requestContext =&gt; {\n                    val requestDoc: JsonLDDocument = JsonLDUtil.parseJsonLD(jsonRequest)\n</code></pre> <p>The result is a <code>JsonLDDocument</code> in which all prefixes have been expanded to full IRIs, with an empty JSON-LD context.</p> <p>The next step is to convert the <code>JsonLDDocument</code> to a request message that can be sent to the Knora responder that will handle the request.</p> <pre><code>val requestMessageFuture: Future[CreateValueRequestV2] = for {\n                        requestingUser &lt;- getUserADM(requestContext)\n                        requestMessage: CreateValueRequestV2 &lt;- CreateValueRequestV2.fromJsonLD(\n                            requestDoc,\n                            apiRequestID = UUID.randomUUID,\n                            requestingUser = requestingUser,\n                            responderManager = responderManager,\n                            storeManager = storeManager,\n                            settings = settings,\n                            log = log\n                        )\n                    } yield requestMessage\n</code></pre> <p>This is done in a <code>Future</code>, because the processing of JSON-LD input could in itself involve sending messages to responders.</p> <p>Each request message case class (in this case <code>CreateValueRequestV2</code>) has a companion object that implements the <code>KnoraJsonLDRequestReaderV2</code> trait:</p> <pre><code>/**\n  * A trait for objects that can generate case class instances based on JSON-LD input.\n  *\n  * @tparam C the type of the case class that can be generated.\n  */\ntrait KnoraJsonLDRequestReaderV2[C] {\n    /**\n      * Converts JSON-LD input into a case class instance.\n      *\n      * @param jsonLDDocument   the JSON-LD input.\n      * @param apiRequestID     the UUID of the API request.\n      * @param requestingUser   the user making the request.\n      * @param responderManager a reference to the responder manager.\n      * @param storeManager     a reference to the store manager.\n      * @param settings         the application settings.\n      * @param log              a logging adapter.\n      * @param timeout          a timeout for `ask` messages.\n      * @param executionContext an execution context for futures.\n      * @return a case class instance representing the input.\n      */\n    def fromJsonLD(jsonLDDocument: JsonLDDocument,\n                   apiRequestID: UUID,\n                   requestingUser: UserADM,\n                   responderManager: ActorRef,\n                   storeManager: ActorRef,\n                   settings: KnoraSettingsImpl,\n                   log: LoggingAdapter)(implicit timeout: Timeout, executionContext: ExecutionContext): Future[C]\n}\n</code></pre> <p>This means that the companion object has a method <code>fromJsonLD</code> that takes a <code>JsonLDDocument</code> and returns an instance of the case class. The <code>fromJsonLD</code> method can use the functionality of the <code>JsonLDDocument</code> data structure for extracting and validating the content of the request. For example, <code>JsonLDObject.requireStringWithValidation</code> gets a required member of a JSON-LD object, and validates it using a function that is passed as an argument. Here is an example of getting and validating a <code>SmartIri</code>:</p> <pre><code>for {\n      valueType: SmartIri &lt;- Future(jsonLDObject.requireStringWithValidation(JsonLDConstants.TYPE, stringFormatter.toSmartIriWithErr))\n</code></pre> <p>The validation function (in this case <code>stringFormatter.toSmartIriWithErr</code>) has to take two arguments: a string to be validated, and a function that that throws an exception if the string is invalid. The return value of <code>requireStringWithValidation</code> is the return value of the validation function, which in this case is a <code>SmartIri</code>. If the string is invalid, <code>requireStringWithValidation</code> throws <code>BadRequestException</code>.</p> <p>It is also possible to get and validate an optional JSON-LD object member:</p> <pre><code>val maybeDateValueHasStartEra: Option[DateEraV2] = jsonLDObject.maybeStringWithValidation(\n    OntologyConstants.KnoraApiV2Complex.DateValueHasStartEra, DateEraV2.parse\n)\n</code></pre> <p>Here <code>JsonLDObject.maybeStringWithValidation</code> returns an <code>Option</code> that contains the return value of the validation function (<code>DateEraV2.parse</code>) if it was given, otherwise <code>None</code>.</p>"},{"location":"DSP-API/05-internals/design/api-v2/json-ld/#returning-a-json-ld-response","title":"Returning a JSON-LD Response","text":"<p>Each API response is represented by a message class that extends <code>KnoraJsonLDResponseV2</code>, which has a method <code>toJsonLDDocument</code> that specifies the target ontology schema. The implementation of this method constructs a <code>JsonLDDocument</code>, in which all object keys are full IRIs (no prefixes are used), but in which the JSON-LD context also specifies the prefixes that will be used when the document is returned to the client. The function <code>JsonLDUtil.makeContext</code> is a convenient way to construct the JSON-LD context.</p> <p>Since <code>toJsonLDDocument</code> has to return an object that uses the specified ontology schema, the recommended design is to separate schema conversion as much as possible from JSON-LD generation. As a first step, schema conversion (or at the very least, the conversion of Knora type IRIs to the target schema) can be done via an implementation of <code>KnoraReadV2</code>:</p> <pre><code>/**\n  * A trait for read wrappers that can convert themselves to external schemas.\n  *\n  * @tparam C the type of the read wrapper that extends this trait.\n  */\ntrait KnoraReadV2[C &lt;: KnoraReadV2[C]] {\n    this: C =&gt;\n    def toOntologySchema(targetSchema: ApiV2Schema): C\n}\n</code></pre> <p>This means that the response message class has the method <code>toOntologySchema</code>, which returns a copy of the same message, with Knora type IRIs (and perhaps other content) adjusted for the target schema. (See Smart IRIs on how to convert Knora type IRIs to the target schema.)</p> <p>The response message class could then have a private method called <code>generateJsonLD</code>, which generates a <code>JsonLDDocument</code> that has the correct structure for the target schema, like this:</p> <pre><code>private def generateJsonLD(targetSchema: ApiV2Schema, settings: KnoraSettingsImpl, schemaOptions: Set[SchemaOption]): JsonLDDocument\n</code></pre> <p>This way, the implementation of <code>toJsonLDDocument</code> can call <code>toOntologySchema</code>, then construct a <code>JsonLDDocument</code> from the resulting object. For example:</p> <pre><code>    override def toJsonLDDocument(targetSchema: ApiV2Schema, settings: KnoraSettingsImpl, schemaOptions: Set[SchemaOption] = Set.empty): JsonLDDocument = {\n        toOntologySchema(targetSchema).generateJsonLD(\n            targetSchema = targetSchema,\n            settings = settings,\n            schemaOptions = schemaOptions\n        )\n    }\n</code></pre>"},{"location":"DSP-API/05-internals/design/api-v2/json-ld/#selecting-the-response-schema","title":"Selecting the Response Schema","text":"<p>Most routes complete by calling <code>RouteUtilV2.runRdfRouteWithFuture</code>, which calls the response message's <code>toJsonLDDocument</code> method. The <code>runRdfRouteWithFuture</code> function has a parameter that enables the route to select the schema that should be used in the response. It is up to each route to determine what the appropriate response schema should be. Some routes support only one response schema. Others allow the client to choose. To use the schema requested by the client, the route can call <code>RouteUtilV2.getOntologySchema</code>:</p> <pre><code>RouteUtilV2.runRdfRouteWithFuture(\n    requestMessageF = requestMessageFuture,\n    requestContext = requestContext,\n    settings = settings,\n    responderManager = responderManager,\n    log = log,\n    targetSchema = targetSchema,\n    schemaOptions = schemaOptions\n)\n</code></pre> <p>If the route only supports one schema, it can specify the schema directly instead:</p> <pre><code>RouteUtilV2.runRdfRouteWithFuture(\n    requestMessageF = requestMessageFuture,\n    requestContext = requestContext,\n    settings = settings,\n    responderManager = responderManager,\n    log = log,\n    targetSchema = ApiV2Complex,\n    schemaOptions = RouteUtilV2.getSchemaOptions(requestContext)\n)\n</code></pre>"},{"location":"DSP-API/05-internals/design/api-v2/json-ld/#generating-other-rdf-formats","title":"Generating Other RDF Formats","text":"<p><code>RouteUtilV2.runRdfRouteWithFuture</code> implements HTTP content negotiation. After determining the client's preferred format, it asks the <code>KnoraResponseV2</code> to convert itself into that format. <code>KnoraResponseV2</code> has an abstract <code>format</code> method, whose implementations select the most efficient conversion between the response message's internal representation (which could be JSON-LD or Turtle) and the requested format.</p>"},{"location":"DSP-API/05-internals/design/api-v2/ontology-management/","title":"Ontology Management","text":""},{"location":"DSP-API/05-internals/design/api-v2/ontology-management/#ontology-management","title":"Ontology Management","text":"<p>The core of Knora's ontology management logic is <code>OntologyResponderV2</code>. It is responsible for:</p> <ul> <li>Loading ontologies from the triplestore when Knora starts.</li> <li>Maintaining an ontology cache to improve performance.</li> <li>Returning requested ontology entities from the cache. Requests for ontology   information never access the triplestore.</li> <li>Creating and updating ontologies in response to API requests.</li> <li>Ensuring that all user-created ontologies are consistent and conform to knora-base.</li> </ul> <p>When Knora starts it will load all ontologies from the triplestore into the ontology cache:</p> <ol> <li>Loads all ontologies found in the triplestore into suitable Scala data structures,    which include indexes of relations between entities (e.g. <code>rdfs:subClassOf</code> relations),    to facilitate validity checks.</li> <li>Checks user-created ontologies for consistency and conformance to <code>knora-base</code>,    according to the rules described in    Summary of Restrictions on User-Created Ontologies.</li> <li>Caches all the loaded ontologies using <code>CacheUtil</code>.</li> </ol> <p>The ontology responder assumes that nothing except itself modifies ontologies in the triplestore while Knora is running. Therefore, the ontology cache is updated only when the ontology responder processes a request to update an ontology.</p> <p>By design, the ontology responder can update only one ontology entity per request, to simplify the necessary validity checks. This requires the client to construct an ontology by submitting a sequence of requests in a certain order, as explained in Ontology Updates.</p> <p>The ontology responder mainly works with ontologies in the internal schema. However, it knows that some entities in built-in ontologies have hard-coded definitions in external schemas, and it checks the relevant transformation rules and returns those entities directly when they are requested (see Generation of Ontologies in External Schemas).</p>"},{"location":"DSP-API/05-internals/design/api-v2/ontology-schemas/","title":"Ontology Schemas","text":""},{"location":"DSP-API/05-internals/design/api-v2/ontology-schemas/#ontology-schemas","title":"Ontology Schemas","text":""},{"location":"DSP-API/05-internals/design/api-v2/ontology-schemas/#ontologyschema-type","title":"OntologySchema Type","text":"<p>As explained in API Schema, Knora can represent the same RDF data in different forms: an \"internal schema\" for use in the triplestore, and different \"external schemas\" for use in Knora API v2. Different schemas use different IRIs, as explained in Knora IRIs. Internally, Knora uses a SmartIri class to convert IRIs between schemas.</p> <p>The data type representing a schema itself is <code>OntologySchema</code>, which uses the sealed trait pattern:</p> <pre><code>package org.knora.webapi\n\n/**\n  * Indicates the schema that a Knora ontology or ontology entity conforms to.\n  */\nsealed trait OntologySchema\n\n/**\n  * The schema of DSP ontologies and entities that are used in the triplestore.\n  */\ncase object InternalSchema extends OntologySchema\n\n/**\n  * The schema of DSP ontologies and entities that are used in API v2.\n  */\nsealed trait ApiV2Schema extends OntologySchema\n\n/**\n  * The simple schema for representing DSP ontologies and entities. This schema represents values as literals\n  * when possible.\n  */\ncase object ApiV2Simple extends ApiV2Schema\n\n/**\n  * The default (or complex) schema for representing DSP ontologies and entities. This\n  * schema always represents values as objects.\n  */\ncase object ApiV2Complex extends ApiV2Schema\n\n/**\n  * A trait representing options that can be submitted to configure an ontology schema.\n  */\nsealed trait SchemaOption\n\n/**\n  * A trait representing options that affect the rendering of markup when text values are returned.\n  */\nsealed trait MarkupRendering extends SchemaOption\n\n/**\n  * Indicates that markup should be rendered as XML when text values are returned.\n  */\ncase object MarkupAsXml extends MarkupRendering\n\n/**\n  * Indicates that markup should not be returned with text values, because it will be requested\n  * separately as standoff.\n  */\ncase object MarkupAsStandoff extends MarkupRendering\n\n/**\n  * Indicates that no markup should be returned with text values. Used only internally.\n  */\ncase object NoMarkup extends MarkupRendering\n\n/**\n  * Utility functions for working with schema options.\n  */\nobject SchemaOptions {\n    /**\n      * A set of schema options for querying all standoff markup along with text values.\n      */\n    val ForStandoffWithTextValues: Set[SchemaOption] = Set(MarkupAsXml)\n\n    /**\n      * A set of schema options for querying standoff markup separately from text values.\n      */\n    val ForStandoffSeparateFromTextValues: Set[SchemaOption] = Set(MarkupAsStandoff)\n\n    /**\n      * Determines whether standoff should be queried when a text value is queried.\n      *\n      * @param targetSchema the target API schema.\n      * @param schemaOptions the schema options submitted with the request.\n      * @return `true` if standoff should be queried.\n      */\n    def queryStandoffWithTextValues(targetSchema: ApiV2Schema, schemaOptions: Set[SchemaOption]): Boolean = {\n        targetSchema == ApiV2Complex &amp;&amp; !schemaOptions.contains(MarkupAsStandoff)\n    }\n\n    /**\n      * Determines whether markup should be rendered as XML.\n      *\n      * @param targetSchema the target API schema.\n      * @param schemaOptions the schema options submitted with the request.\n      * @return `true` if markup should be rendered as XML.\n      */\n    def renderMarkupAsXml(targetSchema: ApiV2Schema, schemaOptions: Set[SchemaOption]): Boolean = {\n        targetSchema == ApiV2Complex &amp;&amp; !schemaOptions.contains(MarkupAsStandoff)\n    }\n\n    /**\n      * Determines whether markup should be rendered as standoff, separately from text values.\n      *\n      * @param targetSchema the target API schema.\n      * @param schemaOptions the schema options submitted with the request.\n      * @return `true` if markup should be rendered as standoff.\n      */\n    def renderMarkupAsStandoff(targetSchema: ApiV2Schema, schemaOptions: Set[SchemaOption]): Boolean = {\n        targetSchema == ApiV2Complex &amp;&amp; schemaOptions.contains(MarkupAsStandoff)\n    }\n}\n</code></pre> <p>This class hierarchy allows method declarations to restrict the schemas they accept. A method that can accept any schema can take a parameter of type <code>OntologySchema</code>, while a method that accepts only external schemas can take a parameter of type <code>ApiV2Schema</code>. For examples, see Content Wrappers.</p>"},{"location":"DSP-API/05-internals/design/api-v2/ontology-schemas/#generation-of-ontologies-in-external-schemas","title":"Generation of Ontologies in External Schemas","text":"<p>Ontologies are stored only in the internal schema, and are converted on the fly to external schemas. For each external schema, there is a Scala object in <code>org.knora.webapi.messages.v2.responder.ontologymessages</code> that provides rules for this conversion:</p> <ul> <li><code>KnoraApiV2SimpleTransformationRules</code> for the API v2 simple schema</li> <li><code>KnoraApiV2WithValueObjectsTransformationRules</code> for the API v2 complex schema</li> </ul> <p>Since these are Scala objects rather than classes, they are initialised before the Akka <code>ActorSystem</code> starts, and therefore need a special instance of Knora's <code>StringFormatter</code> class (see Smart IRIs).</p> <p>Each of these rule objects implements this trait:</p> <pre><code>/**\n  * A trait for objects that provide rules for converting an ontology from the internal schema to an external schema.\n  * * See also [[OntologyConstants.CorrespondingIris]].\n  */\ntrait OntologyTransformationRules {\n    /**\n      * The metadata to be used for the transformed ontology.\n      */\n    val ontologyMetadata: OntologyMetadataV2\n\n    /**\n      * Properties to remove from the ontology before converting it to the target schema.\n      * See also [[OntologyConstants.CorrespondingIris]].\n      */\n    val internalPropertiesToRemove: Set[SmartIri]\n\n    /**\n      * Classes to remove from the ontology before converting it to the target schema.\n      */\n    val internalClassesToRemove: Set[SmartIri]\n\n    /**\n      * After the ontology has been converted to the target schema, these cardinalities must be\n      * added to the specified classes.\n      */\n    val externalCardinalitiesToAdd: Map[SmartIri, Map[SmartIri, KnoraCardinalityInfo]]\n\n    /**\n      * Classes that need to be added to the ontology after converting it to the target schema.\n      */\n    val externalClassesToAdd: Map[SmartIri, ReadClassInfoV2]\n\n    /**\n      * Properties that need to be added to the ontology after converting it to the target schema.\n      * See also [[OntologyConstants.CorrespondingIris]].\n      */\n    val externalPropertiesToAdd: Map[SmartIri, ReadPropertyInfoV2]\n}\n</code></pre> <p>These rules are applied to <code>knora-base</code> as well as to user-created ontologies. For example, <code>knora-base:Resource</code> has different cardinalities depending on its schema (<code>knora-api:Resource</code> has an additional cardinality on <code>knora-api:hasIncomingLink</code>), and this is therefore also true of its user-created subclasses. The transformation is implemented:</p> <ul> <li>In the implementations of the <code>toOntologySchema</code> method in classes defined in   <code>OntologyMessagesV2.scala</code>: <code>ReadOntologyV2</code>, <code>ReadClassInfoV2</code>, <code>ClassInfoContentV2</code>,   <code>PropertyInfoContentV2</code>, and <code>OntologyMetadataV2</code>.</li> <li>In <code>OntologyResponderV2.getEntityInfoResponseV2</code>, which handles requests for   specific ontology entities. If the requested entity is hard-coded in a transformation   rule, this method returns the hard-coded external entity, otherwise it returns the relevant   internal entity.</li> </ul>"},{"location":"DSP-API/05-internals/design/api-v2/overview/","title":"API v2 Design Overview","text":""},{"location":"DSP-API/05-internals/design/api-v2/overview/#api-v2-design-overview","title":"API v2 Design Overview","text":""},{"location":"DSP-API/05-internals/design/api-v2/overview/#general-principles","title":"General Principles","text":"<ul> <li>DSP-API v2 requests and responses are RDF documents. Any API v2   response can be returned as JSON-LD,   Turtle,   or RDF/XML.</li> <li>Each class or property used in a request or response has a definition in an ontology, which Knora can serve.</li> <li>Response formats are reused for different requests whenever   possible, to minimise the number of different response formats a   client has to handle. For example, any request for one or more   resources (such as a search result, or a request for one specific   resource) returns a response in the same format.</li> <li>Response size is limited by design. Large amounts of data must be   retrieved by requesting small pages of data, one after the other.</li> <li>Responses that provide data are distinct from responses that provide   definitions (i.e. ontology entities). Data responses indicate which   types are used, and the client can request information about these   types separately.</li> </ul>"},{"location":"DSP-API/05-internals/design/api-v2/overview/#api-schemas","title":"API Schemas","text":"<p>The types used in the triplestore are not exposed directly in the API. Instead, they are mapped onto API 'schemas'. Two schemas are currently provided.</p> <ul> <li>A complex schema, which is suitable both for reading and for editing   data. The complex schema represents values primarily as complex objects.</li> <li>A simple schema, which is suitable for reading data but not for   editing it. The simple schema facilitates interoperability between   DSP ontologies and non-DSP ontologies, since it represents   values primarily as literals.</li> </ul> <p>Each schema has its own type IRIs, which are derived from the ones used in the triplestore. For details of these different IRI formats, see Knora IRIs.</p>"},{"location":"DSP-API/05-internals/design/api-v2/overview/#implementation","title":"Implementation","text":""},{"location":"DSP-API/05-internals/design/api-v2/overview/#json-ld-parsing-and-formatting","title":"JSON-LD Parsing and Formatting","text":"<p>Each API response is represented by a class that extends <code>KnoraResponseV2</code>, which has a method <code>toJsonLDDocument</code> that specifies the target schema. It is currently up to each route to determine what the appropriate response schema should be. Some routes will support only one response schema. Others will allow the client to choose, and there will be one or more standard ways for the client to specify the desired response schema.</p> <p>A route calls <code>RouteUtilV2.runRdfRoute</code>, passing a request message and a response schema. When <code>RouteUtilV2</code> gets the response message from the responder, it calls <code>toJsonLDDocument</code> on it, specifying that schema. The response message returns a <code>JsonLDDocument</code>, which is a simple data structure that is then converted to Java objects and passed to the JSON-LD Java library for formatting. In general, <code>toJsonLDDocument</code> is implemented in two stages: first the object converts itself to the target schema, and then the resulting object is converted to a <code>JsonLDDocument</code>.</p> <p>A route that receives JSON-LD requests should use <code>JsonLDUtil.parseJsonLD</code> to convert each request to a <code>JsonLDDocument</code>.</p>"},{"location":"DSP-API/05-internals/design/api-v2/overview/#generation-of-other-rdf-formats","title":"Generation of Other RDF Formats","text":"<p><code>RouteUtilV2.runRdfRoute</code> implements HTTP content negotiation, and converts JSON-LD responses into Turtle or RDF/XML as appropriate.</p>"},{"location":"DSP-API/05-internals/design/api-v2/overview/#operation-wrappers","title":"Operation Wrappers","text":"<p>Whenever possible, the same data structures are used for input and output. Often more data is available in output than in input. For example, when a value is read from the triplestore, its IRI is available, but when it is being created, it does not yet have an IRI. In such cases, there is a class like <code>ValueContentV2</code>, which represents the data that is used both for input and for output. When a value is read, a <code>ValueContentV2</code> is wrapped in a <code>ReadValueV2</code>, which additionally contains the value's IRI. When a value is created, it is wrapped in a <code>CreateValueV2</code>, which has the resource IRI and the property IRI, but not the value IRI.</p> <p>A <code>Read*</code> wrapper can be wrapped in another <code>Read*</code> wrapper; for example, a <code>ReadResourceV2</code> contains <code>ReadValueV2</code> objects.</p> <p>Each <code>*Content*</code> class should extend <code>KnoraContentV2</code> and thus have a <code>toOntologySchema</code> method or converting itself between internal and external schemas, in either direction.</p> <p>Each <code>Read*</code> wrapper class should have a method for converting itself to JSON-LD in a particular external schema. If the <code>Read*</code> wrapper is a <code>KnoraResponseV2</code>, this method is <code>toJsonLDDocument</code>.</p>"},{"location":"DSP-API/05-internals/design/api-v2/overview/#smart-iris","title":"Smart IRIs","text":""},{"location":"DSP-API/05-internals/design/api-v2/overview/#usage","title":"Usage","text":"<p>The <code>SmartIri</code> trait can be used to parse and validate IRIs, and in particular for converting Knora type IRIs between internal and external schemas. It validates each IRI it parses. To use it, import the following:</p> <pre><code>import org.knora.webapi.messages.{SmartIri, StringFormatter}\nimport org.knora.webapi.messages.IriConversions.*\n</code></pre> <p>Ensure that an implicit instance of <code>StringFormatter</code> is in scope:</p> <pre><code>implicit val stringFormatter: StringFormatter = StringFormatter.getGeneralInstance\n</code></pre> <p>Then, if <code>iriStr</code> is a string representing an IRI, you can can convert it to a <code>SmartIri</code> like this:</p> <pre><code>val iri: SmartIri = iriStr.toSmartIri\n</code></pre> <p>If the IRI came from a request, use this method to throw a specific exception if the IRI is invalid:</p> <pre><code>val iri: SmartIri = iriStr.toSmartIriWithErr(\n    () =&gt; throw BadRequestException(s\"Invalid IRI: $iriStr\")\n)\n</code></pre> <p>You can then use methods such as <code>SmartIri.isKnoraApiV2EntityIri</code> and <code>SmartIri.getProjectCode</code> to obtain information about the IRI. To convert it to another schema, call <code>SmartIri.toOntologySchema</code>. Converting a non-Knora IRI returns the same IRI.</p> <p>If the IRI represents a Knora internal value class such as <code>knora-base:TextValue</code>, converting it to the <code>ApiV2Simple</code> schema will return the corresponding simplified type, such as <code>xsd:string</code>. But this conversion is not performed in the other direction (external to internal), since this would require knowledge of the context in which the IRI is being used.</p> <p>The performance penalty for using a <code>SmartIri</code> instead of a string is very small. Instances are automatically cached once they are constructed. Parsing and caching a <code>SmartIri</code> instance takes about 10-20 \u00b5s, and retrieving a cached <code>SmartIri</code> takes about 1 \u00b5s.</p> <p>There is no advantage to using <code>SmartIri</code> for data IRIs, since they are not schema-specific (and are not cached). If a data IRI has been received from a client request, it is better just to validate it using <code>StringFormatter.validateAndEscapeIri</code>.</p>"},{"location":"DSP-API/05-internals/design/api-v2/overview/#implementation_1","title":"Implementation","text":"<p>The smart IRI implementation, <code>SmartIriImpl</code>, is nested in the <code>StringFormatter</code> class, because it uses Knora's hostname, which isn't available until the Akka ActorSystem has started. However, this means that the type of a <code>SmartIriImpl</code> instance is dependent on the instance of <code>StringFormatter</code> that constructed it. Therefore, instances of <code>SmartIriImpl</code> created by different instances of <code>StringFormatter</code> can't be compared directly.</p> <p>There are in fact two instances of <code>StringFormatter</code>:</p> <ul> <li>one returned by <code>StringFormatter.getGeneralInstance</code> which is   available after Akka has started and has the API server's hostname   (and can therefore provide <code>SmartIri</code> instances capable of parsing   IRIs containing that hostname). This instance is used throughout the   DSP-API server.</li> <li>one returned by <code>StringFormatter.getInstanceForConstantOntologies</code>,   which is available before Akka has started, and is used only by the   hard-coded constant <code>knora-api</code> ontologies.</li> </ul> <p>This is the reason for the existence of the <code>SmartIri</code> trait, which is a top-level definition and has its own <code>equals</code> and <code>hashCode</code> methods. Instances of <code>SmartIri</code> can thus be compared (e.g. to use them as unique keys in collections), regardless of which instance of <code>StringFormatter</code> created them.</p>"},{"location":"DSP-API/05-internals/design/api-v2/query-design/","title":"SPARQL Query Design","text":""},{"location":"DSP-API/05-internals/design/api-v2/query-design/#sparql-query-design","title":"SPARQL Query Design","text":""},{"location":"DSP-API/05-internals/design/api-v2/query-design/#inference","title":"Inference","text":"<p>DSP-API does not require the triplestore to perform inference,  as different triplestores implement inference quite differently,  so that taking advantage of inference would require triplestore specific code, which is not well maintainable.  Instead, the API simulates inference for each Gravsearch query, so that the expected results are returned.</p> <p>Gravsearch queries currently need to do the following:</p> <ul> <li>Given a base property, find triples using a subproperty as predicate, and   return the subproperty used in each case.</li> <li>Given a base class, find triples using an instance of subclass as subject or   object, and return the subclass used in each case.</li> </ul> <p>Without inference, this can be done using property path syntax.</p> <pre><code>CONSTRUCT {\n  ?resource a ?resourceClass .\n  ?resource ?resourceValueProperty ?valueObject.\nWHERE {\n  ?resource a ?resourceClass .\n  ?resourceType rdfs:subClassOf* knora-base:Resource .\n  ?resource ?resourceValueProperty ?valueObject .\n  ?resourceValueProperty rdfs:subPropertyOf* knora-base:hasValue .\n</code></pre> <p>This query:</p> <ul> <li> <p>Checks that the queried resource belongs to a subclass of <code>knora-base:Resource</code>.</p> </li> <li> <p>Returns the class that the resource explicitly belongs to.</p> </li> <li> <p>Finds the Knora values attached to the resource, and returns each value along with   the property that explicitly attaches it to the resource.</p> </li> </ul> <p>However, such a query is very inefficient.  Instead, the API does inference on the query, so that the relevant information can be found in a timely manner.</p> <p>For this, the query is analyzed to check which project ontologies are relevant to the query.  If an ontology is not relevant to a query,  then all class and property definitions of this ontology are disregarded for inference.</p> <p>Then, each statement that requires inference (i.e. that could be phrased with property path syntax, as described above)  is cross-referenced with the relevant ontologies,  to see which property/class definitions would fit the statement according to the rules of RDF inference.  And each of those definitions is added to the query as a separate <code>UNION</code> statement.</p> <p>E.g.: Given the resource class <code>B</code> is a subclass of <code>A</code> and the property <code>hasY</code> is a subproperty of <code>hasX</code>,  then the following query</p> <pre><code>SELECT {\n  ?res ?prop .\n} WHERE {\n  ?res a &lt;A&gt; .\n  ?res &lt;hasX&gt; ?prop .\n}\n</code></pre> <p>can be rewritten as</p> <pre><code>SELECT {\n  ?res ?prop .\n} WHERE {\n  {?res a &lt;A&gt;} UNION {?res a &lt;B&gt;} .\n  {?res &lt;hasX&gt; ?prop} UNION {?res &lt;hasY&gt; ?prop} .\n}\n</code></pre>"},{"location":"DSP-API/05-internals/design/api-v2/query-design/#querying-past-value-versions","title":"Querying Past Value Versions","text":"<p>Value versions are a linked list, starting with the current version. Each value points to the previous version via <code>knora-base:previousValue</code>. The resource points only to the current version.</p> <p>Past value versions are queried in <code>getResourcePropertiesAndValues.scala.txt</code>, which can take a timestamp argument. Given the current value version, we must find the most recent past version that existed at the target date.</p> <p>First, we get the set of previous values that were created on or before the target date:</p> <pre><code>?currentValue knora-base:previousValue* ?valueObject .\n?valueObject knora-base:valueCreationDate ?valueObjectCreationDate .\nFILTER(?valueObjectCreationDate &lt;= \"@versionDate\"^^xsd:dateTime)\n</code></pre> <p>The resulting versions are now possible values of <code>?valueObject</code>. Next, out of this set of versions, we exclude all versions except for the most recent one. We do this by checking, for each <code>?valueObject</code>, whether there is another version, <code>?otherValueObject</code>, that is more recent and was also created before the target date. If such a version exists, we exclude the one we are looking at.</p> <pre><code>FILTER NOT EXISTS {\n    ?currentValue knora-base:previousValue* ?otherValueObject .\n    ?otherValueObject knora-base:valueCreationDate ?otherValueObjectCreationDate .\n\n    FILTER(\n        (?otherValueObjectCreationDate &lt;= \"@versionDate\"^^xsd:dateTime) &amp;&amp;\n        (?otherValueObjectCreationDate &gt; ?valueObjectCreationDate)\n    )\n}\n</code></pre> <p>This excludes all past versions except the one we are interested in.</p>"},{"location":"DSP-API/05-internals/design/api-v2/sipi/","title":"DSP-API and Sipi","text":""},{"location":"DSP-API/05-internals/design/api-v2/sipi/#dsp-api-and-sipi","title":"DSP-API and Sipi","text":""},{"location":"DSP-API/05-internals/design/api-v2/sipi/#configuration","title":"Configuration","text":"<p>The DSP-API specific configuration and scripts for Sipi are in the <code>sipi</code> subdirectory of the DSP-API source tree. See the <code>README.md</code> for instructions on how to start Sipi with DSP-API.</p>"},{"location":"DSP-API/05-internals/design/api-v2/sipi/#lua-scripts","title":"Lua Scripts","text":"<p>DSP-API v2 uses custom Lua scripts to control Sipi. These scripts can be found in <code>sipi/scripts</code> in the DSP-API source tree.</p> <p>Each of these scripts expects a JSON Web Token in the URL parameter <code>token</code>. In all cases, the token must be signed by DSP-API, it must have an expiration date and not have expired, its issuer must equal  the hostname and port of the API, and its audience must include <code>Sipi</code>.  The other contents of the expected tokens are described below.</p>"},{"location":"DSP-API/05-internals/design/api-v2/sipi/#uploadlua","title":"upload.lua","text":"<p>The <code>upload.lua</code> script is available at Sipi's <code>upload</code> route. It processes one or more file uploads submitted to Sipi. It converts uploaded images to JPEG 2000 format, and stores them in Sipi's <code>tmp</code> directory. The usage of this script is described in Upload Files to Sipi.</p>"},{"location":"DSP-API/05-internals/design/api-v2/sipi/#upload_without_processinglua","title":"upload_without_processing.lua","text":"<p>The <code>upload_without_processing.lua</code> script is available at Sipi's <code>upload_without_processing</code> route.  It receives files submitted to Sipi but does not process them.  Instead, it stores them as is in Sipi's <code>tmp</code> directory.</p>"},{"location":"DSP-API/05-internals/design/api-v2/sipi/#storelua","title":"store.lua","text":"<p>The <code>store.lua</code> script is available at Sipi's <code>store</code> route. It moves a file from temporary to permanent storage. It expects an HTTP <code>POST</code> request containing <code>application/x-www-form-urlencoded</code> data with the parameters <code>prefix</code> (the project shortcode) and <code>filename</code> (the internal Sipi-generated filename of the file to be moved).</p> <p>The JWT sent to this script must contain the key <code>knora-data</code>, whose value must be a JSON object containing:</p> <ul> <li><code>permission</code>: must be <code>StoreFile</code></li> <li><code>prefix</code>: the project shortcode submitted in the form data</li> <li><code>filename</code>: the filename submitted in the form data</li> </ul>"},{"location":"DSP-API/05-internals/design/api-v2/sipi/#delete_temp_filelua","title":"delete_temp_file.lua","text":"<p>The <code>delete_temp_file.lua</code> script is available at Sipi's <code>delete_temp_file</code> route. It is used only if DSP-API rejects a file value update request. It expects an HTTP <code>DELETE</code> request, with a filename as the last component of the URL.</p> <p>The JWT sent to this script must contain the key <code>knora-data</code>, whose value must be a JSON object containing:</p> <ul> <li><code>permission</code>: must be <code>DeleteTempFile</code></li> <li><code>filename</code>: must be the same as the filename submitted in the URL</li> </ul>"},{"location":"DSP-API/05-internals/design/api-v2/sipi/#clean_temp_dirlua","title":"clean_temp_dir.lua","text":"<p>The <code>clean_temp_dir.lua</code> script is available at Sipi's <code>clean_temp_dir</code> route. When called, it deletes old temporary files from <code>tmp</code> and (recursively) from any subdirectories.  The maximum allowed age of temporary files can be set in Sipi's configuration file,  using the parameter <code>max_temp_file_age</code>, which takes a value in seconds.</p> <p>The <code>clean_temp_dir</code> route requires basic authentication.</p>"},{"location":"DSP-API/05-internals/design/api-v2/sipi/#sipiconnector","title":"SipiConnector","text":"<p>In DSP-API, the <code>org.knora.webapi.iiif.SipiConnector</code> handles all communication with Sipi. It blocks while processing each request, to ensure that the number of concurrent requests to Sipi is not greater than <code>akka.actor.deployment./storeManager/iiifManager/sipiConnector.nr-of-instances</code>. If it encounters an error, it returns <code>SipiException</code>.</p>"},{"location":"DSP-API/05-internals/design/api-v2/sipi/#the-image-file-upload-workflow","title":"The Image File Upload Workflow","text":"<ol> <li>The client uploads an image file to the <code>upload</code> route, which runs   <code>upload.lua</code>. The image is converted to JPEG 2000 and stored in Sipi's <code>tmp</code>   directory. In the response, the client receives the JPEG 2000's unique,   randomly generated filename.</li> <li>The client submits a JSON-LD request to a DSP-API route (<code>/v2/values</code> or <code>/v2/resources</code>)    to create or change a file value. The request includes Sipi's internal filename.</li> <li>During parsing of this JSON-LD request, a <code>StillImageFileValueContentV2</code>    is constructed to represent the file value. During the construction of this    object, a <code>GetFileMetadataRequestV2</code> is sent to <code>SipiConnector</code>, which    uses Sipi's built-in <code>knora.json</code> route to get the rest of the file's    metadata.</li> <li>A responder (<code>ResourcesResponderV2</code> or <code>ValuesResponderV2</code>) validates    the request and updates the triplestore. (If it is <code>ResourcesResponderV2</code>,    it asks <code>ValuesResponderV2</code> to generate SPARQL for the values.)</li> <li>The responder that did the update calls <code>ValueUtilV2.doSipiPostUpdate</code>.    If the triplestore update was successful, this method sends    <code>MoveTemporaryFileToPermanentStorageRequestV2</code> to <code>SipiConnector</code>, which    makes a request to Sipi's <code>store</code> route. Otherwise, the same method sends    <code>DeleteTemporaryFileRequestV2</code> to <code>SipiConnector</code>, which makes a request    to Sipi's <code>delete_temp_file</code> route.</li> </ol> <p>If the request to DSP-API cannot be parsed, the temporary file is not deleted immediately, but it will be deleted during the processing of a subsequent request by Sipi's <code>upload</code> route.</p> <p>If Sipi's <code>store</code> route fails, DSP-API returns the <code>SipiException</code> to the client. In this case, manual intervention may be necessary to restore consistency between DSP-API and Sipi.</p> <p>If Sipi's <code>delete_temp_file</code> route fails, the error is not returned to the client, because there is already a DSP-API error that needs to be returned to the client. In this case, the Sipi error is simply logged.</p>"},{"location":"DSP-API/05-internals/design/api-v2/smart-iris/","title":"Smart IRIs","text":""},{"location":"DSP-API/05-internals/design/api-v2/smart-iris/#smart-iris","title":"Smart IRIs","text":""},{"location":"DSP-API/05-internals/design/api-v2/smart-iris/#usage","title":"Usage","text":"<p>The <code>SmartIri</code> trait can be used to parse and validate IRIs, and in particular for converting Knora type IRIs between internal and external schemas. It validates each IRI it parses. To use it, import the following:</p> <pre><code>import org.knora.webapi.messages.SmartIri\nimport org.knora.webapi.messages.IriConversions._\n</code></pre> <p>Ensure that an implicit instance of <code>StringFormatter</code> is in scope:</p> <pre><code>import org.knora.webapi.messages.StringFormatter\nimplicit val stringFormatter: StringFormatter = StringFormatter.getGeneralInstance\n</code></pre> <p>Then, if you have a string representing an IRI, you can can convert it to a <code>SmartIri</code> like this:</p> <pre><code>val propertyIri: SmartIri = \"http://0.0.0.0:3333/ontology/0001/anything/v2#hasInteger\".toSmartIri\n````\n\nIf the IRI came from a request, use this method to throw a specific\nexception if the IRI is invalid:\n\n```scala\nval propertyIri: SmartIri = propertyIriStr.toSmartIriWithErr(throw BadRequestException(s\"Invalid property IRI: &lt;$propertyIriStr&gt;\"))\n</code></pre> <p>You can then use methods such as <code>SmartIri.isKnoraApiV2EntityIri</code> and <code>SmartIri.getProjectCode</code> to obtain information about the IRI. To convert it to another schema, call <code>SmartIri.toOntologySchema</code>. Converting a non-Knora IRI returns the same IRI.</p> <p>If the IRI represents a Knora internal value class such as <code>knora-base:TextValue</code>, converting it to the <code>ApiV2Simple</code> schema will return the corresponding simplified type, such as <code>xsd:string</code>. But this conversion is not performed in the other direction (external to internal), since this would require knowledge of the context in which the IRI is being used.</p> <p>The performance penalty for using a <code>SmartIri</code> instead of a string is very small. Instances are automatically cached once they are constructed.</p> <p>There is no advantage to using <code>SmartIri</code> for data IRIs, since they are not schema-specific (and are not cached). If a data IRI has been received from a client request, it is better just to validate it using <code>StringFormatter.validateAndEscapeIri</code>, and represent it as an <code>org.knora.webapi.IRI</code> (an alias for <code>String</code>).</p>"},{"location":"DSP-API/05-internals/design/api-v2/smart-iris/#implementation","title":"Implementation","text":"<p>The smart IRI implementation, <code>SmartIriImpl</code>, is nested in the <code>StringFormatter</code> class, because it uses Knora's hostname, which isn't available until the Akka <code>ActorSystem</code> has started. However, this means that the Scala type of a <code>SmartIriImpl</code> instance is dependent on the instance of <code>StringFormatter</code> that constructed it. Therefore, instances of <code>SmartIriImpl</code> created by different instances of <code>StringFormatter</code> can't be compared directly.</p> <p>There are in fact two instances of <code>StringFormatter</code>:</p> <ul> <li>one returned by <code>StringFormatter.getGeneralInstance</code>, which is   available after Akka has started and has the API server's hostname   (and can therefore provide <code>SmartIri</code> instances capable of parsing   IRIs containing that hostname). This instance is used throughout the   DSP-API server.</li> <li>one returned by <code>StringFormatter.getInstanceForConstantOntologies</code>,   which is available before Akka has started, and is used only by the   hard-coded constant <code>knora-api</code> ontologies (see   Generation of Ontologies in External Schemas).</li> </ul> <p>This is the reason for the existence of the <code>SmartIri</code> trait, which is a top-level definition and has its own <code>equals</code> and <code>hashCode</code> methods. Instances of <code>SmartIri</code> can thus be compared (e.g. to use them as unique keys in collections), regardless of which instance of <code>StringFormatter</code> created them.</p>"},{"location":"DSP-API/05-internals/design/api-v2/standoff/","title":"Standoff Markup","text":""},{"location":"DSP-API/05-internals/design/api-v2/standoff/#standoff-markup","title":"Standoff Markup","text":""},{"location":"DSP-API/05-internals/design/api-v2/standoff/#requirements","title":"Requirements","text":"<p>In Knora, text with markup is stored using standoff markup, i.e. markup that is stored separately from the content it applies to.</p> <p>Knora's standoff design is based on these requirements:</p> <ul> <li> <p>Overlapping markup should be supported.</p> </li> <li> <p>Markup should be stored as RDF, so it can be searched and analysed using the same tools that are used   with other data managed by Knora.</p> </li> <li> <p>In particular, Gravsearch queries should be able   to specify search criteria that refer to the markup tags attached to a text, together with   any other search criteria relating to the resource that contains the text.</p> </li> <li> <p>It should be possible to import any XML document into Knora, store the markup as standoff, and   at any time export the document as an equivalent XML document.</p> </li> </ul>"},{"location":"DSP-API/05-internals/design/api-v2/standoff/#rdf-design","title":"RDF Design","text":"<p>See Text with Standoff Markup.</p>"},{"location":"DSP-API/05-internals/design/api-v2/standoff/#querying-standoff","title":"Querying Standoff","text":"<p>Since the number of standoff tags that can be attached to a text value is unlimited, standoff is queried in pages of a limited size, to avoid requesting huge SPARQL query results from the triplestore.</p> <p>When <code>ResourcesResponderV2</code> or <code>SearchResponderV2</code> need to return a text value with all its markup, they first query the text value with at most one page of standoff. If the text value has more than one page of standoff, <code>ConstructResponseUtilV2.makeTextValueContentV2</code> then sends a <code>GetRemainingStandoffFromTextValueRequestV2</code> message to <code>StandoffResponderV2</code>, which queries the rest of the standoff in the text value, one page at a time. The resulting standoff is concatenated together and returned.</p> <p>To optimise query performance:</p> <ul> <li> <p>Each text value with standoff has the predicate <code>knora-base:valueHasMaxStandoffStartIndex</code>, so that when Knora   queries a page of standoff, it knows whether it has reached the last page.</p> </li> <li> <p>The last path component of the IRI of a standoff tag is the integer object of its   <code>knora-base:standoffTagHasStartIndex</code> predicate. When querying standoff, it is necessary to convert   the IRI objects of <code>knora-base:standoffTagHasStartParent</code> and <code>knora-base:standoffTagHasEndParent</code> to   integer indexes (the start indexes of those tags). Including each tag's start index in its IRI makes it   unnecessary to query the parent tags to determine their start indexes.</p> </li> </ul>"},{"location":"DSP-API/05-internals/design/api-v2/standoff/#conversion-between-standoff-and-xml","title":"Conversion Between Standoff and XML","text":"<p><code>XMLToStandoffUtil</code> does the low-level conversion of documents between standoff and XML, using a simple data structure to represent standoff. This data structure knows nothing about RDF, and each standoff tag contains its XML element name and namespace and those of its attributes.</p> <p>In DSP-API, it is possible to define mappings to control how standoff/RDF is converted to XML and vice versa. Different mappings can be used to convert the same standoff/RDF to different sorts of XML documents. <code>StandoffTagUtilV2</code> converts between standoff/RDF and XML using mappings, delegating the lower-level work to <code>XMLToStandoffUtil</code>.</p>"},{"location":"DSP-API/05-internals/design/domain/class-and-property-hierarchies/","title":"Class and Property Hierarchies","text":""},{"location":"DSP-API/05-internals/design/domain/class-and-property-hierarchies/#class-hierarchy","title":"Class Hierarchy","text":"<p>While <code>knora-admin</code> and <code>salsah-gui</code> have relatively flat class hierarchies,  in <code>knora-base</code> there are very complicated - yet highly relevant - inheritance structures.  The following class diagrams try to model these structures.  For the sake of comprehensibility, it was necessary to split the ontology into multiple diagrams, even though this obliterates the evident connections between those diagrams.</p> <p>Legend</p> <p>dotted lines: the boxes are copies from another diagram.</p>"},{"location":"DSP-API/05-internals/design/domain/class-and-property-hierarchies/#resources","title":"Resources","text":"<pre><code>classDiagram\n  %% Classes\n  class Resource {\n    string label\n    boolean isDeleted\n    Resource hasStandoffLinkTo\n    LinkValue hasStandoffLinkToValue\n    User attachedToUser\n    Project attachedToProject\n    string hasPermissions\n    date creationDate\n    date lastModificationDate\n    date deleteDate\n    User deletedBy\n    string deleteComment\n  }\n  class Annotation {\n    TextValue hasComment\n    Resource isAnnotationOf\n    LinkValue isAnnotationOfValue\n  }\n  class LinkObj{\n    TextValue hasComment\n    Resource hasLinkTo\n    LinkValue hasLinkToValue\n  }\n  class Representation {\n    FileValue hasFileValue\n  }\n  class ExternalResource {\n    ExternalResValue hasExternalResValue\n  }\n  class Region {\n    ColorValue hasColor\n    Representation isRegionOf\n    GeomValue hasGemoetry\n    LinkValue isRegionOfValue\n    TextValue hasComment\n  }\n  class ArchiveRepresentation {\n    ArchiveFileValue hasArchiveFileValue\n  }\n  class AudioRepresentation {\n    AudioFileValue hasAudioFileValue\n  }\n  class DDDRepresentation {\n    DDDFileValue hasDDDFileValue\n  }\n  class DocumentRepresentation {\n    DocumentFileValue hasDocumentFileValue\n  }\n  class MovingImageRepresentation {\n    MovingImageFileValue hasMovingImageFileValue\n  }\n  class StillImageRepresentation {\n    StillImageFileValue hasStillImageFileValue\n  }\n  class TextRepresentation {\n    TextFileValue hasTextFileValue\n  }\n\n  %% Relationships\n  Resource &lt;|-- Annotation\n  Resource &lt;|-- Representation\n  Resource &lt;|-- LinkObj\n  Resource &lt;|-- ExternalResource\n  Resource &lt;|-- DeletedResource\n  Resource &lt;|-- Region\n  Representation &lt;|-- ArchiveRepresentation\n  Representation &lt;|-- AudioRepresentation\n  Representation &lt;|-- DDDRepresentation\n  Representation &lt;|-- DocumentRepresentation\n  Representation &lt;|-- MovingImageRepresentation\n  Representation &lt;|-- StillImageRepresentation\n  Representation &lt;|-- TextRepresentation\n  TextRepresentation &lt;|-- XSLTransformation</code></pre>"},{"location":"DSP-API/05-internals/design/domain/class-and-property-hierarchies/#values","title":"Values","text":"<pre><code>classDiagram\n  %% Classes\n  class Value {\n    date valueCreationDate\n    User attachedToUser\n    string hasPermissions\n    integer valueHasOrder\n    string valueHasComment\n    boolean isDeleted\n    date deleteDate\n    User deletedBy\n    string deleteComment\n    Value previousValue\n    string valueHasString\n    string valueHasUUID\n  }\n  class ColorBase {\n    string valueHasColor\n  }\n  class DateBase {\n    string valueHasCalendar\n    string valueHasEndPrecision\n    integer valueHasEndJDN\n    string valueHasStartPrecision\n    integer valueHasStartJDN\n  }\n  class IntBase {\n    integer valueHasInteger\n  }\n  class BooleanBase {\n    boolean valueHasBoolean\n  }\n  class DecimalBase {\n    decimal valueHasDecimal\n  }\n  class UriBase {\n    URI valueHasUri\n  }\n  class IntervalBase {\n    decimal valueHasIntervalStart\n    decimal valueHasIntervalEnd\n  }\n  class TimeBase {\n    date valueHasTimeStamp\n  }\n  class ListValue {\n    ListNode valueHasListNode\n  }\n  class TextValue {\n    StandoffTag valueHasStandoff\n    integer valueHasMaxStandoffStartIndex\n    string valueHasLanguage\n    XSLToStandoffMApping valueHasMapping\n  }\n  class LinkValue {\n    integer valueHasRefCount\n  }\n  class GeomValue {\n    string valueHasGeometry\n  }\n  class GeonameValue {\n    string valueHasGeonameCode\n  }\n  class ExternalResValue {\n    string extResId\n    string extResProvider\n    string extResAccessInfo\n  }\n  class FileValue {\n    string internalFileName\n    string internalMimeType\n    string originalFileName\n    string originalMimeType\n  }\n  class ArchiveFileValue {\n\n  }\n  class AudioFileValue {\n    decimal duration\n  }\n  class DDDFileValue\n  class DocumentFileValue {\n    integer pageCount\n    integer dimX\n    integer dimY\n  }\n  class MovingImageFileValue\n  class StillImageFileValue {\n    integer dimX\n    integer dimY\n  }\n  class TextFileValue\n\n\n  %% Relationships\n  ValueBase &lt;|-- Value\n  ValueBase &lt;|-- ColorBase\n  ValueBase &lt;|-- DateBase\n  ValueBase &lt;|-- IntBase\n  ValueBase &lt;|-- BooleanBase\n  ValueBase &lt;|-- DecimalBase\n  ValueBase &lt;|-- UriBase\n  ValueBase &lt;|-- IntervalBase\n  ValueBase &lt;|-- TimeBase\n  Value &lt;|-- ListValue\n  Value &lt;|-- TextValue\n  Value &lt;|-- LinkValue\n  Value &lt;|-- GeomValue\n  Value &lt;|-- GeonameValue\n  Value &lt;|-- ExternalResValue\n  Value &lt;|-- FileValue\n  Value &lt;|-- DeletedValue\n  Value &lt;|-- ColorValue\n  ColorBase &lt;|-- ColorValue\n  Value &lt;|-- DateValue\n  DateBase &lt;|-- DateValue\n  Value &lt;|-- IntValue\n  IntBase &lt;|-- IntValue\n  Value &lt;|-- BooleanValue\n  BooleanBase &lt;|-- BooleanValue\n  Value &lt;|-- DecimalValue\n  DecimalBase &lt;|-- DecimalValue\n  Value &lt;|-- UriValue\n  UriBase &lt;|-- UriValue\n  Value &lt;|-- IntervalValue\n  IntervalBase &lt;|-- IntervalValue\n  Value &lt;|-- TimeValue\n  TimeBase &lt;|-- TimeValue\n  FileValue &lt;|-- ArchiveFileValue\n  FileValue &lt;|-- AudioFileValue\n  FileValue &lt;|-- DDDFileValue\n  FileValue &lt;|-- DocumentFileValue\n  FileValue &lt;|-- MovingImageFileValue\n  FileValue &lt;|-- StillImageFileValue\n  FileValue &lt;|-- TextFileValue\n  ValueBase .. StandoffInternalReferenceTag\n  ColorBase .. StandoffColorTag\n  DateBase .. StandoffDateTag\n  IntBase .. StandoffIntegerTag\n  BooleanBase .. StandoffBooleanTag\n  DecimalBase .. StandoffDecimalTag\n  UriBase .. StandoffUriTag\n  IntervalBase .. StandoffIntervalTag\n  TimeBase .. StandoffTimeTag</code></pre>"},{"location":"DSP-API/05-internals/design/domain/class-and-property-hierarchies/#standoff-in-knora-base","title":"Standoff in knora-base","text":"<pre><code>classDiagram\n  %% Classes\n  class StandoffTag {\n    integer standoffHasStartTag\n    integer standoffHasEndTag\n    string standoffHasUUID\n    string standoffHasOriginalXMLID\n    integer standoffHasStartIndex\n    integer standoffHasEndIndex\n    StandoffTag standoffTagHasStartParent\n    StandoffTag standoffTagHasEndParent\n    ??? standoffParentClassConstraint\n  }\n  class StandoffInternalReferenceTag {\n    StandoffTag standoffHasInternalReference\n  }\n  class StandoffLinkTag {\n    Resource standoffHasLink\n  }\n\n\n  %% Relationships\n  StandoffTag &lt;|-- StandoffDataTypeTag\n  StandoffTag &lt;|-- StandoffLinkTag\n  StandoffDataTypeTag &lt;|-- StandoffColorTag\n  StandoffDataTypeTag &lt;|-- StandoffDateTag\n  StandoffDataTypeTag &lt;|-- StandoffIntegerTag\n  StandoffDataTypeTag &lt;|-- StandoffBooleanTag\n  StandoffDataTypeTag &lt;|-- StandoffDecimalTag\n  StandoffDataTypeTag &lt;|-- StandoffUriTag\n  StandoffDataTypeTag &lt;|-- StandoffIntervalTag\n  StandoffDataTypeTag &lt;|-- StandoffTimeTag\n  ValueBase .. ColorBase\n  ValueBase .. DateBase\n  ValueBase .. IntBase\n  ValueBase .. BooleanBase\n  ValueBase .. DecimalBase\n  ValueBase .. UriBase\n  ValueBase .. IntervalBase\n  ValueBase .. TimeBase\n  ValueBase .. StandoffInternalReferenceTag\n  ColorBase .. StandoffColorTag\n  DateBase .. StandoffDateTag\n  IntBase .. StandoffIntegerTag\n  BooleanBase .. StandoffBooleanTag\n  DecimalBase .. StandoffDecimalTag\n  UriBase .. StandoffUriTag\n  IntervalBase .. StandoffIntervalTag\n  TimeBase .. StandoffTimeTag</code></pre>"},{"location":"DSP-API/05-internals/design/domain/class-and-property-hierarchies/#standoff-ontology","title":"Standoff Ontology","text":"<pre><code>flowchart BT\n  StandoffRootTag[\"StandoffRootTag \\n ----- \\n string standoffRootTagHasDocumentType\"]\n  StandoffHyperlinkTag[\"StandoffHyperlinkTag \\n ----- \\n string standoffHyperlinkTagHasTarget\"]\n  StandoffVisualTag -..-&gt; StandoffTag \n  StandoffRootTag -.-&gt; StandoffTag \n  StandoffHyperlinkTag -.-&gt; StandoffTag \n  StandoffStructuralTag -....-&gt; StandoffTag \n\n  StandoffItalicTag --&gt; StandoffVisualTag \n  StandoffBoldTag --&gt; StandoffVisualTag \n  StandoffCiteTag --&gt; StandoffVisualTag \n  StandoffUnderlineTag --&gt; StandoffVisualTag \n  StandoffStrikethroughTag --&gt; StandoffVisualTag \n  StandoffSuperscriptTag --&gt; StandoffVisualTag \n  StandoffSubscriptTag --&gt; StandoffVisualTag \n  StandoffLineTag --&gt; StandoffVisualTag \n  StandoffPreTag --&gt; StandoffVisualTag \n  StandoffBlockquoteTag --&gt; StandoffStructuralTag \n  StandoffCodeTag --&gt; StandoffStructuralTag \n  StandoffParagraphTag --&gt; StandoffStructuralTag \n  StandoffHeader_1_to_6_Tag --&gt; StandoffStructuralTag \n  StandoffOrderedListTag --&gt; StandoffStructuralTag \n  StandoffUnorderedListTag --&gt; StandoffStructuralTag \n  StandoffListElementTag --&gt; StandoffStructuralTag \n  StandoffTableBodyTag --&gt; StandoffStructuralTag \n  StandoffTableTag --&gt; StandoffStructuralTag \n  StandoffTableRowTag --&gt; StandoffStructuralTag \n  StandoffTableCellTag --&gt; StandoffStructuralTag \n  StandoffBrTag --&gt; StandoffStructuralTag </code></pre>"},{"location":"DSP-API/05-internals/design/domain/class-and-property-hierarchies/#property-hierarchy","title":"Property Hierarchy","text":""},{"location":"DSP-API/05-internals/design/domain/class-and-property-hierarchies/#properties-and-values","title":"Properties and Values","text":"<pre><code>flowchart BT\n  hasValue ---&gt; resourceProperty\n  hasLinkTo --&gt; resourceProperty\n\n  hasFileValue ----&gt; hasValue\n  hasColor ---&gt; hasValue\n  hasGeometry ---&gt; hasValue\n  hasComment ---&gt; hasValue\n  hasSequenceBounds ---&gt; hasValue \n  seqnum ---&gt; hasValue\n  hasExtResValue ---&gt; hasValue\n  hasLinkToValue ----&gt; hasValue \n\n  hasArchiveFileValue ---&gt; hasFileValue\n  hasDocumentFileValue ---&gt; hasFileValue\n  hasTextFileValue ---&gt; hasFileValue\n  hasStillImageFileValue ---&gt; hasFileValue\n  hasMovingImageFileValue ---&gt; hasFileValue\n  hasAudioFileValue ---&gt; hasFileValue\n  hasDDDFileValue ---&gt; hasFileValue\n\n  isPartOfValue ---&gt; hasLinkToValue\n  hasAnnotationOfValue ---&gt; hasLinkToValue\n  hasRepresentationValue ---&gt; hasLinkToValue\n  hasStandoffLinkToValue ---&gt; hasLinkToValue\n  isSequenceOfValue ---&gt; hasLinkToValue\n  isRegionOfValue ---&gt; hasLinkToValue\n\n  isPartOf ---&gt; hasLinkTo\n  isAnnotationOf ---&gt; hasLinkTo\n  hasRepresentation ---&gt; hasLinkTo\n  hasStandoffLinkTo ---&gt; hasLinkTo\n  isSequenceOf ---&gt; hasLinkTo\n  isRegionOf ---&gt; hasLinkTo</code></pre>"},{"location":"DSP-API/05-internals/design/domain/class-and-property-hierarchies/#resource-metadata","title":"Resource Metadata","text":"<pre><code>flowchart BT\n  creationDate ---&gt; objectCannotBeMarkedAsDeleted\n  deleteDate --&gt; objectCannotBeMarkedAsDeleted\n  isDeleted ---&gt; objectCannotBeMarkedAsDeleted\n  isRootNode ---&gt; objectCannotBeMarkedAsDeleted\n  hasRootNode ---&gt; objectCannotBeMarkedAsDeleted\n  lastModificationDate ---&gt; objectCannotBeMarkedAsDeleted\n  listNodePosition ---&gt; objectCannotBeMarkedAsDeleted\n  listNodeName ---&gt; objectCannotBeMarkedAsDeleted\n  deleteComment ---&gt; objectCannotBeMarkedAsDeleted\n  hasPermissions ---&gt; objectCannotBeMarkedAsDeleted\n  deletedBy --&gt; objectCannotBeMarkedAsDeleted\n  standoffTagHasLink ---&gt; objectCannotBeMarkedAsDeleted \n  hasSubListNode --&gt; objectCannotBeMarkedAsDeleted\n  standoffTagHasEnd ---&gt; objectCannotBeMarkedAsDeleted\n  standoffTagHasInternalReference --&gt; objectCannotBeMarkedAsDeleted \n  valueHas ----&gt; objectCannotBeMarkedAsDeleted\n  standoffTagHasStart --&gt; objectCannotBeMarkedAsDeleted \n  standoffTagHasStartIndex ---&gt; objectCannotBeMarkedAsDeleted\n  standoffTagHasEndIndex --&gt; objectCannotBeMarkedAsDeleted\n  standoffTagHasUuid ---&gt; objectCannotBeMarkedAsDeleted\n  standoffTagHasEndParent --&gt; objectCannotBeMarkedAsDeleted\n  standoffTagHasOriginalXMLID ---&gt; objectCannotBeMarkedAsDeleted\n  targetHasOriginalXMLID --&gt; objectCannotBeMarkedAsDeleted\n  standoffTagHasStartAncestor ----&gt; objectCannotBeMarkedAsDeleted \n  standoffTagHasStartParent --&gt; objectCannotBeMarkedAsDeleted\n  standoffTagHasStartParent --&gt; standoffTagHasStartAncestor\n  hasMappingElement ---&gt; objectCannotBeMarkedAsDeleted\n  mappingHasXMLTagname --&gt; objectCannotBeMarkedAsDeleted\n  mappingHasXMLNamespace ---&gt; objectCannotBeMarkedAsDeleted\n  mappingHasXMLClass --&gt; objectCannotBeMarkedAsDeleted\n  mappingHasStandoffClass ---&gt; objectCannotBeMarkedAsDeleted\n  mappingHasXMLAttribute --&gt; objectCannotBeMarkedAsDeleted\n  mappingHasXMLAttributename ---&gt; objectCannotBeMarkedAsDeleted\n  mappingHasStandoffProperty --&gt; objectCannotBeMarkedAsDeleted\n  mappingHasStandoffDataTypeClass ---&gt; objectCannotBeMarkedAsDeleted\n  mappingElementRequiresSeparator --&gt; objectCannotBeMarkedAsDeleted\n  mappingHasDefaultXSLTransformation ---&gt; objectCannotBeMarkedAsDeleted\n\n  duration --&gt; valueHas\n  pageCount ---&gt; valueHas\n  dimY --&gt; valueHas\n  dimX ---&gt; valueHas\n  valueHasStandoff --&gt; valueHas\n  valueHasMaxStandoffStartIndex ---&gt; valueHas\n  previousValue --&gt; valueHas\n  ValueHasMapping ---&gt; valueHas\n  extResAccessInfo --&gt; valueHas\n  extResId ---&gt; valueHas\n  extResProvider --&gt; valueHas\n  fps ---&gt; valueHas\n  internalFilename --&gt; valueHas\n  internalMimeType ---&gt; valueHas\n  originalFilename ---&gt; valueHas\n  originalMimeType ---&gt; valueHas\n  valueHasComment ---&gt; valueHas\n  valueCreationDate ---&gt; valueHas\n  valueHasUUID ---&gt; valueHas\n  valueHasCalendar ---&gt; valueHas\n  valueHasColor ---&gt; valueHas\n  valueHasEndJDN ---&gt; valueHas\n  valueHasEndPrecision ---&gt; valueHas\n  valueHasDecimal ---&gt; valueHas\n  valueHasGeometry ---&gt; valueHas\n  valueHasGeonameCode ---&gt; valueHas\n  valueHasInteger ---&gt; valueHas\n  valueHasBoolean ---&gt; valueHas\n  valueHasUri ---&gt; valueHas\n  valueHasIntervalEnd ---&gt; valueHas\n  valueHasIntervalStart ---&gt; valueHas\n  valueHasTimeStamp ---&gt; valueHas\n  valueHasListNode ---&gt; valueHas\n  valueHasOrder ---&gt; valueHas\n  valueHasRefCount ---&gt; valueHas\n  valueHasStartJDN ---&gt; valueHas\n  valueHasStartPrecision ---&gt; valueHas\n  valueHasString ---&gt; valueHas\n\n  valueHasLanguage</code></pre>"},{"location":"DSP-API/05-internals/design/domain/class-and-property-hierarchies/#property-triple-structure","title":"Property Triple Structure","text":""},{"location":"DSP-API/05-internals/design/domain/class-and-property-hierarchies/#text-related-triples","title":"Text Related Triples","text":"<pre><code>flowchart LR\n  %% Classes\n  MappingComponent(MappingComponent)\n  MappingElement(MappingElement)\n  MappingXMLAttribute(MappingXMLAttribute)\n  MappingStandoffDataTypeClass(MappingStandoffDataTypeClass)\n  TextValue(TextValue)\n  XMLToStandoffMapping(XMLToStandoffMapping)\n  XSLTransformation(XSLTransformation)\n  StandoffTag(StandoffTag)\n  StandoffInternalReferenceTag(StandoffInternalReferenceTag)\n  Resource(Resource)\n\n  %% Duplicates\n  _StandoffTag{{StandoffTag}}\n\n  %% Values\n  string1([xsd:string])\n  string2([xsd:string])\n  string3([xsd:string])\n  boolean1([xsd:boolean])\n  integer1([xsd:integer])\n\n  %% Relations\n  TextValue --&gt; valueHasMapping --&gt; XMLToStandoffMapping\n  XMLToStandoffMapping --&gt; hasMappingElement --&gt; MappingElement\n  XMLToStandoffMapping --&gt; mappingHasDefaultXSLTransformation --&gt; XSLTransformation\n  TextValue --&gt; valueHasStandoff --&gt; StandoffTag\n  subgraph standoffProperties\n    standoffTagHasEndIndex\n    standoffTagHasStartIndex\n    standoffTagHasEnd\n    standoffTagHasStart\n    standoffTagHasLink\n    standoffTagHasOriginalXMLID\n    targetHasOriginalXMLID\n    standoffTagHasUuid\n    standoffTagHasEndParent\n    standoffTagHasStartAncestor\n    standoffTagHasStartParent\n    standoffTagHasInternalReference\n  end\n  StandoffTag --&gt; standoffTagHasEndIndex --&gt; integer1\n  StandoffTag --&gt; standoffTagHasStartIndex --&gt; integer1\n  StandoffTag --&gt; standoffTagHasEnd --&gt; integer1\n  StandoffTag --&gt; standoffTagHasStart --&gt; integer1\n  StandoffTag --&gt; standoffTagHasLink --&gt; Resource\n  StandoffTag --&gt; standoffTagHasOriginalXMLID --&gt; string2\n  StandoffTag --&gt; targetHasOriginalXMLID --&gt; string2\n  StandoffTag --&gt; standoffTagHasUuid --&gt; string2\n  StandoffTag --&gt; standoffTagHasEndParent --&gt; _StandoffTag\n  StandoffTag --&gt; standoffTagHasStartAncestor --&gt; _StandoffTag\n  StandoffTag --&gt; standoffTagHasStartParent --&gt; _StandoffTag\n  StandoffInternalReferenceTag --&gt; standoffTagHasInternalReference --&gt; _StandoffTag\n  TextValue --&gt; valueHasLanguage --&gt; string3\n\n  MappingComponent --&gt; mappingHasXMLAttributename --&gt; string1\n  MappingComponent --&gt; mappingHasStandoffClass --&gt; string1\n  MappingComponent --&gt; mappingHasXMLNamespace --&gt; string1\n  MappingElement --&gt; mappingHasXMLClass --&gt; string1\n  MappingElement --&gt; mappingHasXMLTagname --&gt; string1\n  MappingElement --&gt; mappingHasXMLAttribute --&gt; MappingXMLAttribute --&gt; mappingHasStandoffProperty\n  MappingElement --&gt; mappingHasStandoffDataTypeClass --&gt; MappingStandoffDataTypeClass\n  MappingElement --&gt; mappingElementRequiresSeparator --&gt; boolean1</code></pre>"},{"location":"DSP-API/05-internals/design/domain/class-and-property-hierarchies/#resource-triples-structure","title":"Resource Triples Structure","text":"<p>Legend</p> <ul> <li>round boxes: resources</li> <li>square boxes: properties</li> <li>hexagonal boxes: resoures that are duplicated for graphical reasons</li> <li>oval boxes: xsd values</li> <li>grey squares: thematic units</li> </ul> <pre><code>flowchart LR\n  LinkValue(LinkValue)\n  GeomValue(GeomValue)\n  ColorValue(ColorValue)\n  ExternalResValue(ExternalResValue)\n\n  date([xsd:dateTime])\n  string([xsd:string])\n  _Representation{{Representation}}\n  _Representation2{{Representation}}\n  _TextValue{{TextValue}}\n  _Value{{Value}}\n  _Resource{{Resource}}\n\n  subgraph Resources\n    Resource(Resource)\n    Annotation(Annotation)\n    Region(Region)\n    ExternalResource(ExternalResource)\n    Representation(Representation)\n    StillImageRepresentation(\"StillImageRepresentation etc.\")\n  end\n\n  subgraph Links\n    hasRepresentation\n    hasLinkTo\n    isSequenceOf\n    hasStandoffLinkTo\n    isPartOf\n  end\n\n  subgraph LinkValues\n    hasRepresentationValue\n    hasLinkToValue\n    isSequenceOfValue\n    hasStandoffLinkToValue\n    isPartOfValue\n  end\n\n  subgraph FileValues\n    direction LR\n    hasFileValue\n    FileValue(FileValue)\n    hasStillImageRepresentation[\"hasStillImageRepresentation etc.\"]\n    StillImageFileValue(\"StillImageFileValue etc.\")\n  end\n\n  Resource --&gt; creationDate --&gt; date\n  Resource --&gt; hasComment --&gt; _TextValue\n  Resource --&gt; hasValue --&gt; _Value\n\n  Resource --&gt; hasRepresentation --&gt; _Representation\n\n  Resource --&gt; hasLinkTo --&gt; _Resource\n  Resource --&gt; isSequenceOf --&gt; _Resource\n  Resource --&gt; hasStandoffLinkTo --&gt; _Resource\n  Resource --&gt; isPartOf --&gt; _Resource\n\n  Resource --&gt; hasLinkToValue --&gt; LinkValue\n  Resource --&gt; isSequenceOfValue --&gt; LinkValue\n  Resource --&gt; hasStandoffLinkToValue --&gt; LinkValue\n  Resource --&gt; hasRepresentationValue --&gt; LinkValue\n  Resource --&gt; isPartOfValue --&gt; LinkValue\n\n  Annotation --&gt; isAnnotationOfValue --&gt; LinkValue\n  Annotation --&gt; isAnnotationOf --&gt; _Resource\n\n  Region --&gt; isRegionOfValue --&gt; LinkValue\n  Region --&gt; isRegionOf --&gt; _Representation2\n  Region --&gt; hasGeometry --&gt; GeomValue\n  Region --&gt; hasColorValue --&gt; ColorValue\n\n  ExternalResource --&gt; hasExtResValue --&gt; ExternalResValue\n  ExternalResValue --&gt; extResId --&gt; string\n  ExternalResValue --&gt; extResAccessInfo --&gt; string\n  ExternalResValue --&gt; extResProvider --&gt; string\n\n  Representation --&gt; hasFileValue --&gt; FileValue\n  StillImageRepresentation --&gt; hasStillImageRepresentation --&gt; StillImageFileValue</code></pre>"},{"location":"DSP-API/05-internals/design/domain/class-and-property-hierarchies/#properties-without-subject-class-constraint","title":"Properties without Subject Class Constraint","text":"<pre><code>flowchart LR\n  na[[no subject class constraint defined]]\n\n  %% Classes\n  User(admin:User)\n  IntValue(IntValue)\n  IntervalValue(IntervalValue)\n\n  %% Values\n  date([xsd:dateTime])\n  boolean([xsd:boolean])\n\n  %% Relations\n  na --&gt; deletedBy --&gt; User\n  na --&gt; seqnum --&gt; IntValue\n  na --&gt; hasSequenceBounds --&gt; IntervalValue\n  na --&gt; deleteDate --&gt; date\n  na --&gt; isDeleted --&gt; boolean</code></pre>"},{"location":"DSP-API/05-internals/design/domain/domain-entities-and-relations/","title":"Domain Entities and Relations","text":"<p>In the context of DEV-1415: Domain Model we attempted to gain a clear overview over the DSP's domain, as implicitly modelled by the ontologies, code, validations and documentation of the DSP-API.</p> <p>The following document aims to give a higher level overview of said domain.</p> <p>Note</p> <ul> <li>As a high level overview, this document does not aim for exhaustivity.</li> <li>Naming is tried to be kept as simple as possible,    while trying to consolidate different naming schemes   (ontologies, code, API),   which in result means that no naming scheme is strictly followed.</li> <li>The split between V2 and Admin is arbitrary as those are intertwined within the system.   It merely serves the purpose of organizing the presented entities.</li> </ul>"},{"location":"DSP-API/05-internals/design/domain/domain-entities-and-relations/#domain-entities","title":"Domain Entities","text":"<p>The following Diagrams visualize the top level entities present in the DSP.  The attributes of these entities should be exhaustive. Cardinalities or validation constraints are normally not depicted.  The indicated relationships are of conceptual nature and are more complicated in the actual system.</p>"},{"location":"DSP-API/05-internals/design/domain/domain-entities-and-relations/#admin","title":"Admin","text":"<pre><code>erDiagram\n    %% entities\n    User {\n        IRI id\n        string userName \"unique\"\n        string email \"unique\"\n        string givenName\n        string familyName\n        string password\n        string language \"2 character ISO language code\"\n        boolean status\n        boolean systemAdmin\n    }\n    Project {\n        IRI id\n        string shortcode \"4 character hex\"\n        string shortname \"xsd:NCNAME\"\n        string longname \"optional\"\n        langstring description\n        string keywords\n        boolean status\n        boolean selfjoin\n        string logo \"optional\"\n        string restrictedViewSize\n        string restrictedViewWatermark\n    }\n    Group {\n        IRI id\n        string name\n        langstring description\n        boolean status\n        boolean selfjoin\n    }\n    ListNode {\n        IRI id\n        IRI projectIri \"only for root node\"\n        langstring labels\n        langstring comments\n        string name\n        boolean isRootNode\n        integer listNodePosition\n    }\n    DefaultObjectAccessPermission {\n        IRI id\n        string hasPermission \"the 'RV, V, M, D, CR' string\"\n    }\n    AdministrativePermission {\n        IRI id\n        string hasPermission \"a different string representation\"\n    }\n    Property {}\n    ResourceClass {}\n\n    %% relations\n    User }|--|{ Project: \"is member/admin of\"\n    User }o--|{ Group: \"is member of\"\n    Group }o--|| Project: \"belongs to\"\n    ListNode }o--|| Project: \"belongs to\"\n    ListNode }o--o{ ListNode: \"hasSubListNode\"\n    ListNode |o--o| ListNode: \"hasRootNode\"\n    AdministrativePermission |{--o| Project: \"points to\"\n    AdministrativePermission |{--|{ Group: \"points to\"\n\n    DefaultObjectAccessPermission |{--o{ Group: \"points to\"\n    DefaultObjectAccessPermission |{--|| Project: \"points to\"\n    DefaultObjectAccessPermission |{--o{ Property: \"points to\"\n    DefaultObjectAccessPermission |{--o{ ResourceClass: \"points to\"\n</code></pre>"},{"location":"DSP-API/05-internals/design/domain/domain-entities-and-relations/#overview-v2","title":"Overview V2","text":"<pre><code>erDiagram\n    Ontology ||--o{ ResourceClass: \"consists of\"\n    Ontology ||--o{ Property: \"consists of\"\n    ResourceClass o{--o{ Cardinality: defines\n    Cardinality ||--|| Property: on\n    ResourceClass ||--o{ Resource: \"can be instantiated as\"\n    Property ||--o{ Value: \"can be instantiated as\"\n    Resource ||--o{ Value: has\n    Value }o--|| ObjectAccessPermission: grants\n    Resource }o--|| ObjectAccessPermission: grants\n    Resource }o--|| User: \"attached to\"\n    Resource }o--|| Project: \"attached to\"</code></pre>"},{"location":"DSP-API/05-internals/design/domain/domain-entities-and-relations/#ontology","title":"Ontology","text":"<pre><code>erDiagram\n    Project {}\n    Ontology {\n        IRI id\n        string ontologyName\n        string label\n        string comment \"optional\"\n        boolean isShared\n        date lastModificationDate\n    }\n    ResourceClass {\n        IRI id\n        langstring label\n        langstring comment\n    }\n    Property {\n        IRI id\n        langstring label\n        langstring comment\n        string guiAttribute\n    }\n    GuiElement {}\n    Cardinality {\n        owl_cardinality cardinality \"1, 0-1, 0-n, 1-n\"\n        integer guiOrder\n    }\n    Ontology o{--|| Project: \"attached to\"\n    Ontology ||--o{ ResourceClass: \"consists of\"\n    Ontology ||--o{ Property: \"consists of\"\n    ResourceClass }o--o{ ResourceClass: subClassOf\n    ResourceClass ||--o{ Cardinality: defines\n    Cardinality ||--|| Property: specifies\n    Property }o--o{ Property: subPropertyOf\n    Property }o--o| ResourceClass: subjectType\n    Property }o--o| ResourceClass: objectType\n    Property }o--|| GuiElement: has\n    Cardinality ||--|| Property: specifies</code></pre>"},{"location":"DSP-API/05-internals/design/domain/domain-entities-and-relations/#data","title":"Data","text":"<pre><code>erDiagram\n    User {}\n    Project {}\n    Resource {\n        IRI id\n        string label\n        boolean isDeleted\n        string hasPermission\n        date creationDate\n        date lastModificationDate\n        date deleteDate\n        string deleteComment\n    }\n    Value {\n        IRI id\n        date valueCreationDate\n        string hasPermission\n        integer valueHasOrder\n        langstring valueHasComment\n        boolean isDeleted\n        date deleteDate\n        langstring deleteComment\n        string valueHasString\n        UUID valueHasUUID\n    }\n    Resource ||--o{ Value: contains\n    Resource o{--o{ Value: hasStandoffLinkTo\n    Resource o{--|| User: attachedToUser\n    Resource o{--o| User: deletedBy\n    Resource o{--|| Project: attachedToProject\n    Value ||--|| ValueLiteral: \"is represented by\"\n    Value }o--o{ Resource: \"links to\"\n    Value }o--o{ ListNode: \"links to\"\n    Value o{--|| User: attachedToUser\n    Value o{--o| User: deletedBy\n    Value o|--o| Value: previousValue</code></pre>"},{"location":"DSP-API/05-internals/design/domain/system-instances/","title":"System Instances","text":"<p>Apart from class and property definitions,  <code>knora-base</code> and <code>knora-admin</code> provide a small number of class instances  that should be present in any running DSP stack:</p>"},{"location":"DSP-API/05-internals/design/domain/system-instances/#built-in-user-groups","title":"Built-in User Groups","text":"<pre><code>classDiagram\n%% Classes\n  class UserGroup {\n\n  }\n  class UnknownUser {\n\n  }\n  class KnownUser {\n\n  }\n  class Creator {\n\n  }\n  class ProjectMember {\n\n  }\n  class ProjectAdmin {\n\n  }\n  class SystemAdmin {\n\n  }\n%% Relationships\n  UserGroup &lt;|-- UnknownUser\n  UserGroup &lt;|-- KnownUser\n  UserGroup &lt;|-- Creator\n  UserGroup &lt;|-- ProjectMember\n  UserGroup &lt;|-- ProjectAdmin\n  UserGroup &lt;|-- SystemAdmin</code></pre>"},{"location":"DSP-API/05-internals/design/domain/system-instances/#built-in-users","title":"Built-in Users","text":"<pre><code>classDiagram\n%% Classes\n  class User {\n\n  }\n  class AnonymousUser {\n\n  }\n  class SystemUser {\n\n  }\n%% Relationships\n  User &lt;|-- AnonymousUser\n  User &lt;|-- SystemUser</code></pre>"},{"location":"DSP-API/05-internals/design/domain/system-instances/#built-in-projects","title":"Built-in Projects","text":"<pre><code>classDiagram\n%% Classes\n  class Project {\n\n  }\n  class SystemProject {\n\n  }\n  class DefaultSharedOntologiesProject {\n\n  }\n%% Relationships\n  Project &lt;|-- SystemProject\n  Project &lt;|-- DefaultSharedOntologiesProject</code></pre>"},{"location":"DSP-API/05-internals/design/principles/authentication/","title":"Authentication","text":""},{"location":"DSP-API/05-internals/design/principles/authentication/#authentication-in-knora","title":"Authentication in Knora","text":""},{"location":"DSP-API/05-internals/design/principles/authentication/#scope","title":"Scope","text":"<p>Authentication is the process of making sure that if someone is accessing something then this someone is actually also the person they pretend to be. The process of making sure that someone is authorized, (i.e. has the permission to access something, is handled as described in Authorisation).</p>"},{"location":"DSP-API/05-internals/design/principles/authentication/#implementation","title":"Implementation","text":"<p>The authentication in Knora is based on Basic Auth HTTP basic authentication, URL parameters, JSON Web Token, and cookies. This means that on every request (to any of the routes), credentials need to be sent either via authorization header, URL parameters or cookie header.</p> <p>All routes are always accessible and if there are no credentials provided, a default user is assumed. If credentials are sent and they are not correct (e.g., wrong username, password incorrect, token expired), then the request will end in an error message.</p>"},{"location":"DSP-API/05-internals/design/principles/authentication/#skipping-authentication","title":"Skipping Authentication","text":"<p>There is the possibility to turn skipping authentication on and use a hardcoded user (Test User). In application.conf set the <code>skip-authentication = true</code> and Test User will be always assumed.</p>"},{"location":"DSP-API/05-internals/design/principles/consistency-checking/","title":"Consistency Checking","text":""},{"location":"DSP-API/05-internals/design/principles/consistency-checking/#consistency-checking","title":"Consistency Checking","text":"<p>Attention! GraphDB is not supported anymore, therefore parts related  to it in this document are redundant.</p>"},{"location":"DSP-API/05-internals/design/principles/consistency-checking/#requirements","title":"Requirements","text":"<p>Knora is designed to prevent inconsistencies in RDF data, as far as is practical, in a triplestore-independent way (see Triplestore Updates). However, it is also useful to enforce consistency constraints in the triplestore itself, for two reasons:</p> <ol> <li>To prevent inconsistencies resulting from bugs in the DSP-API server.</li> <li>To prevent users from inserting inconsistent data directly into the triplestore, bypassing Knora.</li> </ol> <p>The design of the <code>knora-base</code> ontology supports two ways of specifying constraints on data (see knora-base: Consistency Checking for details):</p> <ol> <li>A property definition should specify the types that are allowed as   subjects and objects of the property, using   <code>knora-base:subjectClassConstraint</code> and (if it is an object   property) <code>knora-base:objectClassConstraint</code>. Every subproperty of   <code>knora-base:hasValue</code> or a <code>knora-base:hasLinkTo</code> (i.e. every   property of a resource that points to a <code>knora-base:Value</code> or to   another resource) is required have this constraint, because the   DSP-API server relies on it to know what type of object to expect   for the property. Use of <code>knora-base:subjectClassConstraint</code> is   recommended but not required.</li> <li>A class definition should use OWL cardinalities    (see OWL 2 Quick Reference Guide)   to indicate the properties that instances of the class are allowed to   have, and to constrain the number of objects that each property can   have. Subclasses of <code>knora-base:Resource</code> are required to have a   cardinality for each subproperty of <code>knora-base:hasValue</code> or a   <code>knora-base:hasLinkTo</code> that resources of that class can have.</li> </ol> <p>Specifically, consistency checking should prevent the following:</p> <ul> <li>An object property or datatype property has a subject of the wrong   class, or an object property has an object of the wrong class   (GraphDB's consistency checke cannot check the types of literals).</li> <li>An object property has an object that does not exist (i.e. the   object is an IRI that is not used as the subject of any statements   in the repository). This can be treated as if the object is of the   wrong type (i.e. it can cause a violation of   <code>knora-base:objectClassConstraint</code>, because there is no compatible   <code>rdf:type</code> statement for the object).</li> <li>A class has <code>owl:cardinality 1</code> or <code>owl:minCardinality 1</code> on an   object property or datatype property, and an instance of the class   does not have that property.</li> <li>A class has <code>owl:cardinality 1</code> or <code>owl:maxCardinality 1</code> on an   object property or datatype property, and an instance of the class   has more than one object for that property.</li> <li>An instance of <code>knora-base:Resource</code> has an object property pointing   to a <code>knora-base:Value</code> or to another <code>Resource</code>, and its class has   no cardinality for that property.</li> <li>An instance of <code>knora-base:Value</code> has a subproperty of   <code>knora-base:valueHas</code>, and its class has no cardinality for that   property.</li> <li>A datatype property has an empty string as an object.</li> </ul> <p>Cardinalities in base classes are inherited by derived classes. Derived classes can override inherited cardinalities by making them more restrictive, i.e. by specifying a subproperty of the one specified in the original cardinality.</p> <p>Instances of <code>Resource</code> and <code>Value</code> can be marked as deleted, using the property <code>isDeleted</code>. This must be taken into account as follows:</p> <ul> <li>With <code>owl:cardinality 1</code> or <code>owl:maxCardinality 1</code>, if the object of   the property can be marked as deleted, the property must not have   more than one object that has not been marked as deleted. In other   words, it's OK if there is more than one object, as long only one of   them has <code>knora-base:isDeleted false</code>.</li> <li>With <code>owl:cardinality 1</code> or <code>owl:minCardinality 1</code>, the property   must have an object, but it's OK if the property's only object is   marked as deleted. We allow this because the subject and object may   have different owners, and it may not be feasible for them to   coordinate their work. The owner of the object should always be able   to mark it as deleted. (It could be useful to notify the owner of   the subject when this happens, but that is beyond the scope of   consistency checking.)</li> </ul>"},{"location":"DSP-API/05-internals/design/principles/consistency-checking/#design","title":"Design","text":"<p>Ontotext GraphDB provides a mechanism for checking the consistency of data in a repository each time an update transaction is committed. Knora provides GraphDB-specific consistency rules that take advantage of this feature to provide an extra layer of consistency checks, in addition to the checks that are implemented in Knora.</p> <p>When a repository is created in GraphDB, a set of consistency rules can be provided, and GraphDB's consistency checker can be turned on to ensure that each update transaction respects these rules, as described in the section Reasoning of the GraphDB documentation. Like custom inference rules, consistency rules are defined in files with the <code>.pie</code> filename extension, in a GraphDB-specific syntax.</p> <p>We have added rules to the standard RDFS inference rules file <code>builtin_RdfsRules.pie</code>, to create the file <code>KnoraRules.pie</code>. The <code>.ttl</code> configuration file that is used to create the repository must contain these settings:</p> <pre><code>owlim:ruleset \"/path/to/KnoraRules.pie\" ;\nowlim:check-for-inconsistencies \"true\" ;\n</code></pre> <p>The path to <code>KnoraRules.pie</code> must be an absolute path. The scripts provided with Knora to create test repositories set this path automatically.</p> <p>Consistency checking in GraphDB relies on reasoning. GraphDB's reasoning is Forward-chaining, which means that reasoning is applied to the contents of each update, before the update transaction is committed, and the inferred statements are added to the repository.</p> <p>A GraphDB rules file can contain two types of rules: inference rules and consistency rules. Before committing an update transaction, GraphDB applies inference rules, then consistency rules. If any of the consistency rules are violated, the transaction is rolled back.</p> <p>An inference rule has this form:</p> <pre><code>Id: &lt;rule_name&gt;\n    &lt;premises&gt; &lt;optional_constraints&gt;\n    -------------------------------\n    &lt;consequences&gt; &lt;optional_constraints&gt;\n</code></pre> <p>The premises are a pattern that tries to match statements found in the data. Optional constraints, which are enclosed in square brackets, make it possible to specify the premises more precisely, or to specify a named graph (see examples below). Consequences are the statements that will be inferred if the premises match. A line of hyphens separates premises from consequences.</p> <p>A GraphDB consistency rule has a similar form:</p> <pre><code>Consistency: &lt;rule_name&gt;\n    &lt;premises&gt; &lt;optional_constraints&gt;\n    -------------------------------\n    &lt;consequences&gt; &lt;optional_constraints&gt;\n</code></pre> <p>The differences between inference rules and consistency rules are:</p> <ul> <li>A consistency rule begins with <code>Consistency</code> instead of <code>Id</code>.</li> <li>In a consistency rule, the consequences are optional. Instead of   representing statements to be inferred, they represent statements   that must exist if the premises are satisfied. In other words, if   the premises are satisfied and the consequences are not found, the   rule is violated.</li> <li>If a consistency rule doesn't specify any consequences, and the   premises are satisfied, the rule is violated.</li> </ul> <p>Rules use variable names for subjects, predicates, and objects, and they can use actual property names.</p>"},{"location":"DSP-API/05-internals/design/principles/consistency-checking/#empty-string-as-object","title":"Empty string as object","text":"<p>If subject <code>i</code> has a predicate <code>p</code> whose object is an empty string, the constraint is violated:</p> <pre><code>Consistency: empty_string\n    i p \"\"\n    ------------------------------------\n</code></pre>"},{"location":"DSP-API/05-internals/design/principles/consistency-checking/#subject-and-object-class-constraints","title":"Subject and object class constraints","text":"<p>If subject <code>i</code> has a predicate <code>p</code> that requires a subject of type <code>t</code>, and <code>i</code> is not a <code>t</code>, the constraint is violated:</p> <pre><code>Consistency: subject_class_constraint\n    p &lt;knora-base:subjectClassConstraint&gt; t\n    i p j\n    ------------------------------------\n    i &lt;rdf:type&gt; t\n</code></pre> <p>If subject <code>i</code> has a predicate <code>p</code> that requires an object of type <code>t</code>, and the object of <code>p</code> is not a <code>t</code>, the constraint is violated:</p> <pre><code>Consistency: object_class_constraint\n    p &lt;knora-base:objectClassConstraint&gt; t\n    i p j\n    ------------------------------------\n    j &lt;rdf:type&gt; t\n</code></pre>"},{"location":"DSP-API/05-internals/design/principles/consistency-checking/#cardinality-constraints","title":"Cardinality constraints","text":"<p>A simple implementation of a consistency rule to check <code>owl:maxCardinality 1</code>, for objects that can be marked as deleted, could look like this:</p> <pre><code>Consistency: max_cardinality_1_with_deletion_flag\n    i &lt;rdf:type&gt; r\n    r &lt;owl:maxCardinality&gt; \"1\"^^xsd:nonNegativeInteger\n    r &lt;owl:onProperty&gt; p\n    i p j\n    i p k [Constraint j != k]\n    j &lt;knora-base:isDeleted&gt; \"false\"^^xsd:boolean\n    k &lt;knora-base:isDeleted&gt; \"false\"^^xsd:boolean\n    ------------------------------------\n</code></pre> <p>This means: if resource <code>i</code> is a subclass of an <code>owl:Restriction</code> <code>r</code> with <code>owl:maxCardinality 1</code> on property <code>p</code>, and the resource has two different objects for that property, neither of which is marked as deleted, the rule is violated. Note that this takes advantage of the fact that <code>Resource</code> and <code>Value</code> have <code>owl:cardinality 1</code> on <code>isDeleted</code> (<code>isDeleted</code> must be present even if false), so we do not need to check whether <code>i</code> is actually something that can be marked as deleted.</p> <p>However, this implementation would be much too slow. We therefore use two optimisations suggested by Ontotext:</p> <ol> <li>Add custom inference rules to make tables (i.e. named graphs) of    pre-calculated information about the cardinalities on properties of    subjects, and use those tables to simplify the consistency rules.</li> <li>Use the <code>[Cut]</code> constraint to avoid generating certain redundant    compiled rules (see Entailment    rules).</li> </ol> <p>For example, to construct a table of subjects belonging to classes that have <code>owl:maxCardinality 1</code> on some property <code>p</code>, we use the following custom inference rule:</p> <pre><code>Id: maxCardinality_1_table\n    i &lt;rdf:type&gt; r\n    r &lt;owl:maxCardinality&gt; \"1\"^^xsd:nonNegativeInteger\n    r &lt;owl:onProperty&gt; p\n    ------------------------------------\n    i p r [Context &lt;onto:_maxCardinality_1_table&gt;]\n</code></pre> <p>The constraint <code>[Context &lt;onto:_maxCardinality_1_table&gt;]</code> means that the inferred triples are added to the context (i.e. the named graph) <code>http://www.ontotext.com/_maxCardinality_1_table</code>. (Note that we have defined the prefix <code>onto</code> as <code>http://www.ontotext.com/</code> in the <code>Prefices</code> section of the rules file.) As the GraphDB documentation on Rules explains:</p> <p>If the context is provided, the statements produced as rule consequences are not \u2018visible\u2019 during normal query answering. Instead, they can only be used as input to this or other rules and only when the rule premise explicitly uses the given context.</p> <p>Now, to find out whether a subject belongs to a class with that cardinality on a given property, we only need to match one triple. The revised implementation of the rule <code>max_cardinality_1_with_deletion_flag</code> is as follows:</p> <pre><code>Consistency: max_cardinality_1_with_deletion_flag\n    i p r [Context &lt;onto:_maxCardinality_1_table&gt;]\n    i p j [Constraint j != k]\n    i p k [Cut]\n    j &lt;knora-base:isDeleted&gt; \"false\"^^xsd:boolean\n    k &lt;knora-base:isDeleted&gt; \"false\"^^xsd:boolean\n    ------------------------------------\n</code></pre> <p>The constraint <code>[Constraint j != k]</code> means that the premises will be satisfied only if the variables <code>j</code> and <code>k</code> do not refer to the same thing.</p> <p>With these optimisations, the rule is faster by several orders of magnitude.</p> <p>Since properties whose objects can be marked as deleted must be handled differently to properties whose objects cannot be marked as deleted, the <code>knora-base</code> ontology provides a property called <code>objectCannotBeMarkedAsDeleted</code>. All properties in <code>knora-base</code> whose objects cannot take the <code>isDeleted</code> flag (including datatype properties) should be derived from this property. This is how it is used to check <code>owl:maxCardinality 1</code> for objects that cannot be marked as deleted:</p> <pre><code>Consistency: max_cardinality_1_without_deletion_flag\n    i p r [Context &lt;onto:_maxCardinality_1_table&gt;]\n    p &lt;rdfs:subPropertyOf&gt; &lt;knora-base:objectCannotBeMarkedAsDeleted&gt;\n    i p j [Constraint j != k]\n    i p k [Cut]\n    ------------------------------------\n</code></pre> <p>To check <code>owl:minCardinality 1</code>, we do not care whether the object can be marked as deleted, so we can use this simple rule:</p> <pre><code>Consistency: min_cardinality_1_any_object\n    i p r [Context &lt;onto:_minCardinality_1_table&gt;]\n    ------------------------------------\n    i p j\n</code></pre> <p>This means: if a subject <code>i</code> belongs to a class that has <code>owl:minCardinality 1</code> on property <code>p</code>, and <code>i</code> has no object for <code>p</code>, the rule is violated.</p> <p>To check <code>owl:cardinality 1</code>, we need two rules: one that checks whether there are too few objects, and one that checks whether there are too many. To check whether there are too few objects, we don't care whether the objects can be marked as deleted, so the rule is the same as <code>min_cardinality_1_any_object</code>, except for the cardinality:</p> <pre><code>Consistency: cardinality_1_not_less_any_object\n    i p r [Context &lt;onto:_cardinality_1_table&gt;]\n    ------------------------------------\n    i p j\n</code></pre> <p>To check whether there are too many objects, we need to know whether the objects can be marked as deleted or not. In the case where the objects can be marked as deleted, the rule is the same as <code>max_cardinality_1_with_deletion_flag</code>, except for the cardinality:</p> <pre><code>Consistency: cardinality_1_not_greater_with_deletion_flag\n    i p r [Context &lt;onto:_cardinality_1_table&gt;]\n    i p j [Constraint j != k]\n    i p k [Cut]\n    j &lt;knora-base:isDeleted&gt; \"false\"^^xsd:boolean\n    k &lt;knora-base:isDeleted&gt; \"false\"^^xsd:boolean\n    ------------------------------------\n</code></pre> <p>In the case where the objects cannot be marked as deleted, the rule is the same as <code>max_cardinality_1_without_deletion_flag</code>, except for the cardinality:</p> <pre><code>Consistency: cardinality_1_not_less_any_object\n    i p r [Context &lt;onto:_cardinality_1_table&gt;]\n    ------------------------------------\n    i p j\n</code></pre> <p>Knora allows a subproperty of <code>knora-base:hasValue</code> or <code>knora-base:hasLinkTo</code> to be a predicate of a resource only if the resource's class has some cardinality for the property. For convenience, <code>knora-base:hasValue</code> and <code>knora-base:hasLinkTo</code> are subproperties of <code>knora-base:resourceProperty</code>, which is used to check this constraint in the following rule:</p> <pre><code>Consistency: resource_prop_cardinality_any\n    i &lt;knora-base:resourceProperty&gt; j\n    ------------------------------------\n    i p j\n    i &lt;rdf:type&gt; r\n    r &lt;owl:onProperty&gt; p\n</code></pre> <p>If resource <code>i</code> has a subproperty of <code>knora-base:resourceProperty</code>, and <code>i</code> is not a member of a subclass of an <code>owl:Restriction</code> <code>r</code> with a cardinality on that property (or on one of its base properties), the rule is violated.</p> <p>A similar rule, <code>value_prop_cardinality_any</code>, ensures that if a value has a subproperty of <code>knora-base:valueHas</code>, the value's class has some cardinality for that property.</p>"},{"location":"DSP-API/05-internals/design/principles/design-overview/","title":"Design Overview","text":""},{"location":"DSP-API/05-internals/design/principles/design-overview/#dsp-api-server-design-overview","title":"DSP-API Server Design Overview","text":""},{"location":"DSP-API/05-internals/design/principles/design-overview/#introduction","title":"Introduction","text":"<p>DSP-API's responsibilites are:</p> <ul> <li>Querying, creating, updating, and deleting data</li> <li>Creating, updating and deleting data models (ontologies)</li> <li>Managing projects and users</li> <li>Authentication of clients</li> <li>Authorisation of clients' requests</li> </ul> <p>DSP-API is developed with Scala and uses the Akka framework for message-based concurrency. It is designed to work with the Apache Jena Fuseki triplestore which is compliant to the SPARQL 1.1 Protocol. For file storage, it uses Sipi.</p>"},{"location":"DSP-API/05-internals/design/principles/design-overview/#dsp-api-versions","title":"DSP-API Versions","text":"<ul> <li>DSP-API v2: the latest DSP-API that should be used.</li> <li>DSP-API v1: has been removed after a long period of deprecation.</li> </ul> <p>There is also an Admin API for administrating DSP projects.</p>"},{"location":"DSP-API/05-internals/design/principles/design-overview/#error-handling","title":"Error Handling","text":"<p>The error-handling design has these aims:</p> <ol> <li>Simplify the error-handling code in actors as much as possible.</li> <li>Produce error messages that clearly indicate the context in which    the error occurred (i.e. what the application was trying to do).</li> <li>Ensure that clients receive an appropriate error message when an    error occurs.</li> <li>Ensure that <code>ask</code> requests are properly terminated with an    <code>akka.actor.Status.Failure</code> message in the event of an error,    without which they will simply time out (see    Ask: Send and Receive Future).</li> <li>When a actor encounters an error that isn't the client's fault (e.g.    a triplestore failure), log it, but don't do this with errors caused    by bad input.</li> <li>When logging errors, include the full JVM stack trace.</li> </ol> <p>A hierarchy of exception classes is defined in <code>Exceptions.scala</code>, representing different sorts of errors that could occur. The hierarchy has two main branches:</p> <ul> <li><code>RequestRejectedException</code>, an abstract class for errors that are   the client's fault. These errors are not logged.</li> <li><code>InternalServerException</code>, an abstract class for errors that are not   the client's fault. These errors are logged.</li> </ul> <p>Exception classes in this hierarchy can be defined to include a wrapped <code>cause</code> exception. When an exception is logged, its stack trace will be logged along with the stack trace of its <code>cause</code>. It is therefore recommended that low-level code should catch low-level exceptions, and wrap them in one of our higher-level exceptions, in order to clarify the context in which the error occurred.</p> <p>To simplify error-handling in responders, a utility method called <code>future2Message</code> is provided in <code>ActorUtils</code>. It is intended to be used in an actor's <code>receive</code> method to respond to messages in the <code>ask</code> pattern. If the responder's computation is successful, it is sent to the requesting actor as a response to the <code>ask</code>. If the computation fails, the exception representing the failure is wrapped in a <code>Status.Failure</code>, which is sent as a response to the <code>ask</code>. If the error is a subclass of <code>RequestRejectedException</code>, only the sender is notified of the error; otherwise, the error is also logged and rethrown (so that the <code>KnoraExceptionHandler</code> can handle the exception).</p> <p>In many cases, we transform data from the triplestore into a <code>Map</code> object. To simplify checking for required values in these collections, the class <code>ErrorHandlingMap</code> is provided. You can wrap any <code>Map</code> in an <code>ErrorHandlingMap</code>. You must provide a function that will generate an error message when a required value is missing, and optionally a function that throws a particular exception. Rows of SPARQL query results are already returned in <code>ErrorHandlingMap</code> objects.</p> <p>If you want to add a new exception class, see the comments in <code>Exceptions.scala</code> for instructions.</p>"},{"location":"DSP-API/05-internals/design/principles/design-overview/#transformation-of-exception-to-client-responses","title":"Transformation of Exception to Client Responses","text":"<p>The <code>org.knora.webapi.KnoraExceptionHandler</code> is brought implicitly into scope of <code>pekko-http</code>, and by doing so registered and used to handle the transformation of all <code>KnoraExceptions</code> into <code>HttpResponses</code>. This handler handles only exceptions thrown inside the route and not the actors. However, the design of reply message passing from actors (by using <code>future2Message</code>), makes sure that any exceptions thrown inside actors, will reach the route, where they will be handled.</p> <p>See also Futures with Akka.</p>"},{"location":"DSP-API/05-internals/design/principles/design-overview/#api-routing","title":"API Routing","text":"<p>The API routes in the <code>routing</code> package are defined using the DSL provided by the pekko-http library. A routing function has to do the following:</p> <ol> <li>Authenticate the client.</li> <li>Figure out what the client is asking for.</li> <li>Construct an appropriate request message and send it to the appropriate responder.</li> <li>Return a result to the client.</li> </ol> <p>To simplify the coding of routing functions, they are contained in objects that extend <code>org.knora.webapi.routing.Authenticator</code>. Each routing function performs the following operations:</p> <ol> <li><code>Authenticator.getUserADM</code> is called to authenticate the user.</li> <li>The request parameters are interpreted and validated, and a request    message is constructed to send to the responder. If the request is    invalid, <code>BadRequestException</code> is thrown. If the request message is    requesting an update operation, it must include a UUID generated by    <code>UUID.randomUUID</code>, so the responder can obtain a write lock on the    resource being updated.</li> </ol> <p>The routing function then passes the message to a function in an API-specific routing utility: <code>RouteUtilV2</code> or <code>RouteUtilADM</code>. This utility function sends the message to <code>ResponderManager</code> (which forwards it to the relevant responder), returns a response to the client in the appropriate format, and handles any errors.</p>"},{"location":"DSP-API/05-internals/design/principles/design-overview/#logging","title":"Logging","text":"<p>Logging in DSP-API is configurable through <code>logback.xml</code>, allowing fine grain configuration of what classes / objects should be logged from which level.</p> <p>The Akka Actors use Akka Logging while logging inside plain Scala Objects and Classes is done through Scala Logging.</p>"},{"location":"DSP-API/05-internals/design/principles/futures-with-pekko/","title":"Futures with Pekko","text":""},{"location":"DSP-API/05-internals/design/principles/futures-with-pekko/#futures-with-pekko","title":"Futures with Pekko","text":""},{"location":"DSP-API/05-internals/design/principles/futures-with-pekko/#introduction","title":"Introduction","text":"<p>Scala's documentation on futures introduces them in this way:</p> <p>Futures provide a nice way to reason about performing many operations in parallel \u2013 in an efficient and non-blocking way. The idea is simple, a Future is a sort of a placeholder object that you can create for a result that does not yet exist. Generally, the result of the Future is computed concurrently and can be later collected. Composing concurrent tasks in this way tends to result in faster, asynchronous, non-blocking parallel code.</p> <p>The rest of that page is well worth reading to get an overview of how futures work and what you can do with them.</p> <p>In Pekko, one of the standard patterns for communication between actors is the ask pattern, in which you send a message to an actor and you expect a reply. When you call the <code>ask</code> function (which can be written as a question mark, <code>?</code>, which acts as an infix operator), it immediately returns a <code>Future</code>, which will complete when the reply is sent. As the Pekko documentation explains in Use with Actors, it is possible to block the calling thread until the future completes, using <code>Await.result</code>. However, they say: 'Blocking is discouraged though as it will cause performance problems.' In particular, by not blocking, you can do several <code>ask</code> requests in parallel.</p> <p>One way to avoid blocking is to register a callback on the future, which will be called when it completes (perhaps by another thread), like this:</p> <pre><code>future.onComplete {\n  case Success(result) =&gt; println(result)\n  case Failure(ex) =&gt; ex.printStackTrace()\n}\n</code></pre> <p>But this won't work if you're writing a method that needs return a value based on the result of a future. In this case, you can register a callback that transforms the result of a future into another future:</p> <pre><code>val newFuture = future.map(x =&gt; x + 1)\n</code></pre> <p>However, registering callbacks explicitly gets cumbersome when you need to work with several futures together. In this case, the most convenient alternative to blocking is to use <code>Future</code> as a monad. The links above explain what this means in detail, but the basic idea is that a special syntax, called a <code>for</code>-comprehension, allows you to write code that uses futures as if they were complete, without blocking. In reality, a <code>for</code>-comprehension is syntactic sugar for calling methods like <code>map</code>, but it's much easier to write and to read. You can do things like this:</p> <pre><code>val fooFuture = (fooActor ? GetFoo(\"foo\")).mapTo[Foo]\nval barFuture = (barActor ? GetBar(\"bar\")).mapTo[Bar]\n\nval totalFuture = for {\n  foo: Foo &lt;- fooFuture\n  bar: Bar &lt;- barFuture\n\n  total = foo.getCount + bar.getCount\n} yield total\n</code></pre> <p>Here the messages to <code>fooActor</code> and <code>barActor</code> are sent and processed in parallel, but you're guaranteed that <code>total</code> won't be calculated until the values it needs are available. Note that if you construct <code>fooFuture</code> and <code>barFuture</code> inside the <code>for</code> comprehension, they won't be run in parallel (see Scala for-comprehension with concurrently running futures).</p>"},{"location":"DSP-API/05-internals/design/principles/futures-with-pekko/#handling-errors-with-futures","title":"Handling Errors with Futures","text":"<p>The constructors and methods of <code>Future</code> (like those of <code>Try</code>) catch exceptions, which cause the future to fail. This very useful property of futures means that you usually don't need <code>try</code>-<code>catch</code> blocks when using the <code>Future</code> monad (although it is sometimes helpful to include them, in order to catch low-level exceptions and wrap them in higher-level ones). Any exception thrown in code that's being run asynchronously by <code>Future</code> (including in the <code>yield</code> expression of a <code>for</code> comprehension) will be caught, and the result will be a <code>Future</code> containing a <code>Failure</code>. Also, in the previous example, if <code>fooActor</code> or <code>barActor</code> returns a <code>Status.Failure</code> message, the <code>for</code>-comprehension will also yield a failed future.</p> <p>However, you need to be careful with the first line of the <code>for</code>-comprehension. For example, this code doesn't handle exceptions correctly:</p> <pre><code>private def doFooQuery(iri: IRI): Future[String] = {\n  for {\n    queryResponse &lt;- (storeManager ? SparqlSelectRequest(queries.sparql.v1.txt.getFoo(iri).toString())).mapTo[SparqlSelectResponse]\n    ...\n  } yield\n...\n}\n</code></pre> <p>The <code>getFoo()</code> method calls a Twirl template function to generate SPARQL. The <code>?</code> operator returns a <code>Future</code>. However, the template function is not run asynchronously, because it is called before the <code>Future</code> constructor is called. So if the template function throws an exception, it won't be caught here. Instead, you can do this:</p> <pre><code>private def doFooQuery(iri: IRI): Future[String] = {\n  for {\n    queryString &lt;- Future(queries.sparql.v1.txt.getFoo(iri).toString())\n    queryResponse &lt;- (storeManager ? SparqlSelectRequest(queryString)).mapTo[SparqlSelectResponse]\n    ...\n  } yield\n...\n}\n</code></pre> <p>Here the <code>Future</code> constructor will call the template function asynchronously, and catch any exceptions it throws. This is only necessary if you need to call the template function at the very beginning of a <code>for</code>-comprehension. In the rest of the <code>for</code> comprehension, you'll already implicitly have a <code>Future</code> object.</p>"},{"location":"DSP-API/05-internals/design/principles/futures-with-pekko/#using-recover-on-futures","title":"Using <code>recover</code> on Futures","text":"<p>By using <code>recover</code> on a <code>Future</code>, an apt error message can be thrown if the <code>Future</code> fails. This is particularly useful when an an error message should be made more clear depending on the context the <code>Future</code> is used in.</p> <p>For example, we are asking the resources responder to query for a certain resource in order to process it in a special way. However, the client does not know that the resources responder is sent a request and in case the resource cannot be found, the message sent back from the resources responder (<code>NotFoundException</code>) would not make sense to it. Instead, we would like to handle the message in a way so that it makes sense for the operation the client actually executed. We can do this by calling <code>recover</code> on a <code>Future</code>.</p> <pre><code>private def mySpecialResourceRequest(iri: IRI, userProfile: UserProfileV1): Future[\n...] =\n{\n\n  val resourceRequestFuture = for {\n    resResponse: ResourceFullResponseV1 &lt;- (responderManager ? ResourceFullGetRequestV1(iri = iri, userProfile = userProfile, getIncoming = false)).mapTo[ResourceFullResponseV1]\n  } yield resResponse\n\n  val resourceRequestFutureRecovered = resourceRequestFuture.recover {\n    case notFound: NotFoundException =&gt; throw BadRequestException(s\"Special resource handling failed because the resource could not be found: ${notFound.message}\")\n  }\n\n  for {\n\n    res &lt;- resourceRequestFutureRecovered\n\n    ...\n\n  } yield\n...\n\n}   \n</code></pre> <p>Please note that the content of the <code>Future</code> has to be accessed using <code>&lt;-</code> to make this work correctly. Otherwise the content will never be looked at.</p>"},{"location":"DSP-API/05-internals/design/principles/futures-with-pekko/#designing-with-futures","title":"Designing with Futures","text":"<p>In the current design, Knora almost never blocks to wait for a future to complete. The normal flow of control works like this:</p> <ol> <li>Incoming HTTP requests are handled by an actor called    <code>KnoraService</code>, which delegates them to routing functions (in    the <code>routing</code> package).</li> <li>For each request, a routing function gets an Pekko HTTP    <code>RequestContext</code>, and calls <code>RouteUtilV2.runRdfRouteWithFuture</code> (in API v2) to send a    message to a supervisor actor to fulfil the request. This creates    a <code>Future</code> that will complete when the relevant responder sends    its reply. The routing utility registers a callback on this <code>Future</code>    to handle the reply message when it becomes available.</li> <li>The supervisor forwards the message to be handled by the appropriate    responder.</li> <li>The responder's <code>receive</code> method receives the message, and calls    some private method that produces a reply message inside a <code>Future</code>.    This may involve sending messages to other actors using <code>ask</code>,    getting futures back, and combining them into a single future    containing the reply message.</li> <li>The responder passes that future to <code>ActorUtils.future2Message</code>,    which registers a callback on it. When the future completes (perhaps    in another thread), the callback sends the reply message. In the    meantime, the responder doesn't block, so it can start handling the    next request.</li> <li>When the responder's reply becomes available, the routing utility's    callback registered in (2) calls <code>complete</code> on the <code>RequestContext</code>, which    sends an HTTP response to the client.</li> </ol> <p>The basic rule of thumb is this: if you're writing a method in an actor, and anything in the method needs to come from a future (e.g. because you need to use <code>ask</code> to get some information from another actor), have the method return a future.</p>"},{"location":"DSP-API/05-internals/design/principles/futures-with-pekko/#mixing-futures-with-non-futures","title":"Mixing Futures with non-Futures","text":"<p>If you have a <code>match ... case</code> or <code>if</code> expression, and one branch obtains some data in a future, but another branch can produce the data immediately, you can wrap the result of the latter branch in a future, so that both branches have the same type. Here we use an alternative implementation of <code>scala.concurrent.Future</code>, found in <code>akka.http.scaladsl.util.FastFuture</code>, which tries to avoid scheduling to an <code>scala.concurrent.ExecutionContext</code> if possible, i.e. if the given future value is already present:</p> <pre><code>def getTotalOfFooAndBar(howToGetFoo: String): Future[Int] = {\n  for {\n    foo &lt;- howToGetFoo match {\n      case \"askForIt\" =&gt; (fooActor ? GetFoo(\"foo\")).mapTo[Foo]\n      case \"createIt\" =&gt; FastFuture.successful(new Foo())\n    }\n\n    bar &lt;- (barActor ? GetBar(\"bar\")).mapTo[Bar]\n\n    total = foo.getCount + bar.getCount\n  } yield total\n}\n</code></pre>"},{"location":"DSP-API/05-internals/design/principles/futures-with-pekko/#how-to-write-for-comprehensions","title":"How to Write For-Comprehensions","text":"<p>Here are some basic rules for writing <code>for</code>-comprehensions:</p> <ol> <li>The first line of a <code>for</code>-comprehension has to be a \"generator\",    i.e. it has to use the <code>&lt;-</code> operator. If you want to write an    assignment (using <code>=</code>) as the first line, the workaround is to wrap    the right-hand side in a monad (like <code>Future</code>) and use <code>&lt;-</code> instead.</li> <li>Assignments (using <code>=</code>) are written without <code>val</code>.</li> <li>You're not allowed to write statements that throw away their return    values, so if you want to call something like <code>println</code> that returns    <code>Unit</code>, you have to assign its return value to <code>_</code>.</li> </ol> <p>The <code>yield</code> returns an object of the same type as the generators, which all have to produce the same type (e.g. <code>Future</code>).</p>"},{"location":"DSP-API/05-internals/design/principles/futures-with-pekko/#execution-contexts","title":"Execution Contexts","text":"<p>Whenever you use a future, there has to be an implicit 'execution context' in scope. Scala's documentation on futures says, 'you can think of execution contexts as thread pools'.</p> <p>If you don't have an execution context in scope, you'll get a compile error asking you to include one, and suggesting that you could use <code>import scala.concurrent.ExecutionContext.Implicits.global</code>. Don't do this, because the global Scala execution context is not the most efficient option. Instead, use Knora's custom execution context like so:</p> <pre><code>implicit val executionContext: ExecutionContext = system.dispatchers.lookup(KnoraDispatchers.KnoraActorDispatcher)\n</code></pre>"},{"location":"DSP-API/05-internals/design/principles/http-module/","title":"HTTP Module","text":""},{"location":"DSP-API/05-internals/design/principles/http-module/#http-module","title":"HTTP Module","text":"<p>The http module holds only a convenience method for adding CORS support to api routes. The CORS implementation uses the pekko-http-cors directives implementation.</p>"},{"location":"DSP-API/05-internals/design/principles/rdf-api/","title":"RDF Processing API","text":""},{"location":"DSP-API/05-internals/design/principles/rdf-api/#rdf-processing-api","title":"RDF Processing API","text":"<p>DSP provides an API for parsing and formatting RDF data and for working with RDF graphs. This allows DSP developers to use a single, idiomatic Scala API as a fa\u00e7ade for a Java RDF library.</p>"},{"location":"DSP-API/05-internals/design/principles/rdf-api/#overview","title":"Overview","text":"<p>The API is in the package <code>org.knora.webapi.messages.util.rdf</code>. It includes:</p> <ul> <li> <p><code>RdfModel</code>, which represents a set of RDF graphs (a default graph and/or one or more named graphs).   A model can be constructed from scratch, modified, and searched.</p> </li> <li> <p><code>RdfNode</code> and its subclasses, which represent RDF nodes (IRIs, blank nodes, and literals).</p> </li> <li> <p><code>Statement</code>, which represents a triple or quad.</p> </li> <li> <p><code>RdfNodeFactory</code>, which creates nodes and statements.</p> </li> <li> <p><code>RdfModelFactory</code>, which creates empty RDF models.</p> </li> <li> <p><code>RdfFormatUtil</code>, which parses and formats RDF models.</p> </li> <li> <p><code>JsonLDUtil</code>, which provides specialised functionality for working   with RDF in JSON-LD format, and for converting between RDF models   and JSON-LD documents. <code>RdfFormatUtil</code> uses <code>JsonLDUtil</code> when appropriate.</p> </li> <li> <p><code>ShaclValidator</code>, which validates RDF models using SHACL shapes.</p> </li> </ul> <p>To work with RDF models, start with <code>RdfFeatureFactory</code>, which returns instances of <code>RdfNodeFactory</code>, <code>RdfModelFactory</code>, <code>RdfFormatUtil</code>, and <code>ShaclValidator</code>.  <code>JsonLDUtil</code> does not need a feature factory.</p> <p>To iterate efficiently over the statements in an <code>RdfModel</code>, use its <code>iterator</code> method. An <code>RdfModel</code> cannot be modified while you are iterating over it. If you are iterating to look for statements to modify, you can collect a <code>Set</code> of statements to remove and a <code>Set</code> of statements to add, and perform these update operations after you have finished the iteration.</p>"},{"location":"DSP-API/05-internals/design/principles/rdf-api/#rdf-stream-processing","title":"RDF stream processing","text":"<p>To read or write a large amount of RDF data without generating a large string object, you can use the stream processing methods in <code>RdfFormatUtil</code>.</p> <p>To parse an <code>InputStream</code> to an <code>RdfModel</code>, use <code>inputStreamToRdfModel</code>. To format an <code>RdfModel</code> to an <code>OutputStream</code>, use <code>rdfModelToOutputStream</code>.</p> <p>To parse RDF data from an <code>InputStream</code> and process it one statement at a time, you can write a class that implements the <code>RdfStreamProcessor</code> trait, and use it with the <code>RdfFormatUtil.parseWithStreamProcessor</code> method. Your <code>RdfStreamProcessor</code> can also send one statement at a time to a formatting stream processor, which knows how to write RDF to an <code>OutputStream</code> in a particular format. Use <code>RdfFormatUtil.makeFormattingStreamProcessor</code> to construct one of these.</p>"},{"location":"DSP-API/05-internals/design/principles/rdf-api/#sparql-queries","title":"SPARQL queries","text":"<p>In tests, it can be useful to run SPARQL queries to check the content of an <code>RdfModel</code>. To do this, use the <code>RdfModel.asRepository</code> method, which returns an <code>RdfRepository</code> that can run <code>SELECT</code> queries.</p> <p>The configuration of the default graph depends on which underlying RDF library is used. If you are querying data in named graphs, use <code>FROM</code> or quad patterns rather than the default graph.</p>"},{"location":"DSP-API/05-internals/design/principles/rdf-api/#shacl-validation","title":"SHACL validation","text":"<p>On startup, graphs of SHACL shapes are loaded from Turtle files in a directory specified by <code>app.shacl.shapes-dir</code> in <code>application.conf</code>, and in subdirectories of that directory. To validate the default graph of an <code>RdfModel</code> using a graph of SHACL shapes, call <code>ShaclValidator.validate</code>, specifying the relative path of the Turtle file containing the graph of shapes.</p>"},{"location":"DSP-API/05-internals/design/principles/rdf-api/#implementations","title":"Implementations","text":"<ul> <li> <p>The Jena-based implementation, in package <code>org.knora.webapi.messages.util.rdf.jenaimpl</code>.</p> </li> <li> <p>The RDF4J-based implementation, in package <code>org.knora.webapi.messages.util.rdf.rdf4jimpl</code>.</p> </li> </ul>"},{"location":"DSP-API/05-internals/design/principles/rdf-api/#todo","title":"TODO","text":"<ul> <li>SHACL validation.</li> </ul>"},{"location":"DSP-API/05-internals/design/principles/store-module/","title":"Store Module","text":""},{"location":"DSP-API/05-internals/design/principles/store-module/#store-module","title":"Store Module","text":""},{"location":"DSP-API/05-internals/design/principles/store-module/#overview","title":"Overview","text":"<p>GraphDB and embedded Jena TDB triplestores support is deprecated since  v20.1.1 of DSP-API.</p> <p>The store module houses the different types of data stores supported by Knora. At the moment, only triplestores and IIIF servers (Sipi) are supported. The triplestore support is implemented in the <code>org.knora.webapi.store.triplestore</code> package and the IIIF server support in <code>org.knora.webapi.store.iiif</code> package.</p>"},{"location":"DSP-API/05-internals/design/principles/store-module/#lifecycle","title":"Lifecycle","text":"<p>At the top level, the store package houses the <code>StoreManager</code>-Actor which is started when Knora starts. The <code>StoreManager</code> then starts the <code>TriplestoreManager</code> and <code>IIIFManager</code>, which each in turn starts their correct actor implementation.</p>"},{"location":"DSP-API/05-internals/design/principles/store-module/#triplestores","title":"Triplestores","text":"<p>Currently, the only supported triplestore is Apache Jena Fuseki, a HTTP-based triplestore.</p> <p>HTTP-based triplestore support is implemented in the <code>org.knora.webapi.triplestore.http</code> package.</p> <p>An HTTP-based triplestore is one that is accessed remotely over the HTTP protocol. <code>HttpTriplestoreConnector</code> supports the open source triplestore Apache Jena Fuseki.</p>"},{"location":"DSP-API/05-internals/design/principles/store-module/#iiif-servers","title":"IIIF Servers","text":"<p>Currently, only support for SIPI is implemented in <code>org.knora.webapi.store.iiifSipiConnector</code>.</p>"},{"location":"DSP-API/05-internals/design/principles/triplestore-updates/","title":"Triplestore Updates","text":""},{"location":"DSP-API/05-internals/design/principles/triplestore-updates/#triplestore-updates","title":"Triplestore Updates","text":""},{"location":"DSP-API/05-internals/design/principles/triplestore-updates/#requirements","title":"Requirements","text":""},{"location":"DSP-API/05-internals/design/principles/triplestore-updates/#general","title":"General","text":"<p>The supported update operations are:</p> <ul> <li>Create a new resource with its initial values.</li> <li>Add a new value.</li> <li>Change a value.</li> <li>Delete a value (i.e. mark it as deleted).</li> <li>Delete a resource (i.e. mark it as deleted).</li> </ul> <p>Users must be able to edit the same data concurrently.</p> <p>Each update must be atomic and leave the database in a consistent, meaningful state, respecting ontology constraints and permissions.</p> <p>The application must not use any sort of long-lived locks, because they tend to hinder concurrent edits, and it is difficult to ensure that they are released when they are no longer needed. Instead, if a user requests an update based on outdated information (because another user has just changed something, and the first user has not found out yet), the update must be not performed, and the application must notify the user who requested it, suggesting that the user should check the relevant data and try again if necessary. (We may eventually provide functionality to help users merge edits in such a situation. The application can also encourage users to coordinate with one another when they are working on the same data, and may eventually provide functionality to facilitate this coordination.)</p> <p>We can assume that each SPARQL update operation will run in its own database transaction with an isolation level of 'read committed'. We cannot assume that it is possible to run more than one SPARQL update in a single database transaction. The SPARQL 1.1 Protocol does not provide a way to do this, and currently it can be done only by embedding the triplestore in the application and using a vendor-specific API, but we cannot require this in Knora.)</p>"},{"location":"DSP-API/05-internals/design/principles/triplestore-updates/#permissions","title":"Permissions","text":"<p>To create a new value (as opposed to a new version of an existing value), the user must have permission to modify the containing resource.</p> <p>To create a new version of an existing value, the user needs only to have permission to modify the current version of the value; no permissions on the resource are needed.</p> <p>Since changing a link requires deleting the old link and creating a new one (as described in Linking), a user wishing to change a link must have modify permission on both the containing resource and the <code>knora-base:LinkValue</code> for the existing link.</p> <p>When a new resource or value is created, it can be given default permissions specified the project's admin data, or (only in API v2) custom permissions can be specified.</p>"},{"location":"DSP-API/05-internals/design/principles/triplestore-updates/#ontology-constraints","title":"Ontology Constraints","text":"<p>Knora must not allow an update that would violate an ontology constraint.</p> <p>When creating a new value (as opposed to adding a new version of an existing value), Knora must not allow the update if the containing resource's OWL class does not contain a cardinality restriction for the submitted property, or if the new value would violate the cardinality restriction.</p> <p>It must also not allow the update if the type of the submitted value does not match the <code>knora-base:objectClassConstraint</code> of the property, or if the property has no <code>knora-base:objectClassConstraint</code>. In the case of a property that points to a resource, Knora must ensure that the target resource belongs to the OWL class specified in the property's <code>knora-base:objectClassConstraint</code>, or to a subclass of that class.</p>"},{"location":"DSP-API/05-internals/design/principles/triplestore-updates/#duplicate-and-redundant-values","title":"Duplicate and Redundant Values","text":"<p>When creating a new value, or changing an existing value, Knora checks whether the submitted value would duplicate an existing value for the same property in the resource. The definition of 'duplicate' depends on the type of value; it does not necessarily mean that the two values are strictly equal. For example, if two text values contain the same Unicode string, they are considered duplicates, even if they have different Standoff markup. If resource <code>R</code> has property <code>P</code> with value <code>V1</code>, and <code>V1</code> is a duplicate of <code>V2</code>, the API server must not add another instance of property <code>P</code> with value <code>V2</code>. However, if the requesting user does not have permission to see <code>V2</code>, the duplicate is allowed, because forbidding it would reveal the contents of <code>V2</code> to the user.</p> <p>When creating a new version of a value, Knora also checks whether the new version is redundant, given the existing value. It is possible for the definition of 'redundant' can depend on the type of value, but in practice, it means that the values are strictly equal: any change, however trivial, is allowed.</p>"},{"location":"DSP-API/05-internals/design/principles/triplestore-updates/#versioning","title":"Versioning","text":"<p>Each Knora value (i.e. something belonging to an OWL class derived from <code>knora-base:Value</code>) is versioned. This means that once created, a value is never modified. Instead, 'changing' a value means creating a new version of the value --- actually a new value --- that points to the previous version using <code>knora-base:previousValue</code>. The versions of a value are a singly-linked list, pointing backwards into the past. When a new version of a value is made, the triple that points from the resource to the old version (using a subproperty of <code>knora-base:hasValue</code>) is removed, and a triple is added to point from the resource to the new version. Thus the resource always points only to the current version of the value, and the older versions are available only via the current version's <code>knora-base:previousValue</code> predicate.</p> <p>Unlike values, resources (members of OWL classes derived from <code>knora-base:Resource</code>) are not versioned. The data that is attached to a resource, other than its values, can be modified.</p>"},{"location":"DSP-API/05-internals/design/principles/triplestore-updates/#deleting","title":"Deleting","text":"<p>Knora does not actually delete resources or values; it only marks them as deleted. Deleted data is normally hidden. All resources and values must have the predicate <code>knora- base:isDeleted</code>, whose object is a boolean. If a resource or value has been marked as deleted, it has <code>knora-base:isDeleted true</code> and has a <code>knora-base:deleteDate</code>. An optional <code>knora-base:deleteComment</code> may be added to explain why the resource or value has been marked as deleted.</p> <p>Normally, a value is marked as deleted without creating a new version of it. However, link values must be treated as a special case. Before a <code>LinkValue</code> can be marked as deleted, its reference count must be decremented to 0. Therefore, a new version of the <code>LinkValue</code> is made, with a reference count of 0, and it is this new version that is marked as deleted.</p> <p>Since it is necessary to be able to find out when a resource was deleted, it is not possible to undelete a resource. Moreover, to simplify the checking of cardinality constraints, and for consistency with resources, it is not possible to undelete a value, and no new versions of a deleted value can be made. Instead, if desired, a new resource or value can be created by copying data from a deleted resource or value.</p>"},{"location":"DSP-API/05-internals/design/principles/triplestore-updates/#linking","title":"Linking","text":"<p>Links must be treated differently to other types of values. Knora needs to maintain information about the link, including permissions and a version history. Since the link does not have a unique IRI of its own, Knora uses RDF reifications for this purpose. Each link between two resources has exactly one (non-deleted) <code>knora-base:LinkValue</code>. The resource itself has a predicate that points to the <code>LinkValue</code>, using a naming convention in which the word <code>Value</code> is appended to the name of the link predicate to produce the link value predicate. For example, if a resource representing a book has a predicate called <code>hasAuthor</code> that points to another resource, it must also have a predicate called <code>hasAuthorValue</code> that points to the <code>LinkValue</code> in which information about the link is stored. To find a particular <code>LinkValue</code>, one can query it either by using its IRI (if known), or by using its <code>rdf:subject</code>, <code>rdf:predicate</code>, and <code>rdf:object</code> (and excluding link values that are marked as deleted).</p> <p>Like other values, link values are versioned. The link value predicate always points from the resource to the current version of the link value, and previous versions are available only via the current version's <code>knora-base:previousValue</code> predicate. Deleting a link means deleting the triple that links the two resources, and making a new version of the link value, marked with <code>knora-base:isDeleted</code>. A triple then points from the resource to this new, deleted version (using the link value property).</p> <p>The API allows a link to be 'changed' so that it points to a different target resource. This is implemented as follows: the existing triple connecting the two resources is removed, and a new triple is added using the same link property and pointing to the new target resource. A new version of the old link's <code>LinkValue</code> is made, marked with <code>knora-base:isDeleted</code>. A new <code>LinkValue</code> is made for the new link. The new <code>LinkValue</code> has no connection to the old one.</p> <p>When a resource contains <code>knora-base:TextValue</code> with Standoff markup that includes a reference to another resource, this reference is materialised as a direct link between the two resources, to make it easier to query. A special link property, <code>knora-base:hasStandoffLinkTo</code>, is used for this purpose. The corresponding link value property, <code>knora-base:hasStandoffLinkToValue</code>, points to a <code>LinkValue</code>. This <code>LinkValue</code> contains a reference count, indicated by <code>knora-base:valueHasRefCount</code>, that represents the number of text values in the containing resource that include one or more Standoff references to the specified target resource. Each time this number changes, a new version of this <code>LinkValue</code> is made. When the reference count reaches zero, the triple with <code>knora-base:hasStandoffLinkTo</code> is removed, and a new version of the <code>LinkValue</code> is made and marked with <code>knora-base:isDeleted</code>. If the same resource reference later appears again in a text value, a new triple is added using <code>knora-base:hasStandoffLinkTo</code>, and a new <code>LinkValue</code> is made, with no connection to the old one.</p> <p>For consistency, every <code>LinkValue</code> contains a reference count. If the link property is not <code>knora-base:hasStandoffLinkTo</code>, the reference count will always be either 1 (if the link exists) or 0 (if it has been deleted, in which case the link value will also be marked with <code>knora-base:isDeleted</code>).</p> <p>When a <code>LinkValue</code> is created for a standoff resource reference, it is given the same permissions as the text value containing the reference.</p>"},{"location":"DSP-API/05-internals/design/principles/triplestore-updates/#design","title":"Design","text":""},{"location":"DSP-API/05-internals/design/principles/triplestore-updates/#responsibilities-of-responders","title":"Responsibilities of Responders","text":"<p>The resources responder (<code>ResourcesResponderV2</code>) has sole responsibility for generating SPARQL to create and updating resources, and the values responder (<code>ValuesResponderV2</code>) has sole responsibility for generating SPARQL to create and update values. When a new resource is created with its values, the values responder generates SPARQL statements that can be included in the <code>INSERT</code> clause of a SPARQL update to create the values, and the resources responder adds these statements to the SPARQL update that creates the resource. This ensures that the resource and its values are created in a single SPARQL update operation, and hence in a single triplestore transaction.</p>"},{"location":"DSP-API/05-internals/design/principles/triplestore-updates/#application-level-locking","title":"Application-level Locking","text":"<p>The 'read committed' isolation level cannot prevent a scenario where two users want to add the same data at the same time. It is possible that both requests would do pre-update checks and simultaneously find that it is OK to add the data, and that both updates would then succeed, inserting redundant data and possibly violating ontology constraints. Therefore, Knora uses short-lived, application-level write locks on resources, to ensure that only one request at a time can update a given resource. Before each update, the application acquires a lock on a resource. To prevent deadlocks, Knora locks only one resource per API operation. It then does the pre-update checks and the update, then releases the lock. The lock implementation (in <code>IriLocker</code>) requires each API request message to include a random UUID, which is generated in the API Routing package. Using application-level locks allows us to do pre-update checks in their own transactions, and finally to do the SPARQL update in its own transaction.</p>"},{"location":"DSP-API/05-internals/design/principles/triplestore-updates/#ensuring-data-consistency","title":"Ensuring Data Consistency","text":"<p>Knora enforces consistency constraints using three redundant mechanisms:</p> <ol> <li>By doing pre-update checks using SPARQL SELECT queries and cached    ontology data.</li> <li>By doing checks in the <code>WHERE</code> clauses of SPARQL updates.</li> <li>Deprecated: By using GraphDB's built-in consistency checker (see    Consistency Checking).</li> </ol> <p>We take the view that redundant consistency checks are a good thing.</p> <p>Pre-update checks are SPARQL <code>SELECT</code> queries that are executed while holding an application-level lock on the resource to be updated. These checks should work with any triplestore, and can return helpful, Knora-specific error messages to the client if the request would violate a consistency constraint.</p> <p>However, the SPARQL update itself is our only chance to do pre-update checks in the same transaction that will perform the update. The design of the SPARQL 1.1 Update standard makes it possible to ensure that if certain conditions are not met, the update will not be performed. In our SPARQL update code, each update contains a <code>WHERE</code> clause, possibly a <code>DELETE</code> clause, and an <code>INSERT</code> clause. The <code>WHERE</code> clause is executed first. It performs consistency checks and provides values for variables that are used in the <code>DELETE</code> and/or <code>INSERT</code> clauses. In our updates, if the expectations of the <code>WHERE</code> clause are not met (e.g. because the data to be updated does not exist), the <code>WHERE</code> clause should return no results; as a result, the update will not be performed.</p> <p>Regardless of whether the update changes the contents of the triplestore, it returns nothing. If the update did nothing because the conditions of the WHERE clause were not met, the only way to find out is to do a <code>SELECT</code> afterwards. Moreover, in this case, there is no straightforward way to find out which conditions was not met. This is one reason why Knora does pre-update checks using separate <code>SELECT</code> queries and/or cached ontology data, before performing the update. This makes it possible to return specific error messages to the user to indicate why an update cannot be performed.</p> <p>Moreover, while some checks are easy to do in a SPARQL update, others are difficult, impractical, or impossible. Easy checks include checking whether a resource or value exists or is deleted, and checking that the <code>knora-base:objectClassConstraint</code> of a predicate matches the <code>rdf:type</code> of its intended object. Cardinality checks are not very difficult, but they perform poorly on Jena. Knora does not do permission checks in SPARQL, because its permission-checking algorithm is too complex to be implemented in SPARQL. For this reason, Knora's check for duplicate values cannot be done in SPARQL update code, because it relies on permission checks.</p> <p>In a bulk import operation, which can create a large number of resources in a single SPARQL update, a <code>WHERE</code> clause can become very expensive for the triplestore, in terms of memory as well as execution time. Moreover, RDF4J (and hence GraphDB) uses a recursive algorithm to parse SPARQL queries with <code>WHERE</code> clauses, so the size of a <code>WHERE</code> clause is limited by the stack space available to the Java Virtual Machine. Therefore, in bulk import operations, Knora uses <code>INSERT DATA</code>, which does not involve a <code>WHERE</code> clause. Bulk imports thus rely on checks (1) and (3) above.</p>"},{"location":"DSP-API/05-internals/design/principles/triplestore-updates/#sparql-update-examples","title":"SPARQL Update Examples","text":"<p>The following sample SPARQL update code is simpler than what Knora actually does. It is included here to illustrate the way Knora's SPARQL updates are structured and how concurrent updates are handled.</p>"},{"location":"DSP-API/05-internals/design/principles/triplestore-updates/#finding-a-value-iri-in-a-values-version-history","title":"Finding a value IRI in a value's version history","text":"<p>We will need this query below. If a value is present in a resource property's version history, the query returns everything known about the value, or nothing otherwise:</p> <pre><code>prefix rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;\nprefix rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;\nprefix knora-base: &lt;http://www.knora.org/ontology/knora-base#&gt;\n\nSELECT ?p ?o\nWHERE {\n    BIND(IRI(\"http://rdfh.ch/c5058f3a\") as ?resource)\n    BIND(IRI(\"http://www.knora.org/ontology/0803/incunabula#book_comment\") as ?property)\n    BIND(IRI(\"http://rdfh.ch/c5058f3a/values/testComment002\") as ?searchValue)\n\n    ?resource ?property ?currentValue .\n    ?currentValue knora-base:previousValue* ?searchValue .\n    ?searchValue ?p ?o .\n}\n</code></pre>"},{"location":"DSP-API/05-internals/design/principles/triplestore-updates/#creating-the-initial-version-of-a-value","title":"Creating the initial version of a value","text":"<pre><code>prefix rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;\nprefix rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;\nprefix knora-base: &lt;http://www.knora.org/ontology/knora-base#&gt;\n\nWITH &lt;http://www.knora.org/ontology/0803/incunabula&gt;\nINSERT {\n    ?newValue rdf:type ?valueType ;\n              knora-base:valueHasString \"\"\"Comment 1\"\"\" ;\n              knora-base:attachedToUser &lt;http://rdfh.ch/users/91e19f1e01&gt; ;\n              knora-base:attachedToProject &lt;http://rdfh.ch/projects/77275339&gt; ;\n              knora-base:hasPermissions \"V knora-admin:KnownUser,knora-admin:UnknownUser|M knora-admin:ProjectMember\"  ;\n              knora-base:valueTimestamp ?currentTime .\n\n    ?resource ?property ?newValue .\n} WHERE {\n    BIND(IRI(\"http://rdfh.ch/c5058f3a\") as ?resource)\n    BIND(IRI(\"http://www.knora.org/ontology/0803/incunabula#book_comment\") as ?property)\n    BIND(IRI(\"http://rdfh.ch/c5058f3a/values/testComment001\") AS ?newValue)\n    BIND(IRI(\"http://www.knora.org/ontology/knora-base#TextValue\") AS ?valueType)\n    BIND(NOW() AS ?currentTime)\n\n    # Do nothing if the resource doesn't exist.\n    ?resource rdf:type ?resourceClass .\n\n    # Do nothing if the submitted value has the wrong type.\n    ?property knora-base:objectClassConstraint ?valueType .\n}\n</code></pre> <p>To find out whether the insert succeeded, the application can use the query in Finding a value IRI in a value's version history to look for the new IRI in the property's version history.</p>"},{"location":"DSP-API/05-internals/design/principles/triplestore-updates/#adding-a-new-version-of-a-value","title":"Adding a new version of a value","text":"<pre><code>prefix rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;\nprefix rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;\nprefix knora-base: &lt;http://www.knora.org/ontology/knora-base#&gt;\n\nWITH &lt;http://www.knora.org/ontology/0803/incunabula&gt;\nDELETE {\n    ?resource ?property ?currentValue .\n} INSERT {\n    ?newValue rdf:type ?valueType ;\n              knora-base:valueHasString \"\"\"Comment 2\"\"\" ;\n              knora-base:previousValue ?currentValue ;\n              knora-base:attachedToUser &lt;http://rdfh.ch/users/91e19f1e01&gt; ;\n              knora-base:attachedToProject &lt;http://rdfh.ch/projects/77275339&gt; ;\n              knora-base:hasPermissions \"V knora-admin:KnownUser,knora-admin:UnknownUser|M knora-admin:ProjectMember\"  ;\n              knora-base:valueTimestamp ?currentTime .\n\n    ?resource ?property ?newValue .\n} WHERE {\n    BIND(IRI(\"http://rdfh.ch/c5058f3a\") as ?resource)\n    BIND(IRI(\"http://rdfh.ch/c5058f3a/values/testComment001\") AS ?currentValue)\n    BIND(IRI(\"http://rdfh.ch/c5058f3a/values/testComment002\") AS ?newValue)\n    BIND(IRI(\"http://www.knora.org/ontology/knora-base#TextValue\") AS ?valueType)\n    BIND(NOW() AS ?currentTime)\n\n    ?resource ?property ?currentValue .\n    ?property knora-base:objectClassConstraint ?valueType .\n}\n</code></pre> <p>The update request must contain the IRI of the most recent version of the value (<code>http://rdfh.ch/c5058f3a/values/c3295339</code>). If this is not in fact the most recent version (because someone else has done an update), this operation will do nothing (because the <code>WHERE</code> clause will return no rows). To find out whether the update succeeded, the application will then need to do a SELECT query using the query in Finding a value IRI in a value's version history. In the case of concurrent updates, there are two possibilities:</p> <ol> <li>Users A and B are looking at version 1. User A submits an update and    it succeeds, creating version 2, which user A verifies using a    SELECT. User B then submits an update to version 1 but it fails,    because version 1 is no longer the latest version. User B's SELECT    will find that user B's new value IRI is absent from the value's    version history.</li> <li>Users A and B are looking at version 1. User A submits an update and    it succeeds, creating version 2. Before User A has time to do a    SELECT, user B reads the new value and updates it again. Both users    then do a SELECT, and find that both their new value IRIs are    present in the value's version history.</li> </ol>"},{"location":"DSP-API/05-internals/design/principles/triplestore-updates/#getting-all-versions-of-a-value","title":"Getting all versions of a value","text":"<pre><code>prefix rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;\nprefix rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;\nprefix knora-base: &lt;http://www.knora.org/ontology/knora-base#&gt;\n\nSELECT ?value ?valueTimestamp ?previousValue\nWHERE {\n    BIND(IRI(\"http://rdfh.ch/c5058f3a\") as ?resource)\n    BIND(IRI(\"http://www.knora.org/ontology/0803/incunabula#book_comment\") as ?property)\n    BIND(IRI(\"http://rdfh.ch/c5058f3a/values/testComment002\") AS ?currentValue)\n\n    ?resource ?property ?currentValue .\n    ?currentValue knora-base:previousValue* ?value .\n\n    OPTIONAL {\n        ?value knora-base:valueTimestamp ?valueTimestamp .\n    }\n\n    OPTIONAL {\n        ?value knora-base:previousValue ?previousValue .\n    }\n}\n</code></pre> <p>This assumes that we know the current version of the value. If the version we have is not actually the current version, this query will return no rows.</p>"},{"location":"DSP-API/05-internals/development/building-and-running/","title":"Build and Running","text":""},{"location":"DSP-API/05-internals/development/building-and-running/#building-and-running","title":"Building and Running","text":""},{"location":"DSP-API/05-internals/development/building-and-running/#setting-up-docker","title":"Setting up Docker","text":"<ol> <li>Install Docker</li> <li>Go to Docker preferences and increase the memory allocation.        The stack's memory usage is limited to ~20GB, though it should only use that much during heavy workloads. You should    be good to go in any case if you allocate 22GB or more.</li> </ol>"},{"location":"DSP-API/05-internals/development/building-and-running/#running-the-stack","title":"Running the stack","text":"<p>With Docker installed and configured,</p> <ol> <li>Run the following:</li> </ol> <pre><code>make init-db-test\n</code></pre> <p>to create the knora-test repository and initialize it with loading some test data into the triplestore (Fuseki).</p> <ol> <li>Start the entire knora-stack (fuseki (db), sipi, api, salsah1) with the following command:</li> </ol> <pre><code>make stack-up\n</code></pre> <p>Note: To delete the existing containers and for a clean start, before creating the knora-test repository explained in the first step above, run the following:</p> <pre><code>make stack-down-delete-volumes\n</code></pre> <p>This stops the knora-stack and deletes any created volumes (deletes the database!).</p> <p>To only shut down the Knora-Stack without deleting the containers:</p> <pre><code>make stack-down\n</code></pre> <p>To restart the knora-api use the following command:</p> <pre><code>make stack-restart-api\n</code></pre> <p>If a change is made to knora-api code, only its image needs to be rebuilt. In that case, use</p> <pre><code>make stack-up-fast\n</code></pre> <p>which starts the knora-stack by skipping rebuilding most of the images (only api image is rebuilt).</p> <p>To work on Metadata, use</p> <pre><code>make stack-up-with-metadata\n</code></pre> <p>which will put three example metadata sets to the projects <code>anything</code>, <code>images</code> and <code>dokubib</code>. This data can then be consumed from <code>localhost:3333/v2/metadata/http%3A%2F%2Frdfh.ch%2Fprojects%2F0001</code>, <code>localhost:3333/v2/metadata/http%3A%2F%2Frdfh.ch%2Fprojects%2F00FF</code> and <code>localhost:3333/v2/metadata/http%3A%2F%2Frdfh.ch%2Fprojects%2F0804</code>.</p>"},{"location":"DSP-API/05-internals/development/building-and-running/#managing-containers-in-docker-dashboard","title":"Managing Containers in Docker Dashboard","text":"<p>The Docker Desktop is installed on your computer during the installation of docker, it enables easy management of docker containers and access to Docker Hub. To manage your docker containers, docker desktop provides a dashbord.</p> <p></p> <p>In docker dashboard, you can see all the running containers, stop, start, restart, or completely delete them. For example, when you start the knora-stack as explained above, in the docker dashboard you will see following:</p> <p></p>"},{"location":"DSP-API/05-internals/development/building-and-running/#access-the-logs","title":"Access the logs","text":"<p>To read information logged out of any container (db, api, etc.), click on the container in the dashboard and choose <code>logs</code>. The example, below shows the logs of the database (db) container that includes the last SPARQL query sent to the triplestore.</p> <p></p> <p>Note that, you can also print out the log information directly from the command line. For example, the same logs of the database container can be printed out using the following command:</p> <pre><code>make stack-logs-db\n</code></pre> <p>Similarly, the logs of the other containers can be printed out by running make with <code>stack-logs-api</code> or <code>stack-logs-sipi</code>. These commands print out and follow the logs, to only print the logs out without following, use <code>-no-follow</code> version of the commands for example:</p> <pre><code>make stack-logs-db-no-follow\n</code></pre> <p>Lastly, to print out the entire logs of the running knora-stack, use</p> <pre><code>make stack-logs\n</code></pre> <p>With the Docker plugin installed, you can attach a terminal to the docker container within VS Code. This will stream the docker logs to the terminal window of the editor.</p> <p></p> <p>The docker plugin also allows for a number of other useful features, like inspecting the container's file system or attaching a shell to the container.</p>"},{"location":"DSP-API/05-internals/development/building-and-running/#running-the-automated-tests","title":"Running the automated tests","text":"<p>To run all test targets, use the following in the command line:</p> <pre><code>make test-all\n</code></pre> <p>To run a single test from the command line, for example <code>SearchV2R2RSpec</code>, run the following:</p> <pre><code>sbt \" webapi / testOnly *SearchV2R2RSpec* \"\n</code></pre> <p>Note: to run tests, the api container must be stopped first!</p>"},{"location":"DSP-API/05-internals/development/building-and-running/#build-and-publish-documentation","title":"Build and Publish Documentation","text":"<p>First, you need to install the requirements through:</p> <pre><code>make docs-install-requirements\n</code></pre> <p>Then, to build docs into the local <code>site</code> folder, run the following command:</p> <pre><code>make docs-build\n</code></pre> <p>At this point, you can serve the docs to view them locally using</p> <pre><code>make docs-serve\n</code></pre> <p>Lastly, to build and publish docs to Github Pages, use</p> <pre><code>make docs-publish\n</code></pre>"},{"location":"DSP-API/05-internals/development/building-and-running/#build-and-publish-docker-images","title":"Build and Publish Docker Images","text":"<p>To build and publish all Docker images locally</p> <pre><code>make docker-build\n</code></pre> <p>To publish all Docker images to Dockerhub</p> <pre><code>make docker-publish\n</code></pre>"},{"location":"DSP-API/05-internals/development/building-and-running/#continuous-integration","title":"Continuous Integration","text":"<p>For continuous integration testing, we use Github CI Actions. Every commit pushed to the git repository or every pull request, triggers the build. Additionally, in Github there is a small checkmark beside every commit, signaling the status of the build (successful, unsuccessful, ongoing).</p> <p>The build that is executed on Github CI Actions is defined in the <code>.github/workflows/*.yml</code> files.</p>"},{"location":"DSP-API/05-internals/development/building-and-running/#webapi-server-startup-flags","title":"Webapi Server Startup-Flags","text":"<p>The Webapi-Server can be started with a number of flags.</p>"},{"location":"DSP-API/05-internals/development/building-and-running/#loaddemodata-flag","title":"<code>loadDemoData</code> - Flag","text":"<p>When the webapi-server is started with the <code>loadDemoData</code> flag, then at startup, the data which is configured in <code>application.conf</code> under the <code>app.triplestore.rdf-data</code> key is loaded into the triplestore, and any data in the triplestore is removed beforehand.</p>"},{"location":"DSP-API/05-internals/development/docker-cheat-sheet/","title":"Docker Cheat Sheet","text":""},{"location":"DSP-API/05-internals/development/docker-cheat-sheet/#docker-cheat-sheet","title":"Docker Cheat Sheet","text":"<p>A complete cheat sheet can be found here</p>"},{"location":"DSP-API/05-internals/development/docker-cheat-sheet/#lifecycle","title":"Lifecycle","text":"<ul> <li>docker create   creates a container but does not start it.</li> <li>docker run   creates and starts a container in one operation.</li> <li>docker rename   allows the container to be renamed.</li> <li>docker rm   deletes a container.</li> <li>docker update   updates a container's resource limits.</li> </ul> <p>If you want a transient container, <code>docker run --rm</code> will remove the container after it stops.</p> <p>If you want to map a directory on the host to a docker container, <code>docker run -v $HOSTDIR:$DOCKERDIR</code>.</p>"},{"location":"DSP-API/05-internals/development/docker-cheat-sheet/#starting-and-stopping","title":"Starting and Stopping","text":"<ul> <li>docker start   starts a container so it is running.</li> <li>docker stop stops a   running container.</li> <li>docker restart   stops and starts a container.</li> <li>docker pause   pauses a running container, \"freezing\" it in place.</li> <li>docker attach   will connect to a running container.</li> </ul>"},{"location":"DSP-API/05-internals/development/docker-cheat-sheet/#info","title":"Info","text":"<ul> <li>docker ps   shows running containers.</li> <li>docker logs gets   logs from container. (You can use a custom log driver, but logs is   only available for json-file and journald in 1.10)</li> <li>docker inspect   looks at all the info on a container (including IP address).</li> <li>docker events   gets events from container.</li> <li>docker port shows   public facing port of container.</li> <li>docker top   shows running processes in container.</li> <li>docker stats shows   containers' resource usage statistics.</li> <li>docker diff shows   changed files in the container's FS.</li> </ul> <p><code>docker ps -a</code> shows running and stopped containers.</p> <p><code>docker stats --all</code> shows a running list of containers.</p>"},{"location":"DSP-API/05-internals/development/docker-cheat-sheet/#executing-commands","title":"Executing Commands","text":"<ul> <li>docker exec to   execute a command in container.</li> </ul> <p>To enter a running container, attach a new shell process to a running container called foo, use: <code>docker exec -it foo /bin/bash</code>.</p>"},{"location":"DSP-API/05-internals/development/docker-cheat-sheet/#images","title":"Images","text":"<ul> <li>docker images shows all images.</li> <li>docker build creates image from Dockerfile.</li> </ul>"},{"location":"DSP-API/05-internals/development/docker-compose/","title":"Starting the DSP-Stack inside Docker Container","text":""},{"location":"DSP-API/05-internals/development/docker-compose/#starting-the-knora-stack-inside-docker-container","title":"Starting the Knora Stack inside Docker Container","text":"<p>To run Knora locally, we provide <code>docker-compose.yml</code> which can be used to start Fuseki, Sipi, Webapi running each in its own Docker container.</p> <p>To run the whole stack:</p> <pre><code>make stack-up\n</code></pre> <p>For additional information please see the Docker Compose documentation</p>"},{"location":"DSP-API/05-internals/development/generating-client-test-data/","title":"Generating Client Test Data","text":""},{"location":"DSP-API/05-internals/development/generating-client-test-data/#generating-client-test-data","title":"Generating Client Test Data","text":""},{"location":"DSP-API/05-internals/development/generating-client-test-data/#requirements","title":"Requirements","text":"<p>Generate test requests and responses for Knora's routes, to be used in testing client code without the need for a running Knora instance.</p>"},{"location":"DSP-API/05-internals/development/generating-client-test-data/#implementation","title":"Implementation","text":"<p>Client test data is generated as a side effect of running E2E tests. E2E tests use <code>ClientTestDataCollector</code> to collect API requests and responses. When the E2E tests have completed, the script <code>webapi/scripts/dump-client-test-data.sh</code> saves the collected test data in a Zip file. It then checks the filenames in the Zip file by comparing them with the list in <code>webapi/scripts/expected-client-test-data.txt</code>.</p>"},{"location":"DSP-API/05-internals/development/generating-client-test-data/#usage","title":"Usage","text":"<p>To generate client test data, type:</p> <pre><code>make client-test-data\n</code></pre> <p>When the tests have finished running, you will find the file <code>client-test-data.zip</code> in the current directory. Then, run this script to update the list of expected test data files:</p> <pre><code>webapi/scripts/update-expected-client-test-data.sh client-test-data.zip\n</code></pre>"},{"location":"DSP-API/05-internals/development/overview/","title":"Overview","text":""},{"location":"DSP-API/05-internals/development/overview/#overview","title":"Overview","text":"<p>Developing for DSP-API requires a complete local installation of Knora. The different parts are:</p> <ol> <li>The cloned DSP-API Github    repository</li> <li>Fuseki - supplied triplestore in the DSP-API Github repository.</li> <li>Sipi by building from     source or using the docker     image</li> </ol>"},{"location":"DSP-API/05-internals/development/overview/#knora-github-repository","title":"Knora Github Repository","text":"<pre><code>git clone https://github.com/dasch-swiss/dsp-api\n</code></pre>"},{"location":"DSP-API/05-internals/development/overview/#triplestore","title":"Triplestore","text":"<p>A number of triplestore implementations are available, including free software as well as proprietary options. DSP-API is designed to work with any standards-compliant triplestore. It is primarily tested with Apache Jena Fuseki.</p>"},{"location":"DSP-API/05-internals/development/overview/#sipi","title":"Sipi","text":""},{"location":"DSP-API/05-internals/development/overview/#build-sipi-docker-image","title":"Build Sipi Docker Image","text":"<p>The Sipi docker image needs to be build by hand, as it requires the Kakadu distribution.</p> <p>To build the image, and push it to the docker hub, follow the following steps:</p> <pre><code>$ git clone https://github.com/dhlab-basel/docker-sipi\n(copy the Kakadu distribution ``v7_8-01382N.zip`` to the ``docker-sipi`` directory)\n$ docker build -t daschswiss/sipi\n$ docker run --name sipi --rm -it -p 1024:1024 daschswiss/sipi\n(Ctrl-c out of terminal will stop and delete container)\n$ docker push daschswiss/sipi\n</code></pre> <p>Pushing the image to the docker hub requires prior authentication with <code>$ docker login</code>. The user needs to be registered on <code>hub.docker.com</code>. Also, the user needs to be allowed to push to the <code>dblabbasel</code> organisation.</p>"},{"location":"DSP-API/05-internals/development/overview/#running-sipi","title":"Running Sipi","text":"<p>To use the docker image stored locally or on the docker hub repository type:</p> <pre><code>docker run --name sipi -d -p 1024:1024 daschswiss/sipi\n</code></pre> <p>This will create and start a docker container with the <code>daschswiss/sipi</code> image in the background. The default behaviour is to start Sipi by calling the following command:</p> <pre><code>/sipi/local/bin/sipi -config /sipi/config/sipi.test-config.lua\n</code></pre> <p>To override this default behaviour, start the container by supplying another config file:</p> <pre><code>docker run --name sipi \\\n             -d \\\n             -p 1024:1024 \\\n             daschswiss/sipi \\\n             /sipi/local/bin/sipi -config /sipi/config/sipi.config.lua\n</code></pre> <p>You can also mount a directory (the local directory in this example), and use a config file that is outside of the docker container:</p> <pre><code>docker run --name sipi \\\n             -d \\\n             -p 1024:1024 \\\n             -v $PWD:/localdir \\\n             daschswiss/sipi \\\n             /sipi/local/bin/sipi -config /localdir/sipi.test-config.lua\n</code></pre>"},{"location":"DSP-API/05-internals/development/testing/","title":"Testing","text":""},{"location":"DSP-API/05-internals/development/testing/#testing","title":"Testing","text":""},{"location":"DSP-API/05-internals/development/testing/#how-to-write-and-run-unit-tests","title":"How to Write and Run Unit Tests","text":"<p>A test is not a unit test if:</p> <ul> <li>It talks to the database</li> <li>It communicates across the network</li> <li>It touches the file system</li> <li>It can\u2019t run at the same time as any of your other unit tests</li> <li>You have to do special things to your environment (such as editing config files) to run it</li> </ul> <p>Unit tests live in the <code>src/test</code> folder of our sbt projects.</p> <p>Run all unit tests from terminal:</p> <pre><code>sbt test\n</code></pre>"},{"location":"DSP-API/05-internals/development/testing/#how-to-write-and-run-integration-tests","title":"How to Write and Run Integration Tests","text":"<p>Mostly you should consider writing unit tests.  These can be executed fast and help developers more in their daily work.</p> <p>You might need to create an integration test because:</p> <ul> <li>The test needs to talk to a database</li> <li>It requires network</li> <li>It is slow and cannot run in parallel with other tests</li> <li>You have to do special things to the environment in order to run it</li> </ul> <p>In this case create it in the <code>src/it</code>  source set of our projects.</p> <p>.NOTE Currently only the <code>webapi</code> project supports integration tests.</p> <p>Run all integration tests from the terminal.</p> <pre><code>make integration-test\n</code></pre> <p>.NOTE The integration tests currently depend on a locally published Sipi container, the make target helps you with that.</p>"},{"location":"DSP-API/05-internals/development/testing/#debugging","title":"Debugging","text":"<p>You can debug unit tests directly in your IDE. </p> <p>For debugging the integration tests locally with <code>sbt</code> or your IDE you need to have a fresh SIPI container build:</p> <pre><code>make docker-build-sipi-image\n</code></pre>"},{"location":"DSP-API/05-internals/development/third-party/","title":"Third-Party Dependencies","text":"<p>Third party libraries are managed by SBT.</p>"},{"location":"DSP-API/05-internals/development/third-party/#defining-dependencies-in-dependenciesscala","title":"Defining Dependencies in <code>Dependencies.scala</code>","text":"<p>Within the <code>build.sbt</code> file, the <code>Dependencies</code> package is referenced, which is located in <code>project/Dependencies.scala</code>. All third party dependencies need to be declared there.</p>"},{"location":"DSP-API/05-internals/development/third-party/#referencing-a-third-party-library","title":"Referencing a third party library","text":"<p>There is an object <code>Dependencies</code> where each library should be declared in a <code>val</code>.</p> <pre><code>val akkaHttpCors = \"ch.megard\" %% \"pekko-http-cors\" % \"1.0.0\"\n</code></pre> <p>The first string corresponds to the group/organization in the library's maven artefact, the second string corresponds to the artefact ID and the third string defines the version.</p> <p>The strings are combined with <code>%</code> or <code>%%</code> operators, the latter fixing the dependency to the specified scala-version.</p> <p>It is also possible to use variables in these definitions, e.g. if multiple dependencies share a version number:</p> <pre><code>val ZioVersion = \"2.0.0-RC2\"\nval zio = \"dev.zio\" %% \"zio\" % ZioVersion\nval zioTest = \"dev.zio\" %% \"zio-test\" % ZioVersion\n</code></pre>"},{"location":"DSP-API/05-internals/development/third-party/#assigning-the-dependencies-to-a-specific-subproject","title":"Assigning the dependencies to a specific subproject","text":"<p>For each SBT project, there is one <code>Seq</code> in the <code>Dependencies</code> object. In order to make use of the declared dependencies, they must be referred to in the <code>Seq</code> of the respective subproject.</p> <pre><code>val webapiLibraryDependencies = Seq(\n    akkaActor,\n    akkaHttp,\n    akkaSlf4j % Runtime,\n    akkaHttpTestkit % Test,\n    ...\n)\n</code></pre> <p>By default, the dependencies will be scoped to compile time. But it's possible to override this to <code>Runtime</code> or <code>Test</code>.</p>"},{"location":"DSP-API/05-internals/development/third-party/#docker-image-versions","title":"Docker Image Versions","text":"<p>The required Docker image versions of <code>Sipi</code> and <code>Fuseki</code> are also defined in the <code>Dependencies.scala</code> file.</p>"},{"location":"DSP-API/05-internals/development/updating-repositories/","title":"Updating Repositories","text":""},{"location":"DSP-API/05-internals/development/updating-repositories/#updating-repositories","title":"Updating Repositories","text":""},{"location":"DSP-API/05-internals/development/updating-repositories/#requirements","title":"Requirements","text":"<ul> <li> <p>When a new version of Knora requires an existing repository to be updated,   do this automatically when Knora starts, if possible.</p> </li> <li> <p>Make the update process as fast as possible, with some indication of progress   as it runs.</p> </li> </ul>"},{"location":"DSP-API/05-internals/development/updating-repositories/#design","title":"Design","text":"<p>As explained in Knora Ontology Versions, the <code>knora-base</code> ontology contains a version string to ensure compatibility between a repository and a given version of Knora. The same version string is therefore hard-coded in the Knora source code, in the string constant <code>org.knora.webapi.KnoraBaseVersion</code>. For new pull requests, the format of this string is <code>knora-base vN</code>, where <code>N</code> is an integer that is incremented for each version.</p> <p>During Knora's startup process, <code>ApplicationActor</code> sends an <code>UpdateRepositoryRequest</code> message to the <code>StoreManager</code>, which forwards it to <code>TriplestoreManager</code>, which delegates it to <code>org.knora.webapi.store.triplestore.upgrade.RepositoryUpdater</code>.</p> <p><code>RepositoryUpdater</code> does the following procedure:</p> <ol> <li> <p>Check the <code>knora-base</code> version string in the repository.</p> </li> <li> <p>Consult <code>org.knora.webapi.store.triplestore.upgrade.RepositoryUpdatePlan</code> to see which    transformations are needed.</p> </li> <li> <p>Download the entire repository from the triplestore into an N-Quads file.</p> </li> <li> <p>Read the N-Quads file into an <code>RdfModel</code>.</p> </li> <li> <p>Update the <code>RdfModel</code> by running the necessary transformations, and replacing the    built-in DSP ontologies with the current ones.</p> </li> <li> <p>Save the <code>RdfModel</code> to a new N-Quads file.</p> </li> <li> <p>Empty the repository in the triplestore.</p> </li> <li> <p>Upload the transformed repository file to the triplestore.</p> </li> </ol> <p>To update the <code>RdfModel</code>, <code>RepositoryUpdater</code> runs a sequence of upgrade plugins, each of which is a class in <code>org.knora.webapi.store.triplestore.upgrade.plugins</code> and is registered in <code>RepositoryUpdatePlan</code>.</p>"},{"location":"DSP-API/05-internals/development/updating-repositories/#design-rationale","title":"Design Rationale","text":"<p>We tried and rejected several other designs:</p> <ul> <li> <p>Running SPARQL updates in the triplestore: too slow, and no way to report   progress during the update.</p> </li> <li> <p>Downloading the repository and transforming it in Python using   rdflib: too slow.</p> </li> <li> <p>Downloading the repository and transforming it in C++ using   Redland: also too slow.</p> </li> </ul> <p>The Scala implementation is the fastest by far.</p> <p>The whole repository is uploaded in a single transaction, rather than uploading one named graph at a time, because GraphDB's consistency checker can enforce dependencies between named graphs.</p>"},{"location":"DSP-API/05-internals/development/updating-repositories/#adding-an-upgrade-plugin","title":"Adding an Upgrade Plugin","text":"<p>Each time a pull request introduces changes that are not compatible with existing data, the following must happen:</p> <ul> <li> <p>The <code>knora-base</code> version number must be incremented in <code>knora-base.ttl</code> and   in the string constant <code>org.knora.webapi.KnoraBaseVersion</code>.</p> </li> <li> <p>A plugin must be added in the package <code>org.knora.webapi.store.triplestore.upgrade.plugins</code>,   to transform existing repositories so that they are compatible with the code changes   introduced in the pull request. Each new plugin must be registered   by adding it to the sequence returned by <code>RepositoryUpdatePlan.makePluginsForVersions</code>.</p> </li> </ul> <p>The order of version numbers (and the plugins) must correspond to the order in which the pull requests are merged.</p> <p>An upgrade plugin is a Scala class that extends <code>UpgradePlugin</code>. The name of the plugin class should refer to the pull request that made the transformation necessary, using the format <code>UpgradePluginPRNNNN</code>, where <code>NNNN</code> is the number of the pull request.</p> <p>A plugin's <code>transform</code> method takes an <code>RdfModel</code> (a mutable object representing the repository) and modifies it as needed.</p> <p>Before transforming the data, a plugin can check whether a required manual transformation has been carried out. If the requirement is not met, the plugin can throw <code>InconsistentRepositoryDataException</code> to abort the upgrade process.</p>"},{"location":"DSP-API/05-internals/development/updating-repositories/#testing-update-plugins","title":"Testing Update Plugins","text":"<p>Each plugin should have a unit test that extends <code>UpgradePluginSpec</code>. A typical test loads a file containing RDF test data into a <code>RdfModel</code>, runs the plugin, makes an <code>RdfRepository</code> containing the transformed <code>RdfModel</code>, and uses SPARQL to check the result.</p>"},{"location":"DSP-API/05-internals/development/vscode-config/","title":"Setup Visual Studio Code for development of DSP-API","text":"<p>To have full functionality, the Scala Metals plugin should be installed.</p> <p>Additionally, a number of plugins can be installed for convenience, but are not required.  Those include but are by no means limited to:</p> <ul> <li>Docker - to attach to running docker containers</li> <li>Stardog RDF grammar - TTL syntax highlighting</li> <li>Lua</li> <li>REST client</li> <li>...</li> </ul>"},{"location":"DSP-API/05-internals/development/vscode-config/#formatter","title":"Formatter","text":"<p>As a formatter, we use Scalafmt. Metals automatically recognizes the formatting configuration in the <code>.scalafmt.conf</code> file in the root directory. VSCode should be configured so that it austomatically formats (e.g. on file saved).</p>"},{"location":"DSP-API/05-internals/development/vscode-config/#running-tests","title":"Running Tests","text":"<p>The tests can be run through make commands or through SBT. The most convenient way to run the tests is through VSCode. Metals recognizes scalatest suits and lets you run them in the text explorer:</p> <p></p> <p>Or with the setting <code>\"metals.testUserInterface\": \"Code Lenses\"</code> directly in the text:</p> <p></p>"},{"location":"DSP-API/05-internals/development/vscode-config/#debugger","title":"Debugger","text":"<p>It is currently not possible to start the stack in debug mode.</p> <p>Tests can be run in debug mode by running them as described above but choosing <code>debug test</code> instead of <code>test</code>.</p>"},{"location":"DSP-API/06-sipi/","title":"Overview","text":""},{"location":"DSP-API/06-sipi/#the-sipi-media-server","title":"The Sipi Media Server","text":"<p>Sipi is a high-performance media server written in C++, for serving and converting binary media files such as images and video. Sipi can efficiently convert between many different formats on demand, preserving embedded metadata, and implements the International Image Interoperability Framework (IIIF). DSP-API is designed to use Sipi for converting and serving media files.</p> <ul> <li>Setting Up Sipi for DSP-API</li> <li>Interaction Between Sipi and DSP-API</li> </ul>"},{"location":"DSP-API/06-sipi/setup-sipi-for-dsp-api/","title":"Setting Up Sipi for DSP-API","text":""},{"location":"DSP-API/06-sipi/setup-sipi-for-dsp-api/#setting-up-sipi-for-dsp-api","title":"Setting Up Sipi for DSP-API","text":""},{"location":"DSP-API/06-sipi/setup-sipi-for-dsp-api/#setup-and-execution","title":"Setup and Execution","text":"<p>In order to serve files to the client application like the Salsah GUI, Sipi must be set up and running. Sipi can be downloaded from its own GitHub repository: https://github.com/dasch-swiss/sipi (which requires building from source), or the published docker image. can be used. To start Sipi, run the following command from inside the <code>sipi/</code> folder:</p> <pre><code>export DOCKERHOST=LOCAL_IP_ADDRESS\ndocker image rm --force daschswiss/sipi:main // deletes cached image and needs only to be used when newer image is available on dockerhub\ndocker run --rm -it --add-host webapihost:$DOCKERHOST -v $PWD/config:/sipi/config -v $PWD/scripts:/sipi/scripts -v /tmp:/tmp -v $HOME:$HOME -p 1024:1024 daschswiss/sipi:main --config=/sipi/config/sipi.docker-config.lua\n</code></pre> <p>where <code>LOCAL_IP_ADDRESS</code> is the IP of the host running <code>DSP-API</code>.</p> <p><code>--config=/sipi/config/sipi.docker-config.lua</code>. Please see <code>sipi.docker-config.lua</code> for the settings like URL, port number etc. These settings need to be set according to DSP-API's <code>application.conf</code>. If you use the default settings both in Sipi and DSP-API, there is no need to change these settings.</p> <p>Whenever a file is requested from Sipi (e.g. a browser trying to dereference an image link served by DSP-API), a preflight function is called. This function is defined in <code>sipi.init.lua</code> present in the Sipi root directory. It takes three parameters: <code>prefix</code>, <code>identifier</code> (the name of the requested file), and <code>cookie</code>. The prefix is the shortcode of the project that the resource containing the file value belongs to.</p> <p>Given this information, Sipi asks the API about the current user's permissions on the given file. The cookie contains the current user's  session id, so the API can match Sipi's request with a given user profile and determine the permissions this user has on the file. If the response grants sufficient permissions, the file is served in the requested quality. If the user has preview rights, Sipi serves the file in reduced quality or integrates a watermark. If the user has no permissions, Sipi refuses to serve the file. However, all of this behaviour is defined in the preflight function in Sipi and not controlled by the API. DSP-API only provides the permission code.</p> <p>See Authentication of Users with Sipi for more information about sharing the session ID.</p>"},{"location":"DSP-API/06-sipi/setup-sipi-for-dsp-api/#using-sipi-in-test-mode","title":"Using Sipi in Test Mode","text":"<p>If you just want to test Sipi with DSP-API without serving the actual files (e.g. when executing browser tests), you can simply start Sipi like this:</p> <pre><code>export DOCKERHOST=LOCAL_IP_ADDRESS\ndocker image rm --force daschswiss/sipi:main // deletes cached image and needs only to be used when newer image is available on dockerhub\ndocker run --rm -it --add-host webapihost:$DOCKERHOST -v $PWD/config:/sipi/config -v $PWD/scripts:/sipi/scripts -v /tmp:/tmp -v $HOME:$HOME -p 1024:1024 daschswiss/sipi:main --config=/sipi/config/sipi.docker-test-config.lua\n</code></pre> <p>Then always the same test file will be served which is delivered with Sipi. In test mode, Sipi will not ask DSP-API about the user's permission on the requested file.</p>"},{"location":"DSP-API/06-sipi/setup-sipi-for-dsp-api/#additional-sipi-environment-variables","title":"Additional Sipi Environment Variables","text":"<p>Additionally, these environment variables can be used to further configure Sipi:</p> <ul> <li><code>SIPI_WEBAPI_HOSTNAME=localhost</code>: overrides <code>knora_path</code> in Sipi's config</li> <li><code>SIPI_WEBAPI_PORT=3333</code>: overrides <code>knora_port</code> in Sipi's config</li> </ul> <p>These variables need to be explicitly used like in <code>sipi.init.lua</code>:</p> <pre><code>    --\n    -- Allows to set SIPI_WEBAPI_HOSTNAME environment variable and use its value.\n    --\n    local webapi_hostname = os.getenv(\"SIPI_WEBAPI_HOSTNAME\")\n    if webapi_hostname == nil then\n        webapi_hostname = config.knora_path\n    end\n    server.log(\"webapi_hostname: \" .. webapi_hostname, server.loglevel.LOG_DEBUG)\n\n    --\n    -- Allows to set SIPI_WEBAPI_PORT environment variable and use its value.\n    --\n    local webapi_port = os.getenv(\"SIPI_WEBAPI_PORT\")\n    if webapi_port == nil then\n        webapi_port = config.knora_port\n    end\n    server.log(\"webapi_port: \" .. webapi_port, server.loglevel.LOG_DEBUG)\n\n    knora_url = 'http://' .. webapi_hostname .. ':' .. webapi_port .. '/admin/files/' .. prefix .. '/' ..  identifier\n</code></pre>"},{"location":"DSP-API/06-sipi/sipi-and-dsp-api/","title":"Interaction between Sipi and DSP-API","text":""},{"location":"DSP-API/06-sipi/sipi-and-dsp-api/#interaction-between-sipi-and-dsp-api","title":"Interaction Between Sipi and DSP-API","text":""},{"location":"DSP-API/06-sipi/sipi-and-dsp-api/#general-remarks","title":"General Remarks","text":"<p>DSP-API and Sipi (Simple Image Presentation Interface) are two complementary software projects. Whereas DSP-API deals with data that is written to and read from a triplestore (metadata and annotations), Sipi takes care of storing, converting and serving image files as well as other types of files such as audio, video, or documents (binary files it just stores and serves).</p> <p>DSP-API and Sipi stick to a clear division of responsibility regarding files: DSP-API knows about the names of files that are attached to resources as well as some metadata and is capable of creating the URLs for the client to request them from Sipi, but the whole handling of files (storing, naming, organization of the internal directory structure, format conversions, and serving) is taken care of by Sipi.</p>"},{"location":"DSP-API/06-sipi/sipi-and-dsp-api/#adding-files-to-dsp","title":"Adding Files to DSP","text":"<p>A file is first uploaded to Sipi, then its metadata is submitted to DSP. The implementation of this procedure is described in DSP-API and Sipi. Instructions for the client are given in Creating File Values.</p>"},{"location":"DSP-API/06-sipi/sipi-and-dsp-api/#retrieving-files-from-sipi","title":"Retrieving Files from Sipi","text":""},{"location":"DSP-API/06-sipi/sipi-and-dsp-api/#file-urls-in-api-v2","title":"File URLs in API v2","text":"<p>In DSP-API v2, image file URLs are provided in IIIF format. In the simple ontology schema, a file value is simply a IIIF URL that can be used to retrieve the file from Sipi. In the complex schema, it is a <code>StillImageFileValue</code> with additional properties that the client can use to construct different IIIF URLs, e.g. at different resolutions. See the <code>knora-api</code> ontology for details.</p>"},{"location":"DSP-API/06-sipi/sipi-and-dsp-api/#authentication-of-users-with-sipi","title":"Authentication of Users with Sipi","text":"<p>File access is restricted to users who have the permission to view the resource that the file is attached to. In order to check whether a user has the permission to view a resource, Sipi needs to know the user's identity. The identity is provided by DSP-API in the form of a JWT token. This jwt token can be provided to Sipi in the following ways:</p> <ol> <li>recommended - The <code>Authorization</code> header of the request as a <code>Bearer</code> type token.</li> <li>deprecated - The value for a <code>token</code> query parameter of the request. This is unsafe a the token is visible in the    URL.</li> <li>deprecated - As a session cookie as set by the dsp-api. For the session cookie to be sent to Sipi, both the DSP-API    and Sipi endpoints need to    be under the same domain, e.g., <code>api.example.com</code> and <code>iiif.example.com</code>.</li> </ol>"},{"location":"DSP-API/07-lucene/lucene-query-parser-syntax/","title":"Lucene","text":"<p>The Lucene full-text index provided by the triplestore is used to perform full-text searches in DSP.</p>"},{"location":"DSP-API/07-lucene/lucene-query-parser-syntax/#lucene-query-parser-syntax","title":"Lucene Query Parser Syntax","text":"<p>Full-text searches in DSP are based on Lucene.  Therefore, full-text searches support the  Lucene Query Parser Syntax.</p> <p>A full-text search consists of a single word in the simplest case, but could also be composed of several words combined with  Boolean operators. By default, Lucene combines two or more terms separated by space with a logical OR.</p> <p>For examples, see  Lucene Query Parser Syntax.</p>"},{"location":"DSP-API/08-faq/","title":"Frequently Asked Questions","text":""},{"location":"DSP-API/08-faq/#frequently-asked-questions","title":"Frequently Asked Questions","text":""},{"location":"DSP-API/08-faq/#file-formats","title":"File Formats","text":""},{"location":"DSP-API/08-faq/#what-file-formats-does-knora-store","title":"What file formats does Knora store?","text":"<p>See File Formats in Knora.</p>"},{"location":"DSP-API/08-faq/#does-knora-store-xml-files","title":"Does Knora store XML files?","text":"<p>XML files do not lend themselves to searching and linking. Knora's RDF storage is better suited to its goal of facilitating data reuse.</p> <p>If your XML files represent text with markup (e.g. TEI/XML), the recommended approach is to allow Knora to store it as Standoff/RDF. This will allow both text and markup to be searched using Gravsearch. Knora can also regenerate, at any time, an XML document that is equivalent to the original one.</p> <p>If you have XML that simply represents structured data (rather than text documents), we recommend converting it to Knora resources, which are stored as RDF.</p>"},{"location":"DSP-API/08-faq/#triplestores","title":"Triplestores","text":""},{"location":"DSP-API/08-faq/#which-triplestores-can-be-used-with-dsp-api","title":"Which triplestores can be used with DSP-API?","text":"<p>DSP-API is tested with Apache Jena Fuseki.</p>"},{"location":"DSP-API/08-faq/#dsp-ontologies","title":"DSP Ontologies","text":""},{"location":"DSP-API/08-faq/#can-a-project-use-classes-or-properties-defined-in-another-projects-ontology","title":"Can a project use classes or properties defined in another project's ontology?","text":"<p>DSP-API does not allow this to be done with project-specific ontologies. Each project must be free to change its own ontologies, but this is not possible if they have been used in ontologies or data created by other projects.</p> <p>However, an ontology can be defined as shared, meaning that it can be used by multiple projects, and that its creators promise not to change it in ways that could affect other ontologies or data that are based on it. See Shared Ontologies for details.</p>"},{"location":"DSP-API/08-faq/#why-doesnt-dsp-api-use-rdfsdomain-and-rdfsrange-for-consistency-checking","title":"Why doesn't DSP-API use <code>rdfs:domain</code> and <code>rdfs:range</code> for consistency checking?","text":"<p>DSP-API's consistency checking uses specific properties, which are called <code>knora-base:subjectClassConstraint</code> and <code>knora-base:objectClassConstraint</code> in the <code>knora-base</code> ontology, and <code>knora-api:subjectType</code> and <code>knora-api:objectType</code> in the <code>knora-api</code> ontologies. These properties express restrictions on the possible subjects and objects of a property. If a property's subject or object does not conform to the specified restrictions, DSP-API considers it an error.</p> <p>In contrast, the RDF Schema specification says that <code>rdfs:domain</code> and <code>rdfs:range</code> can be used to \"infer additional information\" about the subjects and objects of properties, rather than to enforce restrictions. This is, in fact, what RDFS reasoners do in practice. For example, consider these statements:</p> <pre><code>example:hasAuthor rdfs:range example:Person .\ndata:book1 example:hasAuthor data:oxygen .\n</code></pre> <p>To an RDFS reasoner, the first statement means: if something is used as the object of <code>example:hasAuthor</code>, we can infer that it's an <code>example:Person</code>.</p> <p>The second statement is a mistake; oxygen is not a person. But an RDFS reasoner would infer that <code>data:oxygen</code> is actually an <code>example:Person</code>, since it is used as the object of <code>example:hasAuthor</code>. Queries looking for persons would then get <code>data:oxygen</code> in their results, which would be incorrect.</p> <p>Therefore, <code>rdfs:domain</code> and <code>rdfs:range</code> are not suitable for consistency checking.</p> <p>DSP-API therefore uses its own properties, along with OWL cardinalities, which it interprets according to a \"closed world\" assumption. DSP-API performs its own consistency checks to enforce these restrictions. DSP-API repositories can also take advantage of triplestore-specific consistency checking mechanisms.</p> <p>The constraint language SHACL may someday provide a standard, triplestore-independent way to implement consistency checks, if the obstacles to its adoption can be overcome (see Diverging views of SHACL). For further discussion of these issues, see SHACL and OWL Compared.</p>"},{"location":"DSP-API/08-faq/#can-a-user-created-property-be-an-owltransitiveproperty","title":"Can a user-created property be an <code>owl:TransitiveProperty</code>?","text":"<p>No, because in DSP-API, a resource controls its properties. This basic assumption is what allows DSP-API to enforce permissions and transaction integrity. The concept of a transitive property would break this assumption.</p> <p>Consider a link property <code>hasLinkToFoo</code> that is defined as an <code>owl:TransitiveProperty</code>, and is used to link resource <code>Foo1</code> to resource <code>Foo2</code>:</p> <p></p> <p>Suppose that <code>Foo1</code> and <code>Foo2</code> are owned by different users, and that the owner of <code>Foo2</code> does not have permission to change <code>Foo1</code>. Now suppose that the owner of <code>Foo2</code> adds a link from <code>Foo2</code> to <code>Foo3</code>, using the transitive property:</p> <p></p> <p>Since the property is transitive, a link from <code>Foo1</code> to <code>Foo3</code> is now inferred. But this should not be allowed, because the owner of <code>Foo2</code> does not have permission to add a link to <code>Foo1</code>.</p> <p>Moreover, even if the owner of <code>Foo2</code> did have that permission, the inferred link would not have a <code>knora-base:LinkValue</code> (a reification), which every link must have. The <code>LinkValue</code> is what stores metadata about the creator of the link, its creation date, its permissions, and so on (see LinkValue).</p> <p>Finally, if an update to a resource could modify another resource, this would violate DSP-API's model of transaction integrity, in which each transaction can modify only one resource (see Application-level Locking). DSP-API would then be unable to ensure that concurrent transactions do not interfere with each other.</p>"},{"location":"DSP-API/08-faq/#general","title":"General","text":""},{"location":"DSP-API/08-faq/#why-should-i-use-0000-instead-of-localhost-when-running-the-dsp-stack-locally","title":"Why should I use <code>0.0.0.0</code> instead of <code>localhost</code> when running the DSP stack locally?","text":"<p>When running locally with the default configuration, if you want authorization cookies to be shared between <code>webapi</code> and <code>sipi</code>, then both <code>webapi</code> and <code>sipi</code> must be accessed over <code>0.0.0.0</code>, or otherwise, the cookie will not be sent to <code>sipi</code>.</p> <p>If no authorization cookie sharing is necessary, then both <code>0.0.0.0</code> and <code>localhost</code>will work.</p>"},{"location":"DSP-API/09-release-notes/","title":"Changelog","text":""},{"location":"DSP-API/09-release-notes/#changelog","title":"Changelog","text":""},{"location":"DSP-API/09-release-notes/#30100-2024-03-22","title":"30.10.0 (2024-03-22)","text":""},{"location":"DSP-API/09-release-notes/#maintenance","title":"Maintenance","text":"<ul> <li>Dependency updates (#3122) (e9cb379)</li> <li>Fix never-ending jobs in release PRs (#3114) (f2f1fc9)</li> <li>Fix typo in Makefile (#3108) (de31c94)</li> <li>Improve test for serving ontologies in different formats (#3115) (a010275)</li> <li>knora-admin: Remove unused Institution class and its properties (DEV-3365) (#3109) (7e3664d)</li> <li>Major dependency updates (#3121) (e2e57c1)</li> <li>Merge StringLiteralV2 classes (#3133) (70cced2)</li> <li>Migrate GET /version and /health to tapir (DEV-3286, DEV-3287) (#3110) (c7d69aa)</li> <li>Minor dependency updates (#3120) (564bdcf)</li> <li>Modularize layers  (#3132) (9ef26c9)</li> <li>Move test for serving ontologies in different formats to separate file (#3127) (9a48e23)</li> <li>Patch dependency updates (#3119) (3a5194f)</li> <li>Remove accessible makro (Scala3 perparation) (#3135) (30e4f06)</li> <li>Remove methods from projects responder, clean up ProjectIri (#3137) (b4eec85)</li> <li>Remove zio.accessible makro (Scala3 migration) (#3126) (d753fcc)</li> <li>Rename ProjectADM and service to Project (#3130) (fc1dc53)</li> <li>Revert the import style to Scala 2 (#3138) (96ee921)</li> <li>Simplify ActorSystem layer (#3123) (292f7eb)</li> <li>Split CreateResourcesV2Handler from ResourcesResponderV2 (D\u2026 (#3118) (24b691a)</li> <li>Start release PRs as drafts (#3111) (b76e538)</li> <li>Successfully skip <code>check-formatting</code> job on release PRs (#3113) (1d35cad)</li> <li>Update dsp-app to v11.7.1 (#3105) (9851405)</li> </ul>"},{"location":"DSP-API/09-release-notes/#documentation","title":"Documentation","text":"<ul> <li>Add Examples to /admin/groups endpoints (#3107) (bbb0e65)</li> <li>Integrate OpenApi generated documentation for admin api (DEV-3381) (#3104) (241ea9b)</li> <li>Lint with markdownlint (#3128) (2b7d239)</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements","title":"Enhancements","text":"<ul> <li>Add additional project export route that awaits the process (#3136) (70e0172)</li> </ul>"},{"location":"DSP-API/09-release-notes/#bug-fixes","title":"Bug Fixes","text":"<ul> <li>Disable broken upgrade plugins (#3117) (6714898)</li> <li>Enable upgrade plugins with custom graphs (#3124) (4186b5f)</li> <li>Ensure all project's restricted view settings are correctly persisted (#3125) (51cde02)</li> <li>In Sipi use size fallback only when api failed to return a setting (DEV-3409) (#3112) (172041a)</li> <li>Remove invalid watermark triples (DEV-3418) (#3116) (e563ab9)</li> </ul>"},{"location":"DSP-API/09-release-notes/#3090-2024-03-07","title":"30.9.0 (2024-03-07)","text":""},{"location":"DSP-API/09-release-notes/#maintenance_1","title":"Maintenance","text":"<ul> <li>Add clear cache to KnoraProjectRepoLive (#3091) (eb98c53)</li> <li>Add CODEOWNERS (DEV-3378) (#3102) (914fe86)</li> <li>Add DSP-INGEST to docker network (#3086) (b248cd0)</li> <li>Add save to KnoraProjectRepo and use for setting the RestrictedView (#3082) (fcd483f)</li> <li>Bump Sipi to 3.9.0 (#3097) (4b6e638)</li> <li>Cleanup CacheService, and split KnoraUserService and UserService (#3074) (3a21838)</li> <li>formatting: Add trailing commas (#3084) (b0b5e25)</li> <li>KnoraUserGroup and KnoraUserGroupRepo (DEV-3288) (#3059) (8a79e93)</li> <li>Migrate DELETE /admin/groups/&lt;groupIri&gt; to Tapir (DEV-1588) (#3081) (2715aa1)</li> <li>Migrate POST /admin/group to Tapir (DEV-1588) (#3057) (29b1ce6)</li> <li>Migrate PUT /admin/group/&lt;groupIri&gt; to Tapir (DEV-1588) (#3071) (8df7033)</li> <li>Migrate PUT /admin/groups/&lt;groupIri&gt;/status to Tapir (DEV-1588) (#3075) (2ca95ed)</li> <li>Minor dependency updates (#3078) (f60d937)</li> <li>Move caching from UserResponder to UserService (#3064) (0484717)</li> <li>Move code from UsersResponder to UserService and UserRestService (#3067) (5345350)</li> <li>Move code from UsersResponder to UserService and UserRestService (#3069) (e78a106)</li> <li>Move remaining methods from UsersResponder to UserService and UserRestService (#3072) (320a4a8)</li> <li>Patch dependency updates (#3077) (3decf23)</li> <li>Prevent illegal updates with <code>KnoraUserService</code> (#3098) (4111312)</li> <li>Refactor Group value objects (#3058) (f7ab488)</li> <li>Remove Codecov annotations (#3070) (e9e3d5c)</li> <li>Remove invalid test data (#3088) (22a7333)</li> <li>Remove ontology from KnoraProject entity (#3063) (376f536)</li> <li>Remove unused <code>RejectingRoute</code> (DEV-3289) (#3079) (fc8e7d0)</li> <li>Remove unused code from standoff responder (DEV-3264) (#3085) (56815a3)</li> <li>Rename GroupADM and move to domain model package (DEV-3292) (#3094) (2202bd9)</li> <li>Rename test data folder to align with PermissionsResponderADMSpec (#3092) (b56580d)</li> <li>Replace default watermark for Sipi with new version (#3066) (19caebd)</li> <li>Replace Spray JSON with ZIO-JSON in some projects endpoints (DEV-3375) (#3095) (70ea9ba)</li> <li>Update dsp-app to v11.6.4 (#3061) (97db659)</li> <li>Use RDF model in all methods of project repo (#3032) (689bbbf)</li> </ul>"},{"location":"DSP-API/09-release-notes/#documentation_1","title":"Documentation","text":"<ul> <li>Fix dead links in docs (#3076) (068ec84)</li> <li>Update documentation on restricted view settings (#3101) (12db892)</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements_1","title":"Enhancements","text":"<ul> <li>Allow project admins to create users which are not a system admin (DEV-3266) (#3099) (79e1963)</li> <li>Make GET /admin/users faster by caching projects (DEV-3311) (#3062) (793f118)</li> <li>The restricted view must be either restricted with a watermark or by a particular size (DEV-3356) (#3080) (75f5363)</li> </ul>"},{"location":"DSP-API/09-release-notes/#bug-fixes_1","title":"Bug Fixes","text":"<ul> <li>docs: DSP-API docs root route gives a 404 error (DEV-3345) (#3073) (0370e13)</li> </ul>"},{"location":"DSP-API/09-release-notes/#3082-2024-02-22","title":"30.8.2 (2024-02-22)","text":""},{"location":"DSP-API/09-release-notes/#maintenance_2","title":"Maintenance","text":"<ul> <li>Add -Xfatal-warnings (#3042) (8e51a94)</li> <li>Add option to make warnings non-fatal locally. (#3044) (0d2367e)</li> <li>Bump Sipi to 3.8.12 (#3051) (cbddd97)</li> <li>Dependency updates (#3049) (bf60688)</li> <li>Enable Default Union Graph in TriplestoreServiceInMemory (DEV-3295) (#3052) (8b59d54)</li> <li>Introduce repository and service for user and write queries with rdf4j's <code>SparqlBuilder</code> (DEV-3273) (#3038) (f3df298)</li> <li>Migrate user group endpoints to Tapir and remove UserRouteADM (#3046) (52c798d)</li> <li>Migrate users endpoints to tapir (BasicInformation, Status, Password)  (#3043) (6e16782)</li> <li>Minor dependency updates (#3048) (aa9b718)</li> <li>Patch dependency updates (#3047) (5949e85)</li> <li>Remove <code>knora-ontologies</code> symlink (DEV-3236) (#3035) (df28afc)</li> <li>Remove token property from user which is always None (#3041) (1b7f88b)</li> <li>Remove TriplestoreService dependency from UsersResponder (#3054) (61f04e0)</li> <li>Replace watermark (DEV-3297) (#3056) (60c804f)</li> <li>Update APP to v11.5.1 (#3039) (8290921)</li> <li>Use UserService to update a user (#3053) (25ef280)</li> </ul>"},{"location":"DSP-API/09-release-notes/#bug-fixes_2","title":"Bug Fixes","text":"<ul> <li>Allow hyphens in usernames (DEV-3306) (#3055) (9398d21)</li> <li>OWL property type of knora-api:valueAsString (#3036) (686c8fb)</li> <li>Remove UUID version check from IRI value objects (DEV-3310) (#3033) (6de0374)</li> </ul>"},{"location":"DSP-API/09-release-notes/#3081-2024-02-08","title":"30.8.1 (2024-02-08)","text":""},{"location":"DSP-API/09-release-notes/#maintenance_3","title":"Maintenance","text":"<ul> <li>Change RDF handling for querying Projects from DB (DEV-3175) (#2989) (884e3a8)</li> <li>CI: Run integration tests on actuated again (#3027) (ca8319c)</li> <li>Migrate <code>GET /admin/users/&amp;lt;iri|email|name&amp;gt;</code> to Tapir (#3020) (4b25387)</li> <li>Migrate <code>GET /admin/users/iri/&amp;lt;userIri&amp;gt;/*memberships</code> and <code>POST /admin/users</code> to tapir (#3021) (cafbc16)</li> <li>Remove chill, scallop dependency (DEV-3263) (DEV-3262) (#3029) (a1e5db1)</li> <li>Remove jodd dependency (DEV-3069) (#3024) (35ff4ed)</li> <li>Remove jodd dependency leftovers (#3028) (21a4c83)</li> <li>Remove kamon (DEV-3261) (#3030) (f27f118)</li> <li>Update dsp-app image in docker-compose.yml to v11.4.1 (#3034) (71677a2)</li> <li>Update fuseki to latest release 2.1.5 (#3023) (6acbe4b)</li> <li>Update scala-graph to 2.0.1 (DEV-3072) (#3031) (9b04b8f)</li> </ul>"},{"location":"DSP-API/09-release-notes/#bug-fixes_3","title":"Bug Fixes","text":"<ul> <li>Remove cardinality restriction for comments on regions (DEV-3179) (#3026) (9ea8d6e)</li> </ul>"},{"location":"DSP-API/09-release-notes/#3080-2024-02-05","title":"30.8.0 (2024-02-05)","text":""},{"location":"DSP-API/09-release-notes/#maintenance_4","title":"Maintenance","text":"<ul> <li>Admin groups cleanup (#3011) (34fd51a)</li> <li>Bump sipi to 3.8.10 (#3007) (be8ce70)</li> <li>Bump Sipi to 3.8.11 (#3014) (67e6762)</li> <li>Dependency updates (#3017) (4918f5c)</li> <li>Migrate <code>GET /admin/lists?projectIri</code> route to tapir (#3006) (a931357)</li> <li>Migrate <code>POST /admin/lists</code> and <code>POST /admin/lists/&amp;lt;parentListIri&amp;gt;</code> to Tapir (DEV-1589) (#3018) (63fe560)</li> <li>Migrate GET /admin/users/iri/&lt;userIri&gt; to tapir (#3010) (34d2d7a)</li> <li>Migrate some <code>GET /admin/lists/*</code> endpoints to Tapir (#3012) (785b573)</li> <li>Migrate update and delete of lists to Tapir (#3013) (dafaffb)</li> <li>Minor dependency updates (#3016) (d59246f)</li> <li>Patch dependency updates (#3015) (b46f8f7)</li> <li>readme: Update installation instruction (#2999) (296815c)</li> <li>readme: Use just targets instead of make targets (#3000) (71e6119)</li> <li>Remove needless <code>ProjectsResponderRequestADM</code> classes (#3008) (1468d2c)</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements_2","title":"Enhancements","text":"<ul> <li>Enable <code>UpgradePlugin</code>s to restrict to a specific graph and update the knora base version to 26 (#3005) (e54aa0b)</li> </ul>"},{"location":"DSP-API/09-release-notes/#bug-fixes_4","title":"Bug Fixes","text":"<ul> <li>Less information in auth error messages (DEV-3260) (#3019) (569a6c1)</li> <li>Only allow System Administrators to create users (#3022) (5ab6e35)</li> </ul>"},{"location":"DSP-API/09-release-notes/#3070-2024-01-25","title":"30.7.0 (2024-01-25)","text":""},{"location":"DSP-API/09-release-notes/#maintenance_5","title":"Maintenance","text":"<ul> <li>Add just targets for simple stack handling (#2985) (f5f135e)</li> <li>admin/projects: Add missing internal to external response formatting (#2993) (f0312dc)</li> <li>Bump Sipi to 3.8.8 (#2972) (9a00c3f)</li> <li>Dependency updates (#2967) (95ad2f9)</li> <li>Introduce <code>Value[A]</code> and extract tapir and zio-json codecs (#2996) (9744f7b)</li> <li>Major dependency updates (#2977) (6ee0111)</li> <li>Migrate /admin/files to tapir (DEV-3189) (#2995) (78ff954)</li> <li>Migrate <code>admin/permissions</code> endpoints to tapir (DEV-1590) (#2975) (cf2c6fb)</li> <li>Migrate get all users route to tapir (DEV-3142) (#2971) (3684b91)</li> <li>Migrate getAllGroups route to tapir (DEV-1588) (#2984) (e5285ea)</li> <li>Migrate getGroup and getGroupMembers to tapir (DEV-1588) (#2987) (98820b0)</li> <li>Migrate to Java 21 and remove usage of Java 17 (DEV-3146) (#2974) (779fddb)</li> <li>Minor dependency updates (#2966) (0cc64d1)</li> <li>Move and rename UserADM (#2978) (56c1feb)</li> <li>Patch dependency updates (#2965) (d0d252d)</li> <li>Patch dependency updates (#2976) (b150911)</li> <li>Patch dependency updates (#2992) (9b57f16)</li> <li>Rename staging servers to stage in Makefile (#2961) (bad8bbe)</li> <li>Set Sipi max_post_size = '2G' in all configuration (#2962) (9fc109c)</li> <li>Streamline user identifier objects (DEV-3155) (#2991) (0d07b6f)</li> <li>Unify user value objects and validation (DEV-3155) (#2980) (83f777d)</li> <li>Update license header to 2024 (#2981) (560dec4)</li> <li>Update years in the copyright header (#2982) (700f3c5)</li> <li>Use RestrictedViewSize in ProjectSetRestrictedViewSizeRequest (#3001) (239c4fc)</li> <li>Use sttpbackend and reuse access token if not expired (#2968) (eac470a)</li> <li>Use the same custom scalac option for webapi and integration (#2990) (b8a45ad)</li> </ul>"},{"location":"DSP-API/09-release-notes/#documentation_2","title":"Documentation","text":"<ul> <li>Add documentation on creating FileValue resources together with ingest (DEV -3134) (#2969) (eac5751)</li> <li>Remove remaining API V1 documentation (DEV-3073) (#2970) (2d3d4c4)</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements_3","title":"Enhancements","text":"<ul> <li>Add dsp ingest asset info resolution (DEV-3147) (#2973) (c081ba8)</li> <li>Add generating OpenApi yamls for the admin api (#2983) (503b742)</li> <li>Add support to load knora-ontologies in the docker-compose stack (#3002) (32bf7cc)</li> <li>Add watermark support (DEV-2993) (DEV-2991) (#3003) (7637cb3)</li> <li>Make Sipi handling optional during FileValue creation (Dev-2945) (#2960) (82ebce4)</li> </ul>"},{"location":"DSP-API/09-release-notes/#bug-fixes_5","title":"Bug Fixes","text":"<ul> <li>Allow all mime types in API that are returned by Ingest (DEV-3163) (#2994) (1ea69a4)</li> <li>Fix UserIri and allow existing values (DEV-3194) (#2997) (ecf9c0a)</li> <li>Let DspIngestClientLive get a fresh jwt for each request (#2988) (31df947)</li> </ul>"},{"location":"DSP-API/09-release-notes/#3060-2023-12-06","title":"30.6.0 (2023-12-06)","text":""},{"location":"DSP-API/09-release-notes/#maintenance_6","title":"Maintenance","text":"<ul> <li>Bump Sipi version to 3.8.7 (#2951) (5b3436b)</li> <li>Dependency updates (#2956) (1e14a88)</li> <li>Minor dependency updates (#2955) (8c2afcd)</li> <li>Patch dependency updates (#2954) (1c37768)</li> <li>Simplify RDF handling (#2952) (25099ef)</li> <li>Update apache-jena-fuseki to v2.1.4 (#2959) (a8a7c61)</li> </ul>"},{"location":"DSP-API/09-release-notes/#documentation_3","title":"Documentation","text":"<ul> <li>Clarify setting of restricted view of images (DEV-2961) (#2950) (e4ca484)</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements_4","title":"Enhancements","text":"<ul> <li>Add http metrics for gravsearch endpoints (DEV-2936) (#2946) (7ca5946)</li> <li>Add http metrics to all search endpoints by migrating to tapir DEV-2936 (#2958) (20f8d5c)</li> </ul>"},{"location":"DSP-API/09-release-notes/#3052-2023-11-22","title":"30.5.2 (2023-11-22)","text":""},{"location":"DSP-API/09-release-notes/#maintenance_7","title":"Maintenance","text":"<ul> <li>Bump Sipi version to 3.8.5 (#2942) (8f35d81)</li> <li>Bump Sipi version to 3.8.6 (#2947) (34b74bf)</li> <li>docker-compose: Bump app version to 11.1.0 (#2926) (b39e9f3)</li> <li>Inline some UuidUtil functions and reduce deprecation warnings (#2934) (52d1efa)</li> <li>knora-sipi: Remove cron and custom entrypoint (#2940) (ef714c1)</li> <li>Major dependency updates (#2932) (0624380)</li> <li>Minor dependency updates (#2931) (86c926a)</li> <li>Move project related value objects to admin.domain.model package and cleanup code (#2923) (57c6ac2)</li> <li>Move ProjectIri to KnoraProject (#2944) (af95516)</li> <li>Patch dependency updates (#2930) (d8e13b7)</li> <li>Prepare Scala 3 compatibility by adding -Xsource:3 compiler flag (#2924) (ff9df5f)</li> <li>Remove @deprecation annotations (#2937) (224eb3d)</li> <li>Remove duplicate 'gravsearch' metrics (#2936) (f11dfef)</li> <li>Remove MessageHandler from SearchResponder and call responder directly (#2943) (ee8d09d)</li> <li>Remove redundancies in search by label queries (#2933) (a333e34)</li> <li>Replace spray json with zio-json for FileMetadataSipiResponse (#2941) (20090dc)</li> <li>Replace StringFormatter.validateProjectShortcode methods wi\u2026 (#2935) (80561af)</li> <li>Simplify and rename SipiService (#2929) (0835301)</li> <li>Use KnoraRepo instead of MessageRelay in ResourcesResponderV2 (#2927) (2358f23)</li> </ul>"},{"location":"DSP-API/09-release-notes/#documentation_4","title":"Documentation","text":"<ul> <li>Adjust Gravsearch documentation according to current state of code (DEV-2153) (#2938) (6aa1990)</li> </ul>"},{"location":"DSP-API/09-release-notes/#bug-fixes_6","title":"Bug Fixes","text":"<ul> <li>BEOL timeouts (#2945) (f4a781b)</li> <li>Invalidate cached project information when adding an ontology to the project (DEV-2926) (#2949) (d0700a2)</li> </ul>"},{"location":"DSP-API/09-release-notes/#3051-2023-11-09","title":"30.5.1 (2023-11-09)","text":""},{"location":"DSP-API/09-release-notes/#maintenance_8","title":"Maintenance","text":"<ul> <li>Bump sipi version (#2913) (303ca0f)</li> <li>Bump Sipi version to 3.8.3 (#2917) (e4c587a)</li> <li>Group dependency updates (#2906) (8b08c74)</li> <li>Load ontologies when querying for KnoraProjects (#2916) (21550ce)</li> <li>Patch updates (#2910) (3e95d71)</li> <li>PRs: Add 'perf' as allowed prefix for PR titles (#2915) (8d08e35)</li> <li>release-please: Add missing PR title prefixes to the workflow (#2918) (142fee0)</li> <li>Remove GravsearchQueryOptimisationFeature and simplify (#2909) (a91f6f6)</li> <li>Replace MessageRelay with KnoraProjectRepo in OntologyResponderV2 (#2920) (b093357)</li> <li>scala-steward: Improve dependency grouping (#2919) (dbda1cc)</li> <li>Update icu4j to v74.1 (#2912) (77e144b)</li> <li>Update sbt-javaagent to v0.1.8 (#2911) (e17cda2)</li> <li>Update tapir to v1.8.4 (#2922) (354662c)</li> </ul>"},{"location":"DSP-API/09-release-notes/#bug-fixes_7","title":"Bug Fixes","text":"<ul> <li>Fix project name, description and keywords value objects (2892) (#2908) (d1388bc)</li> <li>performance: Reverse order of topological sorting in Gravsearch queries (#2914) (d81a88e)</li> </ul>"},{"location":"DSP-API/09-release-notes/#3050-2023-10-27","title":"30.5.0 (2023-10-27)","text":""},{"location":"DSP-API/09-release-notes/#enhancements_5","title":"Enhancements","text":"<ul> <li>Gravsearch: Enable ORDER BY external link (DEV-2704) (#2902) (1b7e02a)</li> </ul>"},{"location":"DSP-API/09-release-notes/#bug-fixes_8","title":"Bug Fixes","text":"<ul> <li>Startup and keep instrumentation server running (#2901) (a11af40)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_9","title":"Maintenance","text":"<ul> <li>Remove GitHub action which tests zio-http routes  (#2903) (1999b22)</li> <li>Remove/Fix some compiler warnings (#2899) (cb5dec6)</li> <li>Update dependencies (#2905) (855eb02)</li> </ul>"},{"location":"DSP-API/09-release-notes/#3042-2023-10-23","title":"30.4.2 (2023-10-23)","text":""},{"location":"DSP-API/09-release-notes/#maintenance_10","title":"Maintenance","text":"<ul> <li>Add missing component to release please GitHub action (#2896) (8751d52)</li> <li>Update PR title template (#2897) (3c3c45f)</li> <li>Update tapir-refined from 1.2.10 to 1.2.13 (#2886) (05d519a)</li> <li>Use correct syntax in release please configuration (#2895) (e8eced4)</li> </ul>"},{"location":"DSP-API/09-release-notes/#3041-2023-10-17","title":"30.4.1 (2023-10-17)","text":""},{"location":"DSP-API/09-release-notes/#maintenance_11","title":"Maintenance","text":"<ul> <li>docker: Set container memory limits in local stack (DEV-2718) (#2874) (783d4fd)</li> <li>Improve PR title check (#2882) (6f4b962)</li> </ul>"},{"location":"DSP-API/09-release-notes/#documentation_5","title":"Documentation","text":"<ul> <li>Remove invalid ProjectAdminOntologyAllPermission (DEV-2814) (#2881) (1796d52)</li> </ul>"},{"location":"DSP-API/09-release-notes/#3040-2023-10-12","title":"30.4.0 (2023-10-12)","text":""},{"location":"DSP-API/09-release-notes/#enhancements_6","title":"Enhancements","text":"<ul> <li>add default value of projectRestrictedViewSize (DEV-2626) (#2873) (ff4d3a1)</li> <li>Add maintenance service for fixing top-left dimension values DEV-2803 (#2876) (82b715a)</li> <li>Add route that sets projectRestrictedViewSetting size (DEV-2304) (#2794) (738ab1c)</li> <li>Introduce /admin/maintenance and expose fix top left maintenance action DEV-2805 (#2877) (a6b8c2f)</li> </ul>"},{"location":"DSP-API/09-release-notes/#bug-fixes_9","title":"Bug Fixes","text":"<ul> <li>Improve performance for Gravsearch queries (#2857) (86cc4f2)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_12","title":"Maintenance","text":"<ul> <li>Configure Scala Steward to produce PR with compatible title (#2867) (fbbe5ec)</li> <li>Do not log warn message for 405 and 404 status code responses (#2854) (d9fd81c)</li> <li>Introduce tapir on Pekko (#2870) (08accab)</li> <li>Migrate secure admin/projects endpoints to Tapir (#2872) (9f98f7e)</li> <li>Update dependencies DEV-2742 (#2868) (8ba3bb5)</li> <li>Update dependencies fuseki and app (#2856) (8123dbd)</li> <li>Update Fuseki DEV-2743 (#2869) (14f1911)</li> <li>update PR template (#2878) (6c04101)</li> <li>Update spring-security-core to 6.1.4 (#2865) (b75edaf)</li> </ul>"},{"location":"DSP-API/09-release-notes/#documentation_6","title":"Documentation","text":"<ul> <li>remove inexisting pages from navigation bar (#2871) (dd2dfe6)</li> </ul>"},{"location":"DSP-API/09-release-notes/#3030-2023-09-28","title":"30.3.0 (2023-09-28)","text":""},{"location":"DSP-API/09-release-notes/#enhancements_7","title":"Enhancements","text":"<ul> <li>update Shortname value object (#2851) (35187ca)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_13","title":"Maintenance","text":"<ul> <li>add GH action that checks PR title (#2849) (e6c4b90)</li> <li>Replace Akka with Pekko (#2848) (d343d8e)</li> <li>Update and rename check-pr-title workflow (#2852) (fde1faf)</li> </ul>"},{"location":"DSP-API/09-release-notes/#3021-2023-09-15","title":"30.2.1 (2023-09-15)","text":""},{"location":"DSP-API/09-release-notes/#maintenance_14","title":"Maintenance","text":"<ul> <li>update dependencies (#2836) (6642192)</li> </ul>"},{"location":"DSP-API/09-release-notes/#3020-2023-09-14","title":"30.2.0 (2023-09-14)","text":""},{"location":"DSP-API/09-release-notes/#enhancements_8","title":"Enhancements","text":"<ul> <li>SystemAdmins receive a token which is valid on the dps-ingest api (#2835) (469f228)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_15","title":"Maintenance","text":"<ul> <li>Remove deprecated methods on JsonLDObject (#2832) (c8cf990)</li> <li>Update db image in docker-compose and Dependencies (#2833) (b0d48d0)</li> </ul>"},{"location":"DSP-API/09-release-notes/#3012-2023-09-08","title":"30.1.2 (2023-09-08)","text":""},{"location":"DSP-API/09-release-notes/#maintenance_16","title":"Maintenance","text":"<ul> <li>Remove compiler warning stemming from -Wvalue-discard (#2831) (9071204)</li> <li>Remove type annotations which produce compiler warnings (#2829) (c754042)</li> <li>Remove unused or dead code (#2827) (36b835e)</li> <li>Update 'fuseki_request_duration' histogram bucket boundaries (#2830) (b7bef4e)</li> </ul>"},{"location":"DSP-API/09-release-notes/#3011-2023-09-06","title":"30.1.1 (2023-09-06)","text":""},{"location":"DSP-API/09-release-notes/#maintenance_17","title":"Maintenance","text":"<ul> <li>Remove -HEAD from published docker tag when building a git tag (#2825) (108c480)</li> </ul>"},{"location":"DSP-API/09-release-notes/#3010-2023-09-06","title":"30.1.0 (2023-09-06)","text":""},{"location":"DSP-API/09-release-notes/#enhancements_9","title":"Enhancements","text":"<ul> <li>Add metrics to TriplestoreService SparqlQuery execution DEV-2627 (#2823) (8ce554b)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_18","title":"Maintenance","text":"<ul> <li>Filter \"HEAD\" as branch name when building a release on a chec\u2026 (#2817) (818fb41)</li> <li>Introduce typed queries Ask, Select, Construct, Update and remove TriplestoreMessageHandler (#2816) (96c330d)</li> <li>Speedup /projects endpoint (#2824) (22d5146)</li> <li>Update app in docker-compose (#2821) (f124f85)</li> <li>Update Dependencies (#2822) (198d570)</li> </ul>"},{"location":"DSP-API/09-release-notes/#3000-2023-08-31","title":"30.0.0 (2023-08-31)","text":""},{"location":"DSP-API/09-release-notes/#breaking-changes","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>remove experimental standoff route (DEV-2549) (#2795)</li> </ul>"},{"location":"DSP-API/09-release-notes/#bug-fixes_10","title":"Bug Fixes","text":"<ul> <li>allow ordering by label in Gravsearch (DEV-2546) (#2798) (ca4553e)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_19","title":"Maintenance","text":"<ul> <li>Cleanup TriplestoreService code (#2804) (6278fba)</li> <li>Derive version from git tag DEV-2575 (#2800) (5f612a8)</li> <li>remove experimental standoff route (DEV-2549) (#2795) (246f1da)</li> <li>Remove throws from OntologyResponderV2 DEV-2579  (#2801) (b0694ad)</li> <li>Remove throws from ResourceResponderV2 DEV-2580 (#2802) (55d362d)</li> <li>remove throws from values responder DEV-2568 (#2799) (42ee838)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2913-2023-08-16","title":"29.1.3 (2023-08-16)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_11","title":"Bug Fixes","text":"<ul> <li>query-patterns-should-not-be-separated DEV-2473 (#2786) (0aae817)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_20","title":"Maintenance","text":"<ul> <li>improve compiler warnings (DEV-1611) (#2784) (00379ce)</li> <li>improve file path resolving logic for generated test data files (#2783) (c2d6451)</li> <li>move integration tests to separate SBT project (#2772) (321e2dc)</li> <li>ProjectImportService: improve logging (#2781) (35ce421)</li> <li>Remove ValueUpdateRequestV2 and DeleteValueRequestV2 NO-TICKET (#2779) (577e4ec)</li> <li>Speed up value creation and update DEV-2473 (#2778) (5e5a3ea)</li> <li>update dependencies (#2793) (eb85ba5)</li> <li>Use sttp client for dsp-ingest download (#2777) (c431ccf)</li> </ul>"},{"location":"DSP-API/09-release-notes/#documentation_7","title":"Documentation","text":"<ul> <li>minor Gravsearch docs fixes (#2782) (35c87f4)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2912-2023-08-02","title":"29.1.2 (2023-08-02)","text":""},{"location":"DSP-API/09-release-notes/#maintenance_21","title":"Maintenance","text":"<ul> <li>update dependencies (#2770) (6e3857e)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2911-2023-07-24","title":"29.1.1 (2023-07-24)","text":""},{"location":"DSP-API/09-release-notes/#maintenance_22","title":"Maintenance","text":"<ul> <li>add some OCI docker image labels to DSP-API for DataDog source code linking (INFRA-328) (#2750) (b3296dc)</li> <li>bump Jena Fuseki version to 4.9.0 (#2761) (92b3ca3)</li> <li>fix expired token in SIPI test (#2755) (fd1ce2b)</li> <li>reorganize test data (#2757) (9b68d1c)</li> <li>Simplify GroupStatus model (#2741) (0b6d102)</li> <li>simplify test data in repository (#2753) (a2a7fb7)</li> <li>tidy up scripts (#2754) (8bb261f)</li> <li>Use JwtService to generate a jwt in SipiIT (#2756) (70037b0)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2910-2023-07-06","title":"29.1.0 (2023-07-06)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_12","title":"Bug Fixes","text":"<ul> <li>Align path variable for export and import routes to use Shortcode (#2734) (8cc2c62)</li> <li>Remove file path from temporaryUrl in upload response of Sipi (#2737) (00e3b39)</li> <li>Update dsp-ingest endpoint that moved to <code>projects</code> in DspIngestClient (#2735) (592bfc8)</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements_10","title":"Enhancements","text":"<ul> <li>Dsp-ingest integration for import/export of projects DEV-2297 (#2722) (12402f3)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_23","title":"Maintenance","text":"<ul> <li>Add docker compose configuration for api accessing ingest (#2736) (6ef3d17)</li> <li>Introduce JwtConfig and expose as layer (#2719) (5737e18)</li> <li>optimize isEntityInUse queries, use ASK (#2739) (0cfa3d4)</li> <li>Remove ontology responsibility from AppRouter (#2740) (69f0d67)</li> <li>Rename Shortcode everywhere and use its type in KnoraProject property (NO-TICKET) (#2724) (f01c319)</li> <li>standarise shortname naming (NO-TICKET) (#2733) (990030d)</li> <li>TriplestoreServiceLive: minor improvements (#2721) (d31ba01)</li> <li>update dependencies (#2717) (ff712bf)</li> <li>Use Duration type for AppConfig properties (NO-TICKET) (#2720) (2b2b551)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2901-2023-06-22","title":"29.0.1 (2023-06-22)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_13","title":"Bug Fixes","text":"<ul> <li>Make Sipi handle multiple <code>KnoraAuthentication*</code> cookies correctly (DEV-2271) (#2713) (1330d2b)</li> <li>Multiple cookies are separated by <code>;</code> not by <code>,</code> (#2715) (c317efc)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_24","title":"Maintenance","text":"<ul> <li>Add dsp-ingest to docker-compose.yml  (#2712) (64e72be)</li> <li>Add sipi auth tests for knora.json (NO-Ticket) (#2711) (85a30a5)</li> <li>fix invalid links in CHANGELOG (DEV-2251) (#2699) (2419f58)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2900-2023-06-08","title":"29.0.0 (2023-06-08)","text":""},{"location":"DSP-API/09-release-notes/#breaking-changes_1","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>deactivate API V1 routes (DEV-2223) (#2685)</li> </ul>"},{"location":"DSP-API/09-release-notes/#bug-fixes_14","title":"Bug Fixes","text":"<ul> <li>gravsearch and count queries include deleted resources for some queries with negation patterns (DEV-2189) (#2682) (668a734)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_25","title":"Maintenance","text":"<ul> <li>bump fuseki version to 4.8.0 (#2696) (135da99)</li> <li>merge or move UUID related methods (DEV-2192) (#2697) (93f7088)</li> <li>remove remove SIPI file migration route (DEV-2180) (#2683) (b2f0dff)</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements_11","title":"Enhancements","text":"<ul> <li>add export of assets (DEV-2106) (#2668) (0be6991)</li> <li>add import of trig file of export (DEV-2249) (#2680) (6fb0e8c)</li> <li>deactivate API V1 routes (DEV-2223) (#2685) (ee3cddc)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2830-2023-05-25","title":"28.3.0 (2023-05-25)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_15","title":"Bug Fixes","text":"<ul> <li>add integration Test for Sipi and fix broken responses (NO-TICKET) (#2675) (f8c3aa0)</li> <li>Fix Sipi get file response if dsp-api responds with Not Found during permission check (NO-TICKET) (#2677) (4e1c6c2)</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements_12","title":"Enhancements","text":"<ul> <li>Align authorization for all endpoints of knora-sipi (DEV-2175) (#2669) (ff59664)</li> <li>sipi: add clean temp dir cronjob (DEV-2090) (#2656) (7af1c27)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_26","title":"Maintenance","text":"<ul> <li>add more gravsearch metrics (#2666) (873eb46)</li> <li>add more tests for Sipi responses (NO-TICKET) (#2679) (74f49ca)</li> <li>Create license headers for all it files (NO-TICKET) (#2676) (a97ec6b)</li> <li>improve lucene handling in gravsearch (DEV-2148) (#2667) (bf5d4be)</li> <li>merge duplicated StringFormatter and value objects methods part 1 (DEV-2046) (#2672) (655590a)</li> <li>remove deprecated StringFormatter methods (#2658) (62eb63c)</li> <li>Remove GroupShortADM (NO-TICKET) (#2674) (3676fbf)</li> <li>Resolve compiler warning toObjsWithLang (NO-TICKET) (#2671) (dc7e2c2)</li> <li>sipi: increase healthcheck timeout and retries (#2670) (5dd994d)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2820-2023-05-15","title":"28.2.0 (2023-05-15)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_16","title":"Bug Fixes","text":"<ul> <li>Fix bad substitution in export-moving-image-frames.sh (#2659) (9ee412c)</li> <li>Use copy instead of move for Sipi file migration (#2655) (1b8ffff)</li> <li>Use move for Sipi's file migration (#2657) (da0a9b8)</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements_13","title":"Enhancements","text":"<ul> <li>add dedicated export route and zip trig file DEV-2129 (#2650) (12379aa)</li> <li>Add new route to migrate files (DEV-1721) (#2647) (971136f)</li> <li>Add support for new file structure within Sipi folders and move Sipi tmp directory cleanup to separate route (DEV-1715) (#2621) (13e2a6f)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_27","title":"Maintenance","text":"<ul> <li>add basic metrics to gravsearch routes (DEV-2150) (#2661) (0a3cc8b)</li> <li>Add integration test for upload_without_processing route (#2651) (24910a4)</li> <li>ci: add actuated (#2652) (ab023bb)</li> <li>decouple ConstructToConstructTransformer from WhereTransformer (#2632) (e351592)</li> <li>extract rest and permission code from ProjectsResponderADM DEV-2106 (#2644) (1ba0007)</li> <li>Improve KnoraProject model  NO-TICKET (#2648) (8d08abd)</li> <li>Increase max post size (DEV-2125) (#2649) (bc6ffea)</li> <li>make construct transformer a service and move transformers to right package (#2645) (4129856)</li> <li>organize packages, cleanup and minor code improvements  DEV-2124 (#2646) (a5b030f)</li> <li>remove throws from ADM routes (DEV-2137) (#2654) (7e24663)</li> <li>remove throws from ListsResponderV1 &amp; OntologyResponderV1 &amp; ProjectsResponderV1 (DEV-1908) (#2627) (5eaf212)</li> <li>remove throws from ResourcesResponderV1 (DEV-2101) (#2635) (5e72661)</li> <li>streamline db initialization make commands (#2660) (82e53ee)</li> <li>update dependencies (#2642) (f4a1809)</li> <li>ziofy UsersRouteADM DEV-2105 (#2633) (4bb1770)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2812-2023-04-28","title":"28.1.2 (2023-04-28)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_17","title":"Bug Fixes","text":"<ul> <li>querying all projects don't return system projects (#2607) (68e88d9)</li> <li>search by label produces timeouts if too many resources match (DEV-2043) (#2591) (78479d3)</li> </ul>"},{"location":"DSP-API/09-release-notes/#documentation_8","title":"Documentation","text":"<ul> <li>Add subproperty documentation to the cardinalities check (DEV-2039) (#2603) (e39cc85)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_28","title":"Maintenance","text":"<ul> <li>Add make command to init db from dev server (DEV-1989) (#2574) (ab6dcce)</li> <li>Extract methods from UpdateResourceMetadataRequestV2#fromJsonLD (NO-TICKET) (#2626) (11fc9db)</li> <li>Extract standoff related functions from StringFormatter (NO-TICKET) (#2609) (dbfb86e)</li> <li>improve export-moving-images-frames (#2615) (680f286)</li> <li>move Gravsearch SPARQL transformers to separate package (#2614) (3846c38)</li> <li>remove dsp-shared project (DEV-2045) (#2619) (772e77c)</li> <li>remove errorFun from IRI related methods (DEV-1996) (#2585) (12670fb)</li> <li>remove intermediate interfaces from query transformers (DEV-2077) (#2610) (954677b)</li> <li>remove knora explicit graph (#2623) (95c55e7)</li> <li>remove more intermediate interfaces (DEV-2078) (#2612) (2f33878)</li> <li>remove throws from health route and route utils (#2584) (fba1b2f)</li> <li>remove throws from UsersResponderV1 (DEV-2102) (#2629) (e31f846)</li> <li>remove upload_for_processing route (#2616) (4562a4a)</li> <li>Remove warnings by using non deprecated zio.logging functions (#2606) (04ad6bb)</li> <li>rename gravsearch related variables (#2618) (b975d01)</li> <li>rename gravsearch utils (DEV-2074) (#2608) (99acc8c)</li> <li>rework removing of type annotations (DEV-2079) (#2611) (461b0b6)</li> <li>streamline gravsearch type inspection (#2605) (f6e9eda)</li> <li>streamline SPARQL transformation (#2624) (c616581)</li> <li>update dependencies (#2602) (474b23c)</li> <li>ziofy AuthenticationRouteV2 * ListsRouteV2 * StandoffRouteV2 (DEV-2050) (#2589) (cc4b7ba)</li> <li>ziofy JsonLDObject accessor methods (DEV-2084) (#2613) (666ddcf)</li> <li>ziofy OntologiesRouteV2 (DEV-2052) (#2593) (c472ff7)</li> <li>ziofy ProjectRouteADM (DEV-2104) (#2630) (edfb127)</li> <li>ziofy ResourcesRouteV1 (DEV-2035) (#2587) (e36605d)</li> <li>ziofy ResourcesRouteV2 (DEV-2091) (#2625) (7285b3c)</li> <li>ziofy RouteUtilV1 and change deprecated code (DEV-2079) (#2628) (3dacbf4)</li> <li>ziofy SearchRouteV2 DEV-2088 (#2622) (3105996)</li> <li>ziofy ValuesRouteV2 (DEV-2051) (#2604) (b3f15db)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2811-2023-04-13","title":"28.1.1 (2023-04-13)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_18","title":"Bug Fixes","text":"<ul> <li>cardinality issues on subclasses after adding cardinalities to superclass (DEV-2026) (#2572) (20a243b)</li> <li>Gravsearch wrongly finds no results, if a query can be optimized down to only negations (DEV-1980) (#2576) (0612b9a)</li> <li>use 400 instead of 500 for invalid input in fulltext search (DEV-1829) (#2557) (51acceb)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_29","title":"Maintenance","text":"<ul> <li>add webhook trigger for DEV deployment to workflow (INFRA-240) (#2577) (58304f6)</li> <li>distribute V2 value functions to proper objects (#2582) (fb6cbbc)</li> <li>fix docker-publish workflow output step failing (#2590) (7e29290)</li> <li>fix string returned by docker-image-tag containing special control characters (#2592) (ebee7d6)</li> <li>pulish sipi images on each commit on main (DEV-1997) (#2588) (727911d)</li> <li>remove CORS restriction from ZIO-HTTP routes (DEV-2015) (#2570) (f94bb82)</li> <li>remove errorFun from value conversion and extract to ValuesValidator (DEV-1993) (#2558) (6cd58e4)</li> <li>remove throwing from V1 Routes Assets, Authentication, Ckan (#2580) (7cb0d33)</li> <li>remove throwing in V1 Lists Route (DEV-2033) (#2579) (c64a41f)</li> <li>remove throwing in V1 Projects Route (DEV-2037) (#2581) (6b8bfc0)</li> <li>remove throws from V1 Search Responder(DEV-2038) (#2583) (2e6361f)</li> <li>Return BadRequest in v1 values API if an expected parameter\u2026 (#2561) (4a5a838)</li> <li>update dependencies (#2569) (644e085)</li> <li>upgrade Sipi base image to 2.8.1 DEV-2019 (#2586) (8d88659)</li> <li>ziofy ResourceTypesRouteV1 (DEV-2034) (#2578) (31a8206)</li> <li>ziofy StandoffRouteV1 (DEV-2031) (#2575) (d739dfe)</li> <li>ziofy UserRouteV1 (DEV-2028) (#2573) (222f757)</li> <li>ziofy ValuesRouteV1 (DEV-2012) (#2559) (0798fef)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2810-2023-03-29","title":"28.1.0 (2023-03-29)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_19","title":"Bug Fixes","text":"<ul> <li>Allow setting a cardinality in a three tier class hierarchy (DEV-1927) (#2542) (0dc76f0)</li> <li>Apply correct DAOP after changeing them (remove its caching) DEV-1965 (#2551) (72e5f92)</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements_14","title":"Enhancements","text":"<ul> <li>add separate route for local processing of files through sipi (#2519) (042f806)</li> </ul>"},{"location":"DSP-API/09-release-notes/#documentation_9","title":"Documentation","text":"<ul> <li>update Project IRI documentation (DEV-1786) (#2539) (230fca5)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_30","title":"Maintenance","text":"<ul> <li>add a make target for parametrised database dump and upload (#2541) (94c38f2)</li> <li>add docker container healthcheck for dsp-api (INFRA-93) (#2549) (8bdc160)</li> <li>CI: pull all tags when checking out (#2532) (fc3a891)</li> <li>Publish a docker container for webapi and sipi on each commit t\u2026 (#2553) (b6f2590)</li> <li>Remove dead ZIOs from ProjectResponderADM and introduce project services (DEV-1998) (#2534) (b5619c2)</li> <li>remove deprecated fuseki config (#2552) (f6826fb)</li> <li>Remove publishing sipi docker image because this build is broken (DEV-1848) (#2556) (71f75fa)</li> <li>Remove unused code related to ziofied Responders (DEV-1958) (#2543) (f40d6cb)</li> <li>run integration tests against akka and zio routes (DEV-1585) (#2545) (e730ba4)</li> <li>StringFormatter: move values related methods to separate file removing errorFun (DEV-1905) (#2550) (ddcf912)</li> <li>ziofy Authenticator (DEV-1926) (#2540) (9878529)</li> <li>ziofy ResourceUtilV1 (DEV-1967) (#2546) (c6e0805)</li> <li>ziofy ResourceUtilV2 (DEV-1963) (#2544) (89eb033)</li> <li>ziofy RouteUtilADM (DEV-1968) (#2547) (00b7070)</li> <li>ziofy SearchResponderV2 and Gravsearch (DEV-1755) (#2538) (e708fc3)</li> <li>ziofy ValuesResponderV2 (DEV-1757) (#2536) (ca6f97a)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2800-2023-03-17","title":"28.0.0 (2023-03-17)","text":""},{"location":"DSP-API/09-release-notes/#breaking-changes_2","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>Allow special characters in full-text search (DEV-1712) (#2441)</li> </ul>"},{"location":"DSP-API/09-release-notes/#bug-fixes_20","title":"Bug Fixes","text":"<ul> <li>Allow special characters in full-text search (DEV-1712) (#2441) (b3148a0)</li> <li>deleted properties in cardinalities should be included in the count query (DEV-1878) (#2530) (9ae80fd)</li> <li>doSipiPostUpdate to evaluate provided task only once (NO-TICKET) (#2521) (a3639c1)</li> <li>Invalidate the cache when changing the password (DEV-1814) (#2511) (1cf4727)</li> <li>Replace invalid character in usernames (#2510) (031c744)</li> <li>Slow Gravsearch Queries are not being logged (DEV-1838) (#2522) (fb254ad)</li> </ul>"},{"location":"DSP-API/09-release-notes/#documentation_10","title":"Documentation","text":"<ul> <li>minor improvements to permissions documentation (#2520) (e434f2c)</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements_15","title":"Enhancements","text":"<ul> <li>Add all instances which violate the new cardinality to response (DEV-1861) (#2523) (5f22100)</li> <li>Add new upload route to Sipi without processing (DEV-1700) (#2457) (3cacc76)</li> <li>sipi: add support for ODD and RNG file formats (DEV-1271) (#2197) (4441035)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_31","title":"Maintenance","text":"<ul> <li>add JSON logging (DEV-931) (#2506) (f3bbce3)</li> <li>add logger name to text logging (DEV-1826) (#2514) (bcf83d2)</li> <li>bump SIPI version (DEV-1797) (#2507) (7e2dcd3)</li> <li>cleanup StringFormatter (NO-TICKET) (#2517) (ca418aa)</li> <li>CORS fails if allowed origins contain upper case letter (#2505) (de7337a)</li> <li>remove dsp-main (NO-TICKET) (#2513) (d7f2f19)</li> <li>Remove needless logging of all requests to /admin/projects (NO-TICKET) (#2529) (3a01d87)</li> <li>remove unused subprojects (NO-TICKET) (#2531) (45b7632)</li> <li>remove zio die from triplestore (NO-TICKET) (#2509) (d5e0076)</li> <li>Replace CacheServiceManager (DEV-1798) (#2503) (843d31d)</li> <li>Replace IIIFServiceManager (DEV-1799) (#2502) (22e456b)</li> <li>Replace TriplestoreServiceManager (DEV-1800) (#2501) (211b601)</li> <li>ziofy Cache (DEV-1824) (#2512) (1daeb55)</li> <li>ziofy CardinalityHandler and OntologyHelpers (NO-TICKET) (#2500) (d6fa2c0)</li> <li>ziofy ontology responder v2 (DEV-1753) (#2515) (3ac2379)</li> <li>ziofy ResourcesResponderV1 (DEV-1747) (#2486) (00ddc62)</li> <li>ziofy ResourcesResponderV2 (DEV-1754) (#2518) (e25284d)</li> <li>ziofy StandoffResponderV2 (DEV-1756) (#2498) (402ea3f)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2710-2023-03-03","title":"27.1.0 (2023-03-03)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_21","title":"Bug Fixes","text":"<ul> <li>Filter out deleted subjects and objects when counting for cardinalities (DEV-1795) (#2499) (60e1833)</li> </ul>"},{"location":"DSP-API/09-release-notes/#documentation_11","title":"Documentation","text":"<ul> <li>add high level overview of the current domain entities to the documentation (DEV-1416) (#2431) (02db5ce)</li> <li>add missing documentation (DEV-1422) (#2482) (9667f7a)</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements_16","title":"Enhancements","text":"<ul> <li>Add context for can set cardinalities failed responses (DEV-1768) (#2471) (16c137e)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_32","title":"Maintenance","text":"<ul> <li>Add MessageRelay as a preparation for enabling us to migrate responders to ZIO DEV-1728 (#2453) (c61368a)</li> <li>add missing github-actions workflow (#2463) (8983c95)</li> <li>improve finding all graphs (#2470) (6de3c5d)</li> <li>Integrate zio-fied project responder in zio route DEV-1728 (#2460) (1ed0175)</li> <li>log request and user ID as log annotations (DEV-1233) (#2466) (bec6fe6)</li> <li>Move key frames extraction from store.lua to upload.lua (DEV-1716) (#2454) (34924e2)</li> <li>update dependencies (#2497) (d20b9ff)</li> <li>update SIPI version and adjust Lua scripts (DEV-1727) (#2462) (9884539)</li> <li>ziofy CkanResponderV1  DEV-1743 (#2473) (5a2d16c)</li> <li>ziofy CkanResponderV1 &amp; ListsResponderV1 (DEV-1743 DEV-1744) (#2474) (34c2d95)</li> <li>ziofy GroupsResponderADM DEV-1737 (#2461) (44c5d46)</li> <li>ziofy ListsResponderADM (DEV-1738) (#2467) (b5bd82b)</li> <li>ziofy ListsResponderV2 (DEV-1752) (#2479) (28d5b48)</li> <li>ziofy OntologyResponderV1 (DEV-1745) (#2475) (f8344ff)</li> <li>ziofy PermissionsResponderADM  DEV-1739 (#2468) (ba85b94)</li> <li>Ziofy ProjectsResponderADM DEV-1728 (#2459) (69c0640)</li> <li>ziofy ProjectsResponderV1 (DEV-1746) (#2476) (715c117)</li> <li>ziofy ResourceUtilV2 &amp; PermissionUtilADM (NO-TICKET) (#2485) (e2dcd43)</li> <li>ziofy SearchResponderV1 (DEV-1748) (#2480) (7711a47)</li> <li>ziofy SipiResponderADM DEV-1740 (#2469) (fcfdc39)</li> <li>ziofy StandoffResponderV1 (DEV-1749) (#2495) (6a13eb0)</li> <li>ziofy StandoffTagUtilV2 (NO-TICKET) (#2481) (1daf98b)</li> <li>ziofy StoresResponderADM DEV-1741 (#2472) (991d5b9)</li> <li>ziofy UsersResponderADM DEV-1742 (#2465) (208087e)</li> <li>ziofy UsersResponderV1 (DEV-1750) (#2478) (e8112f8)</li> <li>ziofy ValuesResponderV1 (DEV-1751) (#2496) (9b68e89)</li> <li>ziofy ValueUtilV1 (NO-TICKET) (#2484) (4f38ac2)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2700-2023-02-16","title":"27.0.0 (2023-02-16)","text":""},{"location":"DSP-API/09-release-notes/#breaking-changes_3","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>return empty list instead of an error on GET /admin/groups route (DEV-1599) (#2439)</li> </ul>"},{"location":"DSP-API/09-release-notes/#bug-fixes_22","title":"Bug Fixes","text":"<ul> <li>CORS: explicitly assign allowed CORS methods (#2443) (99fe6fa)</li> <li>fix JVM metrics and logging DEV-1639 (#2426) (97eb0fc)</li> <li>return empty list instead of an error on GET /admin/groups route (DEV-1599) (#2439) (f966f7c)</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements_17","title":"Enhancements","text":"<ul> <li>expose GET /admin/projects/[ iri | shortname | shortcode ]/{iri | shortname | shortcode }/admin-members as ZIO HTTP route (DEV-1587) (#2423) (d7c2cd6)</li> <li>expose GET /admin/projects/[ iri | shortname | shortcode ]/{iri | shortname |\u00a0shortcode }/members as ZIO HTTP route (DEV-1587)  (#2422) (b5300b5)</li> <li>expose GET /admin/projects/[iri | shortname | shortcode]/{projectIri | shortname | shortcode}/RestrictedViewSettings as ZIO HTTP route (DEV-1587)  (#2428) (8080951)</li> <li>expose GET /admin/projects/iri/{projectIri}/Keywords as ZIO HTTP route (DEV-1587)  (#2425) (3b86834)</li> <li>expose GET /admin/projects/Keywords as ZIO HTTP route (DEV-1587)  (#2424) (39607a2)</li> </ul>"},{"location":"DSP-API/09-release-notes/#documentation_12","title":"Documentation","text":"<ul> <li>fix broken links in docs and remove unused files (#2433) (34df59d)</li> <li>replace/canset cardinality documentation (DEV-1564 &amp; DEV-1563) (#2420) (adf1a34)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_33","title":"Maintenance","text":"<ul> <li>add 0.0.0.0 to allowed origins in config (#2430) (9afd7a0)</li> <li>add complete in-memory triple store implementation (DEV-628) (#2432) (708c217)</li> <li>Add more tests for the ZIO HTTP routes (DEV-1695) (#2419) (84e2ead)</li> <li>Clean-up ZIO HTTP routes and related code (#2429) (1684718)</li> <li>cleanup remove unused shacl and redundant StringFormatter setup (#2438) (293f6a3)</li> <li>instrumentation: expose ZIO-HTTP metrics (DEV-1714) (#2452) (a76b6f9)</li> <li>Rename ITTestDataFactory (#2440) (dc8b4b5)</li> <li>update PR template and GH release action (#2427) (65180ef)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2620-2023-02-02","title":"26.2.0 (2023-02-02)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_23","title":"Bug Fixes","text":"<ul> <li>Search by label returns an Error when searching with a slash (DEV-1656) (#2406) (bb02464)</li> <li>Test file issue (#2418) (78612e0)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_34","title":"Maintenance","text":"<ul> <li>cleanup Cache class, ie. scaladoc, renaming, code improvements (#2411) (5efa7ac)</li> <li>deps: change schedule of dependency updates check (#2414) (a5c7a38)</li> <li>deps: update scalafmt-core, kamon-core, kamon-scala-future (#2412) (a02408a)</li> <li>enable publishing docker image in both arm64 and amd64 architectures (DEV-1684) (#2410) (f224b24)</li> <li>rename ReplaceCardinalitiesRequestV2, remove old code, simplify and extract methods in OntologyResponder (#2389) (5a4f4b6)</li> <li>Replace Cardinality isStricterThan with isIncludedIn (#2405) (229b362)</li> <li>update Scala to 2.13.10 (#2415) (d501f59)</li> <li>upgrade dependencies (#2404) (0d78030)</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements_18","title":"Enhancements","text":"<ul> <li>add CORS to ZIO-HTTP routes (DEV-1619) (#2390) (8dad4b2)</li> <li>allow setting a cardinality given the count in the persisted data is compatible  DEV-1563 (#2416) (789bdd1)</li> <li>Allow setting new Cardinalities if they are more restrictive than the respective Cardinalities of a possibly existing super class (#2397) (dbde740)</li> <li>expose GET /admin/projects/iri/{project_iri}/allData as ZIO HTTP route (DEV-1587)  (#2413) (eefaf62)</li> <li>expose PUT /admin/projects/iri/{project_iri} as ZIO HTTP route (DEV-1587) (#2394) (a832868)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2610-2023-01-19","title":"26.1.0 (2023-01-19)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_24","title":"Bug Fixes","text":"<ul> <li>API starts up and reports healthy despite failing to load ontologies (#2363) (1696f7d)</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements_19","title":"Enhancements","text":"<ul> <li>Add check for can a cardinality be set for specific class and property (#2382) (17e7064)</li> <li>Add mimetype image/jpx as accepted (#2378) (d590e38)</li> <li>expose DELETE /admin/projects as ZIO HTTP route (DEV-1587)  (#2386) (6059012)</li> <li>expose POST /admin/projects as ZIO HTTP route (DEV-1587) (#2376) (983bec7)</li> </ul>"},{"location":"DSP-API/09-release-notes/#documentation_13","title":"Documentation","text":"<ul> <li>clean up ADRs and add new one for ZIO HTTP (#2380) (3a03733)</li> <li>Fix broken links in docs (#2392) (85d25e3)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_35","title":"Maintenance","text":"<ul> <li>add authentication middleware (#2370) (73a18ff)</li> <li>Add tests for ZIO HTTP project routes (#2377) (88e067b)</li> <li>Cleanup and remove unused code (#2383) (6aaf1bf)</li> <li>Expose the zio-http port in docker-compose.yml for the frontend (DEV-1482) (#2381) (b11d493)</li> <li>fix manual release form branch (DEV-1519) (#2393) (97d7399)</li> <li>Remove deprecated Cardinality model (#2387) (3c13e3a)</li> <li>Suppress compiler warnings (#2368) (62e1193)</li> <li>switch zio http implementation from d11 to dev.zio (#2395) (0ef6d2f)</li> <li>update create-release.yml (#2371) (f97f1bd)</li> <li>update year in the copyright header (#2391) (d3740f8)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2600-2023-01-05","title":"26.0.0 (2023-01-05)","text":""},{"location":"DSP-API/09-release-notes/#breaking-changes_4","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>return external representation of ontology IRIs in admin routes (#2330)</li> </ul>"},{"location":"DSP-API/09-release-notes/#bug-fixes_25","title":"Bug Fixes","text":"<ul> <li>return external representation of ontology IRIs in admin routes (#2330) (b58828a)</li> </ul>"},{"location":"DSP-API/09-release-notes/#documentation_14","title":"Documentation","text":"<ul> <li>update admin documentation (#2328) (cedb603)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_36","title":"Maintenance","text":"<ul> <li>Add BEOL exception to UUID validation (DEV-1570) (#2349) (ed34df1)</li> <li>add docker healthcheck to SIPI image (INFRA-130) (#2359) (8554e3b)</li> <li>Add dorny/test-reporter for webapi test results DEV-1544 (#2322) (5c76338)</li> <li>add metrics endpoint (DEV-1555) (#2331) (b06f5b4)</li> <li>Add sbt-header plugin to webapi project and add missing headers (#2317) (afec4a7)</li> <li>add stack-without-app target (#2324) (5ec3223)</li> <li>Add test report generation for integration tests (DEV-1544) (#2325) (a61f227)</li> <li>Extract common code from responders into EntityAndClassIriS\u2026 (#2348) (238ed71)</li> <li>make it possible to debug integration tests with sbt or IDE (#2327) (3a222bb)</li> <li>refactor project route for ZIO HTTP (#2338) (e5be1db)</li> <li>remove methods that gets project and members by UUID (#2346) (2c8da6c)</li> <li>remove PR2255 plugin and revert project IRIs (DEV-1571) (#2350) (86a19ab)</li> <li>remove Redis cache implementation leftovers (DEV-1503) (#2290) (a678dc5)</li> <li>Remove unused dependency to gatling (#2361) (baca8a8)</li> <li>remove unused route GET /admin/stores (#2329) (1e11655)</li> <li>replace Spray-JSON with ZIO-JSON in health route (#2360) (1b8e74b)</li> <li>simplify health route setup (#2337) (26e9596)</li> <li>Simplify layer setup for integration-tests and reduce to two layers (#2339) (94836e8)</li> <li>Split long running integration tests and fast unit tests (DEV-1537) (#2315) (5b4d601)</li> <li>update dependencies (#2347) (560b84f)</li> <li>update dependencies (#2358) (6007266)</li> <li>upgrade Apache Jena Fuseki docker image to v2.0.11 (DEV-1299) (#2362) (c91d284)</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements_20","title":"Enhancements","text":"<ul> <li>Add resources/info endpoint (DEV-792) (#2309) (c3f96a9)</li> <li>expose GET /admin/projects as ZIO HTTP route (#2366) (b19f81c)</li> <li>expose GET /admin/projects/[shortname | shortcode]/{shortname | shortcode} as ZIO HTTP routes (#2365) (9907cdf)</li> <li>Expose GET /admin/projects/iri/{iriUrlEncoded} as zio-http route (#2355) (2f42906)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2500-2022-12-02","title":"25.0.0 (2022-12-02)","text":""},{"location":"DSP-API/09-release-notes/#breaking-changes_5","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>partOf and sequenceOf properties are not marked as isEditable (#2268)</li> <li>change all project IRIs to contain UUID instead of shortcode (DEV-1400) (#2255)</li> </ul>"},{"location":"DSP-API/09-release-notes/#bug-fixes_26","title":"Bug Fixes","text":"<ul> <li>Allow warn logging for requests/responses which are failures (#2273) (92531ce)</li> <li>Ask timeouts with GetUserADM (DEV-1443) (#2267) (3f77b6e)</li> <li>Deprecation warnings for SCryptPasswordEncoder (#2308) (86dc389)</li> <li>Don't log hashes (DEV-1442) (#2265) (adaf4b0)</li> <li>Exclude characters with special meaning in Lucene Query Parser syntax from searchbylabel search (DEV-1446) (#2269) (b359916)</li> <li>fix RepositoryUpdater that is not timing out during repository upgrade (DEV-1534) (#2313) (213a5f0)</li> <li>Increase timeout when emptying repository (DEV-1506) (#2289) (39771ed)</li> <li>key frame extraction (DEV-1513) (#2300) (729f071)</li> <li>partOf and sequenceOf properties are not marked as isEditable (#2268) (68f19c3)</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements_21","title":"Enhancements","text":"<ul> <li>projectsADM: add possibility to get project and members by UUID (DEV-1408) (#2272) (4b66682)</li> </ul>"},{"location":"DSP-API/09-release-notes/#documentation_15","title":"Documentation","text":"<ul> <li>improve permissions documentation (#2314) (f4004b2)</li> <li>publish architectural decision records (#2301) (be6bcd0)</li> <li>Remove warning which considers v2 as not production ready (#2282) (0246522)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_37","title":"Maintenance","text":"<ul> <li>add GH workflow to publish manually from branches (#2316) (6f5020e)</li> <li>change all project IRIs to contain UUID instead of shortcode (DEV-1400) (#2255) (f2b2584)</li> <li>Decrease timeout for emptying repository (DEV-1518) (#2310) (a83000b)</li> <li>Introduce ZIO HTTP (DEV-1425) (#2256) (7ae6d24)</li> <li>make possible to run Publish GH Action manually (DEV-1519) (#2297) (bfe578a)</li> <li>SIPI: add timestamp to some SIPI Lua logs (#2311) (8f3f19f)</li> <li>slight improvements to PR template (#2312) (ca3a8d0)</li> <li>update dependencies (#2264) (41d5315)</li> <li>update dependencies (#2281) (725bc0f)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2408-2022-10-18","title":"24.0.8 (2022-10-18)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_27","title":"Bug Fixes","text":"<ul> <li>User can be project admin without being project member (DEV-1383) (#2248) (c1aa8f0)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_38","title":"Maintenance","text":"<ul> <li>automatically clean sipi image files (DEV-1395) (#2237) (eddb34d)</li> <li>fix project name (#2239) (5af65eb)</li> <li>update dependencies (#2247) (2eefcbc)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2407-2022-10-07","title":"24.0.7 (2022-10-07)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_28","title":"Bug Fixes","text":"<ul> <li>DSP-API project IRI validation fails for BEOL project IRI (#2240) (4b63a72)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2406-2022-10-06","title":"24.0.6 (2022-10-06)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_29","title":"Bug Fixes","text":"<ul> <li>Ask timeouts when requesting projects (DEV-1386) (#2235) (1820367)</li> <li>User can't be edited by project admin (DEV-1373) (#2232) (e0b1433)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2405-2022-10-05","title":"24.0.5 (2022-10-05)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_30","title":"Bug Fixes","text":"<ul> <li>Timeout for multiple Gravsearch queries (DEV-1379) (#2234) (c63567b)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_39","title":"Maintenance","text":"<ul> <li>app actor cleanup (#2230) (a67c98f)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2404-2022-09-29","title":"24.0.4 (2022-09-29)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_31","title":"Bug Fixes","text":"<ul> <li>API returns invalid file URLs, due to including the port (#2223) (1a0b09c)</li> <li>Value update or deletion doesn't work for properties of other ontology (DEV-1367) (#2222) (472b375)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2403-2022-09-21","title":"24.0.3 (2022-09-21)","text":""},{"location":"DSP-API/09-release-notes/#maintenance_40","title":"Maintenance","text":"<ul> <li>application actor (DEV-956) (#2166) (4852425)</li> <li>remove swagger route and docs annotations (DEV-1335) (#2203) (bec5b8a)</li> <li>Replace Settings with AppConfig (DEV-1312) (#2202) (9b76417)</li> <li>update dependencies (#2214) (3706acd)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2402-2022-09-08","title":"24.0.2 (2022-09-08)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_32","title":"Bug Fixes","text":"<ul> <li>sipi: remove support for audio/mp4 file format (DEV-1300) (#2195) (122bf52)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_41","title":"Maintenance","text":"<ul> <li>Adjust GitHub template (DEV-1313) (#2183) (5782494)</li> <li>bump dependencies (#2196) (2fbf664)</li> <li>Ignore push on certain branches from tests (DEV-1112) (#2187) (e0a0fbb)</li> <li>Improve GitHub actions (DEV-1112) (#2182) (71c772f)</li> <li>Skip tests with success (DEV-1112) (#2188) (82703d7)</li> <li>v3: add project slice (DEV-1009) (#2076) (bd2d31e)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2401-2022-08-26","title":"24.0.1 (2022-08-26)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_33","title":"Bug Fixes","text":"<ul> <li>cardinality: Check cardinality with multiple inherited classes (DEV-1189) (#2164) (f183d7d)</li> <li>Fuseki doesn't stop after client's timeout (DEV-1190) (#2175) (90f86b5)</li> <li>v2 test: fix test data collection (#2174) (468df8f)</li> </ul>"},{"location":"DSP-API/09-release-notes/#documentation_16","title":"Documentation","text":"<ul> <li>update file formats (DEV-1185) (#2158) (4fab193)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_42","title":"Maintenance","text":"<ul> <li>add codacy coverage reporter (#2177) (c30390f)</li> <li>add code coverage (#2135) (1a02f49)</li> <li>add code coverage (#2163) (b026442)</li> <li>add coverage upload to codecov (#2179) (5d4e57e)</li> <li>feature-toggles: remove remnants of feature toggles (DEV-217) (#2176) (ed1cbd0)</li> <li>remove github action for deploying docs (DEV-824) (#2155) (a55eef4)</li> <li>update dependencies (#2173) (79b88d2)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2400-2022-08-08","title":"24.0.0 (2022-08-08)","text":""},{"location":"DSP-API/09-release-notes/#breaking-changes_6","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>add isSequenceOf to knora-base ontology (DEV-745) (#2061)</li> </ul>"},{"location":"DSP-API/09-release-notes/#bug-fixes_34","title":"Bug Fixes","text":"<ul> <li>sipi: SIPI returns 404 instead of images if cookie is invalid (DEV-1135) (#2142) (eb797f0)</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements_22","title":"Enhancements","text":"<ul> <li>add isSequenceOf to knora-base ontology (DEV-745) (#2061) (74366d4)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_43","title":"Maintenance","text":"<ul> <li>dependencies: bulk upgrade dependencies (#2144) (4602150)</li> <li>update dependencies (4cd9812)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2303-2022-08-02","title":"23.0.3 (2022-08-02)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_35","title":"Bug Fixes","text":"<ul> <li>triplestore-connector: stack crashes on invalid search (DEV-1154) (#2140) (e5426dc)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_44","title":"Maintenance","text":"<ul> <li>dependencies: update akka-http-cors to 1.1.3 (#2103) (5d0d522)</li> <li>dependencies: update jwt-spray-json to 9.0.2 (#2111) (6e54443)</li> <li>dependencies: update Saxon-HE to 11.4 (#2137) (08c9f68)</li> <li>dependencies: update scalatest to 3.2.13 (#2138) (a345079)</li> <li>dependencies: update spring-security-core to 5.6.6 (#2130) (c83645d)</li> <li>dependencies: update spring-security-core to 5.7.2 (#2139) (3a12562)</li> <li>dependencies: update titanium-json-ld to 1.3.1 (#2104) (4850525)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2302-2022-07-29","title":"23.0.2 (2022-07-29)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_36","title":"Bug Fixes","text":"<ul> <li>ontology: link value property is still not editable after updating the property metadata (DEV-1116) (#2133) (d5b48db)</li> <li>sipi: cookie parsing can cause an error which leads to 404 for images (DEV-1135) (#2134) (bd023a5)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_45","title":"Maintenance","text":"<ul> <li>add dependency checking (#2100) (8017b1f)</li> <li>add dependency checking (#2102) (856277b)</li> <li>Improve validation of GUI elements and GUI attributes (DEV-1082) (#2098) (5cec8ba)</li> <li>v3: add role slice (DEV-1010) (#2099) (6920716)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2301-2022-07-19","title":"23.0.1 (2022-07-19)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_37","title":"Bug Fixes","text":"<ul> <li>ontology: Don't accept list values without gui attribute (DEV-775) (#2089) (74a14e1)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2300-2022-07-14","title":"23.0.0 (2022-07-14)","text":""},{"location":"DSP-API/09-release-notes/#breaking-changes_7","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>transform valueHasUri values from node to string type (DEV-1047) (#2094)</li> </ul>"},{"location":"DSP-API/09-release-notes/#bug-fixes_38","title":"Bug Fixes","text":"<ul> <li>authentication: make cookie name unique between environments (#2095) (7d420a4)</li> <li>ontology: existing cardinalities get duplicated in the triplestore when adding a new cardinality to a class (DEV-937) (#2092) (9fa26db)</li> <li>transform valueHasUri values from node to string type (DEV-1047) (#2094) (e1d8d95)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2201-2022-07-08","title":"22.0.1 (2022-07-08)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_39","title":"Bug Fixes","text":"<ul> <li>authentication: make cookie name unique between environments (#2091) (680021e)</li> <li>value: make impossible to set list root node as a value (DEV-973) (#2088) (94d2b46)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_46","title":"Maintenance","text":"<ul> <li>triplestore: ZIO-fying triplestore service (DSP-904) (#2059) (9e038ec)</li> <li>v3: finish user slice (DEV-671) (#2078) (48592ad)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2200-2022-06-30","title":"22.0.0 (2022-06-30)","text":""},{"location":"DSP-API/09-release-notes/#breaking-changes_8","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>add upgrade plugin that fixes invalid date serialisations (#2081)</li> </ul>"},{"location":"DSP-API/09-release-notes/#bug-fixes_40","title":"Bug Fixes","text":"<ul> <li>add upgrade plugin that fixes invalid date serialisations (#2081) (3a0902e)</li> <li>ontology: link value property is not editable after editing the property metadata (DEV-1037) (#2084) (09688f5)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_47","title":"Maintenance","text":"<ul> <li>temporarily ignore KnoraSipiIntegrationV2ITSpec (#2085) (59f93b3)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2101-2022-06-23","title":"21.0.1 (2022-06-23)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_41","title":"Bug Fixes","text":"<ul> <li>fix RepositoryUpdater by removing old way of adding plugins (#2082) (6599b68)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2100-2022-06-23","title":"21.0.0 (2022-06-23)","text":""},{"location":"DSP-API/09-release-notes/#breaking-changes_9","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>fix valueHasUri bad values and missing types (DEV-1036) (#2079)</li> </ul>"},{"location":"DSP-API/09-release-notes/#bug-fixes_42","title":"Bug Fixes","text":"<ul> <li>fix valueHasUri bad values and missing types (DEV-1036) (#2079) (de1e5a4)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2041-2022-06-16","title":"20.4.1 (2022-06-16)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_43","title":"Bug Fixes","text":"<ul> <li>admin: return list labels and comments sorted by language (#2074) (f3a66cb)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_48","title":"Maintenance","text":"<ul> <li>add missing client test data (DEV-979) (#2072) (54446bc)</li> <li>audio: remove not required properties (#2070) (96362f4)</li> <li>exceptions: Create sbt project \"shared\" and move exceptions (DEV-990) (#2075) (c09392d)</li> <li>move value objects to separate project (DEV-615) (#2069) (b55eb12)</li> <li>responder manager as plain case class (#2073) (7f55697)</li> <li>user: add user project (DEV-586) (#2063) (0c5ec03)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2040-2022-05-25","title":"20.4.0 (2022-05-25)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_44","title":"Bug Fixes","text":"<ul> <li>cache: cache does not update correctly when an ontology is modified (DEV-939) (#2068) (8541519)</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements_23","title":"Enhancements","text":"<ul> <li>admin: add list child node deletion route (DEV-729) (#2064) (179ad19)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2031-2022-05-12","title":"20.3.1 (2022-05-12)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_45","title":"Bug Fixes","text":"<ul> <li>authentication: Add bouncyCastle dependency (DEV-922) (#2065) (4ac799d)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2030-2022-05-12","title":"20.3.0 (2022-05-12)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_46","title":"Bug Fixes","text":"<ul> <li>Problem with updating cache after deleting comments (DEV-508) (#2060) (a9fda7e)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_49","title":"Maintenance","text":"<ul> <li>check that the expected Fuseki version is present (DEV-331) (#2057) (2a695ec)</li> <li>deps: bump ZIO version (DEV-893) (#2056) (933f91e)</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements_24","title":"Enhancements","text":"<ul> <li>add Romansh as supported language (DEV-557) (#2053) (58971c8)</li> <li>gravsearch: improve gravsearch performance by using unions in prequery (DEV-492) (#2045) (40354a7)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2021-2022-05-05","title":"20.2.1 (2022-05-05)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_47","title":"Bug Fixes","text":"<ul> <li>projectsADM: fix cache issue in getSingleProjectADM (#2054) (77bfadc)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_50","title":"Maintenance","text":"<ul> <li>IIIFService: zio-fying iiif service (DEV-801) (#2044) (224b664)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2020-2022-04-28","title":"20.2.0 (2022-04-28)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_48","title":"Bug Fixes","text":"<ul> <li>Cleaning sipi tmp folder results in an error when there are lots of files (DEV-316) (#2052) (33e6896)</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements_25","title":"Enhancements","text":"<ul> <li>error-handling: return status 504 instead of 500 for triplestore timeout exception (DEV-749) (#2046) (a47096e)</li> <li>ontology: allow deleting comments of classes (DEV-804) (#2048) (eca9206)</li> <li>ontology: allow deleting comments of properties (DEV-696) (#2042) (985c5fd)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_51","title":"Maintenance","text":"<ul> <li>formatting-logging: reformat scala code and change logging policy (DEV-839) (#2051) (5e4e914)</li> <li>formatting: reformat turtle files (DEV-430) (#2050) (0389e52)</li> <li>triplestore: remove embedded-jena-tdb related code (#2043) (a5ea62e)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2011-2022-04-14","title":"20.1.1 (2022-04-14)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_49","title":"Bug Fixes","text":"<ul> <li>sipi: extract frames from video even without aspect ratio (DEV-802) (#2041) (57d40f7)</li> </ul>"},{"location":"DSP-API/09-release-notes/#documentation_17","title":"Documentation","text":"<ul> <li>ingest: Add accepted file formats to documentation (DEV-677) (#2038) (f72e7a0)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_52","title":"Maintenance","text":"<ul> <li>cacheservice: use ZIO (DEV-546) (#2022) (521150f)</li> <li>triplestore: remove graphDB support (#2037) (bf17bca)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2010-2022-04-07","title":"20.1.0 (2022-04-07)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_50","title":"Bug Fixes","text":"<ul> <li>docs/requirements.txt to reduce vulnerabilities (#2034) (b07600d)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_53","title":"Maintenance","text":"<ul> <li>distinguish between compile, runtime and test dependencies (#2028) (7cb326f)</li> <li>inventory and upgrade of dependencies (DEV-478) (#2033) (470b77f)</li> </ul>"},{"location":"DSP-API/09-release-notes/#documentation_18","title":"Documentation","text":"<ul> <li>replace Bazel and Intellij documentation with SBT and VSCode (DEV-607) (#2035) (603efef)</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements_26","title":"Enhancements","text":"<ul> <li>ontology: Add support for additional ontologies (DEV-512) (#2029) (50e3186)</li> <li>sipi: upload video support (DEV-771 / DEV-207) (#1952) (47f2e28)</li> </ul>"},{"location":"DSP-API/09-release-notes/#2000-2022-03-31","title":"20.0.0 (2022-03-31)","text":""},{"location":"DSP-API/09-release-notes/#breaking-changes_10","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>ontology: make knora-base:lastModificationDate required property (#2018)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_54","title":"Maintenance","text":"<ul> <li>fix docker containers timezone (#2027) (6bbb3fe)</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements_27","title":"Enhancements","text":"<ul> <li>ontology: make knora-base:lastModificationDate required property (#2018) (64cdce9)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1900-2022-03-24","title":"19.0.0 (2022-03-24)","text":""},{"location":"DSP-API/09-release-notes/#breaking-changes_11","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>authentication: add server specific issuer to JWT token (DEV-555) (#2024)</li> </ul>"},{"location":"DSP-API/09-release-notes/#bug-fixes_51","title":"Bug Fixes","text":"<ul> <li>authentication: add server specific issuer to JWT token (DEV-555) (#2024) (4bd5b2f)</li> <li>version: fix displayed versions (#2026) (566285c)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_55","title":"Maintenance","text":"<ul> <li>improve logging (DEV-634) (#2021) (85d1057)</li> <li>remove warnings (DEV-621) (#2015) (70630f1)</li> <li>test: get tests to run in vs code (DEV-601) (#2020) (747d13d)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1800-2022-03-08","title":"18.0.0 (2022-03-08)","text":""},{"location":"DSP-API/09-release-notes/#breaking-changes_12","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>standoff: return XML alongside HTML for textValue with custom standoff mapping and default XSL transformation (DEV-201) (#1991)</li> </ul>"},{"location":"DSP-API/09-release-notes/#bug-fixes_52","title":"Bug Fixes","text":"<ul> <li>Use correct docker image tag after publishing (DEV-614) (#2016) (7649515)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_56","title":"Maintenance","text":"<ul> <li>improve code structure (DEV-612) (#2012) (eac0049)</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements_28","title":"Enhancements","text":"<ul> <li>standoff: return XML alongside HTML for textValue with custom standoff mapping and default XSL transformation (DEV-201) (#1991) (2548b8f)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1753-2022-03-04","title":"17.5.3 (2022-03-04)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_53","title":"Bug Fixes","text":"<ul> <li>RepositoryUpdater: make sure temp directories are deleted (#2010) (9c9a1bd)</li> </ul>"},{"location":"DSP-API/09-release-notes/#documentation_19","title":"Documentation","text":"<ul> <li>fix permissions design documentation (DEV-495) (#1997) (5154adc)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_57","title":"Maintenance","text":"<ul> <li>fix docker image name (DEV-574) (#2007) (7a186ba)</li> <li>remove fuseki image creation and change sipi image creation to sbt (DEV-544) (#2011) (eed2767)</li> <li>start on a functional domain design implementation for ontologies (DEV-227) (#2009) (54cee7a)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1752-2022-02-23","title":"17.5.2 (2022-02-23)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_54","title":"Bug Fixes","text":"<ul> <li>permissions: Update default object access permissions (DEV-514) (#2004) (04a8d3d)</li> <li>timeout: Increase timeouts (DEV-536) (#2005) (f1f8005)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_58","title":"Maintenance","text":"<ul> <li>BAZEL to SBT migration (DEV-508) (#2002) (38faa9e)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1751-2022-02-16","title":"17.5.1 (2022-02-16)","text":""},{"location":"DSP-API/09-release-notes/#maintenance_59","title":"Maintenance","text":"<ul> <li>deps: upgrade Jena Fuseki docker image to v2.0.8 (#2001) (3e2eccc)</li> <li>deps: upgrate Jena API to v4.4.0 (#1999) (3eecc69)</li> </ul>"},{"location":"DSP-API/09-release-notes/#documentation_20","title":"Documentation","text":"<ul> <li>fix markdown issues in documentation (DEV-504) (#2003) (ff6b4cf)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1750-2022-02-11","title":"17.5.0 (2022-02-11)","text":""},{"location":"DSP-API/09-release-notes/#enhancements_29","title":"Enhancements","text":"<ul> <li>ontologies: make comments optional for property and class creation (DEV-342) (#1996) (a3c286c)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1741-2022-02-07","title":"17.4.1 (2022-02-07)","text":""},{"location":"DSP-API/09-release-notes/#maintenance_60","title":"Maintenance","text":"<ul> <li>deps: upgrade Jena to v4.3.2 (DEV-473) (#1995) (216dcb4)</li> <li>deps: upgrade titanium-json-ld to v1.2.0 &amp; jakarta-json to v2.0.1 (DEV-335) (#1993) (ad01bf9)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1740-2022-02-04","title":"17.4.0 (2022-02-04)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_55","title":"Bug Fixes","text":"<ul> <li>version-upgrade: add upgrade plugin for ArchiveRepresentation and DeletedResource (DEV-467) (#1992) (e1566e9)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_61","title":"Maintenance","text":"<ul> <li>add support for building native API and Fuseki Docker images on Apple M1 (DEV-435) (#1987) (ab80e72)</li> <li>refactor test models (DEV-264) (#1975) (65952f9)</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements_30","title":"Enhancements","text":"<ul> <li>resource: add ArchiveRepresentation to API V1 (DEV-393) (DEV-394) (#1984) (65b88a2)</li> <li>UUID: add IRI validation that allows only to create IRIs using UUID version 4 and 5 (DEV-402) (#1990) (74d4344)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1731-2022-01-28","title":"17.3.1 (2022-01-28)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_56","title":"Bug Fixes","text":"<ul> <li>ontology: Sub-properties of link values aren't created correctly (DEV-426) (#1985) (70a8b08)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_62","title":"Maintenance","text":"<ul> <li>deps: bump fuseki image to 2.0.7 (DEV-389) (#1983) (fcbfb1d)</li> <li>license: update the license (DEV-374) (#1981) (044fdc5)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1730-2022-01-17","title":"17.3.0 (2022-01-17)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_57","title":"Bug Fixes","text":"<ul> <li>ontology: DSP-API creates wrong partOfValue property (DEV-216) (#1978) (27b5c86)</li> <li>resource: return sensible CreationDate for DeletedResource (#1979) (1658103)</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements_31","title":"Enhancements","text":"<ul> <li>resource: add support for 7z files in ArchiveRepresentation (DEV-322) (#1977) (729689c)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_63","title":"Maintenance","text":"<ul> <li>admin: refactor projects &amp; users value objects (DEV-240) (#1976) (563d252)</li> <li>CI: add disk cache and other cleanup (DEV-388) (#1982) (e590d12)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1720-2022-01-10","title":"17.2.0 (2022-01-10)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_58","title":"Bug Fixes","text":"<ul> <li>search: Return matching sub-nodes when searching for list label (DEV-158) (#1973) (7e8c759)</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements_32","title":"Enhancements","text":"<ul> <li>return a DeletedResource or DeletedValue instead of 404 if a deleted resource or value is requested (DEV-226) (#1960) (c78e252)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1710-2021-12-20","title":"17.1.0 (2021-12-20)","text":""},{"location":"DSP-API/09-release-notes/#enhancements_33","title":"Enhancements","text":"<ul> <li>listsADM: add canDeleteList route (#1968) (c276625)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_64","title":"Maintenance","text":"<ul> <li>deps: bump log4j to 2.17.0 and Fuseki to 4.3.2 (DEV-334) (#1972) (afb6587)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1704-2021-12-17","title":"17.0.4 (2021-12-17)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_59","title":"Bug Fixes","text":"<ul> <li>authentication: delete cookie (in chrome) on logout (DEV-325) (#1970) (b2c9204)</li> <li>candeletecardinalities: return canDoResponse of false instead of throwing an exception for inherited cardinalities (DEV-314) (#1966) (55b5d4b)</li> <li>ontology: cardinality of one can be added to classes as long as not used in data (#1958) (2cebac7)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_65","title":"Maintenance","text":"<ul> <li>bump logging libraries (DEV-333) (#1969) (f680c4f)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1703-2021-12-14","title":"17.0.3 (2021-12-14)","text":""},{"location":"DSP-API/09-release-notes/#maintenance_66","title":"Maintenance","text":"<ul> <li>bump Fuseki (log4shell fix) (IT-4) (#1965) (86fa251)</li> <li>projectMetadataV2: remove projectMetadataV2 implementation (#1962) (7b95d66)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1702-2021-12-10","title":"17.0.2 (2021-12-10)","text":""},{"location":"DSP-API/09-release-notes/#maintenance_67","title":"Maintenance","text":"<ul> <li>bump db version (add shiro.ini)(DEV-302)(#1961) (d147bf6)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1701-2021-12-06","title":"17.0.1 (2021-12-06)","text":""},{"location":"DSP-API/09-release-notes/#maintenance_68","title":"Maintenance","text":"<ul> <li>fix issues with fuseki (DEV-277) (#1953) (4c1a5f1)</li> </ul>"},{"location":"DSP-API/09-release-notes/#documentation_21","title":"Documentation","text":"<ul> <li>Updated readme (#1956) (774b68d)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1700-2021-11-25","title":"17.0.0 (2021-11-25)","text":""},{"location":"DSP-API/09-release-notes/#breaking-changes_13","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>add archive representation to DSP-API (DEV-17) (#1926)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_69","title":"Maintenance","text":"<ul> <li>bump fuseki base container version (#1946) (cf8bdec)</li> <li>bump java and sipi version (only security updates) (DEV-263) (#1950) (fe6106f)</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements_34","title":"Enhancements","text":"<ul> <li>add archive representation to DSP-API (DEV-17) (#1926) (0123a8f)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1601-2021-11-22","title":"16.0.1 (2021-11-22)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_60","title":"Bug Fixes","text":"<ul> <li>canDeleteCardinalities: canDeleteCardinalities checks too eagerly (DEV-187) (#1941) (298ba47)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1600-2021-11-19","title":"16.0.0 (2021-11-19)","text":""},{"location":"DSP-API/09-release-notes/#breaking-changes_14","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>listsADM: remove new lists implementation (DEV-160) (#1932) (24e34dd)</li> </ul>"},{"location":"DSP-API/09-release-notes/#bug-fixes_61","title":"Bug Fixes","text":"<ul> <li>projectsADM: clear cache after changing project (DEV-239) (#1943) (17c5c09)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_70","title":"Maintenance","text":"<ul> <li>groupsADM: improve value objects implementation (DEV-160) (#1932) (24e34dd)</li> <li>listsADM: remove new lists implementation (DEV-160) (#1932) (24e34dd)</li> <li>release v16.0.0 (8e5f494)</li> <li>release v16.0.0 (ba6923d)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1513-2021-11-19","title":"15.1.3 (2021-11-19)","text":""},{"location":"DSP-API/09-release-notes/#breaking-changes_15","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>listsADM: remove new lists implementation (DEV-160) (#1932) (24e34dd)</li> </ul>"},{"location":"DSP-API/09-release-notes/#bug-fixes_62","title":"Bug Fixes","text":"<ul> <li>projectsADM: clear cache after changing project (DEV-239) (#1943) (17c5c09)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_71","title":"Maintenance","text":"<ul> <li>groupsADM: improve value objects implementation (DEV-160) (#1932) (24e34dd)</li> <li>listsADM: remove new lists implementation (DEV-160) (#1932) (24e34dd)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1512-2021-11-12","title":"15.1.2 (2021-11-12)","text":""},{"location":"DSP-API/09-release-notes/#maintenance_72","title":"Maintenance","text":"<ul> <li>bump bazel (#1938) (39417e6)</li> <li>improve validation handling (DEV-228) (#1937) (94d7d3f)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1511-2021-11-09","title":"15.1.1 (2021-11-09)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_63","title":"Bug Fixes","text":"<ul> <li>list: add support for special characters in list update (DEV-200) (#1934) (3c2865c)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_73","title":"Maintenance","text":"<ul> <li>init-db: init db test data from test server (DEV-198) (#1936) (1c24bea)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1510-2021-11-03","title":"15.1.0 (2021-11-03)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_64","title":"Bug Fixes","text":"<ul> <li>users: fix bug adding user to group or project (DEV-184) (#1925) (a24a320)</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements_35","title":"Enhancements","text":"<ul> <li>add value objects to list routes - old and new (DEV-65) (#1917) (7752a36)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_74","title":"Maintenance","text":"<ul> <li>bump sipi version (DEV-188) (#1931) (d302b5e)</li> <li>change license to Apache 2.0 (DEV-82) (#1924) (2d39a1f)</li> <li>deps: bump mkdocs from 1.1.2 to 1.2.3 in /docs (#1927) (cbbf1b6)</li> <li>fix warnings (DEV-80) (#1929) (1368769)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1503-2021-10-21","title":"15.0.3 (2021-10-21)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_65","title":"Bug Fixes","text":"<ul> <li>list: find list labels in full-text search (#1922) (cc3b06c)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1502-2021-10-14","title":"15.0.2 (2021-10-14)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_66","title":"Bug Fixes","text":"<ul> <li>authenticator: improve performance (#1914) (d6a0d27)</li> <li>groups: update test data and documentation to use language specific group descriptions (DEV-123) (#1921) (0f45b51)</li> <li>removing cardinality of a link property (DEV-90) (#1919) (c79c194)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_75","title":"Maintenance","text":"<ul> <li>groups: refactor groups route using value objects (DEV-66) (#1913) (1cd98e6)</li> <li>knora-base: fix typo (#1918) (720aa65)</li> <li>projects: cleaner value objects usage in addProject route (DEV-119) (#1920) (32b9e49)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1501-2021-09-29","title":"15.0.1 (2021-09-29)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_67","title":"Bug Fixes","text":"<ul> <li>candeletecardinalities: return correct response on route negative case (DEV-36) (#1910) (652c747)</li> <li>escape-special-characters: escape special characters in user routes (DSP-1557) (#1902) (689d92a)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_76","title":"Maintenance","text":"<ul> <li>contributors: remove contributors file (DEV-77) (#1911) (7d925b6)</li> <li>projects: refactor projects route with value objects (DEV-64) (#1909) (172cf77)</li> <li>reformatting Scala files (DSP-1897) (#1908) (8df70a2)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1500-2021-09-14","title":"15.0.0 (2021-09-14)","text":""},{"location":"DSP-API/09-release-notes/#breaking-changes_16","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>ontology: use patch instead of delete for deleting cardinalities (DSP-1700) (#1903)</li> </ul>"},{"location":"DSP-API/09-release-notes/#documentation_22","title":"Documentation","text":"<ul> <li>add username to changeable attributes (DSP-1895) (#1904) (719cd0d)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_77","title":"Maintenance","text":"<ul> <li>ontology: use patch instead of delete for deleting cardinalities (DSP-1700) (#1903) (91ef4ec)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1410-2021-08-19","title":"14.1.0 (2021-08-19)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_68","title":"Bug Fixes","text":"<ul> <li>ontology V2: use internal iri when updating a property (DSP-1868) (#1898) (a746f65)</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements_36","title":"Enhancements","text":"<ul> <li>v2-ontologies: add remove cardinalities from class if property not used in resources (DSP-1700) (#1869) (a30668b)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1401-2021-08-04","title":"14.0.1 (2021-08-04)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_69","title":"Bug Fixes","text":"<ul> <li>add-test-file: add response file for test case (DSP-1841) (#1894) (028e685)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1400-2021-08-02","title":"14.0.0 (2021-08-02)","text":""},{"location":"DSP-API/09-release-notes/#breaking-changes_17","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>projects: Change shortname to xsd:NCName forma, Escape special character in payloads of projects endpoints (DSP-1555 ) (#1886)</li> </ul>"},{"location":"DSP-API/09-release-notes/#bug-fixes_70","title":"Bug Fixes","text":"<ul> <li>api-v2, api-admin: ontology name and project name should be URL safe (DSP-1749) (#1889) (17601a7)</li> <li>permissions: reject malformed doap and ap create/update request (DSP-1328) (#1890) (3e3a3ce)</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements_37","title":"Enhancements","text":"<ul> <li>customIRIs: custom IRIs must contain a UUID (DSP-1763) (#1884) (593d9cb)</li> <li>projects: Change shortname to xsd:NCName forma, Escape special character in payloads of projects endpoints (DSP-1555 ) (#1886) (b3c2d5f)</li> <li>resource-metadata: return resource metadata after metadata update request (DSP-1828) (#1893) (a4e878a)</li> <li>video: add support for video/mp4 to both v1 and v2 (DSP-1204) (#1891) (83fb4b8)</li> </ul>"},{"location":"DSP-API/09-release-notes/#13120-2021-06-24","title":"13.12.0 (2021-06-24)","text":""},{"location":"DSP-API/09-release-notes/#enhancements_38","title":"Enhancements","text":"<ul> <li>resourceHistoryEvents: route for resource history events (DSP-1749) (#1882) (f86de53)</li> </ul>"},{"location":"DSP-API/09-release-notes/#13110-2021-06-17","title":"13.11.0 (2021-06-17)","text":""},{"location":"DSP-API/09-release-notes/#enhancements_39","title":"Enhancements","text":"<ul> <li>events: update resource last modification date event (#1877) (d5e70ba)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_78","title":"Maintenance","text":"<ul> <li>build: cleanup (#1880) (749e8ea)</li> <li>cache-service: add in-memory implementation (#1870) (61531ab)</li> <li>gh-ci: update docs deployment (DSP-1741) (#1878) (ff65323)</li> </ul>"},{"location":"DSP-API/09-release-notes/#13100-2021-06-09","title":"13.10.0 (2021-06-09)","text":""},{"location":"DSP-API/09-release-notes/#enhancements_40","title":"Enhancements","text":"<ul> <li>gravsearch: use layer info for topological order permutations (DSP-1389) (#1872) (b49d5ba)</li> </ul>"},{"location":"DSP-API/09-release-notes/#documentation_23","title":"Documentation","text":"<ul> <li>prepare documentation for docs.dasch.swiss (DSP-1721) (#1873) (66751a0)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1392-2021-06-02","title":"13.9.2 (2021-06-02)","text":""},{"location":"DSP-API/09-release-notes/#maintenance_79","title":"Maintenance","text":"<ul> <li>sipi: add comments (#1864) (06e8b0c)</li> </ul>"},{"location":"DSP-API/09-release-notes/#documentation_24","title":"Documentation","text":"<ul> <li>ontology: update term (#1865) (cd37580)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1391-2021-05-28","title":"13.9.1 (2021-05-28)","text":""},{"location":"DSP-API/09-release-notes/#maintenance_80","title":"Maintenance","text":"<ul> <li>bazel: bump bazel version (#1866) (c754cbf)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1390-2021-05-25","title":"13.9.0 (2021-05-25)","text":""},{"location":"DSP-API/09-release-notes/#enhancements_41","title":"Enhancements","text":"<ul> <li>api-v2: Add routes for checking whether ontology entities can be changed (DSP-1621) (#1861) (fdd098f)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1380-2021-05-19","title":"13.8.0 (2021-05-19)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_71","title":"Bug Fixes","text":"<ul> <li>api-v2: Update subclasses in ontology cache when base class changes (DSP-1643) (#1860) (beb951d)</li> <li>gravsearch: don't move the patterns with resource IRI after topological sorting (DSP-1620) (#1856) (6022c91)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_81","title":"Maintenance","text":"<ul> <li>documentation: bug fix in documentation deployment (DSP-1605) (bb852c9)</li> <li>documentation: bug fix in documentation deployment (DSP-1605) (#1854) (999a2bb)</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements_42","title":"Enhancements","text":"<ul> <li>api-v2: Change GUI element and attribute of a property (DSP-1600) (#1855) (ce9ba3a)</li> <li>api-v2: Generate IIIF manifest (DSP-50) (#1784) (74feb2c)</li> <li>conf: Rule to dump prod data and load locally (DSP-1485) (#1857) (161ea31)</li> <li>ontology: Allow adding new property to a resource class in use (DSP-1629) (#1859) (061875e)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1370-2021-05-06","title":"13.7.0 (2021-05-06)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_72","title":"Bug Fixes","text":"<ul> <li>doc: correct remaining incorrect copyright dates (#1847) (d1473ed)</li> <li>gravsearch: Keep rdf:type knora-api:Resource when needed. (#1835) (e561d94)</li> <li>lists: Escape special characters in comment, label, and name of a list node (DSP-1529) (#1846) (f96c069)</li> <li>test-data: change webern shortcode in test data (DSP-1520) (#1843) (5f06a10)</li> <li>values v1 route: fix geoname case (DSP-1487) (#1839) (9d0e93e)</li> </ul>"},{"location":"DSP-API/09-release-notes/#documentation_25","title":"Documentation","text":"<ul> <li>replace knora by dsp or dsp-api in documentation (DSP-1469) (#1836) (923abe8)</li> <li>v1: improve search docs (#1848) (5a81f73)</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements_43","title":"Enhancements","text":"<ul> <li>api-v2: Add route for changing GUI order of cardinalities (#1850) (d8dbb4f)</li> <li>api-v2: Return events describing version history of resources and values of a project ordered by data (DSP-1528) (#1844) (84f7c14)</li> <li>ext search v1: add support for URI values (DSP-1522) (#1842) (b119757)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_82","title":"Maintenance","text":"<ul> <li>bumb Bazel to version with apple silicon support (#1852) (286d289)</li> <li>bump scala to 2.13 (#1851) (5feb915)</li> <li>deps: bump versions (DSP-1569) (#1849) (f69f008)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1360-2021-03-16","title":"13.6.0 (2021-03-16)","text":""},{"location":"DSP-API/09-release-notes/#enhancements_44","title":"Enhancements","text":"<ul> <li>api-v2: Improve error message when an XSLT transformation file is not found (DSP-1404) (#1831) (153a674)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1351-2021-03-11","title":"13.5.1 (2021-03-11)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_73","title":"Bug Fixes","text":"<ul> <li>OntologiesRouteV2: Reject internal ontology names in external schema (DSP-1394) (#1827) (e392bf1)</li> <li>OntologyResponderV2: Fix check when updating ontology label and comment (DSP-1390) (#1826) (26cce48)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1350-2021-03-08","title":"13.5.0 (2021-03-08)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_74","title":"Bug Fixes","text":"<ul> <li>replaceCardinalities.scala.txt: Fix blank node insertion. (#1829) (d24c5d2)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_83","title":"Maintenance","text":"<ul> <li>gh-ci: update release please configuration (DSP-1382) (#1825) (7ce4b65)</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements_45","title":"Enhancements","text":"<ul> <li>Add support for audio files (DSP-1343) (#1818) (7497023)</li> <li>gravsearch: Optimise Gravsearch queries using topological sort (DSP-1327) (#1813) (efbecee)</li> <li>store: Return 404 if the triplestore returns 404. (#1828) (5250f6d)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1340-2021-02-17","title":"13.4.0 (2021-02-17)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_75","title":"Bug Fixes","text":"<ul> <li>Lists: fix bug in shifting the second of two children after deletion of the first one. (#1820) (d92bb01)</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements_46","title":"Enhancements","text":"<ul> <li>projects: add default set of permissions when creating new project (DSP-1347) (#1822) (b7c71ca)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1331-2021-02-09","title":"13.3.1 (2021-02-09)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_76","title":"Bug Fixes","text":"<ul> <li>Lists: fix bug in deleting the single child of a node (DSP-1355) (#1816) (1d06572)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1330-2021-02-05","title":"13.3.0 (2021-02-05)","text":""},{"location":"DSP-API/09-release-notes/#enhancements_47","title":"Enhancements","text":"<ul> <li>sipi: add storing of original and sidecar (DSP-1318) (#1808) (022ed7e)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1320-2021-02-04","title":"13.2.0 (2021-02-04)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_77","title":"Bug Fixes","text":"<ul> <li>api-v1: Optimise SPARQL queries. (#1814) (4edc27c)</li> <li>Lists: Repositioning the node when new position equals length of new parent's children (DSP-1322) (#1811) (3fead13)</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements_48","title":"Enhancements","text":"<ul> <li>api-v1: Add support for PDF files (DSP-1267) (#1797) (c3b2e84)</li> <li>api-v2: Allow resubmitting existing class/property lablels/comments. (#1812) (6a13852)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_84","title":"Maintenance","text":"<ul> <li>make targets for adding metadata (DSP-1289) (#1810) (9c1a70a)</li> <li>salsah1: delete from repository (#1805)(DSP-1294) (3251a74)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1311-2021-01-30","title":"13.1.1 (2021-01-30)","text":""},{"location":"DSP-API/09-release-notes/#maintenance_85","title":"Maintenance","text":"<ul> <li>gh-ci: Bring back the client-test-data command to github actions (#1804) (e6b0fbf)</li> <li>revert release 13.1.0 (#1800) (565e5ac)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1310-2021-01-29","title":"13.1.0 (2021-01-29)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_78","title":"Bug Fixes","text":"<ul> <li>api-v1: Optimise link value queries for Fuseki (DSP-1243) (#1791) (b1e1b9e)</li> <li>api-v2: Don't allow an invalid cardinality on a boolean property (DSP-1236) (#1788) (3d5f802)</li> <li>gravsearch: Handle UNION scopes with FILTER correctly (DSP-1240) (#1790) (61d2e86)</li> <li>HttpTriplestoreConnector: Always parse triplestore responses as UTF-8. (#1789) (61d2e86)</li> <li>permissions: fix getting builtin groups while creating a permission (DSP-1296 ) (#1799) (d390014)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_86","title":"Maintenance","text":"<ul> <li>gh-ci: fix issue in the release process (#1782) (afe61b7)</li> <li>ghi-ci: google chat release notification (#1785) (4718cdc)</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements_49","title":"Enhancements","text":"<ul> <li>permissions: add delete permissions: (DSP-1169) (#1787) (3fe8c14)</li> <li>store: Return a clearer exception when a triplestore read timeout occurs. (#1795) (0eeb3b3)</li> </ul>"},{"location":"DSP-API/09-release-notes/#1300-2021-01-11","title":"13.0.0 (2021-01-11)","text":""},{"location":"DSP-API/09-release-notes/#breaking-changes_18","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>New features and refactoring (#1779)</li> </ul>"},{"location":"DSP-API/09-release-notes/#bug-fixes_79","title":"Bug Fixes","text":"<ul> <li>(dependencies) add the missing dependency (#1755) (0e37d21)</li> <li>api-v2: Change link value comment (#1582) (faa2e55)</li> <li>api-v2: Don't check file extensions of XSL files and Gravsearch templates (DSP-1005) (#1749) (905766f)</li> <li>api-v2: Fix custom datatypes in knora-api simple ontology (#1601) (e0cfd4e)</li> <li>api-v2: Fix generated SPARQL for updating property comment (#1693) (7b70339)</li> <li>api-v2: Fix ontology deletion (#1584) (70b0841)</li> <li>api-v2: Fix post-update check for resource with standoff link (DSP-841) (#1728) (35d449f)</li> <li>failing repository upgrade at startup (DSP-654) (#1712) (0d6b4ee)</li> <li>gravsearch: Prevent duplicate results (#1626) (9313b88)</li> <li>gravsearch: When link property compared in filter, don't compare link value property, too (#1699) (a3b1665)</li> <li>init db scripts (DSP-511) (#1681) (d4505ce)</li> <li>loading of data (DSP-445) (#1669) (3f8d406)</li> <li>OntologyResponderV2: Add a global ontology cache lock (#1637) (1853865)</li> <li>OntologyResponderV2: Fix ontology cache update when ontology metadata changed (#1709) (4f57977)</li> <li>server header (DSP-537) (#1691) (8d7bee8)</li> <li>sipi makefile (#1616) (73a0afe)</li> <li>sipi: Don't expect API v1 status code (DSP-1114) (#1763) (3236d25)</li> <li>sipi: Improve performance of file value query (#1697) (8214877)</li> <li>test: Fix typos in IRIs in anything-data.ttl. (#1625) (23d51ce)</li> <li>upgrade: Fix log output. (#1774) (b43fab0)</li> <li>webapi: unique username/email check on change user (#1561) (4f26e22)</li> <li>rdf-api: Use the Jena RDF API implementation by default (DSP-1153) (1772) (389feb4)</li> </ul>"},{"location":"DSP-API/09-release-notes/#documentation_26","title":"Documentation","text":"<ul> <li>api-v2: Document what happens when a resource has a link to a deleted resource (#1685) (1c88651)</li> <li>fix broken links (#1688) (9c0292c)</li> <li>fix make targets docker-build and docker-publish (#1694) (d06b6a6)</li> <li>Update README (DSP-1142) (#1771) (7ba7fc6)</li> <li>Update required mkdocs package (#1725) (27de65e)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_87","title":"Maintenance","text":"<ul> <li>api-v2: Delete obsolete files. (#1634) (e80bf52)</li> <li>api-v2: Switch from JSONLD-Java to Titanium (#1715) (9e28e5b)</li> <li>build: Bump testcontainers version. (#1723) (24ae1d3)</li> <li>build: Update ScalaTest (DSP-919) (#1745) (bbaeadd)</li> <li>build: Upgrade Sipi to 3.0.0-rc.8 (DSP-916) (#1743) (23395fc)</li> <li>bump sipi to rc.7 (DSP-733) (#1721) (b635495)</li> <li>gh-ci: Fix gren issue (#1666) (2dc5361)</li> <li>gh-ci: Publish on release only (#1662) (787dca8)</li> <li>rdf-api: Use the Jena RDF API implementation by default (DSP-1153) (#1772) (389feb4)</li> <li>Remove obsolete functions from StringFormatter. (#1640) (5fa6de4)</li> <li>Update ci workflow release notes (#1707) (d8e0b39)</li> <li>gh-ci CI is failing to test upgrade correctly (DSP-667) (#1073) (13cbdab)</li> <li>bazel Update Bazel maven rules to see if it fixes problems with macOS Big Sur (DSP-1099) (#1761) (a2c9941)</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements_50","title":"Enhancements","text":"<ul> <li>Add an RDF processing fa\u00e7ade (2nd iteration) (DSP-1083) (#1759) (346873d)</li> <li>Add feature toggles (DSP-910) (#1742) (2e6db2e)</li> <li>Add time value type (#1403) (d925c85)</li> <li>api-v1: Change API v1 file uploads to work like API v2 (DSP-41, PR 3) (#1722) (a824bcc)</li> <li>api-v2: Accept custom new value IRI when updating value (#1698) (4d8f867)</li> <li>api-v2: Accept custom timestamps in update/delete requests (#1686) (0fbe5a8)</li> <li>api-v2: Add an RDF processing fa\u00e7ade (DSP-1020) (#1754) (9170419)</li> <li>api-v2: Add metadata routes (DSP-662) (#1734) (bf48968)</li> <li>api-v2: Add support for text file upload (DSP-44) (#1664) (a88d20d)</li> <li>api-v2: Add test data. (#1704) (de14ab1)</li> <li>api-v2: Allow querying for rdfs:label in Gravsearch (#1649) (d56004b)</li> <li>api-v2: Control JSON-LD nesting via an HTTP header (DSP-1084) (#1758) (b13eecf)</li> <li>api-v2: Make inference optional in Gravsearch (#1696) (166a260)</li> <li>api-v2: Optionally return file values in full-text search results (DSP-1191) (#1776) (01f59bd)</li> <li>api-v2: Remove client code generation (#1610) (6977ab3)</li> <li>api-v2: Remove ForbiddenResource (#1615) (992596e)</li> <li>api-v2: Return value UUID on value creation and update (#1602) (cbed601)</li> <li>api-v2: Specify custom IRIs when creating resources/values (#1646) (135b039)</li> <li>clientapi: Change method signature. (#1583) (c2a2559)</li> <li>gh-ci: Release please and update gh actions (DSP-1168) (#1777) (593ffab)</li> <li>gravsearch: Allow comparing variables representing resource IRIs (#1713) (f359c8e)</li> <li>gravsearch: Remove deprecated functions (#1660) (5d3af46)</li> <li>New features and refactoring (#1779) (9a5fb77)</li> <li>rdf-api: Add a general-purpose SHACL validation utility (DSP-930) (#1762) (bfd3192)</li> <li>sipi: Improve error message if XSL file not found (#1590) (bbb42f6)</li> <li>triplestores: Support Apache Jena Fuseki (#1375) (82f8a55)</li> <li>upgrade: Update repository on startup (#1643) (0127dca)</li> </ul>"},{"location":"DSP-API/09-release-notes/#v1300-rc25-08122020","title":"v13.0.0-rc.25 (08/12/2020)","text":""},{"location":"DSP-API/09-release-notes/#enhancements_51","title":"Enhancements","text":"<ul> <li>#1768 | DSP-1106 Update Permission</li> <li>#1767 | enhancement(triplestore): Use N-Quads instead of TriG for repository upgrade (DSP-1129)</li> <li>#1764 | DSP-1033 Reposition List Nodes</li> <li>#1762 | feat(rdf-api): Add a general-purpose SHACL validation utility (DSP-930)</li> <li>#1759 | feat: Add an RDF processing fa\u00e7ade (2nd iteration) (DSP-1083)</li> <li>#1760 | (DSP-1031) Delete list items</li> <li>#1753 | Edit lists routes (DSP-597 )</li> <li>#1758 | feat(api-v2): Control JSON-LD nesting via an HTTP header (DSP-1084)</li> </ul>"},{"location":"DSP-API/09-release-notes/#bug-fixes_80","title":"Bug fixes","text":"<ul> <li>#1763 | fix(sipi): Don't expect API v1 status code (DSP-1114)</li> </ul>"},{"location":"DSP-API/09-release-notes/#documentation_27","title":"Documentation","text":"<ul> <li>#1771 | docs: Update README (DSP-1142)</li> </ul>"},{"location":"DSP-API/09-release-notes/#maintenance_88","title":"Maintenance","text":"<ul> <li>#1770 | refactor: Use java.nio.file.Path instead of java.io.File (DSP-1124)</li> <li>#1765 | DSP-1094 Upgrade Swagger version</li> <li>#1766 | style: Add Scalafmt config file</li> <li>#1769 | style: Reformat code with Scalafmt (DSP-1137)</li> <li>#1754 | feat(api-v2): Add an RDF processing fa\u00e7ade (DSP-1020)</li> <li>#1757 | build: bazel workspace cleanup</li> </ul>"},{"location":"DSP-API/09-release-notes/#v1300-rc24-13112020","title":"v13.0.0-rc.24 (13/11/2020)","text":"<ul> <li>#1756 | DSP-1052 : Migration task to replace empty strings with dummy \"FIXME\"</li> </ul>"},{"location":"DSP-API/09-release-notes/#v1300-rc23-09112020","title":"v13.0.0-rc.23 (09/11/2020)","text":""},{"location":"DSP-API/09-release-notes/#bug-fixes_81","title":"Bug fixes","text":"<ul> <li>#1755 | DSP-1029: Add the missing dependency</li> </ul>"},{"location":"DSP-API/09-release-notes/#v1300-rc22-09112020","title":"v13.0.0-rc.22 (09/11/2020)","text":""},{"location":"DSP-API/09-release-notes/#breaking-changes_19","title":"Breaking changes","text":"<ul> <li>#1724 | test: Collect client test data from E2E tests (DSP-724)</li> <li>#1727 | DSP-740 Update List Name</li> <li>#1722 | feat(api-v1): Change API v1 file uploads to work like API v2 (DSP-41, PR 3)</li> <li>#1233 | feat(api-v1): Change API v1 file uploads to work like API v2</li> <li>#1708 | Get Project Permissions</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements_52","title":"Enhancements","text":"<ul> <li>#1403 | feat: Add time value type</li> <li>#1537 | build: Add env var to set triplestore actor pool</li> <li>#1649 | feat(api-v2): Allow querying for rdfs:label in Gravsearch</li> <li>#1742 | feat: Add feature toggles (DSP-910)</li> <li>#1741 | DSP-804: create a child node with a custom IRI</li> <li>#1734 | feat(api-v2): Add metadata routes (DSP-662)</li> <li>#1739 | enhancement(api-v2): Optimise checking isDeleted (DSP-848)</li> <li>#1664 | feat(api-v2): Add support for text file upload (DSP-44)</li> <li>#1652 | DSP-377 Support Islamic calendar</li> <li>#1717 | enhancement(gravsearch): Optimise queries by moving up statements with resource IRIs</li> <li>#1713 | feat(gravsearch): Allow comparing variables representing resource IRIs</li> <li>#1710 | update ontology metadata with a comment</li> <li>#1704 | feat(api-v2): Add test data</li> <li>#1703 | Add comments to ontology metadata</li> <li>#1686 | feat(api-v2): Accept custom timestamps in update/delete requests</li> <li>#1692 | Create Permissions</li> <li>#1696 | feat(api-v2): Make inference optional in Gravsearch</li> <li>#1697 | fix(sipi): Improve performance of file value query</li> <li>#1698 | feat(api-v2): Accept custom new value IRI when updating value</li> <li>#1700 | hierarchically ordered Sequence of base classes</li> <li>#1689 | build: bump SIPI to v3.0.0-rc.5 (DSP-547)</li> <li>#1679 | Gravsearch optimisations</li> <li>#1663 | build: add support for SIPI v3.0.0-rc.3 (DSP-433)</li> <li>#1660 | feat(gravsearch): Remove deprecated functions</li> <li>#1653 | build:  dockerize fuseki (dsp-30)</li> </ul>"},{"location":"DSP-API/09-release-notes/#bug-fixes_82","title":"Bug Fixes","text":"<ul> <li>#1626 | fix(gravsearch): Prevent duplicate results</li> <li>#1587 | fix (webapi): Add enforcing of restrictions for username and email</li> <li>#1576 | Add missing env var</li> <li>#1571 | fixed date string format</li> <li>#1564 | enable click on save button in case of recoverable error</li> <li>#1751 | DSP-1022 SIPI_EXTERNAL_HOSTNAME doesn't contain the external hostname</li> <li>#1749 | fix(api-v2): Don't check file extensions of XSL files and Gravsearch templates (DSP-1005)</li> <li>#1748 | DSP-756 Tests failing because Knora version header and route are incorrect</li> <li>#1746 | DSP-932: Don't allow missing StringLiteralV2 value if language tag given</li> <li>#1744 | DSP-917 Releases pushed to Dockerhub from DSP-API are \"dirty\"</li> <li>#1733 | DSP-470 Intermittent bind errors</li> <li>#1728 | fix(api-v2): Fix post-update check for resource with standoff link (DSP-841)</li> <li>#1723 | chore(build): Bump testcontainers version (DSP-755)</li> <li>#1706 | Fix of update of list node info and update of project info</li> <li>#1712 | fix: failing repository upgrade at startup (DSP-654)</li> <li>#1709 | fix(OntologyResponderV2): Fix ontology cache update when ontology metadata changed</li> <li>#1701 | reverse change of Permission JSONs</li> <li>#1693 | fix(api-v2): Fix generated SPARQL for updating property comment</li> <li>#1699 | fix(gravsearch): When link property compared in filter, don't compare link value property, too</li> <li>#1691 | fix: server header (DSP-537)</li> <li>#1681 | fix: init db scripts (DSP-511)</li> <li>#1669 | fix: loading of data (DSP-445)</li> </ul>"},{"location":"DSP-API/09-release-notes/#documentation_28","title":"Documentation","text":"<ul> <li>#1598 | doc: fix sipi docs link</li> <li>#1609 | fix complex schema url</li> <li>#1568 | fixed the URI for the query</li> <li>#1726 | PersmissionsDocs: remove the attribute</li> <li>#1725 | docs: Update required mkdocs package</li> <li>#1711 | update developer and create resource docs</li> <li>#1684 | developer guideline</li> <li>#1685 | docs(api-v2): Document what happens when a resource has a link to a deleted resource</li> <li>#1688 | docs: fix broken links</li> <li>#1694 | docs: fix publishing</li> <li>#1621 | fixing typos for list rendering</li> </ul>"},{"location":"DSP-API/09-release-notes/#other","title":"Other","text":"<ul> <li>#1750 | Update README.md</li> <li>#1747 | DSP-920 Renaming default github branch to \"main\" ;  Move to the same base branch</li> <li>#1740 | DSP-877 Upload api-client-test-data to GitHub release</li> <li>#1738 | DSP-877 Upload api-client-test-data to GitHub release</li> <li>#1736 | DSP-877 Upload api-client-test-data to GitHub release</li> <li>#1730 | DSP-816: Generate client test data for health route</li> <li>#1719 | change possibly conflictual env var USERNAME (DSP-706)</li> <li>#1720 | DSP-620 Update release process</li> <li>#1714 | test: fix generation of test data (DSP-665)</li> <li>#1716 | bulid: fix sipi image version (DSP-677)</li> <li>#1718 | DSP-702 Add template for PRs</li> <li>#1715 | chore(api-v2): Switch from JSONLD-Java to Titanium</li> <li>#1707 | chore: Update ci workflow</li> <li>#1702 | Add PR labels (DSP-607)</li> <li>#1695 | refactor(gravsearch): Clarify optimisations</li> <li>#1678 | refactor: first steps towards more independent packages (DSP-513)</li> <li>#1680 | build: bump rules_docker and instructions for installing bazelisk</li> <li>#1674 | build: add mkdocs for documentation generation (DSP-460)</li> <li>#1480 | build: add bazel (DSP-437)</li> <li>#1666 | Fix gren issue in github actions workflow</li> <li>#1662 | Publish on release only</li> <li>#1661 | Automated release notes</li> </ul>"},{"location":"DSP-API/09-release-notes/#dependencies","title":"Dependencies","text":"<ul> <li>#1721 | chore: bump sipi to rc.7 (DSP-733)</li> <li>#1735 | DSP-496 Bump Apache Jena Fuseki and Apache Jena Libraries to 3.16</li> <li>#1737 | DSP-842 Bump used Bazel version to newly released 3.7.0</li> <li>#1743 | chore(build): Upgrade Sipi to 3.0.0-rc.8 (DSP-916)</li> <li>#1745 | chore(build): Update ScalaTest (DSP-919)</li> <li>#1752 | DSP-1017 Upgrade to Sipi v3.0.0-rc.9</li> </ul>"},{"location":"DSP-API/09-release-notes/#v1300-rc21-09112020","title":"v13.0.0-rc.21 (09/11/2020)","text":""},{"location":"DSP-API/09-release-notes/#breaking-changes_20","title":"Breaking changes","text":"<ul> <li>#1724 | test: Collect client test data from E2E tests (DSP-724)</li> <li>#1727 | DSP-740 Update List Name</li> <li>#1722 | feat(api-v1): Change API v1 file uploads to work like API v2 (DSP-41, PR 3)</li> <li>#1233 | feat(api-v1): Change API v1 file uploads to work like API v2</li> <li>#1708 | Get Project Permissions</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements_53","title":"Enhancements","text":"<ul> <li>#1403 | feat: Add time value type</li> <li>#1649 | feat(api-v2): Allow querying for rdfs:label in Gravsearch</li> <li>#1742 | feat: Add feature toggles (DSP-910)</li> <li>#1741 | DSP-804: create a child node with a custom IRI</li> <li>#1734 | feat(api-v2): Add metadata routes (DSP-662)</li> <li>#1739 | enhancement(api-v2): Optimise checking isDeleted (DSP-848)</li> <li>#1664 | feat(api-v2): Add support for text file upload (DSP-44)</li> <li>#1652 | DSP-377 Support Islamic calendar</li> <li>#1717 | enhancement(gravsearch): Optimise queries by moving up statements with resource IRIs</li> <li>#1713 | feat(gravsearch): Allow comparing variables representing resource IRIs</li> <li>#1710 | update ontology metadata with a comment</li> <li>#1704 | feat(api-v2): Add test data</li> <li>#1703 | Add comments to ontology metadata</li> <li>#1686 | feat(api-v2): Accept custom timestamps in update/delete requests</li> <li>#1692 | Create Permissions</li> <li>#1696 | feat(api-v2): Make inference optional in Gravsearch</li> <li>#1697 | fix(sipi): Improve performance of file value query</li> <li>#1698 | feat(api-v2): Accept custom new value IRI when updating value</li> <li>#1700 | hierarchically ordered Sequence of base classes</li> <li>#1689 | build: bump SIPI to v3.0.0-rc.5 (DSP-547)</li> <li>#1679 | Gravsearch optimisations</li> <li>#1663 | build: add support for SIPI v3.0.0-rc.3 (DSP-433)</li> <li>#1660 | feat(gravsearch): Remove deprecated functions</li> <li>#1653 | build:  dockerize fuseki (dsp-30)</li> </ul>"},{"location":"DSP-API/09-release-notes/#bug-fixes_83","title":"Bug Fixes","text":"<ul> <li>#1626 | fix(gravsearch): Prevent duplicate results</li> <li>#1587 | fix (webapi): Add enforcing of restrictions for username and email</li> <li>#1751 | DSP-1022 SIPI_EXTERNAL_HOSTNAME doesn't contain the external hostname</li> <li>#1749 | fix(api-v2): Don't check file extensions of XSL files and Gravsearch templates (DSP-1005)</li> <li>#1748 | DSP-756 Tests failing because Knora version header and route are incorrect</li> <li>#1746 | DSP-932: Don't allow missing StringLiteralV2 value if language tag given</li> <li>#1744 | DSP-917 Releases pushed to Dockerhub from DSP-API are \"dirty\"</li> <li>#1733 | DSP-470 Intermittent bind errors</li> <li>#1728 | fix(api-v2): Fix post-update check for resource with standoff link (DSP-841)</li> <li>#1723 | chore(build): Bump testcontainers version (DSP-755)</li> <li>#1706 | Fix of update of list node info and update of project info</li> <li>#1712 | fix: failing repository upgrade at startup (DSP-654)</li> <li>#1709 | fix(OntologyResponderV2): Fix ontology cache update when ontology metadata changed</li> <li>#1701 | reverse change of Permission JSONs</li> <li>#1693 | fix(api-v2): Fix generated SPARQL for updating property comment</li> <li>#1699 | fix(gravsearch): When link property compared in filter, don't compare link value property, too</li> <li>#1691 | fix: server header (DSP-537)</li> <li>#1681 | fix: init db scripts (DSP-511)</li> <li>#1669 | fix: loading of data (DSP-445)</li> </ul>"},{"location":"DSP-API/09-release-notes/#documentation_29","title":"Documentation","text":"<ul> <li>#1598 | doc: fix sipi docs link</li> <li>#1609 | fix complex schema url</li> <li>#1568 | fixed the URI for the query</li> <li>#1726 | PersmissionsDocs: remove the attribute</li> <li>#1725 | docs: Update required mkdocs package</li> <li>#1711 | update developer and create resource docs</li> <li>#1684 | developer guideline</li> <li>#1685 | docs(api-v2): Document what happens when a resource has a link to a deleted resource</li> <li>#1688 | docs: fix broken links</li> <li>#1694 | docs: fix publishing</li> <li>#1621 | fixing typos for list rendering</li> </ul>"},{"location":"DSP-API/09-release-notes/#other_1","title":"Other","text":"<ul> <li>#1750 | Update README.md</li> <li>#1747 | DSP-920 Renaming default github branch to \"main\" ;  Move to the same base branch</li> <li>#1740 | DSP-877 Upload api-client-test-data to GitHub release</li> <li>#1738 | DSP-877 Upload api-client-test-data to GitHub release</li> <li>#1736 | DSP-877 Upload api-client-test-data to GitHub release</li> <li>#1730 | DSP-816: Generate client test data for health route</li> <li>#1719 | change possibly conflictual env var USERNAME (DSP-706)</li> <li>#1720 | DSP-620 Update release process</li> <li>#1714 | test: fix generation of test data (DSP-665)</li> <li>#1716 | bulid: fix sipi image version (DSP-677)</li> <li>#1718 | DSP-702 Add template for PRs</li> <li>#1715 | chore(api-v2): Switch from JSONLD-Java to Titanium</li> <li>#1707 | chore: Update ci workflow</li> <li>#1702 | Add PR labels (DSP-607)</li> <li>#1695 | refactor(gravsearch): Clarify optimisations</li> <li>#1678 | refactor: first steps towards more independent packages (DSP-513)</li> <li>#1680 | build: bump rules_docker and instructions for installing bazelisk</li> <li>#1674 | build: add mkdocs for documentation generation (DSP-460)</li> <li>#1480 | build: add bazel (DSP-437)</li> <li>#1666 | Fix gren issue in github actions workflow</li> <li>#1662 | Publish on release only</li> <li>#1661 | Automated release notes</li> </ul>"},{"location":"DSP-API/09-release-notes/#v1200-27012020","title":"v12.0.0 (27/01/2020)","text":""},{"location":"DSP-API/09-release-notes/#breaking-api-changes","title":"Breaking API Changes","text":"<ul> <li>#1439 JSON-LD Serialization of an xsd:dateTimeStamp</li> </ul>"},{"location":"DSP-API/09-release-notes/#new-features-and-enhancements","title":"New Features and Enhancements","text":"<ul> <li>#1509 Support lists admin endpoint</li> <li>#1466 Optimise generated SPARQL</li> </ul>"},{"location":"DSP-API/09-release-notes/#bug-fixes_84","title":"Bug Fixes","text":"<ul> <li>#1569 broken ark</li> <li>#1559 Admin lists: createChildNode should send a httpPost request, not httpPut</li> </ul>"},{"location":"DSP-API/09-release-notes/#v1100-16122019","title":"v11.0.0 (16/12/2019)","text":""},{"location":"DSP-API/09-release-notes/#breaking-changes_21","title":"Breaking Changes","text":"<ul> <li>#1344 Gravsearch ForbiddenResource result and permissions of linked resources</li> <li>#1202 Implement upload of PDF and text files in API v2. Users with files in Sipi under <code>/server</code> must move them to <code>/images</code> when upgrading.</li> </ul>"},{"location":"DSP-API/09-release-notes/#bug-fixes_85","title":"Bug Fixes","text":"<ul> <li>#1531 Sipi's mimetype_consistency fails with .bin file</li> <li>#1430 Creating the first resource with an image inside a project fails with Sipi not finding the project folder</li> <li>#924 Get dependent resources Iris</li> </ul>"},{"location":"DSP-API/09-release-notes/#v1011-27112019","title":"v10.1.1 (27/11/2019)","text":""},{"location":"DSP-API/09-release-notes/#v1010-27112019","title":"v10.1.0 (27/11/2019)","text":""},{"location":"DSP-API/09-release-notes/#v1000-22102019","title":"v10.0.0 (22/10/2019)","text":""},{"location":"DSP-API/09-release-notes/#breaking-changes_22","title":"Breaking Changes","text":"<ul> <li>#1346 Richtext/HTML in page anchor link</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements_54","title":"Enhancements","text":"<ul> <li>#1457 Upgrade sipi to 2.0.1</li> </ul>"},{"location":"DSP-API/09-release-notes/#bug-fixes_86","title":"Bug Fixes","text":"<ul> <li>#1460 Build banner in README is broken</li> </ul>"},{"location":"DSP-API/09-release-notes/#documentation_30","title":"Documentation","text":"<ul> <li>#1481 build badge in README has broken link</li> </ul>"},{"location":"DSP-API/09-release-notes/#other_2","title":"Other","text":"<ul> <li>#1449 Add Makefile-based task execution</li> <li>#1401 Enable testing docs generation in Travis</li> </ul>"},{"location":"DSP-API/09-release-notes/#v910-26092019","title":"v9.1.0 (26/09/2019)","text":""},{"location":"DSP-API/09-release-notes/#enhancements_55","title":"Enhancements","text":"<ul> <li>#1421 Physically deleting a resource</li> </ul>"},{"location":"DSP-API/09-release-notes/#documentation_31","title":"Documentation","text":"<ul> <li>#1407 Document ARK URLs for projects</li> </ul>"},{"location":"DSP-API/09-release-notes/#v900-29082019","title":"v9.0.0 (29/08/2019)","text":""},{"location":"DSP-API/09-release-notes/#breaking-changes_23","title":"Breaking Changes","text":"<ul> <li>#1411 Moved <code>/admin/groups/members/GROUP_IRI</code> to <code>/admin/groups/GROUP_IRI/members</code></li> <li>#1231 Change value permissions</li> <li>#763 refactor splitMainResourcesAndValueRdfData so it uses SparqlExtendedConstructResponse</li> </ul>"},{"location":"DSP-API/09-release-notes/#enhancements_56","title":"Enhancements","text":"<ul> <li>#1373 The startup ends in a thrown exception if the triplestore is not up-to-date</li> <li>#1364 Add support for Redis cache</li> <li>#1360 Build and publish Knora version specific docker images for GraphDB Free and SE</li> <li>#1358 Add admin route to dump project data</li> </ul>"},{"location":"DSP-API/09-release-notes/#bug-fixes_87","title":"Bug Fixes","text":"<ul> <li>#1394 Using dockerComposeUp to start the stack, fails to find Redis at startup</li> </ul>"},{"location":"DSP-API/09-release-notes/#documentation_32","title":"Documentation","text":"<ul> <li>#1386 Add lists admin API documentation</li> </ul>"},{"location":"DSP-API/09-release-notes/#other_3","title":"Other","text":"<ul> <li>#1412 Change release notes to be based on issues</li> </ul>"},{"location":"DSP-API/09-release-notes/#v800-14062019","title":"v8.0.0 (14/06/2019)","text":"<ul> <li>feature(webapi): Add GraphDB-Free startup support (#1351) - @subotic</li> <li>feature(webapi): Add returning of fixed public user information (#1348) - @subotic</li> <li>feat(api-v2): No custom permissions higher than defaults (#1337) - @benjamingeer</li> <li>feat(upgrade): Improve upgrade framework (#1345) - @benjamingeer</li> <li>test(webapi): Add new user authentication (#1201) - @subotic</li> <li>chore(webapi): Add request duration logging (#1347) - @subotic</li> <li>feat(api-v2): Make values citable (#1322) - @benjamingeer</li> <li>Leibniz ontology  (#1326) - @SepidehAlassi</li> <li>feature(webapi): add CORS allow header (#1340) - @subotic</li> <li>fix(sipi): Return permissions for a previous version of a file value. (#1339) - @benjamingeer</li> <li>fix(scripts): add admin ontology data to correct graph (#1333) - @subotic</li> <li>fix(sipi): Don't try to read a file value in a deleted resource. (#1329) - @benjamingeer</li> <li>docs(api-v2): Fix sample responses. (#1327) - @benjamingeer</li> <li>fix(api-v2): Fix typo. (#1325) - @benjamingeer</li> <li>Handle List Nodes in Response (#1321) - @tobiasschweizer</li> <li>feat(api-v2): Return standoff markup separately from text values (#1307) - @benjamingeer</li> <li>BEOL: Import comments for Meditationes (#1281) - @tobiasschweizer</li> <li>feat(triplestore): Log SPARQL query if triplestore doesn't respond. (#1292) - @benjamingeer</li> <li>Support list nodes in Gravsearch (#1314) - @tobiasschweizer</li> </ul>"},{"location":"DSP-API/09-release-notes/#v700-03052019","title":"v7.0.0 (03/05/2019)","text":"<ul> <li>fix(api-v2): Cache base class IRIs correctly when creating/updating class (#1311) - @benjamingeer</li> <li>chore(standoff): Use Base64-encoded UUIDs in standoff tags. (#1301) - @benjamingeer</li> <li>feat(api-v2): Allow a resource to be created as a specified user (#1306) - @benjamingeer</li> <li>feat(admin): Give the admin ontology an external schema (#1291) - @benjamingeer</li> <li>fix(api-v2): Remove INFORMATION SEPARATOR TWO from text in the simple schema. (#1299) - @benjamingeer</li> <li>test: Compare Knora response with its class definition (#1297) - @benjamingeer</li> <li>docs(api-admin): fix description of the change password payload (#1285) - @loicjaouen</li> <li>fix(api-v1): Fix double escaping of newline. (#1296) - @benjamingeer</li> <li>fix (tei beol): fix problems in XSLT (#1260) - @tobiasschweizer</li> <li>refactor(ontology): Make knora-admin a separate ontology (#1263) - @benjamingeer</li> <li>a handfull of changes in documentation and error messages (#1278) - @loicjaouen</li> <li>docs: fix missing username (#1269) - @loicjaouen</li> <li>feat(api-v2): Get resources in a particular class from a project (#1251) - @benjamingeer</li> <li>fix(sipi): Improve error checking of Sipi's knora.json response. (#1279) - @benjamingeer</li> <li>feat(api-v2): Return user's permission on resources and values (#1257) - @benjamingeer</li> <li>fix(api-v1): Escape rdfs:label in bulk import. (#1276) - @benjamingeer</li> <li>chore(webapi): Remove persistent map code (#1254) - @benjamingeer</li> <li>docs (api-v2): Update outdated ARK documentation. (#1252) - @benjamingeer</li> <li>Update build.properties (#1265) - @subotic</li> </ul>"},{"location":"DSP-API/09-release-notes/#v601-22032019","title":"v6.0.1 (22/03/2019)","text":"<ul> <li>chore: releasing-v6.0.1 (#1270) - @subotic</li> <li>chore(webapi): Add script for loading of a minimal set of data (#1267) - @subotic</li> <li>fix (beolPersonLabel) typo in label of hasBirthPlace (#1248) - @SepidehAlassi</li> <li>fix (webapi): message typo (#1244) - @subotic</li> <li>Unescape standoff string attributes when verifying text value update (#1242) - @benjamingeer</li> <li>docs: fix user admin api (#1237) - @subotic</li> </ul>"},{"location":"DSP-API/09-release-notes/#v600-28022019","title":"v6.0.0 (28/02/2019)","text":""},{"location":"DSP-API/09-release-notes/#release-notes","title":"Release Notes","text":"<ul> <li> <p>MAJOR: Use HTTP POST to mark resources and values as deleted (#1203)</p> </li> <li> <p>MAJOR: Reorganize user and project routes (#1209)</p> </li> <li> <p>FEATURE: Secure routes returning user information (#961)</p> </li> <li> <p>MAJOR: Change all <code>xsd:dateTimeStamp</code> to <code>xsd:dateTime</code> in the triplestore (#1211).   Existing data must be updated; see <code>upgrade/1211-datetime</code> for instructions.</p> </li> <li> <p>FIX: Ignore order of attributes when comparing standoff (#1224).</p> </li> <li> <p>FEATURE: Query version history (#1214)</p> </li> <li> <p>FIX: Don't allow conflicting cardinalities (#1229)</p> </li> <li> <p>MAJOR: Remove preview file values (#1230). Existing data must be updated;   see <code>upgrade/1230-delete-previews</code> for instructions.</p> </li> </ul>"},{"location":"DSP-API/09-release-notes/#v500-05022019","title":"v5.0.0 (05/02/2019)","text":""},{"location":"DSP-API/09-release-notes/#release-notes_1","title":"Release Notes","text":"<ul> <li>MAJOR: Fix property names for incoming links (#1144))</li> <li>MAJOR: Generate and resolve ARK URLs for resources (#1161). Projects   that have resource IRIs that do not conform to the format specified in   https://docs.knora.org/paradox/03-endpoints/api-v2/knora-iris.html#iris-for-data   must update them.</li> <li> <p>MAJOR: Use project shortcode in IIIF URLs (#1191). If you have file value IRIs containing the substring <code>/reps/</code>, you must replace <code>/reps/</code> with <code>/values/</code>.</p> </li> <li> <p>FEATURE: Update resource metadata in API v2 (#1131)</p> </li> <li>FEATURE: Allow setting resource creation date in bulk import #1151)</li> <li>FEATURE: The <code>v2/authentication</code> route now also initiates cookie creation (the same as <code>v1/authentication</code>) (#1159)</li> <li> <p>FEATURE: Allow to specify restricted view settings for a project which Sipi will adhere to (#690).</p> </li> <li> <p>FIX: Triplestore connection error when using dockerComposeUp (#1122)</p> </li> <li>FIX: Reject link value properties in Gravsearch queries in the simple schema (#1145)</li> <li>FIX: Fix error-checking when updating cardinalities in ontology API (#1142)</li> <li>FIX: Allow hasRepresentation in an ontology used in a bulk import (#1171)</li> <li>FIX: Set cookie domain to the value specified in <code>application.conf</code> with the setting <code>cookie-domain</code> (#1169)</li> <li>FIX: Fix processing of shared property in bulk import (#1182)</li> </ul>"},{"location":"DSP-API/09-release-notes/#v400-12122018","title":"v4.0.0 (12/12/2018)","text":""},{"location":"DSP-API/09-release-notes/#v400-release-notes","title":"v4.0.0 Release Notes","text":"<ul> <li>MAJOR CHANGE: mapping creation request and response formats have changed (#1094)</li> <li>MINOR CHANGE: Update technical user docs (#1085)</li> <li>BUGFIX CHANGE: Fix permission checking in API v2 resource creation (#1104)</li> </ul>"},{"location":"DSP-API/09-release-notes/#v300-30112018","title":"v3.0.0 (30/11/2018)","text":""},{"location":"DSP-API/09-release-notes/#v300-release-notes","title":"v3.0.0 Release Notes","text":"<ul> <li>[BREAKING ONTOLOGY CHANGE] The property <code>knora-base:username</code> was added and is required for <code>knora-base:User</code>. (#1047)</li> <li>[BREAKING API CHANGE] The <code>/admin/user</code> API has changed due to adding the <code>username</code> property. (#1047)</li> <li>[FIX] Incorrect standoff to XML conversion if empty tag has empty child tag (#1054)</li> <li>[FEATURE] Add default permission caching (#1062)</li> <li>[FIX] Fix unescaping in update check and reading standoff URL (#1074)</li> <li>[FIX] Incorrect standoff to XML conversion if empty tag has empty child tag (#1054)</li> <li>[FEATURE] Create image file values in API v2 (#1011). Requires Sipi with tagged commit <code>v1.4.1-SNAPSHOT</code> or later.</li> </ul>"},{"location":"DSP-API/09-release-notes/#v210-02112018","title":"v2.1.0 (02/11/2018)","text":""},{"location":"DSP-API/09-release-notes/#new-features","title":"New features","text":"<ul> <li>Implement graph query in API v2 (#1009)</li> <li>Expose additional <code>webapi</code> settings as environment variables. Please see the Configuration section in the documentation for more information (#1025)</li> </ul>"},{"location":"DSP-API/09-release-notes/#bugfixes","title":"Bugfixes","text":"<ul> <li>sipi container config / sipi not able to talk to knora (#994)</li> </ul>"},{"location":"DSP-API/09-release-notes/#v210-snapshot-22102018","title":"v2.1.0-snapshot (22/10/2018)","text":""},{"location":"DSP-API/09-release-notes/#v200-13092018","title":"v2.0.0 (13/09/2018)","text":"<p>This is the first release with the new version numbering convention. From now on, if any changes to the existing data are necessary for a release, then this release will have its major number increased. Please see the Release Versioning Convention description.</p>"},{"location":"DSP-API/09-release-notes/#required-changes-to-existing-data","title":"Required changes to existing data","text":"<ul> <li>a <code>knora-base:ListNode</code> must have at least one <code>rdfs:label</code>. (#991)</li> </ul>"},{"location":"DSP-API/09-release-notes/#new-features_1","title":"New features","text":"<ul> <li>add developer-centric docker-compose.yml for starting the Knora / GraphDB / Sipi / Salsah1 (#979)</li> <li>configure <code>webapi</code> and <code>salsah1</code> thorough environment variables (#979)</li> <li>update for Java 10 (#979)</li> <li>comment out the generation of fat jars from <code>KnoraBuild.sbt</code> (for now) (#979)</li> <li>update ehcache (#979)</li> <li>update sbt to 1.2.1 (#979)</li> <li>remove Kamon monitoring (for now) since we don't see anything meaningful there. We probably will have to instrument Knora by hand and then use Kamon for access. (#979)</li> <li>update Dockerfiles for <code>webapi</code> and <code>salsah1</code> (#979)</li> <li>follow subClassOf when including ontologies in XML import schemas (#991)</li> <li>add support for adding list child nodes (#991)</li> <li>add support for shared ontologies (#987)</li> </ul>"},{"location":"DSP-API/09-release-notes/#bugfixes_1","title":"Bugfixes","text":"<ul> <li>trouble with xml-checker and/or consistency-checker during bulk import (#978)</li> <li>ontology API error with link values (#988)</li> </ul>"},{"location":"DSP-API/09-release-notes/#v171-29082018","title":"v1.7.1 (29/08/2018)","text":""},{"location":"DSP-API/09-release-notes/#knora-stack-compatible-versions","title":"Knora-Stack compatible versions","text":"<p>Knora v1.7.1 - Salsah v2.1.2 - Sipi v1.4.0 - GraphDB v8.5.0</p> <ul> <li>doc (webapi): add yourkit acknowledgment (#983)</li> <li>Don't allow class with cardinalities on P and on a subproperty of P (#982)</li> <li>doc (webapi): add LHTT project shortcode (#981)</li> <li>feature (webapi): not return or allow changing of built-in users (#975)</li> <li>fix (webapi): startup check does not detect running triplestore (#969)</li> <li>Fix bulk import parsing bug and limit concurrent client connections (#973)</li> </ul>"},{"location":"DSP-API/09-release-notes/#v170-16082018","title":"v1.7.0 (16/08/2018)","text":"<p>See the closed tickets on the v1.7.0 milestone.</p>"},{"location":"DSP-API/09-release-notes/#knora-stack-compatible-versions_1","title":"Knora-Stack compatible versions","text":"<p>Knora v1.7.0 - Salsah v2.1.0 - Sipi v1.4.0 - GraphDB v8.5.0</p>"},{"location":"DSP-API/09-release-notes/#required-changes-to-existing-data_1","title":"Required changes to existing data","text":"<ul> <li>To use the inferred Gravsearch predicate <code>knora-api:standoffTagHasStartAncestor</code>,   you must recreate your repository with the updated <code>KnoraRules.pie</code>.</li> </ul>"},{"location":"DSP-API/09-release-notes/#new-features_2","title":"New features","text":"<ul> <li>Gravsearch queries can now match standoff markup (#910).</li> <li>Add Graphdb-Free initialization scripts for local and docker installation (#955).</li> <li>Create temp dirs at startup (#951)</li> <li>Update versions of monitoring tools (#951)</li> </ul>"},{"location":"DSP-API/09-release-notes/#bugfixes_2","title":"Bugfixes","text":"<ul> <li>timeout or java.lang.OutOfMemoryError when using /v1/resources/xmlimportschemas/ for some ontologies (#944)</li> <li>Timeout cleanup (#951)</li> <li>Add separate dispatchers (#945)</li> </ul>"},{"location":"DSP-API/09-release-notes/#v160-29062018","title":"v1.6.0 (29/06/2018)","text":""},{"location":"DSP-API/09-release-notes/#v160-release-notes","title":"v1.6.0 Release Notes","text":"<p>See the release and closed tickets on the v1.6.0 milestone on Github.</p>"},{"location":"DSP-API/09-release-notes/#required-changes-to-existing-data_2","title":"Required changes to existing data","text":"<ul> <li>A project is now required to have at least one description, so potentially a description will need   to be added to those projects that don't have one.</li> </ul>"},{"location":"DSP-API/09-release-notes/#new-features_3","title":"New features","text":"<p>General:</p> <ul> <li>Added a <code>/health</code> endpoint</li> <li>KnoraService waits on startup for a triplestore before trying to load the ontologies</li> </ul> <p>Gravsearch enhancements:</p> <ul> <li>Accept queries in POST requests (#650).</li> <li>Allow a Gravsearch query to specify the IRI of the main resource (#871) (by allowing <code>BIND</code>).</li> <li>Allow <code>lang</code> to be used with <code>!=</code>.</li> <li>A <code>UNION</code> or <code>OPTIONAL</code> can now be nested in an <code>OPTIONAL</code> (#882).</li> <li>Gravsearch now does type inference (#884).</li> <li>The Knora API v2 complex schema can now be used in Gravsearch, making it possible to search   for list nodes (#899).</li> </ul> <p>Admin API:</p> <ul> <li>Make project description required (#875).</li> </ul> <p>Conversion to TEI:</p> <ul> <li>Conversion of standard standoff entities to TEI</li> <li>Custom conversion of project specific standoff entities and metadata to TEI</li> </ul> <p>Sipi integration:</p> <ul> <li>The Knora specific Sipi configuration and scripts can now be found under the <code>sipi/</code> directory (#404).</li> <li>Documentation on how Sipi can be started changed (#404).</li> </ul>"},{"location":"DSP-API/09-release-notes/#bugfixes_3","title":"Bugfixes","text":"<ul> <li>Allow a class or property definition to have more than one object for <code>rdf:type</code> (#885).</li> <li>Exclude list values from v2 fulltext search (#906).</li> </ul> <p>Gravsearch fixes:</p> <ul> <li>Allow the <code>lang</code> function to be used in a comparison inside AND/OR (#846).</li> <li>Fix the processing of resources with multiple incoming links that use the same property (#878).</li> <li>Fix the parsing of a FILTER inside an OPTIONAL (#879).</li> <li>Require the <code>match</code> function to be the top-level expression in a <code>FILTER</code>.</li> </ul>"},{"location":"DSP-API/09-release-notes/#v150-31052018","title":"v1.5.0 (31/05/2018)","text":"<p>See v1.5.0 milestone for a full list of closed tickets.</p>"},{"location":"DSP-API/09-release-notes/#new-features_4","title":"New features","text":"<ul> <li>Resources can be returned in the simple ontology schema (#833).</li> <li>Text values can specify the language of the text (#819).</li> <li>Responses can be returned in Turtle and RDF/XML (#851).</li> </ul>"},{"location":"DSP-API/09-release-notes/#bugfixes_4","title":"Bugfixes","text":"<ul> <li>Incorrect representation of IRI object values in JSON-LD (#835)</li> <li>GenerateContributorsFile broken (#797)</li> </ul>"},{"location":"DSP-API/09-release-notes/#v140-30042018","title":"v1.4.0 (30/04/2018)","text":""},{"location":"DSP-API/09-release-notes/#required-changes-to-existing-data_3","title":"Required changes to existing data","text":"<ul> <li> <p>Every ontology must now have the property <code>knora-base:attachedToProject</code>, which points to the IRI of the project that is responsible for the ontology. This must be added to each project-specific ontology in existing repositories. All built-in ontologies have been updated to have this property, and must, therefore, be reloaded into existing repositories. The property <code>knora-base:projectOntology</code> has been removed, and must be removed from project definitions in existing repositories.</p> </li> <li> <p>Every project now needs to have the property <code>knora-base:projectShortcode</code> set.</p> </li> </ul>"},{"location":"DSP-API/09-release-notes/#new-features_5","title":"New features","text":"<ul> <li>Added OpenAPI / Swagger API documentation route</li> <li>The Knora API server now checks the validity of ontologies on startup.</li> <li>The property <code>knora-base:projectShortcode</code> is now a required property (was optional).</li> </ul>"},{"location":"DSP-API/09-release-notes/#bugfixes_5","title":"Bugfixes","text":"<ul> <li>API v1 extended search was not properly handling multiple conditions     on list values (issue #800)</li> <li>Fix image orientation in SALSAH 1 (issue #726)</li> </ul>"},{"location":"DSP-API/09-release-notes/#v131-06042018","title":"v1.3.1 (06/04/2018)","text":""},{"location":"DSP-API/09-release-notes/#v130-28032018","title":"v1.3.0 (28/03/2018)","text":""},{"location":"DSP-API/09-release-notes/#required-changes-to-existing-data_4","title":"Required changes to existing data","text":""},{"location":"DSP-API/09-release-notes/#1-replace-salsah-gui-ontology","title":"1. Replace salsah-gui ontology","text":"<p>You must replace the <code>salsah-gui</code> ontology that you have in the triplestore with the one in <code>salsah-gui.ttl</code>.</p>"},{"location":"DSP-API/09-release-notes/#new-features_6","title":"New features","text":"<ul> <li>More support for salsah-gui elements and attributes in ontologies</li> <li>Serve the <code>salsah-gui</code> ontology in API v2 in the default schema.</li> <li>Show <code>salsah-gui:guiElement</code> and <code>salsah-gui:guiAttribute</code> when serving ontologies in API v2 in the default schema.</li> <li>Allow <code>salsah-gui:guiElement</code> and <code>salsah-gui:guiAttribute</code> to be included in new property definitions created via API v2.</li> <li>Change <code>salsah-gui</code> so that GraphDB's consistency checker can check the use of <code>guiElement</code> and <code>guiAttribute</code>.</li> <li>Changes to <code>application.conf</code>. The <code>sipi</code> and <code>web-api</code> sections have received a big update, adding separate settings  for internal and external host settings:</li> </ul> <pre><code>    app {\n        knora-api {\n            // relevant for direct communication inside the knora stack\n            internal-host = \"0.0.0.0\"\n            internal-port = 3333\n\n            // relevant for the client, i.e. browser\n            external-protocol = \"http\" // optional ssl termination needs to be done by the proxy\n            external-host = \"0.0.0.0\"\n            external-port = 3333\n        }\n\n        sipi {\n            // relevant for direct communication inside the knora stack\n            internal-protocol = \"http\"\n            internal-host = \"localhost\"\n            internal-port = 1024\n\n            // relevant for the client, i.e. browser\n            external-protocol = \"http\"\n            external-host = \"localhost\"\n            external-port = 1024\n\n            prefix = \"knora\"\n            file-server-path = \"server\"\n            path-conversion-route = \"convert_from_binaries\"\n            file-conversion-route = \"convert_from_file\"\n            image-mime-types = [\"image/tiff\", \"image/jpeg\", \"image/png\", \"image/jp2\"]\n            movie-mime-types = []\n            sound-mime-types = []\n        }\n\n        salsah1 {\n            base-url = \"http://localhost:3335/\"\n            project-icons-basepath = \"project-icons/\"\n        }\n    }\n</code></pre>"},{"location":"DSP-API/09-release-notes/#bugfixes_6","title":"Bugfixes","text":"<ul> <li>When API v2 served <code>knora-api</code> (default schema), <code>salsah-gui:guiElement</code> and <code>salsah-gui:guiAttribute</code> were not shown in properties in that ontology.</li> <li>The predicate <code>salsah-gui:guiOrder</code> was not accepted when creating a property via API v2.</li> </ul>"},{"location":"DSP-API/architecture/","title":"C4 Model and ADRs","text":""},{"location":"DSP-API/architecture/#installation","title":"Installation","text":"<pre><code>brew install adr-tools\n</code></pre>"},{"location":"DSP-API/architecture/#usage","title":"Usage","text":"<p>Run the following command from the root directory to start the C4 model browser:</p> <pre><code>make structurizer\n</code></pre>"},{"location":"DSP-API/architecture/docs/http-request-flow-with-events/","title":"Http request flow with events","text":""},{"location":"DSP-API/architecture/docs/http-request-flow-with-events/#example-for-an-http-request-flow-with-events","title":"Example for an HTTP Request Flow with Events","text":""},{"location":"DSP-API/architecture/docs/http-request-flow-with-events/#create-a-user","title":"Create a User","text":"<pre><code>sequenceDiagram\n    autonumber\n    user                    -&gt;&gt; userRoute:               \"sends HTTP request\"\n    userRoute               -&gt;&gt; userRoute:               \"validates input (payload) and creates value objects\"\n    userRoute               -&gt;&gt; userHandler:             \"sends value objects\"\n    userHandler             -&gt;&gt; userRepo:                \"reserves username\"\n    userRepo                -&gt;&gt; eventStoreService:       \"reserves username\"\n    eventStoreService       -&gt;&gt; eventStoreService:       \"checks if username exists\"\n    eventStoreService       -&gt;&gt; eventStoreService:       \"reserves username\"\n    userHandler             -&gt;&gt; userDomain:              \"calls User.make() with value objects\"\n    userDomain              -&gt;&gt; userDomain:              \"creates userDomainEntity + userCreatedEvent(who, what)\"\n    userDomain              -&gt;&gt; userHandler:             \"returns (userDomainEntity + userCreatedEvent)\"\n    userHandler             -&gt;&gt; userRepo:                \"storeUser(userDomainEntity + userCreatedEvent)\"\n    userRepo                -&gt;&gt; eventStoreService:       \"storeUser(userDomainEntity + userCreatedEvent)\"\n    eventStoreService       -&gt;&gt; eventStoreService:       \"store event(s), userCreatedEvent(who, what, when(!))\"\n    eventStoreService       -&gt;&gt; eventListener:           \"publishEvent(userCreatedEvent)\"\n    eventListener           -&gt;&gt; triplestoreService:      \"writeToTsService(E)\"\n    triplestoreService      -&gt;&gt; triplestoreService:      \"SPARQL update - write user to triplestore\"\n    eventListener           -&gt;&gt; arkService:              \"writeToArkService(E)\"\n    arkService              -&gt;&gt; arkService:              \"create ARK(URL)\"\n    eventListener           -&gt;&gt; elasticSearchService:    \"writeToEsService(E)\"\n    elasticSearchService    -&gt;&gt; elasticSearchService:    \"write\"</code></pre>"},{"location":"DSP-API/architecture/docs/http-request-flow/","title":"Http request flow","text":""},{"location":"DSP-API/architecture/docs/http-request-flow/#http-request-flow-v2-vs-v3","title":"HTTP Request Flow V2 vs. V3","text":"<p>V2 / admin:</p> <pre><code>sequenceDiagram\n    autonumber\n    client              -&gt;&gt; route: send http request\n    route               -&gt;&gt; authenticator: authenticate user\n    authenticator       -&gt;&gt; route: user authenticated\n    route               -&gt;&gt; application actor: send message\n    application actor   -&gt;&gt; responder manager: forward message\n    responder manager   -&gt;&gt; responder: forward message\n    responder           -&gt;&gt; responder manager: return result\n    responder manager   -&gt;&gt; application actor: forward result\n    application actor   -&gt;&gt; route: forward result\n    route               -&gt;&gt; client: send http response</code></pre> <p>V3:</p> <pre><code>sequenceDiagram\n    autonumber\n    client              -&gt;&gt; route: send http request\n    route               -&gt;&gt; authenticator: authenticate user\n    authenticator       -&gt;&gt; route: user authenticated\n    route               -&gt;&gt; handler: call handler method\n    handler             -&gt;&gt; route: return result\n    route               -&gt;&gt; client: send result as http response</code></pre>"},{"location":"DSP-APP/","title":"Introduction","text":""},{"location":"DSP-APP/#dasch-applications-and-libraries-monorepo","title":"DaSCH Applications and Libraries Monorepo","text":"<p>This monorepo host different applications and libraries of the DaSCH Service Platform.</p>"},{"location":"DSP-APP/#dasch-swiss-librairies","title":"@dasch-swiss librairies","text":"<p>Please go to the following readme:</p> <ul> <li>@dasch-swiss/jdnconvertiblecalendar</li> <li>@dasch-swiss/jdnconvertiblecalendardateadapter</li> </ul>"},{"location":"DSP-APP/#dsp-app-generic-user-interface-of-dasch-service-platform","title":"DSP-APP \u2014 Generic user interface of DaSCH Service Platform","text":"<p>This app is a simple user interface for the research data repository of the Swiss National Data and Service Center for the Humanities (DaSCH), which uses the DSP-API server application in the backend. It's a system for annotation and linkage of resources in arts and humanities.</p> <p>DSP-APP implements DSP-JS-LIB to connect with DSP-API. DSP (DaSCH Service Platform) is a software framework for storing, sharing, and working with primary resources and data in the humanities.</p> <p>DSP-APP is free software, released under GNU Affero General Public license.</p>"},{"location":"DSP-APP/#user-quickstart","title":"User Quickstart","text":"<p>To try out DSP-APP you first need to start the backend DSP-API:</p> <pre><code># go the dsp-api repository in a terminal and start the api\n$ make init-db-test\n$ make stack-without-app\n\n# come back to this repository and start the app\n$ npx nx run dsp-app:serve\n</code></pre>"},{"location":"DSP-APP/#developer-quickstart","title":"Developer Quickstart","text":"<p>The monorepo is implemented using NX.</p> <p>The most common commands are defined in <code>package.json</code>.</p> <p>NOTE: You can install <code>nx</code> globally with <code>npm install -g nx</code>. If not, then all <code>nx</code> commands below need to be prefixed with <code>npx</code>.</p> nx npm <code>nx run dsp-app:test</code> <code>npm run test-local</code> <code>nx run dsp-app:test:ci</code> <code>npm run test-ci</code> <code>nx run-many --all --target=test --configuration=ci</code> <code>npm run test-ci-all</code> <code>nx run dsp-app:serve</code> <code>npm run start-dev</code> <code>nx run dsp-app:serve:test-server</code> <code>npm run start-with-test-server</code> <code>nx run dsp-app:serve:dev-server</code> <code>npm run start-with-dev-server</code> <code>nx run dsp-app:serve:ls-test-server</code> <code>npm run start-with-ls-test-server</code> <code>nx run dsp-app:serve:stage-server</code> <code>npm run start-with-stage-server</code> <code>nx run dsp-app:serve:0845-test-server</code> <code>npm run start-with-0845-server</code> <code>nx run dsp-app:lint</code> <code>npm run lint-ci</code> <code>nx run dsp-app:lint --fix</code> <code>npm run lint-local</code> <code>nx run dsp-app-e2e:e2e:development</code> <code>npm run e2e-ci-dev</code> <code>nx run dsp-app-e2e:e2e:production</code> <code>npm run e2e-ci</code> <code>nx run dsp-app:build</code> <code>build</code> <code>nx run dsp-app:build:production</code> <code>build-prod</code> npx npm <code>cd apps/dsp-app-e2e &amp;&amp; npx cypress open</code> <code>npm run e2e-local</code>"},{"location":"DSP-APP/#ide-plugins","title":"IDE plugins","text":"<ul> <li>https://plugins.jetbrains.com/plugin/15101-nx-console-idea</li> <li>https://marketplace.visualstudio.com/items?itemName=nrwl.angular-console</li> </ul>"},{"location":"DSP-APP/#e2e-tests","title":"E2E Tests","text":"<ul> <li>There are three spm scripts to run the E2E tests.</li> <li><code>npm run e2e-ci-dev</code> will run the E2E tests in the console in a development environment.</li> <li><code>npm run e2e-ci</code> will run the E2E tests in the console in a production environment. This is the command that is run on GitHub CI.</li> <li><code>npm run e2e-local</code> will open the Cypress UI which will enable you to easy run individual tests and see every step as it runs.</li> </ul>"},{"location":"DSP-APP/#further-documentation","title":"Further Documentation","text":""},{"location":"DSP-APP/#user-guide","title":"User guide","text":"<p>\u27a1 for latest released version</p>"},{"location":"DSP-APP/#developer-docs","title":"Developer docs","text":"<p>\u27a1 for developers</p>"},{"location":"DSP-APP/#contribution","title":"Contribution","text":"<p>If you would like to contribute to the development of the DSP-APP alongside us, please consult the general DSP contribution guidelines.</p>"},{"location":"DSP-APP/#documentation-user-guidelines","title":"Documentation / User guidelines","text":"<p>We built the user guidelines and developer documentation with MkDocs. Get more information in the appropriate README.</p>"},{"location":"DSP-APP/contribution/","title":"How to Contribute to this Project","text":""},{"location":"DSP-APP/contribution/#development-server","title":"Development server","text":"<p>DSP-APP is built with Angular and uses NPM.</p> <p>You have to install the corresponding packages with <code>npm i</code>. Now you have to possibilites to run the application in developer mode:</p> <ul> <li>With a local installed DSP-API environment run <code>ng serve</code> or <code>npm run start</code>.</li> <li>If you want to connect to the DSP-API on our test server run <code>ng serve --configuration=test-server</code> or <code>npm run start-with-test-server</code>. Please consider which version of DSP-API is currently running on the test server (see webapi: https://api.test.dasch.swiss/version). With this solution you will also have access to all the representation files.</li> </ul> <p>In both case navigate to <code>http://0.0.0.0:4200/</code>. The app will automatically reload if you change any of the resource files.</p>"},{"location":"DSP-APP/contribution/#code-scaffolding","title":"Code scaffolding","text":"<p>Run <code>ng generate component component-name</code> to generate a new component. You can also use <code>ng generate directive|pipe|service|class|guard|interface|enum|module</code>.</p>"},{"location":"DSP-APP/contribution/#build","title":"Build","text":"<p>Run <code>npm run build</code> to build the app. The build artifacts will be stored in the <code>dist/</code> directory. Run the command <code>npm run build-prod</code> for a production build.</p>"},{"location":"DSP-APP/contribution/#test","title":"Test","text":"<p>The following tests (unit, e2e and lint) are part of the Github Actions (CI) workflow and has to be run successfully before the code can be merged into the main branch.</p>"},{"location":"DSP-APP/contribution/#running-unit-tests","title":"Running unit tests","text":"<p>Run <code>npm run test-local</code> to execute the unit tests via Karma on your local computer.</p> <p>Run <code>npm run test-ci</code> to execute the unit tests via Karma without a browser. It is used in the Github Actions (CI) workflow.</p>"},{"location":"DSP-APP/contribution/#running-end-to-end-tests","title":"Running end-to-end tests","text":"<p>Run <code>npm run test-e2e-protractor</code> to execute the end-to-end tests via Protractor.</p>"},{"location":"DSP-APP/contribution/#running-code-linter","title":"Running code linter","text":"<p>Run <code>npm run lint-local</code> to execute the lint service via ESLint. This command uses the <code>--fix</code> flag which fixes simple errors like redundant type if you have default value assigned. In the Github Actions (CI) workflow the linter runs as <code>npm run lint-ci</code>.</p> <p>To integrate ESLint with Visual Studio Code, do the following:</p> <ul> <li>Install the ESLint extension.</li> <li>Create a task via the Tasks: Configure Task command and select <code>npm: lint-local</code>.</li> <li>In the resulting <code>tasks.json</code> file, configure the problem matcher to be <code>$eslint-stylish</code>.</li> </ul>"},{"location":"DSP-APP/contribution/#further-help","title":"Further help","text":"<p>To get more help on the Angular CLI use <code>ng help</code> or go check out the Angular CLI README.</p>"},{"location":"DSP-APP/contribution/docs-documentation/","title":"DSP-APP Documentation","text":"<p>This is the DSP-APP documentation, based on MkDocs and published under https://docs.dasch.swiss/latest/DSP-APP/.</p>"},{"location":"DSP-APP/contribution/docs-documentation/#contribute","title":"Contribute","text":"<p>If you would like to add your own contributions to the docs, please read the following information regarding the file structure to ensure you follow the same structure.</p>"},{"location":"DSP-APP/contribution/docs-documentation/#file-structure","title":"File structure","text":"<p>The documentation consists of three main topics with subordinate themes:</p> <ol> <li>index contains all information about the DSP-APP</li> <li> <p>user-guide contains the DSP-APP user guide</p> </li> <li> <p>Index = Introduction: All about login, registration and DSP APP information in general.</p> </li> <li>Project = All about project administration; part of DSP-ADMIN</li> <li>User = All about user administration; part of DSP-ADMIN</li> <li>System = All about system administration; part of DSP-ADMIN</li> <li> <p>Data = All about data management; part of VRE. In the current DSP-APP ADMIN version it's commented out</p> </li> <li> <p>contribution contains all information for people who wants to contribute to DSP-APP</p> </li> <li> <p>Index = How to contribute incl. link to the general DSP contribution guidelines</p> </li> <li>Release Notes = Contains the CHANGELOG file of DSP-APP</li> </ol> <p>Images like screenshots and so on have to be stored in <code>assets/images</code>.</p> <p>The <code>mkdocs.yml</code> file is present in the top-level directory of the repo and the source files are in the <code>docs/</code> folder.</p> <p>Plugins have to be defined in <code>requirements.txt</code> and in the github actions workflow <code>deploy-docs</code> step under <code>EXTRA_PACKAGES</code>.</p>"},{"location":"DSP-APP/contribution/docs-documentation/#getting-started","title":"Getting Started","text":"<p>To run the documentation locally you'll need Python installed, as well as the Python package manager pip. You can check if you already have these installed by running the following commands from the command line:</p> <pre><code>$ python --version\nPython 3.8.2\n$ pip --version\npip 20.0.2 from /usr/local/lib/python3.8/site-packages/pip (python 3.8)\n</code></pre> <p>MkDocs supports Python versions 3.5, 3.6, 3.7, 3.8, and pypy3.</p>"},{"location":"DSP-APP/contribution/docs-documentation/#installing-dependencies","title":"Installing dependencies","text":"<p>Install the required packages by running the following command:</p> <pre><code>make docs-install-requirements\n</code></pre>"},{"location":"DSP-APP/contribution/docs-documentation/#running-the-documentation-locally","title":"Running the documentation locally","text":"<p>MkDocs comes with a built-in dev-server that lets you preview your documentation as you work on it. Make sure you're in the same directory as the <code>mkdocs.yml</code> (repository's root folder) configuration file, and then start the server by running the following command:</p> <pre><code>$ make docs-serve\nINFO    -  Building documentation...\nINFO    -  Cleaning site directory\n[I 160402 15:50:43 server:271] Serving on http://127.0.0.1:8000\n[I 160402 15:50:43 handlers:58] Start watching changes\n[I 160402 15:50:43 handlers:60] Start detecting changes\n</code></pre> <p>Open up http://127.0.0.1:8000/ in your browser, and you'll see the documentation start page being.</p> <p>In case you need to clean the project directory, run:</p> <pre><code>make docs-clean\n</code></pre> <p>To get some help about the <code>make</code> commands, run:</p> <pre><code>make help\n</code></pre>"},{"location":"DSP-APP/contribution/docs-documentation/#building-the-documentation","title":"Building the documentation","text":"<p>To build the documentation, run:</p> <pre><code>make docs-build\n</code></pre>"},{"location":"DSP-APP/contribution/docs-documentation/#deploying-github-page","title":"Deploying GitHub page","text":"<p>On each release of DSP-APP, the documentation is generated by the dsp-docs GitHub repository. Behind the scenes, MkDocs builds the documentation and uses the mkdocs-deploy-gh-pages actions script to deploy them to the gh-pages. That's it!</p>"},{"location":"DSP-APP/contribution/release-notes/","title":"Release Notes","text":""},{"location":"DSP-APP/contribution/release-notes/#changelog","title":"Changelog","text":""},{"location":"DSP-APP/contribution/release-notes/#1174-2024-03-22","title":"11.7.4 (2024-03-22)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes","title":"Bug Fixes","text":"<ul> <li>add user by project admin (DEV-3414) (#1519) (bc7160d)</li> <li>resource attached project retrieving (#DEV-3424) (#1525) (f603c00)</li> <li>resource item list value (DEV-3248) (#1517) (a415410)</li> <li>resource item properties update (DEV-3393) (#1512) (da48b72)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance","title":"Maintenance","text":"<ul> <li>update dsp-js to v9.1.14 (#1530) (7c8d761)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1173-2024-03-12","title":"11.7.3 (2024-03-12)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_1","title":"Bug Fixes","text":"<ul> <li>image settings restriction note (#1518) (c486dcb)</li> <li>incoming resource gravsearch query comment field set as optional (DEV-3315) (#1509) (4695b8b)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1172-2024-03-08","title":"11.7.2 (2024-03-08)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_2","title":"Bug Fixes","text":"<ul> <li>remove sentry sourcemap on deploy (#1513) (8a753f8)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1171-2024-03-08","title":"11.7.1 (2024-03-08)","text":""},{"location":"DSP-APP/contribution/release-notes/#maintenance_1","title":"Maintenance","text":"<ul> <li>Update dsp js to v9.1.13 (#1510) (2a11675)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1170-2024-03-07","title":"11.7.0 (2024-03-07)","text":""},{"location":"DSP-APP/contribution/release-notes/#enhancements","title":"Enhancements","text":"<ul> <li>resource state management (DEV-3358) (#1496) (48b06bc)</li> <li>watermark with radios and inputs (DEV-3313) (#1502) (99096da)</li> <li>watermark with radios and inputs (DEV-3313) (#1506) (6397d37)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_3","title":"Bug Fixes","text":"<ul> <li>docs: fix dead links in docs (#1492) (4558e34)</li> <li>hotfix for list is undefined (sentry JA-1) (#1508) (79301da)</li> <li>image region  comment field  validation removed(DEV-3315) (#1487) (985bcd0)</li> <li>refresh image viewer after new item was added (DEV-3277) (#1491) (7706ce7)</li> <li>removed absolute image size restriction, added sample image (DEV-3304) (#1484) (00021a8)</li> <li>resource class item autocomplete refresh and loading (DEV-3371) (#1504) (c87de3c)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_2","title":"Maintenance","text":"<ul> <li>add sentry error tracker (#1507) (bbcd255)</li> <li>cypress cloud only runs after release-please PR is merged (#1499) (9920587)</li> <li>forms using multi language inputs should be typed (#1494) (17333d0)</li> <li>remove unused code in ontology component (#1472) (bae7609)</li> <li>remove unused unit tests (#1497) (5499904)</li> <li>run e2e tests after release please actions on cypress cloud  (#1498) (5cc4577)</li> <li>type chip list input component (#1501) (1c75ca5)</li> <li>type common input (#1500) (860a430)</li> <li>type multi language controls (#1489) (42d5112)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#documentation","title":"Documentation","text":"<ul> <li>comply to dsp-docs markdown requirements (#1490) (4e99390)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1165-2024-02-27","title":"11.6.5 (2024-02-27)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_4","title":"Bug Fixes","text":"<ul> <li>submit button on upload resource does not load indefinitely  (#1485) (e1a51b5)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1164-2024-02-23","title":"11.6.4 (2024-02-23)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_5","title":"Bug Fixes","text":"<ul> <li>new list node field error is not displayed (#1481) (1ef0823)</li> <li>ontology initialisation (DEV-3317) (#1483) (be6ec9a)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1163-2024-02-23","title":"11.6.3 (2024-02-23)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_6","title":"Bug Fixes","text":"<ul> <li>highlits section by clicked region in image viewer (DEV-3277) (#1468) (50a5db5)</li> <li>initiates new search when user is logged in sucessfully (DEV-3293) (#1469) (70f7f25)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_3","title":"Maintenance","text":"<ul> <li>update dsp-js to v.9.1.12 (#1478) (a99cfeb)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1162-2024-02-14","title":"11.6.2 (2024-02-14)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_7","title":"Bug Fixes","text":"<ul> <li>link to edit a project (#1465) (0acda9e)</li> <li>slider is accessible (#1467) (0cd8f3d)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1161-2024-02-13","title":"11.6.1 (2024-02-13)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_8","title":"Bug Fixes","text":"<ul> <li>improve multi language input touched behavior, add validators (#1463) (c70e1cf)</li> <li>search result list item style (DEV-3280) (#1464) (a36fee0)</li> <li>temporary remove image settings tab (#1461) (6cbec6b)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1160-2024-02-13","title":"11.6.0 (2024-02-13)","text":""},{"location":"DSP-APP/contribution/release-notes/#enhancements_1","title":"Enhancements","text":"<ul> <li>dsp-app: image settings updates and fixes (DEV-2995) (#1451) (f67d528)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_9","title":"Bug Fixes","text":"<ul> <li>add instrumentation to faro sdk (#1455) (758ad8e)</li> <li>dsp-das: image viewer padding, arrows style. Resource list name css adjustments (DEV-3276) (#1456) (332f8d5)</li> <li>image settings updates (DEV-2995) (#1458) (6cc1ada)</li> <li>loads all projects when membership dialog is opened (DEV-3268) (#1450) (3abb8fd)</li> <li>remove old \"edit project\" page url (#1452) (3500c22)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_4","title":"Maintenance","text":"<ul> <li>image settings (#1460) (238b979)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1151-2024-02-09","title":"11.5.1 (2024-02-09)","text":""},{"location":"DSP-APP/contribution/release-notes/#maintenance_5","title":"Maintenance","text":"<ul> <li>update dsp-js to v9.1.11 (#1447) (eb4dfa5)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1150-2024-02-09","title":"11.5.0 (2024-02-09)","text":""},{"location":"DSP-APP/contribution/release-notes/#enhancements_2","title":"Enhancements","text":"<ul> <li>dsp-das: image settings (DEV-2995) (#1440) (3609b52)</li> <li>dsp-das: project menu items highlighting (DEV-3103) (#1444) (c78ddf7)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_10","title":"Bug Fixes","text":"<ul> <li>list item delete (DEV-3267) (#1446) (affd20f)</li> <li>styling issue in project membership (#1443) (7825d3d)</li> <li>user can create a project if no active project exists (#1441) (3cc36d9)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1141-2024-02-07","title":"11.4.1 (2024-02-07)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_11","title":"Bug Fixes","text":"<ul> <li>authentication with email works (#1438) (cbcdf30)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1140-2024-02-06","title":"11.4.0 (2024-02-06)","text":""},{"location":"DSP-APP/contribution/release-notes/#enhancements_3","title":"Enhancements","text":"<ul> <li>add openApi generated code (#1431) (0bffe04)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_12","title":"Bug Fixes","text":"<ul> <li>list node gets updated (#1437) (6b8aa08)</li> <li>login works with specific api errors  (#1433) (bb60878)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_6","title":"Maintenance","text":"<ul> <li>flex slider in parent element (#1429) (e0279fd)</li> <li>update eslint packages (#1430) (64658ce)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1134-2024-02-01","title":"11.3.4 (2024-02-01)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_13","title":"Bug Fixes","text":"<ul> <li>dsp-das: Enables rich text saving when creating new text value f\u2026  d48bf85 \u2026or property. (DEV-3247) (#1427) (f8739ba)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1133-2024-02-01","title":"11.3.3 (2024-02-01)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_14","title":"Bug Fixes","text":"<ul> <li>add cookie auth for iiif resources (#1425) (dfeec97)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1132-2024-02-01","title":"11.3.2 (2024-02-01)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_15","title":"Bug Fixes","text":"<ul> <li>string instead of enum for environment config (#1423) (fc92eaa)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1131-2024-01-31","title":"11.3.1 (2024-01-31)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_16","title":"Bug Fixes","text":"<ul> <li>display resource permission warning message (#1414) (5a8d739)</li> <li>dsp-app: resource link permissions (DEV-3252) (#1419) (72132f0)</li> <li>dsp-das: Enables rich text saving when creating new text value f\u2026 (#1417) (f3c9204)</li> <li>no bearer auth on iiif images (#1410) (a5a00e9)</li> <li>no faro in dev (#1412) (22ce0eb)</li> <li>test pass instrumentation validation (#1421) (36fd44a)</li> <li>testing passes (#1422) (66fd88e)</li> <li>various errors (#1416) (534e96b)</li> <li>various fixes (#1418) (c2db7bf)</li> <li>various fixes (#1420) (d88aa17)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_7","title":"Maintenance","text":"<ul> <li>boolean-value: assign class to get the same height as other forms (#1415) (7768c2d)</li> <li>remove datadog (#1413) (bda4786)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1130-2024-01-30","title":"11.3.0 (2024-01-30)","text":""},{"location":"DSP-APP/contribution/release-notes/#enhancements_4","title":"Enhancements","text":"<ul> <li>add Grafana faro (#1407) (67534ab)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_17","title":"Bug Fixes","text":"<ul> <li>Add empty bearer token by default for JS LIB (#1406) (f424623)</li> <li>add faro instrumentaton (#1409) (25701c6)</li> <li>auth guard waits for autologin to happen (#1399) (20eb7cf)</li> <li>autologin logs in with iri from jwt (#1397) (d8314ea)</li> <li>display error on error handler (#1401) (d0d0ac4)</li> <li>dsp-app: fixes no search results section (DEV-3240) (#1398) (60def06)</li> <li>dsp-app: Moved reusable form validators to single place. (#DEV-3222) (#1381) (1d0f53b)</li> <li>dsp-app: performs gravsearch count from advanced search (#1404) (07a9686)</li> <li>error handler display errors (#1403) (e7f0ddd)</li> <li>language input bug for list item (#1405) (79f6bd8)</li> <li>list item language can be changed (#1402) (98d56bd)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_8","title":"Maintenance","text":"<ul> <li>authentication flow improved, watch localStorage for changes (#1393) (edf4dfa)</li> <li>new AppErrorHandler (#1396) (b679646)</li> <li>remove ngxs storage plugin package (#1395) (7e44b14)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1120-2024-01-26","title":"11.2.0 (2024-01-26)","text":""},{"location":"DSP-APP/contribution/release-notes/#enhancements_5","title":"Enhancements","text":"<ul> <li>create api routes for /admin (#1318) (da5f289)</li> <li>dsp-app: introduced ontology class item count from state (#1358) (f8984e4)</li> <li>project form: creating a new project with an existing short code (DEV-3204) (#1368) (d231c51)</li> <li>projects: caches projects loading, removed readProjects from state model. #DEV-2913 (#1341) (7ebd126)</li> <li>update @dasch-swiss/jdnconvertiblecalendar and @dasch-swiss/jdnconvertiblecalendardateadapter (#1362) (cf1cd76)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_18","title":"Bug Fixes","text":"<ul> <li>add icon to common input (#1333) (7d58e69)</li> <li>add min and max length to keywords validators (#1379) (2c4852b)</li> <li>add tooltip on non accessible list (#1345) (a96f40b)</li> <li>adding new value for optional resource #DEV-3031 (#1360) (420a564)</li> <li>advanced search number of results bug (#1388) (2ad2be0)</li> <li>api url loaded from environment (#1332) (568f078)</li> <li>audio slider moves on time change (#1376) (0abdfc6)</li> <li>cancel button in project form goes back to previous page (#1385) (604b2f0)</li> <li>class instance adding and preview.  (#1317) (3c1e684)</li> <li>close dialog after update (#1352) (41d3bb0)</li> <li>delete failing e2e test (3dbca58)</li> <li>dsp-app: handles project edit errors (#DEV-3205) (#1369) (27f58b3)</li> <li>dsp-app: manage user membership (#DEV-3218) (#1373) (1c0ba4a)</li> <li>dsp-app: new projects have 20 characters shortcode (#1279) (cd3be0d)</li> <li>dsp-app: ontology loading, ontology clases refresh, reloads proj\u2026 (#1346) (9e4fcd3)</li> <li>dsp-app: reloads resource list when resource is changed, separates projects and membership loading.. (#1343) (b4bd34b)</li> <li>dsp-app: Resolves DEV-2687 (#1336) (d6211f9)</li> <li>dsp-app: resource class form validation (#DEV-3132) (#1370) (94e7a48)</li> <li>dsp-app: resource link form (#DEV-3203) (#1377) (a0f9afb)</li> <li>fixed loading coumpound resources #DEV-3096 (#1326) (490513e)</li> <li>flickering button (#1371) (ec0a850)</li> <li>geoname property lookup (#1334) (a491062)</li> <li>keywords chip inputs cannot be duplicated (#1382) (ac5298a)</li> <li>links to incunabula project (#1311) (31a6458)</li> <li>list item comment get updated (#1386) (1bb85a7)</li> <li>list-view: correct display logic (#1378) (b68f8db)</li> <li>loaders, refactored project component getters (#1361) (f87c96b)</li> <li>merge conflict (#1308) (818dcd6)</li> <li>more readable error message (#1383) (c426d92)</li> <li>multi language forms first selection bug (#1344) (47a161c)</li> <li>multi-language form default language (#1353) (e5fb2fe)</li> <li>no retry in edit user form (#1367) (1f03e7d)</li> <li>ontology resource create and display (#1322) (adfc304)</li> <li>Project initialisation from url (#1306) (6d8e1a3)</li> <li>Project Member cannot add instances of resources #DEV-3121 (#1327) (e0f57fe)</li> <li>projects list: deactivating-a-project-not-possible (DEV-3206) (#1366) (ad76437)</li> <li>property value refresh #DEV-3106 (#1329) (f41b375)</li> <li>redirection to home issue when session is not valid (#1359) (45e0625)</li> <li>remove unused validator on project form (#1339) (0b9ad0c)</li> <li>removeFromProjectMembership API http method, project membership \u2026 (#1330) (c1ab00c)</li> <li>send gravsearch and search-count request simultaniously (#1380) (89b91ec)</li> <li>shortcode issue gravsearch (#1315) (814fb98)</li> <li>shortcode issue in gravsearch (#1314) (1b69de4)</li> <li>still image: User without permission can draw a region (#1372) (7da5827)</li> <li>various bugs (#1312) (9f55ce1)</li> <li>various bugs (#1313) (1d90cf7)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#dev-3111-dev-3108-dev-3118-project-initialisation-from-url-1316-4e5c19a","title":"DEV-3111, #DEV-3108, #DEV-3118 project initialisation from url (#1316) (4e5c19a)","text":""},{"location":"DSP-APP/contribution/release-notes/#maintenance_9","title":"Maintenance","text":"<ul> <li>add confirm dialog service (#1335) (3bc2b6c)</li> <li>add prettier basic configuration (#1309) (99276a6)</li> <li>add prettier general style (#1310) (8567eda)</li> <li>add recommended linting rules again (#1323) (2fb7c3f)</li> <li>add rule nx enforce-module-boundaries (#1325) (1b1fd77)</li> <li>confirm dialog, multi language input, project-form, resource-form, list-info-form (#1328) (4c520cd)</li> <li>dsp-api: created api-entity-helper (#1337) (3befc8e)</li> <li>linter: use standard angular linter (#1276) (e7251d1)</li> <li>make list forms files clearer (#1338) (c5ac901)</li> <li>reinforce linter (#1320) (5e60532)</li> <li>remove dateAdapter app (#1324) (28e8ee4)</li> <li>remove unused external-link-directive (#1340) (bf9aecc)</li> <li>run prettier linter on apps and libs folders (#1319) (786753d)</li> <li>set max line length to 120 characters (#1321) (fa379d0)</li> <li>Update dsp-js to v9.1.10 (#1389) (f1489d6)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1117-2023-12-08","title":"11.1.7 (2023-12-08)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_19","title":"Bug Fixes","text":"<ul> <li>add GH packages access for docker publish (#1304) (bef179d)</li> <li>removing/adding users from/to project, project activation/deactivation. (#1302) (a084369)</li> <li>resource loading issue (#1303) (c9dc099)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_10","title":"Maintenance","text":"<ul> <li>Update dsp-js to v9.1.9 (#1305) (494d026)</li> <li>use github packages in dsp-pp (#1291) (6ceb41a)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1116-2023-12-05","title":"11.1.6 (2023-12-05)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_20","title":"Bug Fixes","text":"<ul> <li>dsp-app: prevent x overflow in dialog (#1283) (ed43e09)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_11","title":"Maintenance","text":"<ul> <li>created isFalsy pipe to handle no-negated-async linting rule (#1299) (41f6f7f)</li> <li>session-service: add reactivity (#1165) (d518fa8)</li> <li>update package-lock (#1297) (b62b072)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1115-2023-11-23","title":"11.1.5 (2023-11-23)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_21","title":"Bug Fixes","text":"<ul> <li>app/properties: remove number of incoming links in pagination (DEV-2474) (#1270) (021cf29)</li> <li>dsp-app: loading variable (#1271) (7bef1a9)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1114-2023-11-23","title":"11.1.4 (2023-11-23)","text":""},{"location":"DSP-APP/contribution/release-notes/#maintenance_12","title":"Maintenance","text":"<ul> <li>update dsp-js to v9.0.3 (#1273) (24f3611)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1113-2023-11-16","title":"11.1.3 (2023-11-16)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_22","title":"Bug Fixes","text":"<ul> <li>date-picker: date-picker doesn't show in advanced search (#1267) (3d2778f)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1112-2023-11-15","title":"11.1.2 (2023-11-15)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_23","title":"Bug Fixes","text":"<ul> <li>advanced-search: undefined error leads to blank page (#1264) (a176ce0)</li> <li>results: go back to search form button fix (#1266) (b2b18fe)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1111-2023-11-14","title":"11.1.1 (2023-11-14)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_24","title":"Bug Fixes","text":"<ul> <li>activate/deactivate project: subscribe to the observable (#1261) (92431d4)</li> <li>results: user unable to execute second fulltext search (#1262) (baba2f4)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1110-2023-11-10","title":"11.1.0 (2023-11-10)","text":""},{"location":"DSP-APP/contribution/release-notes/#enhancements_6","title":"Enhancements","text":"<ul> <li>advanced-search: allow ordering by URI value (#1248) (e5cfebe)</li> <li>expert search: implement default gravsearch as placeholder (#1247) (5132f4d)</li> <li>list-value: make list menu resemble a dropdrown (#1256) (f7a7a8c)</li> <li>project description: order project descriptions by language (#1250) (f2c5dc9)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_25","title":"Bug Fixes","text":"<ul> <li>app/help: fix links to releases (#1253) (e2ddcdd)</li> <li>app/resource: removed developer feature that created annotation bug (#1254) (7b908b0)</li> <li>type errors: fix type errors (#1255) (389eccb)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_13","title":"Maintenance","text":"<ul> <li>date picker: implement date picker as standalone component (#1251) (e89dba8)</li> <li>ontology-class-item: change how long labels are handled (#1257) (f6d42dc)</li> <li>update dsp-js to v9.0.2 (#1258) (cb86ebf)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1100-2023-10-27","title":"11.0.0 (2023-10-27)","text":""},{"location":"DSP-APP/contribution/release-notes/#breaking-changes","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>deps: bump js-lib to 9.0.0 (#1241)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_7","title":"Enhancements","text":"<ul> <li>advanced-search: make list menu resemble a dropdown (#1243) (96eab7f)</li> <li>restore previous advanced search that user executed (#1226) (8c5eec9)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_26","title":"Bug Fixes","text":"<ul> <li>advanced search link: Add route constant (#1238) (db3e22a)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_14","title":"Maintenance","text":"<ul> <li>cleanup routes and unused components (#1239) (2ce9065)</li> <li>deps: bump js-lib to 9.0.0 (#1241) (94b7f26)</li> <li>deps: bump js-lib to 9.0.1 (#1244) (4fc6a40)</li> <li>routing: apply route constants (#1227) (0b0dff5)</li> <li>routing: cleanup unused routes (#1240) (caa1819)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#10242-2023-10-20","title":"10.24.2 (2023-10-20)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_27","title":"Bug Fixes","text":"<ul> <li>date-picker: fix YYYY-MM-dd formatting (#1235) (f641ccb)</li> <li>gravsearch-service: incorrect gravsearch generated when searching for a linked property (#1232) (200bbc0)</li> <li>project: host listener triggers when user types in an input or textarea (#1233) (9f2a790)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_15","title":"Maintenance","text":"<ul> <li>Reconfigure all \"zio\" endpoints to use the original address (#1222) (eaaefc9)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#10241-2023-10-17","title":"10.24.1 (2023-10-17)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_28","title":"Bug Fixes","text":"<ul> <li>advanced-search: generate correct gravsearch for linked resources with property values (#1229) (2caa0a2)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_16","title":"Maintenance","text":"<ul> <li>string literal component: move app string literal component into shared lib (#1209) (3f2a562)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#10240-2023-10-13","title":"10.24.0 (2023-10-13)","text":""},{"location":"DSP-APP/contribution/release-notes/#enhancements_8","title":"Enhancements","text":"<ul> <li>advanced-search: advanced search library (#1131) (7e0a550)</li> <li>dev-2557-update-the-documentation-1 (#1221) (e1c741d)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_17","title":"Maintenance","text":"<ul> <li>update dsp-js to v8.3.6 (#1224) (543c0d8)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#10237-2023-10-04","title":"10.23.7 (2023-10-04)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_29","title":"Bug Fixes","text":"<ul> <li>resource: resources do not load from url (#1214) (689acbe)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#10236-2023-10-03","title":"10.23.6 (2023-10-03)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_30","title":"Bug Fixes","text":"<ul> <li>ontology form: remove the input decorator (#1212) (64100e7)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#10235-2023-09-29","title":"10.23.5 (2023-09-29)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_31","title":"Bug Fixes","text":"<ul> <li>app: sort incoming links for more than 25 (#1203) (7a17d7c)</li> <li>link to controlled vocabulary: Link to correct route (#1207) (51bae4b)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_18","title":"Maintenance","text":"<ul> <li>app-global, app-routing-module: Replaces string literals with constants (#1210) (a70388c)</li> <li>deps: bump js-lib version to 8.3.5 (#1211) (a6682e9)</li> <li>progress indicator: move app progress indicator into shared lib (#1204) (95d843d)</li> <li>project edit dialog: remove dialog and replace in component (#1202) (7a42167)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#10234-2023-09-15","title":"10.23.4 (2023-09-15)","text":""},{"location":"DSP-APP/contribution/release-notes/#maintenance_19","title":"Maintenance","text":"<ul> <li>CI: add PR title check (#1205) (3acf5be)</li> <li>deps-dev: bump @types/node from 18.15.9 to 20.5.9 (#1200) (81c666e)</li> <li>update dsp-js to v8.3.4 (#1206) (2ce2fe1)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#10233-2023-09-01","title":"10.23.3 (2023-09-01)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_32","title":"Bug Fixes","text":"<ul> <li>sorting: sorts incoming links by res class then res label (#1197) (85f1af6)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_20","title":"Maintenance","text":"<ul> <li>update dsp-js-lib to v8.3.3 (#1199) (a0717c2)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#10232-2023-08-18","title":"10.23.2 (2023-08-18)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_33","title":"Bug Fixes","text":"<ul> <li>regions: reload the resource after deletion of regions (#1185) (c5a14e6)</li> <li>runtime errors: fix errors thrown (#1178) (55f56cd)</li> <li>session service: destroy session and return of false if an error\u2026 (#1183) (3ead94d)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_21","title":"Maintenance","text":"<ul> <li>deps: bump js-lib to 8.3.2 (#1187) (d5ba644)</li> <li>msg text: Change notification message text for 404 not found (#1184) (20d5d0b)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#documentation_1","title":"Documentation","text":"<ul> <li>fix expert search docs (#1180) (2b786a6)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#10231-2023-08-04","title":"10.23.1 (2023-08-04)","text":""},{"location":"DSP-APP/contribution/release-notes/#maintenance_22","title":"Maintenance","text":"<ul> <li>move date-picker out into a library (#1172) (ab847bd)</li> <li>update js-lib to v8.3.1 (#1175) (63c9105)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#10230-2023-07-26","title":"10.23.0 (2023-07-26)","text":""},{"location":"DSP-APP/contribution/release-notes/#enhancements_9","title":"Enhancements","text":"<ul> <li>remove property menu: add skeleton to mat menu until content loaded (#1148) (659f0f4)</li> <li>upload image: add snackbar message if upload to sipi temp failed (#1166) (6df61e9)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_34","title":"Bug Fixes","text":"<ul> <li>action bubble position: reposition the action bubble (#1147) (cc5b66c)</li> <li>add-value: paragraph not showing as textarea (#1155) (83a0854)</li> <li>app/ontology: stop ontology service from spamming errors (#1144) (fecf296)</li> <li>delete value button: evaluate users permissions to enable/disable delete button (#1138) (6736942)</li> <li>geonames search results: filter out properties instead of error (#1164) (7c478d6)</li> <li>ontology: Ontology cache is not updated when adding property to resource class (#1156) (162b52e)</li> <li>pdf viewer: menubar is broken (#1160) (22e99e5)</li> <li>project list items: users project list items display elements correctly (#1141) (f7eca25)</li> <li>resource-list: remove erroneous text before each label (#1154) (2177437)</li> <li>runtime errors: fix forms error, ExpressionChangedAfterItHasBeenChecked and properties of undefined (#1168) (3f6a253)</li> <li>text values: open all non internal links in a new tab (#1167) (ea6ccff)</li> <li>type error: check existence of internal context (#1136) (c32f8b8)</li> <li>type error: check existence of ReadOntology instances (#1140) (c8d8024)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_23","title":"Maintenance","text":"<ul> <li>add pendo analytics (#1157) (15f7a33)</li> <li>deps: bump semver from 5.7.1 to 5.7.2 (#1143) (46351b0)</li> <li>deps: bump word-wrap from 1.2.3 to 1.2.5 (#1158) (884d6c3)</li> <li>empty comment: Keep empty comments placeholder unstyled (#1169) (a96215c)</li> <li>error logging: do not throw error on failed login attempt (#1142) (e548344)</li> <li>mdc-migration: migrate material formfield, input, select, autocomplete (#1122) (41dd432)</li> <li>representation components: set the text color of the menu items (#1162) (b1f510e)</li> <li>resource list: prevent shift/overlap of checkboxes (#1149) (e2d1582)</li> <li>test console output: Mock components to avoid spamming (#1152) (fd3ff9e)</li> <li>upgrade angular to 16 (#1153) (08c17fa)</li> <li>user membership: Clip long project names with overflow ellipsis (#1150) (f219e84)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#10220-2023-07-07","title":"10.22.0 (2023-07-07)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_35","title":"Bug Fixes","text":"<ul> <li>app: navigate to home after logout (#1125) (bfdd7ce)</li> <li>image navigation: remove flickering, remove in between load images (#1127) (d7b0922)</li> <li>password-form: add better error handling (#1128) (e131a39)</li> <li>visibility of menu entries: Utilise proper editing permissions for enabling/disabling editing menu items (#1129) (a59e85e)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_10","title":"Enhancements","text":"<ul> <li>app/migration: migrate snackbar (#1116) (76f495b)</li> <li>error-handler: move error-handler and all its dependencies into library (#1126) (e720bb2)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_24","title":"Maintenance","text":"<ul> <li>angular mdc migration slider (#1119) (27c7d86)</li> <li>app-state-service: move Application State Service to a library (#1120) (fe5718f)</li> <li>deps: bump socket.io-parser from 4.2.2 to 4.2.4 (#1078) (3fb0647)</li> <li>mat-menu: apply black background to representation menu (#1118) (f367394)</li> <li>update js-lib to v8.2.7 (#1133) (52340c4)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#10210-2023-06-23","title":"10.21.0 (2023-06-23)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_36","title":"Bug Fixes","text":"<ul> <li>freeze: Remove/replace freezing request (#1110) (6a9e259)</li> <li>freezing: app freeze if sipi does not respond (DEV-1562) (#1099) (aaaa887)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_11","title":"Enhancements","text":"<ul> <li>add skeleton loading to onto class items (#1107) (e3d7a79)</li> <li>dsp-app: fixed wrong error-messages in update forms (#1106) (c9e5d3f)</li> <li>video component: enhance video component (#1108) (0236a5e)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_25","title":"Maintenance","text":"<ul> <li>allow access to app locally on host 0.0.0.0 (#1111) (e193e78)</li> <li>angular mdc migration list (#1109) (9a59633)</li> <li>angular mdc migration menu (#1082) (e6097bd)</li> <li>angular mdc migration paginator (#1097) (f873d24)</li> <li>angular mdc migration progress bar (#1098) (5465070)</li> <li>angular mdc migration slide toggle (#1089) (a06d06f)</li> <li>angular mdc migration tabs (#1094) (237291d)</li> <li>app: delete unused MatProgressSpinnerModule (#1084) (09d3256)</li> <li>deps: bump JS-LIB to 8.2.6 (#1112) (2082da1)</li> <li>move session service to a lib (#1101) (152ca06)</li> <li>refactor cache service (#1073) (1e8f67d)</li> <li>remove unused components (#1100) (6d9f1c6)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#10203-2023-06-09","title":"10.20.3 (2023-06-09)","text":""},{"location":"DSP-APP/contribution/release-notes/#maintenance_26","title":"Maintenance","text":"<ul> <li>improve logging (#1093) (7fb9dc2)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#10202-2023-06-09","title":"10.20.2 (2023-06-09)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_37","title":"Bug Fixes","text":"<ul> <li>app-config: add type safety checks (#1072) (a4d451c)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_27","title":"Maintenance","text":"<ul> <li>angular mdc migration tooltip (#1085) (65159ae)</li> <li>app-config: improve type-safety of parsed configuration (#1074) (01662fd)</li> <li>app-config: move out into a library (#1068) (62d68d1)</li> <li>app-logs: add datadog application logging (#1080) (e5046d4)</li> <li>app: delete unused MatTable module (#1083) (0df731f)</li> <li>app: delete unused module (#1077) (70d8bdc)</li> <li>CI: fix configuration (fca6722)</li> <li>CI: fix configuration (1dfaf6c)</li> <li>fix ci (#1087) (626be72)</li> <li>improve logging (895e3fa)</li> <li>improve logging (3e2d884)</li> <li>improve logging (#1081) (da08b54)</li> <li>improve logging (#1086) (d6b9ad0)</li> <li>improve logging (#1088) (27111c2)</li> <li>update dsp-js to v8.3.5 (#1090) (cc1ed2b)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#10201-2023-05-31","title":"10.20.1 (2023-05-31)","text":""},{"location":"DSP-APP/contribution/release-notes/#maintenance_28","title":"Maintenance","text":"<ul> <li>bump NX version (#1064) (d321060)</li> <li>deploy: rename admin to app (INFRA-285) (#1063) (bb4dc48)</li> <li>deps: bump JS-LIB to 8.2.4 (#1069) (dcb9683)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#10200-2023-05-23","title":"10.20.0 (2023-05-23)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_38","title":"Bug Fixes","text":"<ul> <li>add-user: resize and center cancel button (DEV-2073) (#1050) (7ef68f0)</li> <li>app: button activated for date search (#1051) (42fe1d1)</li> <li>app: Full text search shows next 25 results (#1047) (b3f60c6)</li> <li>boolean property comment: Comment field is always enabled (#1053) (e3ab3e1)</li> <li>resource-list: set a fix width within mat-list-item (#1057) (b6b3672)</li> <li>standoff html links: every mouse button opens the resource (DEV-2092) (#1042) (2f63340)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_12","title":"Enhancements","text":"<ul> <li>boolean icon: change checkbox into toggle in read mode (DEV-2178) (#1052) (55b276b)</li> <li>boolean properties: change checkboxes into toggles (#1049) (80c0305)</li> <li>boolean values: implement removal of boolean values (#1034) (da423be)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_29","title":"Maintenance","text":"<ul> <li>angular mdc migration - dialog (#1004) (5e0204f)</li> <li>deps-dev: bump @nrwl/eslint-plugin-nx from 15.8.9 to 16.2.1 (#1055) (5c6d2d5)</li> <li>deps-dev: bump @nrwl/nx-cloud from 15.3.2 to 16.0.5 (#1030) (162a1bb)</li> <li>deps-dev: bump @types/jasmine from 3.8.2 to 4.3.1 (#1006) (9ea23e5)</li> <li>deps-dev: bump postcss-preset-env from 7.5.0 to 8.3.2 (#1010) (97fefa7)</li> <li>deps: bump engine.io from 6.4.1 to 6.4.2 (#1035) (72fb3ce)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#10192-2023-05-15","title":"10.19.2 (2023-05-15)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_39","title":"Bug Fixes","text":"<ul> <li>app/resource: show region on first load (#1040) (a7e1975)</li> <li>app: top-level-domain with 63 chars (#1045) (19dc886)</li> <li>date-picker: don't display error message without input (#1038) (0be2229)</li> <li>pdf-viewer: pdf viewer not sending cookie (dev-2136) (#1039) (f51479b)</li> <li>pdf-viewer: pdf viewer not sending cookie (dev-2136) (#1039) (5f884f4)</li> <li>pdf-viewer: pdf viewer not sending cookie (Dev-2136) (#1039) (c990c4f)</li> <li>pdf-viewer: pdf viewer not sending cookie (Dev-2136) (#1039) (6e3453d)</li> <li>resource viewer: images flickering or not loading (#1033) (6fdb14b)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_30","title":"Maintenance","text":"<ul> <li>app/footer: update link and center content (#1041) (1f4c16e)</li> <li>eliminate eslint unused vars (#1037) (0076d1d)</li> <li>overview and project tile refactor (#1031) (1fabbd0)</li> <li>unused lifecycle hooks: remove unused lifecycle hooks (#1043) (1c79877)</li> <li>update dsp-js-lib to 8.2.3 (#1046) (508cf48)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#10191-2023-04-28","title":"10.19.1 (2023-04-28)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_40","title":"Bug Fixes","text":"<ul> <li>gravsearch incoming links filtering out isPartOf (#1026) (4571c31)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_31","title":"Maintenance","text":"<ul> <li>update js-lib to 8.2.2 (#1029) (18b9663)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#10190-2023-04-25","title":"10.19.0 (2023-04-25)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_41","title":"Bug Fixes","text":"<ul> <li>app breaks when on /account route (#1014) (2dca23b)</li> <li>app/resource-instance-form: fix same value for property bug (#1012) (a8b0f71)</li> <li>CD: get tag before changes happen (INFRA-241) (#1003) (d8fec4b)</li> <li>CD: use correct service string (INFRA-241) (#1002) (b8f31ee)</li> <li>list-view: next page of results not showing (#1017) (52b6d95)</li> <li>padding on both sides (#1011) (edc4d2d)</li> <li>sidenav: set background color for selected list-item (#998) (218f64c)</li> <li>unauthorized users can access the create resource form (#1016) (679a95d)</li> <li>Update dsp release version to 2023.04.02 (DEV-2044) (#1001) (441ff4a)</li> <li>user menu: bypass cache; get user from the api and set in cache (DEV-2024) (#997) (a8190d1)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_13","title":"Enhancements","text":"<ul> <li>CD: deploy to DEV after every commit (INFRA-241) (#999) (df4793a)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_32","title":"Maintenance","text":"<ul> <li>adjust linter rules for dsp-app (#1022) (771c534)</li> <li>deps-dev: bump @angular-devkit/core from 15.2.4 to 15.2.6 (#1009) (80f373e)</li> <li>deps-dev: bump @angular-devkit/schematics from 15.2.4 to 15.2.6 (#1007) (abbcd25)</li> <li>deps-dev: bump eslint from 8.36.0 to 8.38.0 (#1019) (d4d7130)</li> <li>deps-dev: bump postcss from 8.4.21 to 8.4.22 (#1008) (b7c51c4)</li> <li>deps: bump rxjs from 6.5.5 to 6.6.7 (#1020) (d95c826)</li> <li>fix buttons on start page (more or less) (#1021) (824e025)</li> <li>fulltext-search: filter out deactivated projects and system projects (#1015) (13895f7)</li> <li>progress indicator spinner (#1023) (218ee42)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#10180-2023-04-14","title":"10.18.0 (2023-04-14)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_42","title":"Bug Fixes","text":"<ul> <li>dsp-app/upload: File upload fix to allow same input after error (#983) (a9bf4e3)</li> <li>handle 400 error during fulltext search (#984) (2aefc9d)</li> <li>no autocomplete for username (#991) (7a132e2)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_14","title":"Enhancements","text":"<ul> <li>activate not-exists for link prop (#992) (25be262)</li> <li>editing properties: user feedback (DEV-1616) (#973) (1b905e4)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_33","title":"Maintenance","text":"<ul> <li>angular mdc migration -  chips (#993) (367f853)</li> <li>angular mdc migration - button (#989) (dac96bc)</li> <li>angular mdc migration - card (#994) (f5b7fce)</li> <li>angular mdc migration - checkbox (#995) (5cba244)</li> <li>header: adjust logo (#985) (879c26f)</li> <li>make eslint throw errors on ignored tests (#986) (a1c9ec6)</li> <li>overview component bottom padding (#982) (11518d3)</li> <li>update js-lib to 8.2.1 (#996) (252ceff)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#10170-2023-03-31","title":"10.17.0 (2023-03-31)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_43","title":"Bug Fixes","text":"<ul> <li>login button remains after sys admin login (#975) (5034931)</li> <li>store CookieBanner in LocalStorage (DEV-1953) (#970) (d2d25da)</li> <li>user guide for cardinalities (DEV-1568) (#978) (f762546)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_15","title":"Enhancements","text":"<ul> <li>introduction of not-exists operator (DEV-1845) (#969) (63c5136)</li> <li>submit cardinnalities: disable double click (#972) (864a656)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#documentation_2","title":"Documentation","text":"<ul> <li>Add the operator \"not exists\" (#974) (b1c2062)</li> <li>Update documentation to include the data browser (#971) (eb8e6c2)</li> <li>Update the user guide regarding the full-text search section (#951) (e0f5061)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_34","title":"Maintenance","text":"<ul> <li>add default background color to release badge (DEV-1918) (#958) (17c94d7)</li> <li>add JDNConvertibleCalendarDateAdapter and JDNConvertibleCalendar to monorepo (#968) (07b9694)</li> <li>build docker image by first building app outside (0946246)</li> <li>bump js-lib to 8.2.0 (#979) (74c14c1)</li> <li>bump nginx-server version (#964) (934c6e4)</li> <li>convert dsp-app into monorepo using nx (DEV-1888) (#961) (0614a77)</li> <li>fix overview page bottom padding (#977) (a1e7cc6)</li> <li>rename all occurrences of list to controlled vocabulary (#976) (53b027d)</li> <li>upgrade Angular to 15 (#953) (e521db4)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#10160-2023-03-17","title":"10.16.0 (2023-03-17)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_44","title":"Bug Fixes","text":"<ul> <li>cardinalities: dealing with 409 errors (DEV-1793) (#949) (7430d68)</li> <li>cardinalities: enable the required toggle programmatically (DEV-1790) (#942) (860cae2)</li> <li>cardinalities: wrong user feedback before correct one (DEV-1971) (#941) (e7d23a9)</li> <li>document: fix PDF viewer zoom out issue (DEV-1855) (#947) (b8e9a73)</li> <li>forms: hide form after submit (DEV-1476) (#940) (64315fb)</li> <li>lists: error messages only appear after focus (DEV-1692) (#937) (82793a2)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_16","title":"Enhancements","text":"<ul> <li>allow upload ODD and RNG file types (DEV-1271) (#945) (c66954e)</li> <li>linked: help text for linked resources (DEV-1480) (#939) (3149060)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_35","title":"Maintenance","text":"<ul> <li>bump js-lip to 8.1.1 (#956) (8bf7450)</li> <li>document: fix pdf viewer css (DEV-1821) (#946) (c370f68)</li> <li>material: update material icons (DEV-1778) (#932) (8936427)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#10150-2023-03-03","title":"10.15.0 (2023-03-03)","text":""},{"location":"DSP-APP/contribution/release-notes/#enhancements_17","title":"Enhancements","text":"<ul> <li>cardinalities: incorporate new routes in dsp app (DEV-1710) (#929) (d4ee7c6)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_36","title":"Maintenance","text":"<ul> <li>deps: update js-lib to version 8.1.0 (#936) (f2f4111)</li> <li>fix typo on publish make target (#925) (e4d09ac)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#10140-2023-02-17","title":"10.14.0 (2023-02-17)","text":""},{"location":"DSP-APP/contribution/release-notes/#enhancements_18","title":"Enhancements","text":"<ul> <li>cardinalities: implement cardinalities user workflow (Dev-1615 ) (#917) (4f0347a)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#documentation_3","title":"Documentation","text":"<ul> <li>Fix broken links (#921) (ad368aa)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_37","title":"Maintenance","text":"<ul> <li>bump js-lib to 8.0.0 (#923) (f7c4847)</li> <li>deps: fix breaking changes from js-lib v8.0.0 (#918) (f2d14be)</li> <li>enable publishing docker image arm64 and amd64 architectures (DEV-1701) (#915) (65d3120)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#10130-2023-02-03","title":"10.13.0 (2023-02-03)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_45","title":"Bug Fixes","text":"<ul> <li>adapt link to search doc (#907) (dc294af)</li> <li>fix disappeared buttons colors (DEV-1686) (#906) (9594a6e)</li> <li>project: disable closing sidenav with esc key (DEV-1687) (#909) (1dea40f)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_38","title":"Maintenance","text":"<ul> <li>fix test logs (DEV-1610) (#893) (681fc7a)</li> <li>make possible to publish manually to DockerHub using GH Actions (#911) (5f72fa9)</li> <li>ontology editor: restyle ontology editor for cardinalities (DEV-1614) (#900) (57b41d9)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_19","title":"Enhancements","text":"<ul> <li>zio: add support for new zio routes (DEV-1636) (#898) (d4e2a94)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#10121-2023-01-23","title":"10.12.1 (2023-01-23)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_46","title":"Bug Fixes","text":"<ul> <li>create-link-resource: fix issue when creating a new linked resource (DEV-1637) (#899) (cf9008a)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#10120-2023-01-20","title":"10.12.0 (2023-01-20)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_47","title":"Bug Fixes","text":"<ul> <li>firefox audio representation (DEV 1553) (#884) (420d54f)</li> <li>fulltext-search: don't allow search queries of less than 3 characters (DEV-1602) (#890) (5b6a131)</li> <li>ontology: fix old view ontology editor not appearing (DEV-1603) (#891) (00ad45e)</li> <li>project: Prevent adding new data model for deactivated projects (DEV-1582) (#892) (c5fcc30)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_20","title":"Enhancements","text":"<ul> <li>releasenotes: Integrate releasenotes (DEV-1600) (#895) (64ef14b)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_39","title":"Maintenance","text":"<ul> <li>bump JS-LIB to v7.4.10 (#896) (775b012)</li> <li>deps: bump engine.io from 6.2.0 to 6.2.1 (#872) (3e208a5)</li> <li>deps: bump json5 from 1.0.1 to 1.0.2 (#886) (6064d42)</li> <li>deps: bump loader-utils from 2.0.2 to 2.0.4 (#866) (2dfaa61)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#10112-2023-01-09","title":"10.11.2 (2023-01-09)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_48","title":"Bug Fixes","text":"<ul> <li>fix gravsearch results infinite loading (DEV-1541) (#887) (3c8e1a9)</li> <li>ontology: Displaying ontology on click (DEV-1545) (#882) (479c1e8)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_40","title":"Maintenance","text":"<ul> <li>bump JS-LIB to v7.4.9 (#888) (4b958e2)</li> <li>header: Logo &amp; favicon (DEV-1574) (#885) (384d8ef)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#10111-2022-12-07","title":"10.11.1 (2022-12-07)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_49","title":"Bug Fixes","text":"<ul> <li>properties: fixing incoming links bug in compound view (DEV-1493) (#873) (d606cf0)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_41","title":"Maintenance","text":"<ul> <li>bump js-lib to v7.4.8 (#880) (c412dfd)</li> <li>project IRI refactor (DEV-1468) (#862) (d898109)</li> <li>representations: move repeated code to a shared service (DEV-1488) (#869) (c2dcb17)</li> <li>text-value-as-string: no longer account for richText gui attribute (DEV-1471) (#874) (21f7c6c)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#10110-2022-11-02","title":"10.11.0 (2022-11-02)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_50","title":"Bug Fixes","text":"<ul> <li>css: adjust css of form error message (DEV-1458) (#861) (54e15d0)</li> <li>ontology: list of class properties sometimes not loading correctly (DEV-1435) (#857) (302d83b)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_21","title":"Enhancements","text":"<ul> <li>link-value, search-link-value: add debouncing to search requests (DEV-1463) (#860) (a49af8e)</li> <li>result list: Internal links open resource in new window (DEV-1405) (#855) (3396701)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#10102-2022-10-21","title":"10.10.2 (2022-10-21)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_51","title":"Bug Fixes","text":"<ul> <li>edit-list-item: only send delete comment request if necessary (DEV-1406) (#850) (a2bddfc)</li> <li>list-value: fix payload for API request to update a link value (DEV-1420) (#854) (e350d21)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_42","title":"Maintenance","text":"<ul> <li>deps: bump JS-LIB to 7.4.7 (#856) (d10f9c4)</li> <li>project workspace: Remove grid view from the project workspace (DEV-1318) (#849) (1083512)</li> <li>replace substr with substring (DEV-1409) (#853) (5b94d3b)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#10101-2022-10-07","title":"10.10.1 (2022-10-07)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_52","title":"Bug Fixes","text":"<ul> <li>list-info-form: fix project iri generation (DEV-1387) (#845) (79c4791)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_43","title":"Maintenance","text":"<ul> <li>deps: bump JS-LIB to 7.4.6 (#847) (17d3af1)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#10100-2022-10-06","title":"10.10.0 (2022-10-06)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_53","title":"Bug Fixes","text":"<ul> <li>sidenav: sort data models (DEV-1359) (#841) (75087b5)</li> <li>upload: convert file extensions to lowercase before checking for validity (DEV-1391) (#844) (61005c6)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_44","title":"Maintenance","text":"<ul> <li>maintain dependencies (DEV-1358) (#839) (e8c5140)</li> <li>update release-please-action to v3 (#837) (9b1e7e1)</li> <li>upgrade Angular and Material to v14 (DEV-1322) (#830) (a46609f)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_22","title":"Enhancements","text":"<ul> <li>add support for Romansh language (DEV-557) (#840) (1ec8cff)</li> <li>forms: Comments are disabled or highlighted to be not saved if there is a invalid or an empty property value (DEV-1124) (#836) (f5b7abd)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1091-2022-09-26","title":"10.9.1 (2022-09-26)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_54","title":"Bug Fixes","text":"<ul> <li>project: fix route to lists (#834) (1d32a03)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1090-2022-09-26","title":"10.9.0 (2022-09-26)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_55","title":"Bug Fixes","text":"<ul> <li>list-view: refresh list view after a resource is deleted or erased (DEV-1353) (#828) (c15d87b)</li> <li>Onto editor 404 error (DEV-1355) (#831) (e7836a9)</li> <li>Ontologies displayed twice (DEV-1325) (#832) (ba35d6f)</li> <li>property-form: set the cache after the ontology changes with the new lastModificationDate to prevent 409 http errors (#824) (0304943)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_23","title":"Enhancements","text":"<ul> <li>lists: read mode project member (DEV-1343) (#825) (b818288)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_45","title":"Maintenance","text":"<ul> <li>update js-lib to v7.4.5 (#833) (6d14ca7)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1081-2022-09-14","title":"10.8.1 (2022-09-14)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_56","title":"Bug Fixes","text":"<ul> <li>make deactivated projects invisible for all except sysadmin (DEV-1261) (#821) (88a2cbd)</li> <li>properties: resolve 409 conflict (#822) (bf0ed83)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1080-2022-09-09","title":"10.8.0 (2022-09-09)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_57","title":"Bug Fixes","text":"<ul> <li>audio: download audio file with original filename (#810) (8001fab)</li> <li>int-value: fix int-value validation (DEV-1277) (#815) (d86dc7b)</li> <li>ontology: don't show 403 error is user is a system admin or project admin and not a project member (#816) (ffe00c0)</li> <li>resource: fix properties sorting (DEV-1204) (#818) (fbee603)</li> <li>resource: reinit representationsToDisplay array to fix undefined issue in template (#813) (375166a)</li> <li>rollbar fixes (DEV-1324) (#817) (e79eee5)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_24","title":"Enhancements","text":"<ul> <li>document: document viewer for non-pdf documents (DEV-1303) (#812) (36008c6)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_46","title":"Maintenance","text":"<ul> <li>deps: bump js-lib to 7.4.4 (#820) (57e3ccf)</li> <li>deps: bump js-lib version to 7.4.3 (#814) (c97c569)</li> <li>upload: use file extensions for valid file types instead of MIME types (DEV-1203) (#808) (448e783)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#documentation_4","title":"Documentation","text":"<ul> <li>Add documentation about the different file types and their functionalities (#804) (8c64276)</li> <li>Reorganise the main menu and the data menu (#807) (f8ef81d)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1070-2022-08-24","title":"10.7.0 (2022-08-24)","text":""},{"location":"DSP-APP/contribution/release-notes/#enhancements_25","title":"Enhancements","text":"<ul> <li>list-value: show hierarchy of list node (DEV-1092) (#805) (26e88c3)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1060-2022-08-19","title":"10.6.0 (2022-08-19)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_58","title":"Bug Fixes","text":"<ul> <li>list: hide title (#801) (19fcaba)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#documentation_5","title":"Documentation","text":"<ul> <li>Update the section Linkage and annotation (#802) (5f4d52f)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_26","title":"Enhancements","text":"<ul> <li>ontology: ontology editor read mode (DEV-1183) (#799) (02b5a48)</li> <li>video: add download button and overlay to video player (DEV-1151) (#798) (ac06f6b)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_47","title":"Maintenance","text":"<ul> <li>file-representation: add credentials to all file download requests (#803) (b247f85)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1050-2022-08-15","title":"10.5.0 (2022-08-15)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_59","title":"Bug Fixes","text":"<ul> <li>login-form: keep user on same page after login (DEV-1158) (#788) (9ec6870)</li> <li>notification: fix snackbar notification only appearing for a split second (#794) (110039d)</li> <li>resource view: dsp app the resource viewer does not reload properly after deselecting a resource from the comparison viewer(Dev-1123) (#793) (f690a37)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_27","title":"Enhancements","text":"<ul> <li>archive: new archive representation view (DEV-1084) (#785) (db40310)</li> <li>audio: Make changes to audio component (DEV-1148) (#796) (0cabfe3)</li> <li>document: changes to pdf viewer (DEV-1149) (#789) (d39ed14)</li> <li>document: make changes to text component (DEV-1147) (#791) (e8adde9)</li> <li>projects: changes to nav bar (DEV-1101) (#790) (d9570b9)</li> <li>still-image: new still-image viewer (DEV-1150) (#792) (2eccd8a)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_48","title":"Maintenance","text":"<ul> <li>file-representations: adjust styling of file representation components (#797) (18aa134)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1043-2022-07-29","title":"10.4.3 (2022-07-29)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_60","title":"Bug Fixes","text":"<ul> <li>property-form: only send API request to change the guiElement for TextValue object types (#783) (109ca05)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1042-2022-07-28","title":"10.4.2 (2022-07-28)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_61","title":"Bug Fixes","text":"<ul> <li>package.json &amp; package-lock.json to reduce vulnerabilities (#775) (064a7dc)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_49","title":"Maintenance","text":"<ul> <li>deps: bump moment from 2.29.2 to 2.29.4 (#774) (2831255)</li> <li>login-form: don't redirect user if they are a member of only one project AND they are a sysAdmin (#782) (1a103ba)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1041-2022-07-28","title":"10.4.1 (2022-07-28)","text":""},{"location":"DSP-APP/contribution/release-notes/#maintenance_50","title":"Maintenance","text":"<ul> <li>routing: home button should direct to overview page (DEV-1152) (#779) (d3011ae)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1040-2022-07-27","title":"10.4.0 (2022-07-27)","text":""},{"location":"DSP-APP/contribution/release-notes/#enhancements_28","title":"Enhancements","text":"<ul> <li>overview: add overview and project tile components (DEV-984) (#777) (a64359b)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1033-2022-07-19","title":"10.3.3 (2022-07-19)","text":""},{"location":"DSP-APP/contribution/release-notes/#documentation_6","title":"Documentation","text":"<ul> <li>Update the user guide (DEV-1049) (#769) (12d0edc)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1032-2022-06-30","title":"10.3.2 (2022-06-30)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_62","title":"Bug Fixes","text":"<ul> <li>date-value-handler: add some null checks to ensure component has everything it needs before trying to use a property (#771) (4076f3e)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_51","title":"Maintenance","text":"<ul> <li>deps: bump version of js-lib (#773) (9a5252d)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1031-2022-06-23","title":"10.3.1 (2022-06-23)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_63","title":"Bug Fixes","text":"<ul> <li>link-value: add onto iri to api request (#770) (d16e5b5)</li> <li>update broken links of the main README file (#767) (a3408f6)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1030-2022-06-16","title":"10.3.0 (2022-06-16)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_64","title":"Bug Fixes","text":"<ul> <li>docs: resolve dead links to documentation (#764) (9c83b7e)</li> <li>link-value: loop through all ontologies of a project to create list of resource classes (#766) (7c824bf)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_52","title":"Maintenance","text":"<ul> <li>change codeowner before I leave (#762) (5884f51)</li> <li>link-value: recursively loop through all of a superclass's subclasses (#763) (5efed72)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_29","title":"Enhancements","text":"<ul> <li>project: proof of new project workflow concept (DEV-1001) (#765) (fb29253)</li> <li>project: proof of new project workflow concept (DEV-985) (#760) (2391f2a)</li> <li>resource: create new resource instance directly from ontology's class (DEV-959) (#755) (5f30719)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1020-2022-06-02","title":"10.2.0 (2022-06-02)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_65","title":"Bug Fixes","text":"<ul> <li>ontology: check if value exists without refreshing the page (DEV-923) (#756) (3c2409a)</li> <li>user: bring back password field and resolve loading issue (DEV-967) (#753) (694cb06)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_53","title":"Maintenance","text":"<ul> <li>form: replace matAutosize by cdkAutosize (DEV-968) (#754) (449493b)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_30","title":"Enhancements","text":"<ul> <li>list: add support for deleting child node comments (DEV-965) (#758) (50c2d17)</li> <li>text-file: add support for text file representations (DEV-920) (#751) (84975d7)</li> <li>value: improve list value (DEV-951) (#757) (4d9b747)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1010-2022-05-23","title":"10.1.0 (2022-05-23)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_66","title":"Bug Fixes","text":"<ul> <li>representation: resolve timeline issue when resizing window (DEV-819) (#741) (da985fc)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_54","title":"Maintenance","text":"<ul> <li>classes: sort resource classes by label (DEV-952) (#748) (e060cce)</li> <li>resource: display incoming links the same way as prop values (DEV-567) (#747) (7d2f6f3)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_31","title":"Enhancements","text":"<ul> <li>resource: open annotation (region) the correct way (DEV-785) (#749) (3983f9b)</li> <li>resource: open resource instances from ontology class (DEV-950) (#746) (e937b5f)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#1000-2022-05-18","title":"10.0.0 (2022-05-18)","text":""},{"location":"DSP-APP/contribution/release-notes/#breaking-changes_1","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>representation: new navigation in still-image viewer (DEV-895) (#742)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_67","title":"Bug Fixes","text":"<ul> <li>error: resolve error handler issues (DEV-938) (#744) (ceebf7b)</li> <li>ontology: unsupported property type was displayed wrong (DEV-936) (#740) (87124e9)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_55","title":"Maintenance","text":"<ul> <li>message: use only one static error component (DEV-900) (#727) (404f1f6)</li> <li>project: resolve issues in lists and with status 204 (#738) (52f904b)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_32","title":"Enhancements","text":"<ul> <li>error: add file representation error message (DEV-791) (#729) (462771e)</li> <li>error: handle 504 timeout error with snackbar (DEV-751) (#739) (8f6c409)</li> <li>hint: display hint about fulltext search (DEV-901) (#734) (f54dafc)</li> <li>link-value: UI now shows that there are no search results (#736) (88b81bf)</li> <li>ontology: select link class from all ontologies (DEV-688) (#737) (8dcdd8f)</li> <li>representation: new navigation in still-image viewer (DEV-895) (#742) (dbc75ff)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#981-2022-05-09","title":"9.8.1 (2022-05-09)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_68","title":"Bug Fixes","text":"<ul> <li>representation: disable progress indicator correctly (DEV-905) (#730) (92efbeb)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#980-2022-05-05","title":"9.8.0 (2022-05-05)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_69","title":"Bug Fixes","text":"<ul> <li>ontology-editor: bring back the gui-attr for pulldown (DEV-856) (#719) (0c2a43d)</li> <li>resource: show progress indicator until whole resource is loaded (DEV-638) (#725) (946af20)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_56","title":"Maintenance","text":"<ul> <li>clean up jsDocs and delete deprecated methods (DEV-741) (#722) (8457119)</li> <li>ontology: crop loooong ontology labels (DEV-493) (#723) (1b7384f)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_33","title":"Enhancements","text":"<ul> <li>ontology: add properties to a class from other ontologies (DEV-689 / DEV-880) (#721) (b90fc70)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#970-2022-04-22","title":"9.7.0 (2022-04-22)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_70","title":"Bug Fixes","text":"<ul> <li>package.json &amp; package-lock.json to reduce vulnerabilities (#714) (0e90296)</li> <li>text-value-as-string: links in text values (DEV-797) (#718) (af3cdc2)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_57","title":"Maintenance","text":"<ul> <li>deps: bump async from 2.6.3 to 2.6.4 (#716) (c77c208)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_34","title":"Enhancements","text":"<ul> <li>representation: implement video player incl. preview (DEV-701) (#698) (86fc2a7)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#960-2022-04-13","title":"9.6.0 (2022-04-13)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_71","title":"Bug Fixes","text":"<ul> <li>create-link-value: bring back functionality to create a new link resource instance when adding a new value to a linked resource class property (#709) (c6fe803)</li> <li>link-value: re-validate form when cancel button is clicked (#711) (7768fb9)</li> <li>ontology: display all classes in a property (DEV-564) (#701) (f90aedc)</li> <li>package.json &amp; package-lock.json to reduce vulnerabilities (#704) (5d4bb7c)</li> <li>region: highlight info of clicked region (DEV-724) (#703) (2d98369)</li> <li>resource-instance-form: disable \"next\" button when form is not valid (DEV-803) (#713) (124b953)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_35","title":"Enhancements","text":"<ul> <li>link-value: add progress indicator (DEV-605) (#708) (5efd981)</li> <li>link-value: enter newly created value automatically (#710) (5ccd18d)</li> <li>resource: upload video (DEV-204) (#577) (29201d4)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_58","title":"Maintenance","text":"<ul> <li>gh-ci: add style to the release notes (#706) (8e9e143)</li> <li>help: update support links (DEV-779) (#700) (d97113f)</li> <li>resource: display class label of incoming link (DEV-568) (#702) (aad1c5a)</li> <li>use constants from js-lib directly (DEV-799) (#712) (374b5a8)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#950-2022-04-04","title":"9.5.0 (2022-04-04)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_72","title":"Bug Fixes","text":"<ul> <li>mkdocs: update version of mkdocs (#696) (e154fa3)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_36","title":"Enhancements","text":"<ul> <li>replace-file: Replace Uploaded Files (DEV-684) (#695) (df9de8c)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#940-2022-03-23","title":"9.4.0 (2022-03-23)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_73","title":"Bug Fixes","text":"<ul> <li>help: refactor version number and fix dead link (DEV-678) (#693) (e255ac9)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_37","title":"Enhancements","text":"<ul> <li>resource-instance: add subclass creation support (DEV-553) (#686) (d0a260d)</li> <li>still-image: IIIF URL copy button (DEV-524) (#690) (b0d72a6)</li> <li>still-image: new draw region icon (DEV-569) (#689) (bee5caf)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_59","title":"Maintenance","text":"<ul> <li>clean up code, tests and packages (#694) (1ad0879)</li> <li>deps: bump node-forge from 1.2.1 to 1.3.0 (#692) (cf58030)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#930-2022-03-21","title":"9.3.0 (2022-03-21)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_74","title":"Bug Fixes","text":"<ul> <li>error: display 500 server error when the api is not healthy (DEV-475) (#673) (b374a3b)</li> <li>gravsearch: cleanse gravsearch date query (#681) (a0f34ce)</li> <li>gravsearch: fix list value restriction (DEV-486) (#682) (1eccfc0)</li> <li>permission-info: close permission info on scrolling (DEV-552) (#671) (8ac1d25)</li> <li>value: do not use linkify in text value as html (DEV-563) (#683) (3b159b5)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_38","title":"Enhancements","text":"<ul> <li>advanced-search: support subclasses in cross-resource query (#685) (fde5d99)</li> <li>archive-value: Download archive files with original filename (DEV-295) (#677) (a87dfae)</li> <li>ontology: adjust tooltip text when property is inherited (DEV-323) (#674) (d3a1e49)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_60","title":"Maintenance","text":"<ul> <li>deps-dev: bump karma from 6.3.14 to 6.3.16 (#678) (df0ef65)</li> <li>deps: bump angular to version 13 (DEV-631) (#679) (a7d2098)</li> <li>deps: bump js-lib to latest (DEV-669) (#687) (b4836b8)</li> <li>deps: bump url-parse from 1.5.7 to 1.5.10 (#676) (150e8ae)</li> <li>dockerfile: add dependabot config to keep base image up-to-date (INFRA-13) (#670) (485a57e)</li> <li>error: use error handler everywhere (DEV-475) (#688) (eabfa64)</li> <li>value: remove old date value components (DEV-633) (#684) (76233ea)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#921-2022-02-21","title":"9.2.1 (2022-02-21)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_75","title":"Bug Fixes","text":"<ul> <li>permission-info: better permission string handling (DEV-537) (#667) (8be1efe)</li> <li>resource: resource viewer is broken if fileRepresentation has restricted view (DEV-455) (#666) (6a360ac)</li> <li>still-image: fix image displayed as black square (DEV-525) (#668) (33833f6)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_61","title":"Maintenance","text":"<ul> <li>deps: bump url-parse from 1.5.4 to 1.5.7 (#664) (54a348f)</li> <li>rollbar: add environment to the config (#669) (8a587b9)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#920-2022-02-17","title":"9.2.0 (2022-02-17)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_76","title":"Bug Fixes","text":"<ul> <li>ontology-editor: display sub-properties the correct way (DEV-530) (#661) (a2cf6e0)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_39","title":"Enhancements","text":"<ul> <li>resource: display permissions (DEV-454) (#660) (13a3a49)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#910-2022-02-15","title":"9.1.0 (2022-02-15)","text":""},{"location":"DSP-APP/contribution/release-notes/#enhancements_40","title":"Enhancements","text":"<ul> <li>add-link-resource-button: Add Link Resource Button (DEV-404) (#645) (f762c3c)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_62","title":"Maintenance","text":"<ul> <li>deps-dev: bump karma from 6.3.13 to 6.3.14 (#653) (1794e47)</li> <li>deps: bump follow-redirects from 1.14.7 to 1.14.8 (#656) (8554764)</li> <li>google fonts: switches back to self hosting google fonts (#654) (938721b)</li> <li>open-sea-dragon: updates package to v3.0.0 (#658) (42bffa6)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#901-2022-02-09","title":"9.0.1 (2022-02-09)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_77","title":"Bug Fixes","text":"<ul> <li>main: bug fix in configuration file in case of prod mode (DEV-491) (#651) (a6c9e87)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#900-2022-02-02","title":"9.0.0 (2022-02-02)","text":""},{"location":"DSP-APP/contribution/release-notes/#breaking-changes_2","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>display dsp release number (DEV-420) (#644)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_78","title":"Bug Fixes","text":"<ul> <li>ontology: support subproperty in ontology editor (DEV-332) (#643) (c838043)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_41","title":"Enhancements","text":"<ul> <li>display dsp release number (DEV-420) (#644) (b6c9f1c)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_63","title":"Maintenance","text":"<ul> <li>deps: bump log4js from 6.3.0 to 6.4.1 (#648) (dd2eebe)</li> <li>deps: bump nanoid from 3.1.30 to 3.2.0 (#647) (13c6f2a)</li> <li>deps: update packages (#650) (cc60b0b)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#850-2022-01-19","title":"8.5.0 (2022-01-19)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_79","title":"Bug Fixes","text":"<ul> <li>project: better project form validation (DEV-336) (#641) (a7563a3)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_64","title":"Maintenance","text":"<ul> <li>angular: optimize ng s in dev mode (#640) (9812b9c)</li> <li>deps: fix security vulnerability (#638) (f19434e)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_42","title":"Enhancements","text":"<ul> <li>ontology: support partOf value to create book res class (DEV-180) (#634) (3051a67)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#840-2022-01-17","title":"8.4.0 (2022-01-17)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_80","title":"Bug Fixes","text":"<ul> <li>advanced search: update comparison operators in case of rich text (DEV-326) (#633) (cd01d87)</li> <li>archive representation: a resource with an archive representation now loads correctly again (#630) (299ecf9)</li> <li>date-value: do not submit in case of period button (DEV-373) (#635) (d7ac1b6)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_65","title":"Maintenance","text":"<ul> <li>clean up after bump dsp-js (#628) (374fc78)</li> <li>ontology: clean up unused code (DEV-304) (#629) (3d029a1)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_43","title":"Enhancements","text":"<ul> <li>resource: display deleted resource (DEV-299) (#632) (2c5fd80)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#833-2022-01-04","title":"8.3.3 (2022-01-04)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_81","title":"Bug Fixes","text":"<ul> <li>resource: bug fix in pdf viewer (DEV-338) (#626) (4b5d5d5)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#832-2021-12-16","title":"8.3.2 (2021-12-16)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_82","title":"Bug Fixes","text":"<ul> <li>authentication: set active datadog rum user (DEV-325) (#624) (69308e0)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#831-2021-12-15","title":"8.3.1 (2021-12-15)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_83","title":"Bug Fixes","text":"<ul> <li>upload: fix thumbnail preview (DEV-268) (#619) (7cb8505)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_66","title":"Maintenance","text":"<ul> <li>authentication: new login / logout structure (DEV-325) (#622) (e8bec98)</li> <li>fonts: delete fonts and icons (DEV-327) (#623) (08e088b)</li> <li>google fonts: switch to using fonts hosted by google (#620) (daa4167)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#830-2021-12-09","title":"8.3.0 (2021-12-09)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_84","title":"Bug Fixes","text":"<ul> <li>resource: update lastModificationDate after editing label (DEV-315) (#616) (3b9d93b)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_44","title":"Enhancements","text":"<ul> <li>still-image: display iiif url under the image caption (DEV-243) (#613) (109978f)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_67","title":"Maintenance","text":"<ul> <li>metadata: remove \"old\" implementation of the project metadata (DEV-282) (#615) (29acf3a)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#820-2021-12-08","title":"8.2.0 (2021-12-08)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_85","title":"Bug Fixes","text":"<ul> <li>ontology: bug fix in ontology form (DEV-280) (#603) (4c1bc24)</li> <li>resource: create resource iri from route only in certain cases (DEV-306) (#605) (a38abd0)</li> <li>value: fix linkify pipe (DEV-270) (#602) (f2c8d7a)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_45","title":"Enhancements","text":"<ul> <li>representation: add support for uploading and viewing archive files (DEV-18) (#600) (9bb63d7)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_68","title":"Maintenance","text":"<ul> <li>deps: update outdated angular packages (#604) (80b3f93)</li> <li>deps: use correct nginx-server (DEV-263) (#610) (ccae958)</li> <li>angular: fix budget in prod mode (#606) (5072948)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#812-2021-12-01","title":"8.1.2 (2021-12-01)","text":""},{"location":"DSP-APP/contribution/release-notes/#maintenance_69","title":"Maintenance","text":"<ul> <li>lists: adds changes required for lists to work due to the change in js-lib (#599) (ca83584)</li> <li>projects: don't use the cache when refreshing the projects list. Also renames some labels and methods to clarify that these things are for deactivating a project as opposed to deleting a project. (#597) (faebe3e)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#811-2021-11-19","title":"8.1.1 (2021-11-19)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_86","title":"Bug Fixes","text":"<ul> <li>results: display xml a better way (DEV-96) (#593) (d968f2f)</li> <li>value: bug fix in text-value-as-string (DEV-242) (#595) (0fb95ee)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#810-2021-11-18","title":"8.1.0 (2021-11-18)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_87","title":"Bug Fixes","text":"<ul> <li>fulltext-search: updates the projects list when a new project is created (DEV-212) (#586) (43fcbfa)</li> <li>ontology: resolve gui order issue (DEV-222) (#590) (4ddbf7c)</li> <li>ontology: send modified label (DEV-221) (#589) (9d7ffea)</li> <li>text-value: resource-instance-form and display-edit components now correctly display a paragraph text with line breaks (DEV-211) (#584) (be9d6f4)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_70","title":"Maintenance","text":"<ul> <li>deps: update angular to v12 (#588) (37e65a8)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_46","title":"Enhancements","text":"<ul> <li>properties: ckEditor Internal Links (DEV-118) (#591) (cac988b)</li> <li>update UI on region color change (DEV-215) (#583) (b497d0e)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#800-2021-11-10","title":"8.0.0 (2021-11-10)","text":""},{"location":"DSP-APP/contribution/release-notes/#breaking-changes_3","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>resource: new resource route (DEV-196) (#581)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_71","title":"Maintenance","text":"<ul> <li>small code improvements (#579) (d19e353)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_47","title":"Enhancements","text":"<ul> <li>resource: add additional routing for an ark url of a value (DEV-196) (#575) (c1b0b94)</li> <li>resource: new resource route (DEV-196) (#581) (3fbd94c)</li> <li>still-image: uses the color of the color property for the line color if a color property for the region exists (#580) (7680353)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#701-2021-11-05","title":"7.0.1 (2021-11-05)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_88","title":"Bug Fixes","text":"<ul> <li>error: resolve error handler in case of server error (DEV-205) (#576) (ff9d097)</li> <li>ontology: class and property name has to be unique (DEV-183) (#569) (059dd2a)</li> <li>value: display ckEditor in case of rich-text property (DEV-182) (#571) (6bfe254)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_72","title":"Maintenance","text":"<ul> <li>annotations will now only be drawn when the user is on the annotations tab (#574) (bddc2f1)</li> <li>deps: use release of ckeditor custom build (DEV-189) (#570) (fb55fd7)</li> <li>main: use version route (DEV-124) (#565) (16f26ce)</li> <li>move datadog rum methods to service (DEV-190) (#572) (77191cb)</li> <li>refactors upload-file service to use the string generated in the iiif-config file and changes the public class members in app-init service to private with getters. (#573) (c39ca5b)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#700-2021-10-28","title":"7.0.0 (2021-10-28)","text":""},{"location":"DSP-APP/contribution/release-notes/#breaking-changes_4","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>error logging: rollbar implementation (DEV-20) (#543)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_89","title":"Bug Fixes","text":"<ul> <li>ontology: use correct label (DEV-168) (#564) (70cc7d8)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_73","title":"Maintenance","text":"<ul> <li>gh: update issue templates (#562) (6d510c7)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_48","title":"Enhancements","text":"<ul> <li>error logging: rollbar implementation (DEV-20) (#543) (d0a9e3f)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#650-2021-10-21","title":"6.5.0 (2021-10-21)","text":""},{"location":"DSP-APP/contribution/release-notes/#enhancements_49","title":"Enhancements","text":"<ul> <li>ontology: bring back the name input field (DEV-157) (#559) (51e539d)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#641-2021-10-20","title":"6.4.1 (2021-10-20)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_90","title":"Bug Fixes","text":"<ul> <li>value: fix boolean value issue (#557) (4d35cd2)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_74","title":"Maintenance","text":"<ul> <li>deps: bump mkdocs from 1.1.2 to 1.2.3 in /docs (#556) (5f8213c)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#640-2021-10-20","title":"6.4.0 (2021-10-20)","text":""},{"location":"DSP-APP/contribution/release-notes/#enhancements_50","title":"Enhancements","text":"<ul> <li>ontology: delete property from resource class (DSP-1854 / DEV-28) (#499) (436c270)</li> <li>value: refactor boolean value (DEV-98) (#554) (7affa5e)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#630-2021-10-15","title":"6.3.0 (2021-10-15)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_91","title":"Bug Fixes","text":"<ul> <li>disable edit/delete action in deactivated projects (DEV-52) (#550) (d7bec78)</li> <li>properties: do not submit res instance form by adding new value (DEV-150) (#553) (99a3022)</li> <li>value: fix broken time value component (DEV-147) (#552) (fb846f9)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_51","title":"Enhancements","text":"<ul> <li>datadog RUM implementation (DEV-50) (#546) (ec59ee5)</li> <li>resource: new date picker (DEV-112) (#532) (04e4b32)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#620-2021-10-08","title":"6.2.0 (2021-10-08)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_92","title":"Bug Fixes","text":"<ul> <li>error: improve the current error handler in DSP-APP (DSP-1911) (#540) (0eb621b)</li> <li>gravsearch results now appear after page refresh (#542) (a88dd79)</li> <li>resource-instance-form: reloads cached resource to show changes made to the data model (#547) (37bb2a7)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_52","title":"Enhancements","text":"<ul> <li>ontology: display id / name in property and class (DEV-37) (#544) (0a2bcfb)</li> <li>search: add missing search resource component (DEV-95) (#548) (79abd10)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_75","title":"Maintenance","text":"<ul> <li>fulltext-search: persist fulltext search term in input field (DSP-1674) (#539) (67a52a3)</li> <li>resource: improve still image annotation form (DEV-53) (#549) (38bbe41)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#610-2021-09-20","title":"6.1.0 (2021-09-20)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_93","title":"Bug Fixes","text":"<ul> <li>annotations: empty annotations on upload of new region (#536) (075e6b1)</li> <li>links: trust the external links (DSP-1904) (#537) (303ac3d)</li> <li>resource-instance-form: resource class name now updates correctly in the event that the name was changed and the page was not refreshed (#531) (5783d27)</li> <li>resource: increase width of space between entries of incoming links (DSP-1908) (#538) (79b4d29)</li> <li>still-image-viewer: fix zoom buttons (DSP-1798) (#533) (b07ec63)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_53","title":"Enhancements","text":"<ul> <li>resource: draw regions (DSP-1845) (#524) (f08706b)</li> <li>textarea is now provided is the gui-element is a textarea (#529) (e80a4d2)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_76","title":"Maintenance","text":"<ul> <li>modules: clean up imports and npm packages (#535) (4310ff7)</li> <li>openseadragon prod build fix (DSP-1779) (#534) (0a34eaa)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#600-2021-09-08","title":"6.0.0 (2021-09-08)","text":""},{"location":"DSP-APP/contribution/release-notes/#breaking-changes_5","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>config: update config file for better iiif support (DSP-1880) (#511)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_94","title":"Bug Fixes","text":"<ul> <li>audio: sanitize audio url (DSP-1819) (#513) (35871cd)</li> <li>deps: fix security vulnerability (#514) (d793fb8)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_54","title":"Enhancements","text":"<ul> <li>config: update config file for better iiif support (DSP-1880) (#511) (b799600)</li> <li>resource: display incoming links (DSP-1846) (#507) (9c3abce)</li> <li>resource: optimize resource instance form (DSP-1256) (#518) (5151677)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_77","title":"Maintenance","text":"<ul> <li>action: migrate action module (DSP-1852) (#509) (725c45e)</li> <li>core: migrate core module from UI-lib (DSP-1853) (#505) (ea1cd55)</li> <li>deps: bump dsp-js to latest version (DSP-1883) (#521) (c956d4b)</li> <li>deps: bump dsp-ui to latest (#502) (5d79065)</li> <li>fix style in resource, search-panel and progress-indicator (DSP-1887) (#520) (854aff2)</li> <li>gh-ci: split workflow tasks (#515) (83d5874)</li> <li>login: add autocomplete to login form (DSP-1892) (#527) (dd6be15)</li> <li>project: handle mandatory keyword field (DSP-1829) (#503) (35f6e7b)</li> <li>remove CoreModule dependency (DSP-1884) (#519) (8549104)</li> <li>remove ViewerModule dependency (DSP-1890) (#525) (a99546e)</li> <li>removes ActionModule dependency (#523) (bd60f00)</li> <li>removes SearchModule dependency (#522) (269be23)</li> <li>resource: migrate viewer from UI-lib (DSP-1850) (#504) (b742a98)</li> <li>search: migrate search module (DSP-1851) (#510) (fc7ea5c)</li> <li>update imports step 1 (DSP-1882) (#516) (e7a2c4f)</li> <li>update remaining dsp-ui imports (DSP-1891) (#526) (43888a6)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#530-2021-08-12","title":"5.3.0 (2021-08-12)","text":""},{"location":"DSP-APP/contribution/release-notes/#maintenance_78","title":"Maintenance","text":"<ul> <li>header: clean up code and use notification service after login (#498) (fb6c368)</li> <li>ontology: update create ontology tooltip for unique name (DSP-1139) (#500) (946d00f)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_55","title":"Enhancements","text":"<ul> <li>resource: create link / collection resource (DSP-1835) (#501) (8060756)</li> <li>workspace: add intermediate view (DSP-1834) (#494) (d0e475a)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#521-2021-08-03","title":"5.2.1 (2021-08-03)","text":""},{"location":"DSP-APP/contribution/release-notes/#maintenance_79","title":"Maintenance","text":"<ul> <li>deps: bump dsp-ui to latest version (DSP-1838) (#495) (4adc49a)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#520-2021-08-02","title":"5.2.0 (2021-08-02)","text":""},{"location":"DSP-APP/contribution/release-notes/#enhancements_56","title":"Enhancements","text":"<ul> <li>resource: add comparison view (DSP-1796) (#490) (731ea04)</li> <li>resource: update resource's label (DSP-1801) (#492) (e2c9867)</li> <li>improve error handler and fix search results issue (DSP-1826 / DSP-1831) (#493) (fa2f4b0)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#510-2021-07-26","title":"5.1.0 (2021-07-26)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_95","title":"Bug Fixes","text":"<ul> <li>ontology: fix regex pattern in ontology form (DSP-1139) (#483) (4d0703f)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#documentation_7","title":"Documentation","text":"<ul> <li>user-guide: update user-guide about ontology (DSP-976) (#480) (e12f196)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_80","title":"Maintenance","text":"<ul> <li>ontology: better regex for onto name (DSP-1139) (#488) (ec881ef)</li> <li>resource: hide file value in properties (DSP-1261) (#484) (4ade17f)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_57","title":"Enhancements","text":"<ul> <li>resource: add document viewer with download (DSP-1791) (#485) (ce51bce)</li> <li>resource: audio player (DSP-1805) (#487) (bf372dc)</li> <li>resource: delete and erase resource (DSP-1228) (#489) (8b1fdba)</li> <li>resource: upload audio (DSP-1799) (#486) (d865df5)</li> <li>resource: upload pdf document (DSP-1776) (#481) (d916b4b)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#500-2021-07-05","title":"5.0.0 (2021-07-05)","text":""},{"location":"DSP-APP/contribution/release-notes/#breaking-changes_6","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>upload: add upload form for still images (DSP-1761) (#472)</li> <li>config: add geoname config (DSP-1672) (#473)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#documentation_8","title":"Documentation","text":"<ul> <li>ontology: update docs and show hint in ontology-form (DSP-1139) (#476) (927237d)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_58","title":"Enhancements","text":"<ul> <li>config: add geoname config (DSP-1672) (#473) (d4222ba)</li> <li>ontology: add property to res class that is in use (DSP-1631) (#477) (b18e6ec)</li> <li>ontology: change gui element for text value properties (#478) (6af1f7e)</li> <li>ontology: display description for default and existing props (DSP-1154) (#475) (8be7e55)</li> <li>upload: add upload form for still images (DSP-1761) (#472) (2f314a2)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_81","title":"Maintenance","text":"<ul> <li>deps: bump jdnconvertiblecalendar to v0.0.7 (DSP-1770) (#479) (b2ec64a)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#4111-2021-06-23","title":"4.11.1 (2021-06-23)","text":""},{"location":"DSP-APP/contribution/release-notes/#documentation_9","title":"Documentation","text":"<ul> <li>search: add advanced search user guide (DSP-1662) (#470) (30edc96)</li> <li>user-guide: fix navigation links (#468) (49c68f8)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_82","title":"Maintenance","text":"<ul> <li>fix dead links to the documentation (#471) (d7ae022)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#4110-2021-06-22","title":"4.11.0 (2021-06-22)","text":""},{"location":"DSP-APP/contribution/release-notes/#enhancements_59","title":"Enhancements","text":"<ul> <li>ontology: check if an ontology, a class or a property can be deleted (DSP-1750) (#457) (fb0c275)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_83","title":"Maintenance","text":"<ul> <li>empty landing page instead login (DSP-1756) (#466) (32cd462)</li> <li>gh-ci: update docs deployment (DSP-1741) (#463) (6415152)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#documentation_10","title":"Documentation","text":"<ul> <li>refactor documentation and set correct links (#467) (cbeb274)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#4101-2021-06-15","title":"4.10.1 (2021-06-15)","text":""},{"location":"DSP-APP/contribution/release-notes/#documentation_11","title":"Documentation","text":"<ul> <li>fix dead links and replace screenshots in project (#460) (a13b8ba)</li> <li>prepare documentation for docs.dasch.swiss (DSP-1721) (#458) (09259f1)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_84","title":"Maintenance","text":"<ul> <li>analytics: add fathom (#462) (f1e0244)</li> <li>cookie-policy: reactivate the cookie policy banner (DSP-1727) (#461) (ac99fbc)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#4100-2021-06-07","title":"4.10.0 (2021-06-07)","text":""},{"location":"DSP-APP/contribution/release-notes/#enhancements_60","title":"Enhancements","text":"<ul> <li>ontology: new cardinality workflow (DSP-1652) (#455) (f1d049c)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#491-2021-05-26","title":"4.9.1 (2021-05-26)","text":""},{"location":"DSP-APP/contribution/release-notes/#maintenance_85","title":"Maintenance","text":"<ul> <li>resource: improve list of properties in resource viewer (#453) (49d9b7f)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#490-2021-05-26","title":"4.9.0 (2021-05-26)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_96","title":"Bug Fixes","text":"<ul> <li>disable progress bar if search results are empty (DSP-1575) (#442) (8c67d60)</li> <li>resource: add if condition (DSP-1655) (#448) (656da04)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#documentation_12","title":"Documentation","text":"<ul> <li>update documentation about contribution (DSP-1657) (#449) (c25280d)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_61","title":"Enhancements","text":"<ul> <li>resource: display region annotations in still images (DSP-1585) (#445) (86e75b9)</li> <li>search: specify linked resource in advanced search (DSP-1661) (#451) (3f0d6d9)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_86","title":"Maintenance","text":"<ul> <li>deps: update packages to resolve security issues (#450) (8e927f7)</li> <li>project: resolve regex term (DSP-1654) (#444) (739beba)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#480-2021-05-21","title":"4.8.0 (2021-05-21)","text":""},{"location":"DSP-APP/contribution/release-notes/#maintenance_87","title":"Maintenance","text":"<ul> <li>CD/CI: automatically detect common vulnerabilities and coding errors (#438) (af02332)</li> <li>compiler: enable strict template (DSP-1403) (#432) (583a338)</li> <li>environment: add test-server config (DSP-1650) (#443) (a56a45b)</li> <li>Replace favicon and term Knora by DSP (DSP-1181 / DSP-1342) (#441) (3b038b6)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_62","title":"Enhancements","text":"<ul> <li>ontology: new method to change gui order (DSP-1567/DSP-1646) (#440) (dfd0ce0)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#470-2021-05-07","title":"4.7.0 (2021-05-07)","text":""},{"location":"DSP-APP/contribution/release-notes/#maintenance_88","title":"Maintenance","text":"<ul> <li>search results: disable grid view (DSP-1597) (#435) (c4726fe)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_63","title":"Enhancements","text":"<ul> <li>DMP: own resource viewer (DSP-1586) (#434) (35bd7b3)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#460-2021-04-27","title":"4.6.0 (2021-04-27)","text":""},{"location":"DSP-APP/contribution/release-notes/#enhancements_64","title":"Enhancements","text":"<ul> <li>DMP: bring back the workspace (#431) (e8b1c8e)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#452-2021-04-22","title":"4.5.2 (2021-04-22)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_97","title":"Bug Fixes","text":"<ul> <li>list: list no longer displays after deletion if it was the only list among lists (#429) (b05484e)</li> <li>project: bug fix in project member management (DSP-1563) (#425) (ac820dd)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_89","title":"Maintenance","text":"<ul> <li>ontology: disable ontology graph view (DSP-1560) (#427) (0a567d2)</li> <li>ontology: disable rti image class (DSP-1559) (#430) (48c3c76)</li> <li>ontology: rename boolean prop type (DSP-1561) (#426) (4dd23d3)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#451-2021-04-20","title":"4.5.1 (2021-04-20)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_98","title":"Bug Fixes","text":"<ul> <li>ontology: bug fix in create ontology process (DSP-1558) (#423) (bbd825b)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#450-2021-04-20","title":"4.5.0 (2021-04-20)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_99","title":"Bug Fixes","text":"<ul> <li>users: update session the correct way (DSP-690) (#419) (3ec049e)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_65","title":"Enhancements","text":"<ul> <li>project: better error handler in case a project does not exist (DSP-1401) (#421) (d7470a0)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#443-2021-04-14","title":"4.4.3 (2021-04-14)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_100","title":"Bug Fixes","text":"<ul> <li>ontology: Bug fix in ontology form (#417) (96dc804)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#442-2021-04-12","title":"4.4.2 (2021-04-12)","text":""},{"location":"DSP-APP/contribution/release-notes/#maintenance_90","title":"Maintenance","text":"<ul> <li>migrate to angular11: changes (DSP-1471) (#415) (3271ece)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#441-2021-04-08","title":"4.4.1 (2021-04-08)","text":""},{"location":"DSP-APP/contribution/release-notes/#maintenance_91","title":"Maintenance","text":"<ul> <li>migrate to angular10: changes (DSP-1415) (#412) (cec564d)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#440-2021-03-23","title":"4.4.0 (2021-03-23)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_101","title":"Bug Fixes","text":"<ul> <li>deps: package dependency build errors (DSP-1400) (#410) (17e0e1a)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_92","title":"Maintenance","text":"<ul> <li>list-editor: new list form refactor (DSP-1392) (#403) (8824682)</li> <li>ontology: improve ontology editor design (DSP-1376) (#401) (6de83b8)</li> <li>project landing page: update metadata typings (DSP-1393) (#407) (b4f101b)</li> <li>project metadata page: enable error handler (#411) (a4004ed)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_66","title":"Enhancements","text":"<ul> <li>eslint: migrate tslint to eslint (DSP-1372) (#394) (6ffc3b6)</li> <li>ontology: edit data model info (DSP-1208) (#385) (86a5fb8)</li> <li>ontology: form to create and edit property (DSP-1210) (#406) (91ebb68)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#431-2021-03-03","title":"4.3.1 (2021-03-03)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_102","title":"Bug Fixes","text":"<ul> <li>project: disable error handler in metadata request (DSP-1395) (#404) (86ebfcf)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#430-2021-03-02","title":"4.3.0 (2021-03-02)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_103","title":"Bug Fixes","text":"<ul> <li>ontology: set the cache earlier in case of only one ontology (DSP-1374) (#397) (c23ae61)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_67","title":"Enhancements","text":"<ul> <li>list-editor: insert a child node at a specific position (DSP-1301) (#395) (5107200)</li> <li>ontology: separate list of ontology properties (DSP-1364) (#391) (0f94df6)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_93","title":"Maintenance","text":"<ul> <li>deps: bump three from 0.118.3 to 0.125.0 (#402) (5ab9c49)</li> <li>gh-ci: update release please configuration (DSP-1381) (#399) (040df19)</li> <li>project landing page: use metadata endpoint to get data from backend (DSP-1199) (#400) (5dde42f)</li> <li>tests: script to find ignored tests (#396) (9ca249d)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#421-2021-02-24","title":"4.2.1 (2021-02-24)","text":""},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_104","title":"Bug Fixes","text":"<ul> <li>ontology: bug fix in list property (DSP-1368) (#390) (2fb448e)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#420-2021-02-22","title":"4.2.0 (2021-02-22)","text":""},{"location":"DSP-APP/contribution/release-notes/#enhancements_68","title":"Enhancements","text":"<ul> <li>list-editor: add deletion functionality (DSP-1334) (#378) (34c74a6)</li> <li>list-editor: delete list root node (DSP-1356) (#386) (5d5eabf)</li> <li>list-editor: reposition a child node amongst its siblings (DSP-1340) (#388) (0a9be0e)</li> <li>ontology: default language for property label (#382) (97230d1)</li> <li>ontology: edit res class info (DSP-1209) (#380) (2debd03)</li> <li>ontology: refactor list of properties in resource class (DSP-1360) (#389) (aa565b3)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#410-2021-02-12","title":"4.1.0 (2021-02-12)","text":""},{"location":"DSP-APP/contribution/release-notes/#documentation_13","title":"Documentation","text":"<ul> <li>init mkdocs and move documentation from DSP-DOCS into DSP-APP repo (DSP-380) (#379) (07f5067)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_94","title":"Maintenance","text":"<ul> <li>bumps DSP-JS to 1.3.0 and DSP-UI to 1.2.1 (#374) (7b795ee)</li> <li>deps: bump socket.io from 2.3.0 to 2.4.1 (#367) (8133d87)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_69","title":"Enhancements","text":"<ul> <li>list editor: Adds support for editing lists (DSP-741) (#365) (5b6ee4b)</li> <li>ontology: update cardinality in resource class (DSP-1266) (#377) (5a766c1)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#400-2021-01-28","title":"4.0.0 (2021-01-28)","text":""},{"location":"DSP-APP/contribution/release-notes/#breaking-changes_7","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>set up the login page as a starting page (DSP-1292) (#370)</li> <li>app+main: comment out the search and everything related to resources (DSP-1291) (#371)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_105","title":"Bug Fixes","text":"<ul> <li>dialog: Diaolog box height issue fixed (#358) (15d1182)</li> <li>routing: bring back the route handler in main component (DSP-1303) (#373) (8492c1a)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_95","title":"Maintenance","text":"<ul> <li>update pr template (DSP-1189) (#353) (f348e70)</li> <li>update the dsp-ui and dsp-js versions to the latest (#364) (66931f0)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_70","title":"Enhancements","text":"<ul> <li>display metadata on project landing page (DSP-1065) (#348) (3012ef5)</li> <li>error: Server error handler (DSP-710) (#355) (d5b77bf)</li> <li>new-resource-form: make visible the required prop fields (DSP-1115) (#342) (5885b04)</li> <li>project landing page: add copy to clipboard functionality (DSP-1248) (#368) (17bf71c)</li> <li>select-resource-class: allow accented character (DSP-1241) (#363) (8a2654b)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#refactor","title":"refactor","text":"<ul> <li>app+main: comment out the search and everything related to resources (DSP-1291) (#371) (50b1309)</li> <li>set up the login page as a starting page (DSP-1292) (#370) (46dfdbb)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#300-2020-12-18","title":"3.0.0 (2020-12-18)","text":""},{"location":"DSP-APP/contribution/release-notes/#breaking-changes_8","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>Prepare next big release (#350)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#bug-fixes_106","title":"Bug Fixes","text":"<ul> <li>header: Replace search-panel with fulltext-search (#313) (d234fa7)</li> <li>node_modules: Update dependencies (#318) (f85e4a2)</li> <li>project: Bug fix in project view when not logged-in (#339) (ce5acf1)</li> <li>workspace: Fix broken link (#306) (52b324d)</li> <li>Open external link in new tab (#297) (99f188e)</li> <li>Replaced reset buttons with cancel button (#284) (1481018)</li> <li>Update docker environment (#294) (db6d277)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#documentation_14","title":"Documentation","text":"<ul> <li>Update README (#292) (fa72ee1)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#enhancements_71","title":"Enhancements","text":"<ul> <li>Prepare next big release (#350) (6a39180)</li> <li>header: display form link when the session is active (#332) (d609bd5)</li> <li>header+dialog: create button in the header + dialog box (#320) (5e4890d)</li> <li>PR: Add template for PRs (#305) (1468ee1)</li> </ul>"},{"location":"DSP-APP/contribution/release-notes/#maintenance_96","title":"Maintenance","text":"<ul> <li>ci: Update package-name in gh actions workflow (#352) (3d9bb13)</li> <li>Update js- and ui-lib version (#293) (5409d9b)</li> </ul>"},{"location":"DSP-APP/user-guide/","title":"User Guide","text":"<p>This is the documentation for the generic DSP Web Application of the Data and Service Center for the Humanities DaSCH. You can reach the app on app.dasch.swiss.</p>"},{"location":"DSP-APP/user-guide/#getting-started","title":"Getting started","text":"<p>DSP-APP is an intuitive, easy to use web-based application placed on top of DSP-API to directly use its powerful data management functionalities. With this modern web application, the researchers can create their data models, search, browse, and work with their qualitative data as easily as they could with a desktop data management tool. In addition, data models and data will automatically follow accepted standards, be interoperable, findable, and re-usable. Researchers and scholars with small to medium data sets (e.g. PhD research, pilot project, or proof of concept) have access to long-term accessibility to keep their research data alive, guaranteeing longevity of the data.</p>"},{"location":"DSP-APP/user-guide/#login","title":"Login","text":"<p>To login, click on the LOGIN button of the header (right side), a login form will appear. Fill in the form with your credentials (user name or email and password).</p> <p>In case of a forgotten password, please contact the DaSCH team.</p>"},{"location":"DSP-APP/user-guide/#registration","title":"Registration","text":"<p>You can use the DSP-APP with restricted access as guest. Otherwise, you'll need a login. At the moment, you have to contact the DaSCH team to get your login credentials.</p>"},{"location":"DSP-APP/user-guide/#help","title":"Help","text":"<p>For any questions or help wanted, you can go to the help page, accessible from the Help button at the top right of the page (see login screen shot). Here, you can find links to the user guide, get more information about the DaSCH softwares, and get more support through different platform according to your requests.</p>"},{"location":"DSP-APP/user-guide/project/","title":"Project Administration","text":""},{"location":"DSP-APP/user-guide/project/#project","title":"Project","text":"<p>Once you are logged in, the projects overview page displays all the projects hosted at DaSCH.</p> <p>Active projects are tagged with the status \"Active\". Projects tagged as \"Deactivated\" can no longer be edited. Only a system admin is allowed to change the project status.</p> <p>The setting icon on the top right of each project tile is displayed only for projects and system admins. It leads to the project settings page.</p> <p>https://app.dasch.swiss/ - DSP-APP projects overview page.</p> <p>By clicking on the button <code>Browse Data</code>, you go to the project workspace. You get access to the project information, the data model (if you are logged in), and the project settings (if you are logged in as a project admin or a system admin).</p>"},{"location":"DSP-APP/user-guide/project/#create-a-new-project","title":"Create a new project","text":"<p>Only a system admin can create a new research project, from the projects overview page or the page System Administration &gt; All projects.</p> <p>Form to create a new project.</p> <p>This currently requires essential information such as the project name, a short name, and a shortcode (provided by DaSCH). A short project description is mandatory, it can be written in several languages as well as keywords.</p>"},{"location":"DSP-APP/user-guide/project/#define-your-project","title":"Define your project","text":"<p>From the side panel of the project workspace, as a project admin (or a system admin), you can access:</p> <ul> <li>Project Description: define your project information or edit it</li> <li>Data Model: define your data model and the lists of controlled vocabulary</li> <li>List of Resources: view all resource classes, search by resource class, and create new resource instances</li> <li>Project Settings: add users as project members</li> </ul> <p>Project members and logged-in users from other projects can also view the project description, the data model, and the list of resource classes.</p> <p>https://app.dasch.swiss/project/3ABR_2i8QYGSIDvmP9mlEw - Project management functionalities; e.g. Incunabula project. The side panel can be opened or closed by clicking on the chevron icon at the top.</p>"},{"location":"DSP-APP/user-guide/project/#project-members","title":"Project members","text":"<p>As a project admin (or a system admin), you can add users as project members. The admin can grant another user as project admin (or remove this permission), edit the user's information, change the user's password if forgotten, and remove a user from the project by clicking on the three-dot icon to the right side of the user line.</p> <p>https://app.dasch.swiss/project/3ABR_2i8QYGSIDvmP9mlEw/settings/collaboration - Project members page where project admin and system admin can add new users to the team.</p> <p>From the project workspace, as a project member, you can:</p> <ul> <li>View the project information</li> <li>View the data model</li> <li>Get the list of resource classes with the number of entries, and click on the tiles to make a search by resource class</li> <li>Create or edit resources</li> </ul>"},{"location":"DSP-APP/user-guide/project/#data-model","title":"Data model","text":"<p>The definition of the data model (ontology) is the most important step. The data model is indispensable for structuring your data. Our platform provides a tool for the easy creation of one or more project data models. First, you have to know which data and resources you want to work with. The data model can be flexible and customizable.</p> <p>The question which you have to answer before you create your data model is according to which criteria do you organize your data? In this respect it may be useful to ask yourself:</p> <ul> <li>How are your data organized?</li> <li>What are the goals you want to achieve, which research questions do you want to answer?</li> </ul> <p>As soon as you have come to a conclusion concerning the structure of your data, you're all set to create your data model.</p>"},{"location":"DSP-APP/user-guide/project/#data-model-overview","title":"Data Model Overview","text":"<p>To see the list of existing data models and to create a new one, you go to your project workspace and click on the <code>Data Model</code> button in the side panel.</p> <p></p> <p>If you click on a data model name from the list, you get access to the detailed view of the data model (= ontology editor). It can be edited only by project admins. However, any other logged-in users can see the data model in read mode only. Logged-out users don't have access yet.</p>"},{"location":"DSP-APP/user-guide/project/#create-your-data-model","title":"Create your data model","text":"<p>From the data model overview page, click on the button <code>Create New</code>. You can fill in the creation form with precise information.</p> <p></p> <p>Now you have to set a unique name (please consider the NOTE) and you can add a comment. Push the button <code>Create</code> to create your data model.</p> <p>NOTE: There are some rules for the unique name:</p> <ul> <li>must be at least 3 characters long</li> <li>shouldn't start with a number</li> <li>shouldn't start with the letter v and a number</li> <li>spaces or special characters are not allowed</li> <li>may not contain these reserved terms:<ul> <li>knora</li> <li>ontology</li> <li>salsah</li> <li>shared</li> <li>simple</li> <li>standoff</li> </ul> </li> <li>the unique name can't be changed afterward!</li> </ul> <p>The label is a combination of the project's short name and the unique name. You can replace it with any other string. </p> <p>After the creation of your data model, your page should look like this: </p>"},{"location":"DSP-APP/user-guide/project/#create-resource-classes","title":"Create resource CLASSES","text":"<p>You can then create a resource class by clicking the button <code>+ Create new class</code>: </p> <p>By clicking <code>+ Create new class</code>, a small window pops up with six basic types to choose from: </p> <p>Which type you choose depends on the data type which you need to describe. Let's assume you have pdf-documents of books and they have a number of pages. To describe this in an ontology, you create a class as <code>Document</code> by clicking on <code>Document</code>. A dialog box pops up which looks like this: </p> <p>For the label you could write Book, and you should add a preferably meaningful comment in at least one of the predefined languages English (en), German (de), French (fr) or Italian (it). Then click the <code>Submit</code> button: </p> <p>Now you have created your first class Book, as seen below: </p>"},{"location":"DSP-APP/user-guide/project/#add-properties-to-a-resource-class","title":"Add PROPERTIES to a resource class","text":"<p>Now you can add properties to your class. Your pdf of a book has a number of pages. Hence, it may be useful to define the number of pages as one of the properties of your class Book. Click on <code>+ Add Property</code> in the Book box: </p> <p>Theoretically, you have two options now. If you defined properties before, you may simply add them here (second option in the following image). If you just start adding properties, you have to choose <code>Create new from type</code>. </p> <p>By hovering over <code>Create new from type</code>, a new menu box appears: </p> <p>You can choose from a selection of the following basic types with various subtypes:</p> <ul> <li>Text (Short, Paragraph, Rich Text)</li> <li>List (Dropdown)</li> <li>Boolean (Yes/No selection; checkbox)</li> <li>Date / Time (Date, Timestamp, Time sequence)</li> <li>Number (Integer, Decimal, Page number)</li> <li>Link / Relation (Link to Class, Part of Class, External URL)</li> <li>Location (Place; a geonames-identifier)</li> <li>Shape (color)</li> </ul> <p>Since in our example you want to add a property for the number of pages of your book, you choose <code>Number</code>. Now you will see that you can either choose the type <code>Decimal</code>, <code>Integer</code> or <code>Page number</code> for your property. </p> <p>Page numbers have no decimal places, thus you will select <code>Integer</code> (or <code>Page number</code> which is a special case (s. next section)) as the type for your property. The following window pops up: </p> <p>In the field Property label add for example Number of pages, in the comment section you should add a meaningful explanation. It might also make sense to toggle <code>Required field?</code> since every PDF Document consists of a number of pages. If you toggle it, the number of pages MUST be given if you add data to the class Book - it would then be a required field, not an optional one and data could only be saved if you add the number of pages. </p> <p>If you want to define a property which can have more than one value, you should tick <code>Multiple values?</code>. For the number of pages of a book this does not make sense, but in the case you want to define a property describing which people are mentioned in your Book, the option multiple values is likely to be needed.</p> <p>Now you should see the new property in the box as seen below: </p>"},{"location":"DSP-APP/user-guide/project/#changing-cardinalities-of-properties","title":"Changing cardinalities of properties","text":"<p>Changing cardinalities in a data model involves modifying the relationships between resource classes, which can affect the number of instances of a resource class that can be associated with another resource class. In general, before changing the cardinalities, it is important to understand the affected resource classes and the relationships between them. Determine which resource classes will be affected by the change and how the relationships between them will be changed. This is especially important if data already exists!</p>"},{"location":"DSP-APP/user-guide/project/#widening-or-restricting-a-cardinality-of-a-property-without-data","title":"Widening or restricting a cardinality of a property without data","text":"<p>If there is no data yet available, widening or restricting the cardinality can be relatively straightforward. Widening the cardinality of a data model refers to changing the relationship between resource classes in a way that allows more instances of a resource class to be associated with another resource class. Restricting the cardinality of a data model refers to limiting the number of instances of a resource class that can be associated with another resource class. Here are the steps to changing the cardinality of a data model when there is no data yet available:</p> <p>In this example activate the toggle \"multiple\" for widening the cardinality: </p> <p>The pop-up window informs you that you are going to change the cardinality and you may not be able to reverse it: </p> <p>If you want to confirm the change, click \"Continue\" and the toggle will now be activated. The same procedure applies to the toggle \"required\": </p>"},{"location":"DSP-APP/user-guide/project/#widening-or-restricting-a-cardinality-of-a-property-with-data","title":"Widening or restricting a cardinality of a property with data","text":"<p>If data is already present, widening and restricting the cardinality of a property is possible if e.g., in a required property in every resource the values are available. In this case the same procedure applies as described in the sections above.</p>"},{"location":"DSP-APP/user-guide/project/#widening-or-restricting-a-cardinality-of-a-property-if-a-resource-does-not-contain-all-the-values","title":"Widening or restricting a cardinality of a property if a resource does not contain all the values","text":"<p>If values are missing in the resources and you want to adjust the cardinality so that the resources do not match the selected cardinality (e.g. set a property to required, but the field is empty), an error message is displayed. In this case, all resources must be corrected first, then the desired cardinality can be set.</p>"},{"location":"DSP-APP/user-guide/project/#widening-or-restricting-a-cardinality-of-a-property-special-cases","title":"Widening or restricting a cardinality of a property: Special cases","text":""},{"location":"DSP-APP/user-guide/project/#superclasses-and-subclasses","title":"Superclasses and subclasses","text":"<p>Changing the cardinality of a superclass and a subclass and reversing it does not work if the properties are in a subproperty relationship or the changed property in the superclass does not exist in the subclass.</p>"},{"location":"DSP-APP/user-guide/project/#correct-property-selection-in-case-of-special-classes","title":"Correct property selection in case of special classes","text":""},{"location":"DSP-APP/user-guide/project/#book-class-with-pages-as-individual-classes","title":"Book class with pages as individual classes","text":"<p>If you have single digitized pages of a book in your project, they can be defined as its own individual Still image class type. In this case the \u2014 let's call it Page \u2014 class needs two specific properties to work the correct way. One is the <code>part of</code>-property which can be found in the list of properties in the section \"Link / Relation\". This property points to the main class called Book (which should be defined first and is type of Object without representation). The second property is for the <code>page number</code> definition and is also necessary. This default property can be found in the list of properties in the section called \"Number\".</p> <p>This is how a book and the page class could look like: </p>"},{"location":"DSP-APP/user-guide/project/#define-controlled-vocabularies","title":"Define Controlled Vocabularies","text":"<p>One of the possible property types to choose from is List (= Controlled Vocabulary). Controlled vocabularies are hierarchical or non-hierarchical lexica of reference terms. Due to their normative or standardized nature, controlled vocabularies improve data quality and make database searching more efficient than free-text fields. Typical examples are keywords. In your book example, it may be useful to define a property that describes to which category of literature your pdf of a book belongs. Before you can add a property of type List to your data model, you have to define this controlled vocabulary. For its definition, you go to the data model overview page from your project workspace (Step 1): </p> <p>Click <code>Create New</code> (Step 2). A creation form appears where you enter a label and a short description, then click <code>Create</code>. </p> <p>As soon as the controlled vocabulary is created, you can continue with the definition of your data model. You can define the individually controlled vocabulary items later. How to do this will be explained below. We first focus on the definition of a property of type <code>List</code> in the data model. Currently, there is only one option for displaying a property of this type, namely Dropdown. It is capable of displaying flat as well as hierarchical lists. </p> <p>A new window opens up and as in the case of other properties you have to add a label, and a description and choose whether multiple values are allowed and/or whether this property is a required field. But in addition, you have to select the list which contains your controlled vocabulary. </p>"},{"location":"DSP-APP/user-guide/project/#how-to-define-items-in-a-controlled-vocabulary","title":"How to define items in a controlled vocabulary","text":"<p>In our example, we have created a controlled vocabulary named Category. Now, it is time to define the items. We will list some main literary genres as the first hierarchy in our controlled vocabulary. Enter the name of the node and click the <code>+</code> as shown below: </p> <p>By clicking on the small arrow on the left a second hierarchical level becomes accessible where you can add items in the same way as for the main hierarchy. </p> <p>It is possible to add controlled vocabulary items at any time. You may rearrange the order of your items and add a new item at a specific position in the list. </p>"},{"location":"DSP-APP/user-guide/project/#remove-properties-from-a-resource-class","title":"Remove PROPERTIES from a resource class","text":"<p>To remove a property, hover over the property which you want to remove. By doing so you see a white x with a black background (remove button) appearing, it is highlighted in yellow in the image below: </p> <p>Be aware, that you can only remove a property if there are no data yet! If you click the remove button, the property is removed and a green box pops up for a short time: </p>"},{"location":"DSP-APP/user-guide/project/#delete-a-property","title":"Delete a property","text":"<p>In order to really delete a property you have to go to the <code>Properties</code> section as shown below. Click on <code>Properties</code>, and afterwards click on the waste basket sign of the property which you intend to delete.  Be aware, you can only delete properties which are NOT used in a resource class and if they were never used! This means an already used properties even with deleted values cannot be deleted!</p>"},{"location":"DSP-APP/user-guide/project/#delete-a-class","title":"Delete a CLASS","text":"<p>To delete a resource class, click on the three dots in the box of the class which you want to delete. </p> <p>The following box appears and you then have to click <code>Delete resource class</code>. </p> <p>In the alert window popping up, you click the red button <code>Delete</code>. Afterwards, the resource class is deleted.</p>"},{"location":"DSP-APP/user-guide/project/#delete-a-data-model","title":"Delete a data model","text":"<p>To delete a whole data model, you have to click the button <code>Delete</code> on the right-hand side in the section <code>Data model configuration</code>. </p> <p>In the alert window appearing, you click the red button <code>Delete</code>. The data model is now deleted.</p>"},{"location":"DSP-APP/user-guide/project/#an-example","title":"An example","text":"<p>In the following example we focus on how we can reflect about our data before building our model and how a data model can relate classes to each other.</p>"},{"location":"DSP-APP/user-guide/project/#preparing-a-data-model","title":"Preparing a data model","text":"<p>You have interviewed 20 people and recorded the interviews. During these interviews you talked about photographs. Among all the data collected during the project, the most important are:</p> <ul> <li>audio-files of the interview</li> <li>transcribed text of conversations (or transcribe the files within the web application)</li> <li>photographs</li> <li>data about the person you interviewed</li> <li>location where the photograph was taken</li> </ul> <p>The following Diagram 1 shows the initial situation:</p> <p></p> <p>Diagram 1: the initial situation.</p> <p>The second step will be to consider the hierarchy of the data. How your hierarchy looks like depends on which criteria your data were organized and what your purposes are. It might even be possible that you don\u2019t need a hierarchy as shown in Diagram 1.</p> <p>In our case, we know that the transcripts are linked to the audio-interviews, persons are linked to interviews and audio-interviews, photographs are linked to audio-interviews and transcripts plus locations are linked to the photographs.</p> <p>How the practical arrangement finally looks like depends on your purposes and preferences. For example we could choose to arrange the data with regards to their audio source as seen in Diagram 2:</p> <p></p> <p>Diagram 2: Focus on the audio-interview.</p> <p>However, we can also prefer another visualization which focuses on the transcript (Diagram 3):</p> <p></p> <p>Diagram 3: Focus on the transcript.</p> <p>We could think of many different hierarchies, lastly it depends on what serves your purposes best. Our next step will be to implement the hierarchy in Diagram 3 in our data model.</p>"},{"location":"DSP-APP/user-guide/project/#creating-the-data-model","title":"Creating the data model","text":"<p>1. Create resource classes First, we create the resource classes that constitute the basic containers of our data model as depicted in Diagram 1: </p> <p>2. Relate resource classes According to our Diagram 3, we determined the transcript to be the center of the hierarchy. In the transcript, the photographs are mentioned, the interviewed person is linked to the transcript and the audio-interview as the raw resource is linked to the transcript too. Thus, we have to add photograph, audio-interview and person as properties to the transcript.</p> <p>In the box of Transcript click on <code>+ Add property</code>: </p> <p>In the window that appears we hover over <code>Create new from type</code>, in the appearing box we hover over <code>Link</code> and in the next appearing box we click on <code>Resource class</code>. </p> <p>By clicking on <code>Resource class</code>, the following window pops up: </p> <p>We can now fill in <code>Property label</code> Audio, and in <code>Select resource class</code> we choose from the list <code>Audio-Interview</code>. We should add a comment in at least one language to describe the property. It might also make sense to toggle <code>Required field?</code> since a transcript has to be extracted from the audio-interview: </p> <p>Finally, we click the <code>Add to class</code> button as seen below: </p> <p>We should then see the new property, which is a class added to the Transcript properties: </p> <p>After the definition of the whole hierarchy as seen in Diagram 3, the data model looks like this: </p> <p>The resource class Transcript has the resource classes Audio-Interview, Photograph and Person as linked properties. Furthermore, the resource class Photograph has the class Location as linked property. In such a way we reflect the central position of Transcript in our data model.</p>"},{"location":"DSP-APP/user-guide/publication/","title":"Publication","text":"<p>\u26a0 NOT YET IMPLEMENTED</p>"},{"location":"DSP-APP/user-guide/system/","title":"System Administration","text":"<p>\u26a0 Only for System administrator</p> <p>System administrators can get an overview of all projects and all users stored in DSP.</p> <p>System administration part is accessible from the user menu in the header.</p>"},{"location":"DSP-APP/user-guide/system/#all-projects","title":"All projects","text":"<p>System admin gets the list of all activated projects as well as archived projects. It is possible to create a new research project, the required information must be filled in. For each project, the system admin has the possibility to edit the project information and archive the project.</p> <p>Overview of all activated projects, the list of archived projects is displayed below.</p>"},{"location":"DSP-APP/user-guide/system/#all-users","title":"All users","text":"<p>System admin gets the list of all activated and suspended users registered in DSP. New users can be created from this page only (button \"Create new\").</p> <p>Overview of all users where the system admin has access to several actions.</p> <p>For each user, the system admin has access to several actions:</p> <ul> <li> <p>Add as system admin or Remove as system admin: add or remove the user role of system admin</p> </li> <li> <p>Edit user: edit the user information (e.g. first name, last name, default language)</p> </li> <li> <p>Change user's password: the system admin can update the user's password if the user has forgotten it, the system admin must enter his password first (\u26a0 a reset password functionality will be implemented in a later version on the login page)</p> </li> </ul> <p></p> <ul> <li>Manage project membership: the system admin can assign the selected user to one or several project, or remove the user from a specific project</li> </ul> <p></p> <ul> <li>Suspend user: the user is deactivated and no longer has access to DSP-APP. The system admin can reactivate it at any time.</li> </ul>"},{"location":"DSP-APP/user-guide/user/","title":"User Profile","text":""},{"location":"DSP-APP/user-guide/user/#your-user-profile-and-projects","title":"Your user profile and projects","text":"<p>To change your personal information as well as your default language used by the interface, you can edit your profile by clicking Edit my profile. Currently, the avatar image comes from gravatar.com (go on their website to register if you want your customized user photo).</p> <p>https://app.dasch.swiss/ - Overview of your user profile and your projects.</p> <p>The list of your projects is accessible from here, click on one project to get more information about it. As a project admin, you can also edit or archive your projects, and as a system admin, you can additionally create new projects.</p> <p>Edit your user profile. The username, the email address, and the admin rules are not editable.</p>"},{"location":"DSP-APP/user-guide/user/#your-account","title":"Your account","text":"<p>As a matter of security, it is strongly recommended to update your password at least once a year. On your account page, you can update your password.</p> <p>https://app.dasch.swiss/account - Update your password and deactivate your user account.</p> <p>\u26a0 You can delete (deactivate) your own user account. However, only a system administrator will be able to reactivate it.</p>"},{"location":"DSP-APP/user-guide/data/search-results/","title":"Search results","text":"<p>The results of the search are displayed in an organized list. You can select one result at a time to get more information.</p> <p>Search result 1: Simple list of results, similar to Google's list of results.</p> <p>\u26a0 It is not possible to sort or order by criteria when searching with the full-text search, use the advanced search instead to get back sorted results.</p>"},{"location":"DSP-APP/user-guide/data/search/","title":"Search and browse","text":"<p>DSP-APP offers the possibility for the user to search in 3 different ways: full-text search, advanced search, and expert search (Gravsearch query). The search bar is always available in the header of each page, whether logged in or out.</p>"},{"location":"DSP-APP/user-guide/data/search/#full-text-search","title":"Full-text search","text":"<p>DSP offers a full-text search that searches through all text values and labels of resources based on one or several terms (or phrase) entered in the search bar. It returns data that matches the search conditions. By default, the search is performed in all projects stored in DSP. However, it is possible to filter by project using the \"Filter by project\" menu on the left side of the search bar.</p> <p>https://app.dasch.swiss - Search 1: Search in one specific project or all projects</p> <p>When clicking on the search bar, the search history panel is displayed. The last 10 searches are registered. Click on one search item to perform the same full-text search again. It is also possible to clear the search history list (Clear list button at the bottom of the panel or the x at the end of each line).</p> <p>Search history list is accessible for the full-text search from any webpage.</p>"},{"location":"DSP-APP/user-guide/data/search/#search-rules","title":"Search rules","text":"<ul> <li>A search value must have a minimum length of 3 characters. If your search term has less than three characters (e.g. <code>is</code>), please add two asterisks (<code>*is*</code>).</li> <li>All terms are interpreted as lowercase characters. E.g. My dearest Maria is interpreted as my dearest maria.</li> <li>By default, the logical operator <code>OR</code> is used when submitting several search terms. I.e. the name <code>George Sand</code> is searched as <code>george</code> OR <code>sand</code>. The database will return all results that include the terms <code>George Sand</code>, <code>george</code>, or <code>sand</code>. To find the exact name <code>George Sand</code>, the term must be surrounded by quotes: <code>\"George Sand\"</code>.</li> <li>Each term separated by a whitespace is considered a single term. E.g. the term <code>mon petit chat</code> will be searched as <code>mon</code> OR <code>petit</code> OR <code>chat</code>. To find the exact phrase <code>mon petit chat</code>, the phrase must be surrounded by quotes: <code>\"mon petit chat\"</code>.</li> </ul>"},{"location":"DSP-APP/user-guide/data/search/#special-syntax","title":"Special syntax","text":"<p>Special characters can be used in order to search for specific text patterns.</p> <p>Here is the list of characters with special meaning: <code>+, -, &amp;&amp;, ||, !, (, ), [, ], {, }, ^, \", ~, *, ?, :, \\, /</code></p> <p>For more information about them, please read the Lucene documentation.</p> <p>If you want to search for these special characters explicitly, note that the punctuation marks <code>,</code> and <code>.</code> are NOT eliminated and stay with the term where they occur. E.g. <code>To be, or not to be, that is the question.</code> -&gt; when searching for <code>be</code> the term <code>be,</code> (comma included) won't be found (and thus also not the entire phrase). We recommend to use the special character <code>*</code> - thus <code>be*</code> - to find all occurrences of a term. Another example: If you search for the term <code>(1995)</code> that includes parenthesis in this case, you have to search for <code>*1995*</code>.</p> <p>Focus on the most common used characters:</p> <ul> <li><code>*</code>: The askerisk can be used as a wildcard symbol for zero, one, or multiple characters. E.g. <code>pari*</code> will yield results such as <code>Paris</code>, <code>Parisian</code>, <code>parity</code>, <code>parish</code>, etc.</li> <li><code>?</code>: The question mark can be used as a wildcard symbol for a single character. E.g. <code>Bern?</code> will yield results such as <code>Berne</code>, <code>Bernt</code>, etc.</li> <li><code>\"\"</code>: Quotation marks allow searches for the whole pattern. E.g. <code>\"vitt\u0101ni agne\"</code> yields a result for the exact term <code>vitt\u0101ni agne</code>. If your search term consists of more than one word and you intend to do an <code>AND</code> search, please use quotation marks.</li> </ul> <p>In order to make searching easier and independent of special characters, we recommand to use the advanced search. It will narrow down the search and accept special letters or characters. E.g. the exact writing <code>r\u0101m\u0101ya\u1e47\u012b</code> will be accepted and found.</p>"},{"location":"DSP-APP/user-guide/data/search/#include-special-characters-in-the-search","title":"Include special characters in the search","text":"<p>If one of the above characters should be included in the search - without any special meaning - it needs to be escaped by the character <code>\\</code> .</p> <p>E.g. If you want to search for Notre-Dame de Paris, you should type <code>\"Notre\\-Dame de Paris\"</code>.</p>"},{"location":"DSP-APP/user-guide/data/search/#conversion","title":"Conversion","text":"<p>Alphabetic, numeric, symbolic, and diacritical Unicode characters which are not part of the first 127 ASCII characters (the \"Basic Latin\" Unicode block) are converted into their ASCII equivalents, if one exists. Thus, the full text search is set such that e.g. <code>\u00e9</code>, <code>\u00e4</code>, <code>\u0161</code> are converted into <code>e</code>, <code>a</code>, and <code>s</code>. This means that a search for <code>\u0161umma</code> will yield results for <code>\u0161umma</code>, <code>summa</code>, <code>\u1e63umma</code>, <code>\u015bumma</code>, etc. If this is not what you need, please use the advanced search option instead.</p> <p>For special characters that cannot be converted to ASCII equivalents, we suggest to replace the respective special character by an asterisk: Such an example is <code>r\u0325tasya</code>, where the <code>r\u0325</code> must be replaced either by <code>rr</code> or - simpler - by <code>*</code>: thus searches for <code>rrtasya</code> or <code>*tasya</code> will yield the intended search result, but not <code>rtasya</code>.</p>"},{"location":"DSP-APP/user-guide/data/search/#advanced-search","title":"Advanced search","text":"<p>The advanced search allows the creation of complex queries using a form. The advanced search can be accessed from the data browser of any project. The form creates a string representing a Gravsearch (SPARQL) query to be sent to DSP-API.</p> <p>A query consists of the following elements:</p> <ul> <li>selection of the data model (if you have more than one data model within your project)</li> <li>selection of a resource class belonging to the selected data model (optional)</li> <li>specification of properties, comparison operators, and values (optional).</li> </ul> <p>Although the selection of a resource or a property or both are optional, either a resource class has to be selected or at least one property has to be specified, otherwise, the search button stays inactive.</p> <p></p>"},{"location":"DSP-APP/user-guide/data/search/#how-do-i-sort-the-search-results","title":"How do I sort the search results?","text":"<p>You can open the \"Order by\" dropdown, by selecting the checkboy of the property, you specify that it will be sorted by. The order of the entries determines which criterion should be used for sorting first. You can reorder them by clicking and dragging them.</p> <p>https://github.com/dasch-swiss/dsp-das/assets/136320187/e43bb484-91b9-48ad-a59d-0e7c79a4df1b</p>"},{"location":"DSP-APP/user-guide/data/search/#comparison-operators","title":"Comparison Operators","text":"<p>Depending on the value type of the chosen property, one or more of the following comparison operators can be selected:</p> <ul> <li><code>is equal to</code>: value equality: same number, exact same string, an overlap of date periods, same target resource.</li> <li><code>is not equal to</code>: value inequality: not same number, not exact same string, no overlap of date periods, not same target resource.</li> <li><code>is greater than</code>: value comparison: number is greater than search value, date period begins after search value.</li> <li><code>is greater than or equal to</code> value equality/value comparison: number is equal to or greater than search value, an overlap of date periods or date period begins after search value.</li> <li><code>is less than</code>: value comparison: number is less than search value, date period ends before search value.</li> <li><code>is less than or equal to</code>: value equality/value comparison: number is equal to or less than search value, an overlap of date periods or date period ends before search value.</li> <li><code>exists</code>: value for the given property exists.</li> <li><code>not exists</code>: value for the given property doesn't exist.</li> <li><code>is like</code>: search value is contained in a text using the SPARQL REGEX function (supports regular expressions).</li> <li><code>matches</code>:<ul> <li>text property: search value matches the text (Lucene Query Parser Syntax).</li> <li>linking property: matches the specified linked resource.</li> </ul> </li> </ul>"},{"location":"DSP-APP/user-guide/data/search/#search-examples","title":"Search Examples","text":""},{"location":"DSP-APP/user-guide/data/search/#is-like-regular-expressions","title":"is like (regular Expressions)","text":"<p>The <code>is like</code> operator lets the user search for texts that are like the search value via the support of regular expressions In this example, all books are found whose title contains \"Narrenschiff\" followed by a space and some other characters like \"(lat.)\" or \"(dt.)\".</p> <p>For general information about regular expressions, see this interactive tutorial. </p> <p></p>"},{"location":"DSP-APP/user-guide/data/search/#matches-lucene-parser-syntax","title":"matches (Lucene Parser Syntax)","text":"<p>Used with a text property, the <code>matches</code> operator lets the user search for texts that match the search value, supporting Lucene Query Parser Syntax. In this example, all persons are found whose names contain \"Ja\" and \"ob\" with a character in between (represented by the wildcard \"?\"). This search finds \"Jacob\" as well as \"Jakob\".</p> <p>Note the difference between regular expressions and Lucene parser syntax!</p> <p></p> <p></p>"},{"location":"DSP-APP/user-guide/data/search/#matches-specifying-a-linked-resource","title":"matches (specifying a Linked Resource)","text":"<p>Used with a linking property, the <code>matches</code> operator lets the user search for a linked resource that matches the specified properties. In this example, the user writes a query looking for all letters that have an author that:</p> <ol> <li>was born after January 1st, 1650</li> <li>whose family name is \"Bernoulli\"</li> </ol> <p>This is different from the \"is equal to\" operator that lets the user specify a certain person (selected from a list).</p> <p></p>"},{"location":"DSP-APP/user-guide/data/search/#expert-search","title":"Expert search","text":"<p>The expert search can be more powerful than the advanced search, but requires knowing how to use the query language Gravsearch (based on SparQL and developed by the DaSCH team). With Gravsearch, expert users can build searches by combining text-related criteria with any other criteria.</p> <p>For example: you could search for a page in a manuscript that contains a certain element and also mentions a person, who lived in the same country as another person, who is the author of another work.</p> <p>https://app.dasch.swiss - Search 3: Expert search is a text area in which you can create Gravsearch queries. Here is the default example you can find in the app.</p> <p>To learn Gravsearch, go to the DSP-API documentation \u2192 Gravsearch</p>"},{"location":"DSP-APP/user-guide/data/start/","title":"Data management","text":"<p>Once your data model is ready, you're able to add data. The DSP-APP offers several possibilities to add data, whether you are starting from scratch or importing data from another program.</p>"},{"location":"DSP-APP/user-guide/data/start/#start-from-scratch","title":"Start from scratch","text":"<p>When a project starts from scratch, you will enter and generate new data directly in the DSP-APP itself. Generating new data can be done one by one with a form at the moment:</p> <ul> <li>Upload files, e.g., an audio file, photography, a video, or a document</li> <li>Augment the metadata</li> </ul>"},{"location":"DSP-APP/user-guide/data/start/#create-new-resource-instances","title":"Create new resource instances","text":"<p>To create a new resource instance, you go to your project workspace and find the desired resource class in the side panel from which you want to create a new instance.</p> <p>Your resource classes are listed in the side panel of your project workspace.</p> <p>Fill in the form and upload the file if requested (depending on the type of resource). Please, note that the required fields are marked with an asterisk <code>*</code> after the property label. Click on <code>Save</code> to create the new resource instance. If you cannot click on <code>Save</code>, it means that a required field has not been filled in.</p> <p>Create a new resource instance e.g. a book</p> <p>Please, note that the image, video, and audio files must be in one of the required file types supported by the database. The supported types are listed in the upload section of the form.</p>"},{"location":"DSP-APP/user-guide/data/work-on-data/","title":"Work on your data","text":"<p>Once you have found the desired resources, you can (re)view them and annotate the resource itself, the media file, or single metadata values. If you select more than one resource, you can compare them in a side-by-side view or link them.</p>"},{"location":"DSP-APP/user-guide/data/work-on-data/#data-permissions","title":"Data permissions","text":"<p>In order to know what you are allowed to see or do with the selected resource, please check the permissions that are granted for your user role. You can find more details about the permissions in the documentation of DSP-API.</p> <p>If you don't have the permissions you were supposed to get, please contact the DaSCH team.</p> <p>Check the resource permissions you are granted.</p>"},{"location":"DSP-APP/user-guide/data/work-on-data/#display-data","title":"Display data","text":""},{"location":"DSP-APP/user-guide/data/work-on-data/#display-a-resource","title":"Display a resource","text":"<p>DSP-APP offers different resource views for different media types (images, videos, audio, archives, text, and document files). You can access the resources from the list of search results. Depending on the media type, DSP-APP offers different tools to work on the resource. Additionally, you can work on the resource directly, e.g, mark regions of interest on images and documents.</p> <p>Each media viewer offers different tools and functionalities, either displayed in the bottom toolbar (e.g. zoom, open in fullscreen button, play button, etc. - captioned in orange thereafter) or in the menu - the three-dot button on the bottom-left side (e.g. copy the ARK URL to the clipboard, download/replace the file, open the file in a new tab - captioned in red thereafter).</p> <p>Single resource view. The resource type in this example is \"Page\" and an image viewer displays the photograph of the manuscript page.</p> <p>Everything about the resource is displayed below the media viewer (when there is one). All the information about the resource itself (e.g. type, label, permissions, creator, date of creation, etc.), the data (properties and values), and different functionalities such as editing, deleting, sharing the resource. You can find more information about the functionalities in the following sections.</p> <p></p>"},{"location":"DSP-APP/user-guide/data/work-on-data/#audio-file","title":"Audio file","text":"<p>Supported file types: mp3, wav</p> <p></p>"},{"location":"DSP-APP/user-guide/data/work-on-data/#image-file","title":"Image file","text":"<p>Supported file types: jpeg, jp2, jpg, tiff, tif, png</p> <p>In a resource of type \"still image\", you're able to draw regions on the image and annotate this region. Usually, a still image resource is used for book pages, photographs, postcards, letters, etc.</p> <p>When you open a resource that contains an image, it is displayed in a viewer. Several functionalities are accessible from the image viewer, e.g. zoom in/out, copy the IIIF link, replace the image or draw a region on the image.</p> <p></p> <p>For users without permission to see a restricted image, a notification will warn them at the top of the image viewer.</p> <p></p> <p>To access the regions, go to the annotation panel. You can click on an existing region in the image viewer, the focus of the page will be redirected to the annotation information.</p> <p>Access the annotation panel from the resource toolbar.</p>"},{"location":"DSP-APP/user-guide/data/work-on-data/#document-file","title":"Document file","text":"<p>Supported file types: pdf, doc, docx, xls, xlsx, ppt, pptx</p> <p></p>"},{"location":"DSP-APP/user-guide/data/work-on-data/#text-file","title":"Text file","text":"<p>Supported file types: csv, txt, xml, xsd, xsl</p> <p></p>"},{"location":"DSP-APP/user-guide/data/work-on-data/#video-file","title":"Video file","text":"<p>Supported file types: mp4</p> <p></p>"},{"location":"DSP-APP/user-guide/data/work-on-data/#archive-file","title":"Archive file","text":"<p>Supported file types: 7z, gz, gzip, tar, tgz, z, zip</p> <p></p>"},{"location":"DSP-APP/user-guide/data/work-on-data/#display-resource-properties","title":"Display resource properties","text":"<p>By default, only important properties are shown in the resource viewer. To display them all, click on the \"unfold\" button in the resource toolbar.</p> <p>Show or hide properties from the toolbar.</p> <p>To get more information about the property value, i.e. date of creation and author name, hover over the value and then over the info button.</p> <p>Get the creation date and the author name of the value.</p>"},{"location":"DSP-APP/user-guide/data/work-on-data/#display-a-value-comment","title":"Display a value comment","text":"<p>To display the existing value comment, hover over the property value and click on the comment button (3rd icon from the left).</p> <p>Hover over the property value to see if there is a comment and display it.</p>"},{"location":"DSP-APP/user-guide/data/work-on-data/#display-and-compare-several-resources","title":"Display and compare several resources","text":"<p>You can compare 2 or more resources of any type at the same time side by side. From the search result list, select your resources of interest by checking the checkbox (right side of each result) and clicking on the compare button on the right-side tile.</p> <p>Example: Select 3 resources and compare them.</p> <p>To keep in mind: The more you compare, the smaller the resource viewer for each will be. You can deselect one or more resources to remove them from the compare viewer.</p> <p>Visualise your selected resources side-by-side. You can compare 2 images with an object without representation for instance.</p>"},{"location":"DSP-APP/user-guide/data/work-on-data/#add-new-data","title":"Add new data","text":"<p>\u26a0 You must have the granted permission to proceed.</p>"},{"location":"DSP-APP/user-guide/data/work-on-data/#add-a-resource","title":"Add a resource","text":"<p>See section Create new resource instances.</p>"},{"location":"DSP-APP/user-guide/data/work-on-data/#add-a-property-value","title":"Add a property value","text":"<p>You can create a new property value if your data model allows it. The value should have a cardinality of 0-1, 0-N or, 1-N. A \"plus\" button is displayed to the right of the label or after the first value field. You fill in the form field and save the changes by clicking on the floppy disk button. You can undo (back arrow button) or cancel the changes (x button).</p> <p>Add a new property value.</p> <p>Save or undo the changes you made.</p> <p>If your property is linked to another resource, you can search for an existing value by typing the first three letters of the resource label you are looking for. You can also create a new resource instance by clicking on the first option in the drop-down menu, <code>Create new: xxx</code>.</p> <p></p>"},{"location":"DSP-APP/user-guide/data/work-on-data/#add-an-image-region","title":"Add an image region","text":"<p>To create a new region on an image, you click on the button <code>Draw a region</code> in the toolbar, then select the region you want on the image.</p> <p>Select a region on the image with the drawing tool.</p> <p>Enter the information about the region, an informative label and a description as a comment. You can change the color.</p> <p>Fill in the form about the selected region.</p> <p>The new region information is displayed after the image viewer. You can edit or delete if you have the granted permissions. A region has also an AKR URL you can copy and share.</p> <p>A new region has been created.</p>"},{"location":"DSP-APP/user-guide/data/work-on-data/#edit-your-data","title":"Edit your data","text":"<p>\u26a0 You must have the granted permission to proceed.</p>"},{"location":"DSP-APP/user-guide/data/work-on-data/#edit-a-resource","title":"Edit a resource","text":"<p>To edit the resource label, open the resource menu on the right-side of the toolbar and click on <code>Edit label</code>.</p> <p></p>"},{"location":"DSP-APP/user-guide/data/work-on-data/#edit-a-property-value","title":"Edit a property value","text":"<p>You can edit a property value from the resource viewer. Hover over the value and click on the edit button.</p> <p>Edit button when mousing over the value.</p> <p>You edit your value by changing the text content, searching for another resource label, or creating a new resource instance. Don't forget to save your changes (floppy disk button) or undo them (back arrow button) to leave the edit mode.</p> <p></p> <p>It is the same process to add, edit or delete a comment to the value.</p>"},{"location":"DSP-APP/user-guide/data/work-on-data/#delete-your-data","title":"Delete your data","text":"<p>\u26a0 You must have the granted permission to proceed.</p>"},{"location":"DSP-APP/user-guide/data/work-on-data/#delete-or-erase-a-resource","title":"Delete or erase a resource","text":"<p>To delete a resource, there are 2 possibilities:</p> <ol> <li>Delete resource: the resource is not searchable or findable in DSP-APP anymore but the data still exists in the database.</li> <li>Erase resource: the resource is permanently deleted from the database, it will be impossible to get it back.</li> </ol> <p>Delete or erase a resource.</p>"},{"location":"DSP-APP/user-guide/data/work-on-data/#delete-a-property-value","title":"Delete a property value","text":"<p>You can delete a property value. Hover over the value and click on the delete button. You have to confirm your choice. It is possible to comment on the deletion of the value in the confirmation pop-up window to explain why it is being deleted.</p> <p>Delete a property value.</p>"},{"location":"DSP-APP/user-guide/data/work-on-data/#annotate-and-link-data","title":"Annotate and link data","text":"<p>The main feature of the flexible data storage that DSP-APP uses is the possibility to annotate and link resources and their metadata. An annotation can be a small note about a date like \"Not sure about the birthdate of this person. There's another date mentioned in the resource XYZ\". Inside the note, it will be possible to link to another resource.</p> <p>Links in DSP-APP are always bi-directional. If you link resource A with resource B, then resource B knows about this connection. If you find resource B, you have the connection to resource A as well.</p> <p>It is possible to link resources of the same project or from 2 different projects.</p> <p>DSP-APP offers two ways to link data:</p> <ol> <li> <p>Internal linkage: it allows you to create a direct link between 2 resources. The label of the linking resource (source) will appear in the \u201eincoming links\u201c section of the targeted resource. You will choose this option when you want to embed the link in a text.</p> </li> <li> <p>Link object:  it allows you to create an annotation (the description of the link object) that can point to one or more resources. You will prefer this option if you want the link to exist and describe it.</p> </li> </ol>"},{"location":"DSP-APP/user-guide/data/work-on-data/#internal-linkage","title":"Internal linkage","text":"<p>To link 2 resources (A is an image and B is a document in the example), you go to your resource A that will be linked, open the Share menu and click on the button <code>Copy internal link on clipboard</code>. You have copied the internal link of your resource A that will be used to make the link with your resource B.</p> <p>Copy the internal link of the resource A.</p> <p>Go to your resource B. You click on the edit button of the property value where you want to add the link (by hovering over the value content). This value must be of type rich text.</p> <p>Edit the property value of type rich text to add the link.</p> <p>You write and select a word or a group of words you want to attach the link to, then click on the Link button in the toolbar of the text editor, paste the internal link of resource A here, and click on Save.</p> <p>Add the link in your text and save.</p> <p>The word (or the group of words) is now highlighted in blue-grey and is clickable.</p> <p>The link has been added to your text.</p>"},{"location":"DSP-APP/user-guide/data/work-on-data/#link-object","title":"Link Object","text":"<p>To create a link object, the process starts from the search result list. You select 2 or more resources from the list and click on the button Create a link object from this selection.</p> <p>Select the resources to link.</p> <p>You fill out the form indicating the project in which you want to register the link object, as well as a label to identify it. Optionally, you can add a comment (annotation) to describe this collection of resources. Then, click on Create.</p> <p>Fill in the form about the new link object.</p> <p>The linked resources are listed in the <code>has Link to</code> property of the link object resource viewer. The label of your link object is searchable through a full-text search.</p> <p></p> <p>It is possible to add other resources later on by clicking on the <code>+</code> button in the <code>has Link to</code> property section.</p>"},{"location":"DSP-APP/user-guide/data/work-on-data/#share-your-data","title":"Share your data","text":"<p>Each resource of your dataset gets an ARK URL (Archival Resource Key), a persistent identifier that will allow you to permanently cite your resource in papers, conference presentations, books, etc.</p> <p>You will find it in the Share menu of the resource toolbar, click on <code>Copy ARK to clipboard</code> to copy and paste it wherever you want.</p> <p>Copy ARK URL.</p>"},{"location":"DSP-TOOLS/","title":"Overview","text":""},{"location":"DSP-TOOLS/#dsp-tools-documentation","title":"DSP-TOOLS Documentation","text":"<p>DSP-TOOLS is a Python package with a command line interface  that helps you interact with a DSP server.  A DSP server is a remote server or a local machine  where the DSP-API is running on. </p> <p>To install the latest version, run:</p> <pre><code>pip3 install dsp-tools\n</code></pre> <p>To update to the latest version run:</p> <pre><code>pip3 install --upgrade dsp-tools\n</code></pre> <p>The two main tasks that DSP-TOOLS serves for are:</p> <ul> <li>Create a project with its data model(s), described in a JSON file, on a DSP server   In order to archive your data on the DaSCH Service Platform,    you need a data model that describes your data.   The data model is defined in a JSON project definition file    which has to be transmitted to the DSP server.    If the DSP server is aware of the data model for your project,    conforming data can be uploaded into the DSP repository.</li> <li>Upload data, described in an XML file, to a DSP server that has a project with a matching data model   Sometimes, data is added in large quantities.    Therefore, DSP-TOOLS allows you to perform bulk imports of your data.   In order to do so, the data has to be described in an XML file.    DSP-TOOLS is able to read the XML file    and upload all data to the DSP server.</li> </ul> <p>All functionalities of DSP-TOOLS revolve around these two basic tasks. </p> <p>DSP-TOOLS provides the following functionalities:</p> <ul> <li><code>dsp-tools create</code>    creates the project with its data model(s) on a DSP server from a JSON file.</li> <li><code>dsp-tools get</code>    reads a project with its data model(s) from    a DSP server and writes it into a JSON file.</li> <li><code>dsp-tools xmlupload</code>    uploads data from an XML file (bulk data import)   and writes the mapping from internal IDs to IRIs into a local file.</li> <li><code>dsp-tools excel2json</code>    creates an entire JSON project file from a folder with Excel files in it.<ul> <li><code>dsp-tools excel2lists</code>   creates the \"lists\" section of a JSON project file from one or several Excel files.    The resulting section can be integrated into a JSON project file   and then be uploaded to a DSP server with <code>dsp-tools create</code>.</li> <li><code>dsp-tools excel2resources</code>   creates the \"resources\" section of a JSON project file from an Excel file.    The resulting section can be integrated into a JSON project file    and then be uploaded to a DSP server with <code>dsp-tools create</code>.</li> <li><code>dsp-tools excel2properties</code>   creates the \"properties\" section of a JSON project file from an Excel file.    The resulting section can be integrated into a JSON project file    and then be uploaded to a DSP server with <code>dsp-tools create</code>.</li> </ul> </li> <li><code>dsp-tools excel2xml</code>    transforms a data source to XML    if it is already structured according to the DSP specifications.</li> <li>The module <code>excel2xml</code>    provides helper methods that can be used in a Python script    to convert data from a tabular format into XML.</li> <li><code>dsp-tools id2iri</code>   takes an XML file for bulk data import and replaces referenced internal IDs with IRIs.    The mapping has to be provided with a JSON file.</li> <li><code>dsp-tools start-stack / stop-stack</code>   assist you in running a DSP stack on your local machine.</li> <li><code>dsp-tools template</code>   creates a template repository with a minimal JSON and XML file.</li> <li><code>dsp-tools rosetta</code>   clones the most up to date rosetta repository,   creates the data model and uploads the data.</li> </ul>"},{"location":"DSP-TOOLS/changelog/","title":"Changelog","text":""},{"location":"DSP-TOOLS/changelog/#changelog","title":"Changelog","text":""},{"location":"DSP-TOOLS/changelog/#710-2024-03-27","title":"7.1.0 (2024-03-27)","text":""},{"location":"DSP-TOOLS/changelog/#enhancements","title":"Enhancements","text":"<ul> <li>excel2xml: allow for single tags in XML text (DEV-3427) (#885) (c73b126)</li> <li>save warnings and errors in second file with loguru (DEV-3406) (#883) (7818325)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#bug-fixes","title":"Bug Fixes","text":"<ul> <li>create: fix crash when no project is on the server new error (DEV-3420) (#882) (ca9a674)</li> <li>xmlupload: don't stop xmlupload when resource is wrong (DEV-3419) (#880) (86795ec)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#maintenance","title":"Maintenance","text":"<ul> <li>bump start-stack to 2024.03.02 (#891) (ce8d6be)</li> <li>ci: make logging file available after e2e test (DEV-3436) (#887) (5825b3c)</li> <li>fix typo (#889) (be0ae62)</li> <li>remove timestamp from warnings.log (#888) (8fb0842)</li> <li>test: make tests smaller in test_excel2xml_cli.py (#884) (7418870)</li> <li>test: use regex.escape everywhere (#886) (d0061db)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#documentation","title":"Documentation","text":"<ul> <li>reformulate text-property and gui element (#890) (8d7bb79)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#700-2024-03-13","title":"7.0.0 (2024-03-13)","text":""},{"location":"DSP-TOOLS/changelog/#breaking-changes","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>remove --verbose flag from xmlupload (DEV-3389) (#869)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#enhancements_1","title":"Enhancements","text":"<ul> <li>prompt before continuing when using an outdated version (DEV-3350) (#850) (38907fa)</li> <li>remove --verbose flag from xmlupload (DEV-3389) (#869) (1e2e170)</li> <li>resume an interrupted xmlupload (DEV-3323) (#853) (4acf841)</li> <li>resume-xmlupload: add option to skip the first resource (DEV-3412) (#878) (a53785f)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#bug-fixes_1","title":"Bug Fixes","text":"<ul> <li>add \"packaging\" as dependency (DEV-3368) (#856) (81508b0)</li> <li>create: fix crash when no project is on the server (DEV-3405) (#875) (9607799)</li> <li>don't retry on 404 project not found (DEV-3362) (#857) (5c19f60)</li> <li>don't retry on errors in the 400 range (DEV-3349) (#877) (c543274)</li> <li>ingest: ingest container must be part of knora-net (DEV-3370) (#858) (cd018ee)</li> <li>pypi: prevent that PR merged into PR is published to pypi (DEV-3394) (#871) (3d5e071)</li> <li>release-please: adapt version check (DEV-3363) (#854) (d04b731)</li> <li>resume-xmlupload: make it impossible to resume after all resources have been created (DEV-3398) (#865) (8aa5d30)</li> <li>resume-xmlupload: make resource counting more user friendly (DEV-3397) (#864) (2b5295d)</li> <li>xmlupload: don't crash if the project has more than 50 errors (DEV-3364) (#855) (a0be38e)</li> <li>xmlupload: don't loose elements when stashing standoff properties (DEV-3151) (#870) (c8e8966)</li> <li>xmlupload: exit with code 0 if xmlupload finishes with batch (DEV-3396) (#863) (8a15973)</li> <li>xmlupload: fix xmlupload text as xml when uploading stash (DEV-3361) (#851) (79a643a)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#maintenance_1","title":"Maintenance","text":"<ul> <li>bump start-stack to 2024.03.01 (#879) (b1c8262)</li> <li>connection: call specific error response codes (DEV-3339) (#832) (d8531bd)</li> <li>deps-dev: bump the all-dependencies group with 5 updates (#849) (4c8b942)</li> <li>excel2xml: better error message for invalid text values (#861) (914acd8)</li> <li>fix test_xml_validation_low_level.py (#837) (3e758c7)</li> <li>project create: add erroneously removed exc_info in logging (DEV-3294) (#866) (19d1f25)</li> <li>ruff reformatting (#867) (5ed62fc)</li> <li>ruff.lint.isort: force-single-line (#840) (fb3c1d9)</li> <li>test: make integration test excel2json (#841) (e5b0206)</li> <li>test: make integration test excel2xml (#842) (8b12f8b)</li> <li>test: make integration test general commands (#846) (0e61eef)</li> <li>test: make integration test ingest-xmlupload (#843) (fb58779)</li> <li>test: make integration test project (#844) (a7e0fc6)</li> <li>test: make integration test utils (#847) (089c41d)</li> <li>test: make integration test xmlupload (#845) (f80cc90)</li> <li>xmlupload (#852) (c8e6284)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#documentation_1","title":"Documentation","text":"<ul> <li>add guarantee note for resume-xmlupload (#868) (8747edd)</li> <li>excel2xml: code examples in docstrings: prepend function names with their namespace (#859) (7923a8c)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#600-2024-02-28","title":"6.0.0 (2024-02-28)","text":""},{"location":"DSP-TOOLS/changelog/#breaking-changes_1","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>Remove fast-xmlupload command (DEV-3324) (#830)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#enhancements_2","title":"Enhancements","text":"<ul> <li>Remove fast-xmlupload command (DEV-3324) (#830) (0c9d077)</li> <li>xmlupload: check if text encoding in data conforms to type specified in ontology (DEV-3279) (#821) (449f780)</li> <li>xmlupload: check if the encoding in the text-prop is consistent (DEV-3296) (#818) (4ae8469)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#bug-fixes_2","title":"Bug Fixes","text":"<ul> <li>don't crash when dsp-tools is run offline (DEV-3338) (#833) (901b86d)</li> <li>excel2json: allow resources to have no cardinalities (DEV-3333) (#834) (b55224a)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#maintenance_2","title":"Maintenance","text":"<ul> <li>bump start-stack to 2024.02.02 (#836) (f83ce78)</li> <li>correct docs in regard to gui-element of hasComment (#816) (3f869d9)</li> <li>fix typo in check_consistency_with_ontology.py (#813) (bc01027)</li> <li>ontology_client: make retrieval of ontologies more flexible (DEV-3308) (#820) (327f61e)</li> <li>refactor validate xml in preparation for extension (#814) (652aa9f)</li> <li>remove docker as dependency (#835) (7f98945)</li> <li>renaming functions of ontology checks in xmlupload (#817) (e6b0e7d)</li> <li>test_xmlupload: separate tests (#824) (7333136)</li> <li>test: add pytest entrypoint (#823) (e31da78)</li> <li>test: test_shared.py turn into pytest (#826) (46e7743)</li> <li>test: test_upload_stashed_xml_texts.py turn into pytest (#825) (755323f)</li> <li>test: turn into pytest test_xmlupload.py (#827) (c0d1c97)</li> <li>test: turn xml_utils.py into pytest (#828) (e97084f)</li> <li>update data.xsd regarding TextValue encoding for hasComment (#811) (af86b94)</li> <li>xml_validation: turn into pytest (#815) (516a2de)</li> <li>xmlupload: improve parse xml function (#819) (9947607)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#documentation_2","title":"Documentation","text":"<ul> <li>DSP-API uses \"just\" instead of \"make\" (DEV-3212) (#753) (d5c8f97)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#581-2024-02-14","title":"5.8.1 (2024-02-14)","text":""},{"location":"DSP-TOOLS/changelog/#maintenance_3","title":"Maintenance","text":"<ul> <li>bump start-stack to 2024.02.01 (#806) (9080f47)</li> <li>models-project: remove all project update code (#802) (1aa39a1)</li> <li>models-user-project: delete dead code (#800) (12813bc)</li> <li>remove dead parameter in ontology client (#809) (8095ba3)</li> <li>remove sourcery (#805) (c3ccc36)</li> <li>rename value.py file into formatted_text_value.py (#807) (90af390)</li> <li>renaming functions in preparation for TextValue verification (#808) (9f06f3f)</li> <li>test-create-project: turn unittests into pytests (#804) (8c667a6)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#580-2024-02-01","title":"5.8.0 (2024-02-01)","text":""},{"location":"DSP-TOOLS/changelog/#enhancements_3","title":"Enhancements","text":"<ul> <li>excel2json: add optional column \"subject\" to properties.xlsx (DEV-3253) (#777) (cf491e9)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#bug-fixes_3","title":"Bug Fixes","text":"<ul> <li>don't crash if pip is not found (DEV-3256) (#791) (15f6e31)</li> <li>xmlupload: don't retry on OntologyConstraintException (DEV-3255) (#783) (ef577ac)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#maintenance_4","title":"Maintenance","text":"<ul> <li>bump start-stack to hotfixed 2024.01.01 (#801) (b721fdd)</li> <li>delete dead code fragments (#792) (c5b9872)</li> <li>deps: bump the all-dependencies group with 8 updates (#787) (0c1a5e2)</li> <li>excel2json-lists: fix two ruff PLW0603 (#778) (5f53c38)</li> <li>model-project: fix one ruff PLR0912 (#782) (25ad02d)</li> <li>models-group: delete unnecessary action object (#794) (24fdc9f)</li> <li>models-listnode: delete actions object (#795) (f7a2ec9)</li> <li>models-listnode: delete dead code (#797) (fea23fd)</li> <li>models-ontology: delete actions object (#796) (28299fa)</li> <li>models-project: delete dead code (#798) (dcdbaaf)</li> <li>models-propertyclass: fix PLR0912 (#784) (51d4265)</li> <li>models-resourceclass: fix ruff PLR0912 (#788) (ed10c27)</li> <li>models-user: fix three ruff PLR0912 (#780) (820fc25)</li> <li>project_client: delete dead code (#793) (b5963de)</li> <li>project_validate: fix one ruff PLR0912 (#781) (9ccd2a7)</li> <li>propertyclass-resourceclass: delete dead code (#799) (d17b656)</li> <li>remove dead code with vulture (#790) (aba9aef)</li> <li>remove ruff ignore PLR0912 (Too many branches) (#789) (e93b049)</li> <li>test_create_get_xmlupload: fix one ruff PLR0912 (#785) (c09c0c6)</li> <li>use pytest's tmp_path fixture (#786) (c01a08f)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#570-2024-01-31","title":"5.7.0 (2024-01-31)","text":""},{"location":"DSP-TOOLS/changelog/#enhancements_4","title":"Enhancements","text":"<ul> <li>excel2xml: find_date_in_string(): allow time spans of 1 day (DEV-3154) (#720) (59b5d16)</li> <li>excel2xml: make_bitstream_prop(): make file existence check opt-in (DEV-3113) (#709) (1f68943)</li> <li>excel2xml: support 2-digit-years in find_date_in_string() (DEV-2633) (#711) (15d3493)</li> <li>ingest-upload: create new ingest xmlupload cli command (DEV-3019) (#670) (5745190)</li> <li>ingest-xmlupload: add support for dumping HTTP requests (DEV-3167) (#729) (a02dda5)</li> <li>option for custom headers in HTTP requests (DEV-3145) (#702) (0cbc78a)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#bug-fixes_4","title":"Bug Fixes","text":"<ul> <li>add termcolor as main dependency (DEV-3149) (#706) (4f6cd6d)</li> <li>don't retry login when credentials are invalid (DEV-3224) (#763) (41d8217)</li> <li>excel2xml, xmlupload: allow commas in URLs (DEV-3183) (#742) (1ee6e36)</li> <li>excel2xml: make_text_prop: allow &lt;, &gt;, &amp; in rich texts (DEV-3131) (#691) (228c79f)</li> <li>fix wrong resolution of merge conflict (DEV-3161) (#726) (c81c94d)</li> <li>fully mask passwords in logfile (DEV-3225) (#761) (87c03d4)</li> <li>include stack trace in log file (DEV-3157) (#723) (9046792)</li> <li>increase timeout to prevent doubled resources (DEV-3114) (#698) (930df8f)</li> <li>ingest-xmlupload: apply mapping.csv even if extension has wrong casing (DEV-3197) (#749) (bac7c79)</li> <li>ingest-xmlupload: file check: handle absolute vs. relative paths, save feedback file correctly (DEV-3162) (#727) (c6d2169)</li> <li>prevent crash when venv isn't activated correctly (DEV-3233) (#765) (6d339ed)</li> <li>properly log requests and their responses (DEV-3186) (#745) (8296254)</li> <li>restore authorization header after ConnectionError (DEV-3190) (#744) (d03be2a)</li> <li>retry mechanism again catches return codes in the 500 range (DEV-3177) (#740) (c927c21)</li> <li>xmlupload: retry on all non-OK response statuses (DEV-3214) (#754) (b85e806)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#maintenance_5","title":"Maintenance","text":"<ul> <li>add PermanentConnectionError to make BaseError slimmer (DEV-3192) (#741) (ed60319)</li> <li>add permission to test data (#768) (a4d93fc)</li> <li>add ruff rule to prevent TODO comments (#738) (e897496)</li> <li>add User-Agent header to HTTP requests (#737) (85e363b)</li> <li>avoid mutable default values in class attributes (DEV-3234) (#764) (1d9e5de)</li> <li>bump all dependencies (#734) (d3e238b)</li> <li>bump GitHub actions that use a deprecated NodeJS version (#766) (84e8ec0)</li> <li>bump start-stack to 2024.01.01 (#771) (2997c05)</li> <li>ci: move setup into reusable workflow (#715) (a3799ce)</li> <li>ci: revert changes related to merge queue (#719) (ff0e4fe)</li> <li>ci: set up merge queue (#717) (1c13f5f)</li> <li>connection: content type doesn't have to be parametrized (#752) (2c0febb)</li> <li>create: in normal workflow, don't rely on failing request (DEV-3220) (#757) (f9b9677)</li> <li>define poetry exec targets for all tools (#695) (c04356b)</li> <li>delete dead code in project context (#770) (5159b8d)</li> <li>don't log errors multiple times (DEV-3195) (#769) (0025784)</li> <li>don't send chat notification on post releases / release only on \"feat\" or \"fix\" (DEV-3148) (#707) (fd9b148)</li> <li>excel2json-properties: reorganise file (#776) (4b8c060)</li> <li>fix pypi.org publishing (#708) (ea56066)</li> <li>fix ruff PLR5501 (#774) (1f88112)</li> <li>get rid of dead code (#751) (f67eac2)</li> <li>get rid of http_call_with_retry (#694) (70f6808)</li> <li>get rid of shared.login() function (#714) (28806a0)</li> <li>hide stack trace from user (DEV-3158) (#724) (808c01c)</li> <li>improve package structure of unittests/cli (#713) (111c6df)</li> <li>improve performance with requests.Session object (DEV-3174) (#739) (43caaf9)</li> <li>log all HTTP requests, get rid of --dump flag (DEV-3171) (#731) (e2b0598)</li> <li>log all requests, also during retry (DEV-3213) (#759) (fd05080)</li> <li>make dev-release to pypi.org on every commit to main (DEV-3130) (#699) (b05690b)</li> <li>make post releases instead of dev releases (DEV-3130) (#705) (94b289d)</li> <li>make XmlUploadError a subclass of BaseError (#746) (12e406f)</li> <li>move session renewal into own method (#755) (7adc837)</li> <li>move to Python 3.12 (#696) (60f64a2)</li> <li>project_validate: fix one ruff PLR0912 (#775) (d7060d6)</li> <li>project-create: clean up one ruff PLR0912 and one PLR0913 (#772) (7902840)</li> <li>project-get: fix ruff PLR0915 (#773) (71b9b2a)</li> <li>PyPI authentication via API token (DEV-3143) (#703) (dd16ef4)</li> <li>refactor test_find_date_in_string (#710) (630df2c)</li> <li>remove duplicated &amp; outdated docstrings from Connection protocol (#758) (2a04f5a)</li> <li>remove unused code (DEV-3152) (#712) (43cba62)</li> <li>replace bandit action by ruff's bandit ruleset (DEV-3026) (#722) (76203cf)</li> <li>resolve PLR0911 in call_requested_action() (#701) (855231e)</li> <li>split up models/helpers.py (#760) (f97cce8)</li> <li>tidy up connection class (#747) (eaa1158)</li> <li>tidy up Connection class (DEV-3191) (#748) (bd915ef)</li> <li>tidy up exceptions (#762) (03213ed)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#560-2023-12-19","title":"5.6.0 (2023-12-19)","text":""},{"location":"DSP-TOOLS/changelog/#enhancements_5","title":"Enhancements","text":"<ul> <li>excel2xml: support French BC dates in find_date_in_string() (DEV-3099) (#680) (610f064)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#bug-fixes_5","title":"Bug Fixes","text":"<ul> <li>excel2json: support uppercase classes sheet in resources.xlsx (DEV-3109) (#683) (71205f8)</li> <li>excel2xml: find_date_in_string() must not return invalid date (DEV-3116) (#688) (71b754d)</li> <li>xmlupload: saving the csv file if there are more than 50 problems with the ontology names (DEV-3112) (#685) (a7d2e59)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#maintenance_6","title":"Maintenance","text":"<ul> <li>add pytest-sugar (#692) (1d22716)</li> <li>downgrade start-stack to 2023.11.02 (#693) (09f50ff)</li> <li>move retry logic into the connection implementation (DEV-3110) (#686) (f1a7051)</li> <li>replace pylint, isort, black with ruff (DEV-2972) (#653) (2594d36)</li> <li>resolve Ruff warnings A003, B023, D103 and PLR0911 (#684) (b0f598c)</li> <li>start-stack: adapt docs of --max_file_size flag (DEV_3093) (#689) (af46da8)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#550-2023-12-13","title":"5.5.0 (2023-12-13)","text":""},{"location":"DSP-TOOLS/changelog/#enhancements_6","title":"Enhancements","text":"<ul> <li>cli: change user output when handling errors (DEV-3067) (#672) (71a1737)</li> <li>excel2json: new error implementation for json validation (DEV-3047) (#664) (fdbc545)</li> <li>excel2json: new user error (InputError) implementation in properties section (DEV-3037) (#654) (b1703e1)</li> <li>xmlupload: improve error message if ontology is unknown (DEV-3024) (#674) (5319ff3)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#bug-fixes_6","title":"Bug Fixes","text":"<ul> <li>date validation forbids legal values (DEV-3059) (#668) (13131ff)</li> <li>excel2json: find hidden worksheets in excel (DEV-1483) (#679) (ffbf0c0)</li> <li>xmlupload: allow dots in filenames (DEV-3058) (#676) (ad0c37c)</li> <li>xmlupload: allow external link in text value (DEV-3054) (#666) (08f7b93)</li> <li>xmlupload: support uppercase file extensions (DEV-3095) (#678) (24cb320)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#maintenance_7","title":"Maintenance","text":"<ul> <li>bump start-stack to 2023.12.01 (DEV-3105) (#681) (ddd0078)</li> <li>cli: modularise cli.py (DEV-3068) (#673) (f0da1ca)</li> <li>deps: bump the all-dependencies group with 8 updates (#662) (6e307c2)</li> <li>docs: fix outdated link (#669) (5b333c2)</li> <li>excel2json: modularise unittests (DEV-3040) (#659) (107b1b0)</li> <li>excel2json: new excel reader (DEV-3049) (#665) (a0d5776)</li> <li>pandas future warning in unittest (DEV-3060) (#671) (b3f75f4)</li> <li>process-files: diverse improvements (#656) (692ad40)</li> <li>remove tabs (DEV-3043) (#661) (286abf8)</li> <li>update poetry.lock (DEV-3081) (#675) (cd85836)</li> <li>xmlupload: clean up handle media information (DEV-3086) (#677) (93fb71f)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#540-2023-11-29","title":"5.4.0 (2023-11-29)","text":""},{"location":"DSP-TOOLS/changelog/#enhancements_7","title":"Enhancements","text":"<ul> <li>xmlupload: check consistency with ontology on server (DEV-2921) (#630) (a563c07)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#530-2023-11-29","title":"5.3.0 (2023-11-29)","text":""},{"location":"DSP-TOOLS/changelog/#enhancements_8","title":"Enhancements","text":"<ul> <li>excel2xml: add support for 3-digit-years in find_date_in_string() (DEV-3005) (#652) (1afee03)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#bug-fixes_7","title":"Bug Fixes","text":"<ul> <li>process-files: fix resource leak, try omitting restart of python (DEV-2986) (#651) (7347be7)</li> <li>upload-files: use a new ThreadPoolExecutor for every batch (DEV-2973) (#650) (431a755)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#maintenance_8","title":"Maintenance","text":"<ul> <li>add sourcery workflow to CI checks (#646) (8b445f2)</li> <li>apply sourcery suggestions (#644) (96110a0)</li> <li>bump start-stack to 2023.11.02 (#657) (c399dee)</li> <li>excel2json: modularise functions (DEV-3025) (#655) (5486b15)</li> <li>more sourcery refactorings (#647) (300bfa0)</li> <li>refactor import-scripts (#649) (9272898)</li> <li>remove unnecessary pylint ignore comments (#645) (d314121)</li> <li>replace os.path and os.scandir with pathlib.Path (#648) (e325237)</li> <li>use iri util consistently (DEV-2951) (#642) (911cfa5)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#520-2023-11-15","title":"5.2.0 (2023-11-15)","text":""},{"location":"DSP-TOOLS/changelog/#enhancements_9","title":"Enhancements","text":"<ul> <li>xmlupload: add check if links point to valid resource ID (DEV-2902) (#639) (803c9f6)</li> <li>xmlupload: id2iri mapping contains servername (DEV-1889) (#628) (19a3f29)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#bug-fixes_8","title":"Bug Fixes","text":"<ul> <li>retain value permissions if a link gets stashed because of circular dependencies (DEV-1489) (#623) (3ccb75b)</li> <li>upload-files: handle JSONDecodeError (DEV-2907) (#621) (40000a8)</li> <li>upload-files: prevent crash (DEV-2918) (#626) (19d179e)</li> <li>xmlupload: fix non-initialized variable (DEV-2922) (#629) (afb16b1)</li> <li>xmlupload: print reason of failure if resource cannot be created (DEV-2925) (#637) (e3a194a)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#maintenance_9","title":"Maintenance","text":"<ul> <li>add clean script to remove unnecessary files (#631) (7f98045)</li> <li>add more logs and timestamps (#627) (21ed1d8)</li> <li>bump start-stack (apply DSP-APP fix) (#641) (f901399)</li> <li>bump start-stack to 2023.11.01 (#633) (81daf2a)</li> <li>excel2xml: suppress irrelevant warnings, turn non-fatal errors into warnings (DEV-2917) (#625) (b6943a2)</li> <li>remove unused code (DEV-2950) (#638) (fbbafec)</li> <li>reorganize excel2xml (#635) (6773513)</li> <li>reorganize excel2xml unit tests (#636) (d015f9f)</li> <li>replace resource instance factory (DEV-2876) (#594) (906a211)</li> <li>restructure repository (#632) (8a05b2c)</li> <li>restructure stash-related files (#640) (a49fa59)</li> <li>upload-files: thread-safe logging of bullet point lists (#619) (37040a6)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#documentation_3","title":"Documentation","text":"<ul> <li>replace admin.dasch.swiss by app.dasch.swiss (#634) (ae06161)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#510-2023-11-01","title":"5.1.0 (2023-11-01)","text":""},{"location":"DSP-TOOLS/changelog/#enhancements_10","title":"Enhancements","text":"<ul> <li>xmlupload: reduce stash size of circular references (DEV-2848) (#599) (228b1f7)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#bug-fixes_9","title":"Bug Fixes","text":"<ul> <li>don't create logging handler multiple times (DEV-2891) (#609) (e6aa47c)</li> <li>ignore IRIs in stashing algorithm (DEV-2885) (#603) (635bc5c)</li> <li>IRI regex used in multiple places is incorrect (DEV-2888) (#606) (096f47e)</li> <li>prevent endless waiting for response, without creating resources multiple times (DEV-2860) (#586) (caa16b7)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#maintenance_10","title":"Maintenance","text":"<ul> <li>add a client for project related API requests (DEV-2890) (#610) (e100b26)</li> <li>add logging to stashing algorithm (DEV-2881) (#608) (736f02b)</li> <li>add specific model for bitstream information (DEV-2893) (#613) (8d0d61d)</li> <li>bump start-stack to 2023.10.03 (#616) (213c301)</li> <li>deps: bump the all-dependencies group with 8 updates (#617) (1a2fdd6)</li> <li>fix analyse_circles_in_data() (remove namespaces) (#598) (72f710c)</li> <li>fix logging statements (#611) (1f95f8d)</li> <li>further refactoring of graph analysing (#590) (d0779ac)</li> <li>improve logging for upload-files (#614) (f99e755)</li> <li>log dsp-tools version (#612) (ab9ffef)</li> <li>refactor graph analysing (#589) (14a6e83)</li> <li>split up test_rosetta.py into smaller functions (#601) (33c9fce)</li> <li>test_construct_and_analyze_graph: remove namespace, add semantic line breaks (#602) (b693a94)</li> <li>tidy up graph analyzing (#595) (f2d4488)</li> <li>tidy up KnoraStandoffXml class (#597) (c430b67)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#documentation_4","title":"Documentation","text":"<ul> <li>fix broken links (#604) (7c19894)</li> <li>fix typos in docs (#615) (a7ecd47)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#503-2023-10-20","title":"5.0.3 (2023-10-20)","text":""},{"location":"DSP-TOOLS/changelog/#bug-fixes_10","title":"Bug Fixes","text":"<ul> <li>xmlupload: misleading warning when uploading stashed XML texts (DEV-2793) (#559) (1e2c8f2)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#maintenance_11","title":"Maintenance","text":"<ul> <li>bump dependencies (#578) (6d9f082)</li> <li>bump start-stack to 2023.10.02 (#584) (37ca185)</li> <li>bump start-stack to 2023.10.02 (DEV-2823) (#571) (863c631)</li> <li>CI: split up test action into several jobs (#553) (cfb5042)</li> <li>clarify isort and pre-commit in readme (DEV-2781) (#549) (e58fec1)</li> <li>create composite setup action and allow more PR titles (#550) (2084999)</li> <li>create JSON-LD context without API request (DEV-2845) (#581) (dcc655d)</li> <li>create specific objects for stash information (DEV-2787) (#557) (b38c2d3)</li> <li>deps: bump urllib3 from 2.0.6 to 2.0.7 (#575) (a41b174)</li> <li>identify temporary text values with UUID instead of text hash (DEV-2790) (#558) (08624b2)</li> <li>integrate DSP-INGEST in start-stack (#566) (e8fb38b)</li> <li>introduce abstraction layer for connection (DEV-2820) (#570) (87c1e18)</li> <li>modularize xmlupload (DEV-2813) (#568) (8026fcb)</li> <li>modularize xmlupload method (DEV-2836) (#574) (b9588c3)</li> <li>remove leftovers of old --metrics flag (#583) (3234318)</li> <li>remove use of XMLResource in stash models (DEV-2843) (#577) (05dc486)</li> <li>start-stack: downgrade DSP-APP (#576) (8c109e4)</li> <li>use sets instead of lists for stashing circular references (DEV-2771) (#548) (68605bd)</li> <li>xmlupload: optimize stash links (DEV-2847) (#573) (1d20fad)</li> <li>xmlupload: split up get resources and permissions function (DEV-2796) (#560) (02eff6b)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#documentation_5","title":"Documentation","text":"<ul> <li>xmlupload: day-precision dates should be written with end date (DEV-2802) (#564) (c69af60)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#502-2023-10-05","title":"5.0.2 (2023-10-05)","text":""},{"location":"DSP-TOOLS/changelog/#bug-fixes_11","title":"Bug Fixes","text":"<ul> <li>fast-xmlupload: CLI-command in documentation has outdated information (DEV-2779) (#545) (334ea49)</li> <li>ModuleNotFoundError when importing logging due to identical file name (DEV-2708) (#530) (d2c6ec8)</li> <li>xmlupload: fix performance slowdown during stash applying (DEV-2717) (#533) (add40b2)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#maintenance_12","title":"Maintenance","text":"<ul> <li>add isort check in pre-commit and GitHub CI (DEV-2707) (#529) (89ef086)</li> <li>add logging statements to \"create\" command (DEV-2776) (#544) (73183c4)</li> <li>bump start-stack to 2023.10.01 (DEV-2748) (#546) (3240d5d)</li> <li>deps: bump dependencies (#535) (bf93bc8)</li> <li>deps: bump dependencies (#537) (cbcd2f3)</li> <li>harmonize timestamps between terminal output and log file (DEV-2716) (#534) (9160eea)</li> <li>remove unnecessary PR template (DEV-2691) (#525) (e2c41ec)</li> <li>use faster black in pre-commit hook (DEV-2736) (#536) (ad00e4b)</li> <li>xmlupload: _upload_stashed_xml_texts (DEV-2710) (#532) (9d2dd35)</li> <li>xmlupload: create new directory and move scripts (DEV-2715) (#538) (6bad8d0)</li> <li>xmlupload: file upload_stashed_resptr_props.py (DEV-2774) (#542) (422bbb3)</li> <li>xmlupload: file xmlupload.py (DEV-2775) (#543) (16fefae)</li> <li>xmlupload: modularise individual functions in file read_validate_xml_file.py (DEV-2767) (#541) (dc5c5a7)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#documentation_6","title":"Documentation","text":"<ul> <li>xmlupload: invalid example: properties must be unique (DEV-2711) (#531) (5f9060f)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#501-2023-09-20","title":"5.0.1 (2023-09-20)","text":""},{"location":"DSP-TOOLS/changelog/#bug-fixes_12","title":"Bug Fixes","text":"<ul> <li>excel2json: correct row number in error message (DEV-2650) (#513) (03a59ee)</li> <li>excel2json: don't crash if optional columns are deleted in \"properties\" Excel file (DEV-2652) (#518) (09c3940)</li> <li>id2iri mapping is written with a question mark after the file extension (DEV-2670) #522 (3fc1bb9)</li> <li>no-op test that doesn't test anything (DEV-2655) (#517) (76f1db2)</li> <li>upload-files: close file handle before handling error (DEV-2666) #519 (439a139)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#maintenance_13","title":"Maintenance","text":"<ul> <li>bump start-stack to 2023.09.02 (DEV-2690) (#524) (6f5b935)</li> <li>documenation cleaning (DEV-2602) (#503) (52485c0)</li> <li>excel2json: replace BaseError with UserError (DEV-2671) (#523) (eaf8dd6)</li> <li>excel2json: replace excel reader in excel2resources (DEV-2668) (#520) (f2f0d4e)</li> <li>fix gui_attributes notation (DEV-2651) (#514) (8c97cc3)</li> <li>improve PR title checking regex (DEV-2635) (#509) (c25f3b7)</li> <li>pandas deprecated .applymap (DEV-2617) (#510) (925b13d)</li> <li>pandas deprecates inplace parameter (DEV-2618) (#511) (8d6d3f7)</li> <li>small corrections (DEV-2653) #515 (99db5f1)</li> <li>xmlupload: split up _check_consistency_with_ontology() into smaller functions (DEV-2669) (#521) (79a50cf)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#500-2023-09-06","title":"5.0.0 (2023-09-06)","text":""},{"location":"DSP-TOOLS/changelog/#breaking-changes_2","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>xmlupload: allow both IDs and IRIs, remove --incremental flag (DEV-1339) (#494)</li> <li>refactor id2iri: remove --outfile and --verbose flags (DEV-2576) (#488)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#enhancements_11","title":"Enhancements","text":"<ul> <li>add --dump flag to \"xmlupload\" and \"get\" commands (DEV-2534) (#502) (d9aeba9)</li> <li>get project without credentials (DEV-841) (#504) (b5ea3e9)</li> <li>id2iri: add flag to remove created resources from XML (DEV-2571) (#491) (bf25cb7)</li> <li>id2iri: replace IDs also inside salsah-links, not only inside &lt;resptr&gt; tags (DEV-2578) (#490) (047ba15)</li> <li>xmlupload: allow both IDs and IRIs, remove --incremental flag (DEV-1339) (#494) (df1cf13)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#bug-fixes_13","title":"Bug Fixes","text":"<ul> <li>process-files: default value of batchsize is too big (DEV-2573) #486 (b1775a9)</li> <li>process-files: remove docker container before starting / add user feedback (DEV-2601) (#505) (8e1b77c)</li> <li>process-files: the derivatives are created only at the end (DEV-2625) (#507) (1934403)</li> <li>xmlupload: provide a helpful error message if default-ontology in XML file doesn't exist (DEV-2577) #489 (7b20ad8)</li> <li>xmlupload: sanitize textvalues: remove whitespaces and newlines (DEV-2569) (#484) (d6c8110)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#maintenance_14","title":"Maintenance","text":"<ul> <li>bump start-stack to 2023.09.01 (DEV-2630) (#508) (d28f2d8)</li> <li>deps: bump the all-dependencies group with 3 updates (#501) (f4f6ff8)</li> <li>excel2json (DEV-2547) (#487) (504a4ec)</li> <li>improve release-please YAML file (DEV-2599) #492 (82b3b82)</li> <li>mute warnings in tests / update gitignore (DEV-2609) #498 (03e19d7)</li> <li>refactor id2iri: remove --outfile and --verbose flags (DEV-2576) (#488) (f814667)</li> <li>refactor models/connection.py (DEV-2534) (#495) (a9caf98)</li> <li>refactor process-files (DEV-2623) (#506) (7595846)</li> <li>rename excel_to_json to excel2json (DEV-2604) #496 (5a31d5d)</li> <li>run unit tests earlier in GitHub CI (DEV-2600) #493 (00d5ed6)</li> <li>some small bug fixes and improvements (DEV-2564) (#483) (ecd09e9)</li> <li>use typing.TypeGuard for check_notna() (DEV-2608) #497 (2c4e2f8)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#400-2023-08-22","title":"4.0.0 (2023-08-22)","text":""},{"location":"DSP-TOOLS/changelog/#breaking-changes_3","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>harmonize CLI flags, rename CLI entry point and add tests for the CLI (DEV-2525) (#463)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#bug-fixes_14","title":"Bug Fixes","text":"<ul> <li>fix bandit workflow configuration (DEV-2536) #470 (4fd6a10)</li> <li>Make gui_attributes Mandatory for Spinbox in JSON Schema (DEV-2556) (#478) (671d846)</li> <li>process-files: in case of Docker API error, don't processes files a second time (DEV-2533) #468 (bace9aa)</li> <li>upload-files: handle server error, document how to circumvent resource leak (DEV-2528, DEV-2527) (#464) (7aa7106)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#maintenance_15","title":"Maintenance","text":"<ul> <li>bump start-stack to 2023.08.02 (DEV-2561) #482 (84fb0a9)</li> <li>configure bandit security checks (DEV-2532) (#466) (28a4907)</li> <li>deps: bump dependencies #467 (a488161)</li> <li>deps: bump dependencies #473 (57aa687)</li> <li>diverse refactorings (DEV-2559) (#480) (e29299b)</li> <li>explain in readme that imagemagick and ffmpeg must be installed for local testing (DEV-2558) #479 (a000ab3)</li> <li>fix bandit: always exit with 0 (DEV-2536) #476 (c5351b4)</li> <li>harmonize CLI flags, rename CLI entry point and add tests for the CLI (DEV-2525) (#463) (c1218d6)</li> <li>lint XML models (DEV-2560) (#481) (f2e4c88)</li> <li>move to Python 3.11 (DEV-2524) #461 (74a93e5)</li> <li>refactor models.bitstream (DEV-2538) #472 (6e2deff)</li> <li>replace re by regex (DEV-2531) (#465) (8ac8c99)</li> <li>use darglint to check if the docstrings match the actual implementation (DEV-2530) (#453) (8183235)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#documentation_7","title":"Documentation","text":"<ul> <li>update outdated link (DEV-2537) #471 (9f5c468)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#300-2023-08-08","title":"3.0.0 (2023-08-08)","text":""},{"location":"DSP-TOOLS/changelog/#enhancements_12","title":"Enhancements","text":"<ul> <li>create: in property definitions of JSON files, accept references to list labels (DEV-2247) (#460) (1529330)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#bug-fixes_15","title":"Bug Fixes","text":"<ul> <li>upload-files, fast-xmlupload: handle multiple pickle files (DEV-2500) (#451) (98f0b97)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#breaking-changes_4","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>replace gui_element Slider by Spinbox, remove gui_element SimpleText for intervals, et al. (DEV-2501) (#452) (5e668f0)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#maintenance_16","title":"Maintenance","text":"<ul> <li>bump start-stack to 2023.08.01 (DEV-2514) #458 (65f2719)</li> <li>create: apply law of Demeter (DEV-2515) (#459) (46cdf19)</li> <li>deps-dev: bump the all-dependencies group with 2 updates (#454) (57527cd)</li> <li>deps: bump dependencies #456 (15096e7)</li> <li>handle timeout errors in API requests (DEV-2513) (#457) (4cdaf2a)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#250-2023-07-28","title":"2.5.0 (2023-07-28)","text":""},{"location":"DSP-TOOLS/changelog/#enhancements_13","title":"Enhancements","text":"<ul> <li>guess subdomains based on conventions (DEV-1979) (#445) (d6c4ff4)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#bug-fixes_16","title":"Bug Fixes","text":"<ul> <li>process-files: quit Python interpreter after every batch to prevent \"too many open files\" error (DEV-2268) (#402) (1cbf927)</li> <li>start-stack: fix outdated TTL paths, open config file correctly (DEV-2497) (#447) (98e0579)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#maintenance_17","title":"Maintenance","text":"<ul> <li>bump start-stack to 2023.07.02 (DEV-2499) #450 (61af5da)</li> <li>deps: bump dependencies (#449) (8fd23d4)</li> <li>increase timeout from 5 to 10 seconds (DEV-2450) #438 (4f82d2e)</li> <li>run dependabot monthly, and group updates into 1 single PR (DEV-2498) #448 (e03d633)</li> <li>xmlupload: forbid empty strings in some tags of the XML, et al. (DEV-2439) (#433) (679654d)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#240-2023-07-11","title":"2.4.0 (2023-07-11)","text":""},{"location":"DSP-TOOLS/changelog/#bug-fixes_17","title":"Bug Fixes","text":"<ul> <li>create: if the name of the ontology is used in a propertyname, it gets removed (DEV-2406) #429 (e6292f0)</li> <li>xmlupload: make sure resources aren't created multiple times after timeout error (DEV-2412) #432  (b109e3c)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#enhancements_14","title":"Enhancements","text":"<ul> <li>start-stack: add flag to start stack from main branch of DSP-API repository (DEV-2396) (#424) (6ff2c48)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#maintenance_18","title":"Maintenance","text":"<ul> <li>bump start-stack to 2023.07.01 (DEV-2428) (#430) (8e11b95)</li> <li>deps-dev: bump black from 23.3.0 to 23.7.0 (#431) (1aeb778)</li> <li>deps-dev: bump mkdocs-material from 9.1.17 to 9.1.18 (#426) (7a54181)</li> <li>deps: bump jsonschema from 4.17.3 to 4.18.0 (#428) (4b1a9ff)</li> <li>deps: bump lxml from 4.9.2 to 4.9.3 (#427) (1e933b3)</li> <li>deps: bump pandas from 2.0.2 to 2.0.3 (#422) (70b38b0)</li> <li>refactor start-stack (DEV-2397) (#423) (679a267)</li> <li>refine/resolve ignore comments, resolve pylint issues (DEV-2398) (#425) (906c8a3)</li> <li>set up pre-commit hooks (DEV-2393) (#420) (9578181)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#234-2023-06-27","title":"2.3.4 (2023-06-27)","text":""},{"location":"DSP-TOOLS/changelog/#bug-fixes_18","title":"Bug Fixes","text":"<ul> <li>xmlupload: allow colon in URL (DEV-2318) (#419) (b79ab23)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#maintenance_19","title":"Maintenance","text":"<ul> <li>bump start-stack to 2023.06.02 (DEV-2312) #418 (88a4bf3)</li> <li>deps-dev: bump mkdocs-material from 9.1.16 to 9.1.17 (#414) (313b923)</li> <li>deps-dev: bump mypy from 1.3.0 to 1.4.0 (#413) (919fd8e)</li> <li>deps-dev: bump mypy from 1.4.0 to 1.4.1 (#415) (2867a00)</li> <li>deps-dev: bump pytest from 7.3.2 to 7.4.0 (#416) (8d6b587)</li> <li>deps-dev: bump types-openpyxl from 3.1.0.12 to 3.1.0.13 (#417) (7b53622)</li> <li>lint \"models\", part two (DEV-2287) (#406) (466597c)</li> <li>onto create (DEV-2298) #412 (d8abe48)</li> <li>remove dependency inconsistency in pyproject.toml (DEV-2290) #410 (9da9ccf)</li> <li>remove unused code (DEV-2289) (#409) (809f4fe)</li> <li>xmlupload: improve error handling of Timeout Error (DEV-2299) (#411) (b9cf8eb)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#233-2023-06-13","title":"2.3.3 (2023-06-13)","text":""},{"location":"DSP-TOOLS/changelog/#bug-fixes_19","title":"Bug Fixes","text":"<ul> <li>fast xmlupload: make process-files more robust (DEV-2235) (#395) (12d527b)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#maintenance_20","title":"Maintenance","text":"<ul> <li>add overview of code quality tools; format code with black (DEV-2224) (#391) (d7fb690)</li> <li>allow latest version of poetry again (DEV-2245) #398 (3d646ad)</li> <li>bump start-stack to 2023.06.01 (DEV-2272) #401 (d684c18)</li> <li>deps-dev: bump pytest from 7.3.1 to 7.3.2 (#403) (6dbcf6c)</li> <li>deps-dev: bump types-openpyxl from 3.1.0.8 to 3.1.0.9 (#405) (12a97d6)</li> <li>deps-dev: bump types-regex from 2023.5.5.0 to 2023.6.3.0 (#397) (067e265)</li> <li>deps: bump docker from 6.1.2 to 6.1.3 (#393) (2a79fe6)</li> <li>deps: bump regex from 2023.5.5 to 2023.6.3 (#396) (6ee38c9)</li> <li>lint \"models\", part one (DEV-2265) (#400) (27a32b1)</li> <li>loosen python requirement, add py.typed marker (DEV-2278) (#404) (17b22b3)</li> <li>reformat code (DEV-2263) (#399) (35af8c4)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#232-2023-05-31","title":"2.3.2 (2023-05-31)","text":""},{"location":"DSP-TOOLS/changelog/#maintenance_21","title":"Maintenance","text":"<ul> <li>bump start-stack to 2023.05.03 (DEV-2222) #392 (80bdecb)</li> <li>deps-dev: bump mkdocs-material from 9.1.14 to 9.1.15 (#390) (18287c3)</li> <li>deps-dev: bump types-requests from 2.30.0.0 to 2.31.0.0 (#382) (74738fa)</li> <li>deps-dev: bump types-requests from 2.31.0.0 to 2.31.0.1 (#389) (1829fd5)</li> <li>deps: bump pandas from 2.0.1 to 2.0.2 (#388) (e23bb10)</li> <li>don't configure logging statically (DEV-2183) (#385) (7c82a59)</li> <li>move _derandomize_xsd_id (DEV-2186) #381 (e909384)</li> <li>refactor CLI part of excel2xml (DEV-2190) (#384) (cd9cbb7)</li> <li>remove autopep8 from dependencies (DEV-2213) #387 (993854b)</li> <li>speed up CI tests with caching (DEV-2165) (#369) (9283aa1)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#231-2023-05-23","title":"2.3.1 (2023-05-23)","text":""},{"location":"DSP-TOOLS/changelog/#bug-fixes_20","title":"Bug Fixes","text":"<ul> <li>process-files: allow files with whitespaces in filename, allow files with uppercase extension (DEV-2182) (#379) (7f63743)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#maintenance_22","title":"Maintenance","text":"<ul> <li>code formatting (DEV-2171) (#376) (96a4056)</li> <li>deps-dev: bump mkdocs-material from 9.1.11 to 9.1.14 (#377) (8095f6f)</li> <li>deps-dev: bump types-openpyxl from 3.1.0.7 to 3.1.0.8 (#374) (c536ebc)</li> <li>deps: bump requests from 2.30.0 to 2.31.0 (#378) (b932e03)</li> <li>enable automatic version updating by Dependabot (DEV-2170) #373 (bd1cfd2)</li> <li>lint e2e tests (DEV-2160) (#366) (e75eb27)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#230-2023-05-17","title":"2.3.0 (2023-05-17)","text":""},{"location":"DSP-TOOLS/changelog/#bug-fixes_21","title":"Bug Fixes","text":"<ul> <li>get: write proper tests for get command, fix multiple bugs (DEV-2123) (#356) (edd671d)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#documentation_8","title":"Documentation","text":"<ul> <li>render nested lists correctly, adapt markdownlint rules, apply new rules everywhere (DEV-2134) (#358) (e899d5c)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#enhancements_15","title":"Enhancements","text":"<ul> <li>fast XML upload (DEV-1626) (#352) (c2f46ea)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#maintenance_23","title":"Maintenance","text":"<ul> <li>bump dependencies, add docker, update readme, remove unused poetry exec script (DEV-2159) (#365) (69d65e7)</li> <li>bump start-stack to 2023.05.01 (DEV-2164) #368 (646586b)</li> <li>deps: bump pymdown-extensions from 9.11 to 10.0 (#370) (1764e81)</li> <li>excel2xml: minor improvements (DEV-2152) #360 (1d24848)</li> <li>log every CLI call to dsp-tools (DEV-2156) #362  (a93cb86)</li> <li>make all test files executable with pytest (DEV-2157) (1e4d427)</li> <li>prevent access to unset attribute of BaseError (DEV-2158) #364 (b0e089d)</li> <li>resolve CodeQL issues (DEV-2169) #371 (6822344)</li> <li>update mypy, resolve all mypy+pylint issues in \"unittests\", unignore \"unittests\" in CI pipline (DEV-2131) (#357) (b75e2c7)</li> <li>XML validation: resource's iri and ark must be unique, resource's label must not be empty (DEV-2154) (#361) (62ec04b)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#222-2023-05-03","title":"2.2.2 (2023-05-03)","text":""},{"location":"DSP-TOOLS/changelog/#bug-fixes_22","title":"Bug Fixes","text":"<ul> <li>xmlupload: print reason of error if a resource cannot be created, remodel BaseError (DEV-1977) (#349) (7f60b1a)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#maintenance_24","title":"Maintenance","text":"<ul> <li>bump start-stack to 2023.04.03 (DEV-2117) (#355) (1abb081)</li> <li>resolve linting errors, make linting checks in CI more strict (DEV-2080) (#354) (e3daff3)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#221-2023-04-18","title":"2.2.1 (2023-04-18)","text":""},{"location":"DSP-TOOLS/changelog/#maintenance_25","title":"Maintenance","text":"<ul> <li>bump dependencies (DEV-1960) #350 (5b999f5)</li> <li>bump start-stack to 2023.04.02 (DEV-1933) (#351) (163ac19)</li> <li>get: allow shortname to be uppercase (DEV-1972) #346 (e0ce7d4)</li> <li>inside a JSON or Excel file, resource &amp; property names must be unique (DEV-1971) (#345) (c6df889)</li> <li>refactor try_network_action() (DEV-1844) (#325) (896586f)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#220-2023-03-21","title":"2.2.0 (2023-03-21)","text":""},{"location":"DSP-TOOLS/changelog/#bug-fixes_23","title":"Bug Fixes","text":"<ul> <li>allow Pulldown, Radio, and List as gui_elements for lists (DEV-1810) (#330) (5ff1aac)</li> <li>correct broken schema references in test data files (DEV-1832) #323 (512de36)</li> <li>create, get: handle comment to ontology (DEV-1852) #326 (5af3f19)</li> <li>create: allow identical onto names if they belong to different projects (DEV-1777) (#314) (7139f67)</li> <li>create: prevent infinite loop when super-resource is not existing (DEV-1886) (#338) (b176b7c)</li> <li>xmlupload: legitimate html-escapes in utf8-texts don't raise a validation error any more (DEV-1936) (#341) (cf90269)</li> <li>xmlupload: write metrics only when requested to do so (DEV-1883) #334 (5c1196f)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#enhancements_16","title":"Enhancements","text":"<ul> <li>check out rosetta and upload it on local stack (DEV-1842) (#332) (d067cc1)</li> <li>create: create a resource class without cardinalities (DEV-1853) #327 (2d1cee0)</li> <li>new command to generate template repo, move schema files (DEV-1839) (#333) (9ea3a4f)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#documentation_9","title":"Documentation","text":"<ul> <li>replace outdated screenshot, use local copy of CSS of dsp-docs (DEV-1896) (#337) (c22c5e4)</li> <li>use single quotes around passwords to prevent problems with special characters (DEV-1825) #320 (ca2bf1a)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#maintenance_26","title":"Maintenance","text":"<ul> <li>adapt shortcode of import scripts (DEV-1925) (#340) (f440bda)</li> <li>bump start-stack to 2023.03.02 (DEV-1819) (#317) (54a4514)</li> <li>excel2json: improve error messages of excel2json (DEV-1789) (#315) (36a1209)</li> <li>implement logging system (DEV-132) (#335) (c92e943)</li> <li>merge dublette class into one class (DEV-1831) #322 (e5cddf5)</li> <li>minor improvements (DEV-1912) #336 (91664a9)</li> <li>new error handling strategy (DEV-1770) (#324) (f2aa4b0)</li> <li>remove pystrict dependency (DEV-1843) #329 (2111d21)</li> <li>save location for log files (DEV-1856) (#328) (30f914d)</li> <li>tidy up testdata folder (DEV-1822) (#319) (b5fe9fd)</li> <li>xmlupload: improve user feedback when shortcode or onto are inexistent (DEV-1827) (#321) (f21a64e)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#211-2023-03-08","title":"2.1.1 (2023-03-08)","text":""},{"location":"DSP-TOOLS/changelog/#bug-fixes_24","title":"Bug Fixes","text":"<ul> <li>excel2json: add missing comments in the resources template (DEV-1765) #303 (b2532e4)</li> <li>excel2xml: make_xsd_id_compatible() does now replace all special characters (DEV-1792) (#313) (b87f903)</li> <li>excel2xml: proper handling of special characters in text properties, depending on the encoding (DEV-1719) (#296) (c8f1e7a)</li> <li>get: prevent invalid gui_element \"Pulldown\" (DEV-1781) #312 (c5d355e)</li> <li>invalid argument names in CLI entrypoint (DEV-1776) #310 (6e1a6fb)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#maintenance_27","title":"Maintenance","text":"<ul> <li>allow input of xmlupload to be parsed (DEV-1780) (#311) (abc167f)</li> <li>beautify stack traces (DEV-1766) #305 (17b6f2f)</li> <li>bump start-stack to 2023.03.01 (DEV-1802) (#316) (3d3f476)</li> <li>harmonize CLI help texts with the CLI commands documentation (DEV-1767) (#306) (f9e4dca)</li> <li>new error handling strategy (DEV-1773) (#307) (4c02e18)</li> <li>refactor list creation (DEV-1775) (#309) (78a8488)</li> <li>refactor onto creation (DEV-1774) (#308) (f5a16e4)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#210-2023-02-21","title":"2.1.0 (2023-02-21)","text":""},{"location":"DSP-TOOLS/changelog/#bug-fixes_25","title":"Bug Fixes","text":"<ul> <li>create: improve validation to prevent endless loop if properties are undefined (DEV-1720) (#297) (ee3e446)</li> <li>create: property from other ontology not found (DEV-1381) #299 (d1345ec)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#documentation_10","title":"Documentation","text":"<ul> <li>fix identical heading problem, assimilate mkdocs config to dsp-docs (DEV-1713) (#294) (c235ff3)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#enhancements_17","title":"Enhancements","text":"<ul> <li>excel2json: add support for gui_order, make templates better understandable (DEV-1711) (#293) (3b5304f)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#maintenance_28","title":"Maintenance","text":"<ul> <li>bump start-stack to 2023.02.02 (DEV-1732) #302 (b97a696)</li> <li>enhanced xmlupload: add test onto (DEV-1760) #300 (ca32842)</li> <li>excel2xml: allow PathLike for bitstream-prop (DEV-1729) #298 (ab9386f)</li> <li>remove temporary workaround in GET groups (DEV-1733) #301 (7ead9de)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#203-2023-02-07","title":"2.0.3 (2023-02-07)","text":""},{"location":"DSP-TOOLS/changelog/#documentation_11","title":"Documentation","text":"<ul> <li>restructure docs, add link-checking (DEV-1623) (#286) (d65ff53)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#maintenance_29","title":"Maintenance","text":"<ul> <li>access data files correctly (DEV-1618) (#288) (7a64a27)</li> <li>bump start-stack to 2023.02.01 (DEV-1709) (#292) (5fd58d2)</li> <li>bump versions of start-stack to 2023.01.02 (DEV-1652) (#290) (2889a20)</li> <li>update links according to new structure of docs (DEV-1648) (#289) (16d9c12)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#202-2023-01-17","title":"2.0.2 (2023-01-17)","text":""},{"location":"DSP-TOOLS/changelog/#bug-fixes_26","title":"Bug Fixes","text":"<ul> <li>get command fails if no groups are on the server (DEV-1622) (#283) (d6bf458)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#documentation_12","title":"Documentation","text":"<ul> <li>fix broken links, make dsp-tools uppercase (DEV-1550) (#284) (aa66109)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#201-2023-01-17","title":"2.0.1 (2023-01-17)","text":""},{"location":"DSP-TOOLS/changelog/#maintenance_30","title":"Maintenance","text":"<ul> <li>bump versions of start-stack, use dynamic project IRI in get command (DEV-1613) (#282) (2ecf4f5)</li> <li>refactor project creation (DEV-1165) (#280) (5e662a6)</li> <li>use start-stack command for e2e tests, replace Makefile by poetry-exec-plugin (DEV-1597) (#279) (6b85d15)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#200-2023-01-09","title":"2.0.0 (2023-01-09)","text":""},{"location":"DSP-TOOLS/changelog/#breaking-changes_5","title":"\u26a0 BREAKING CHANGES","text":"<ul> <li>switch to src layout, use poetry, add developer docs (DEV-1523) (#276)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#maintenance_31","title":"Maintenance","text":"<ul> <li>adapt schema URLs, adapt title of release-please PR (DEV-1596) (#278) (67f6475)</li> <li>switch to src layout, use poetry, add developer docs (DEV-1523) (#276) (6ae3b4f)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#1222-2022-12-21","title":"1.22.2 (2022-12-21)","text":""},{"location":"DSP-TOOLS/changelog/#bug-fixes_27","title":"Bug Fixes","text":"<ul> <li>start-stack: copy docker folder to user's home directory (DEV-1581) (#274) (b0ebfc5)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#1221-2022-12-20","title":"1.22.1 (2022-12-20)","text":""},{"location":"DSP-TOOLS/changelog/#bug-fixes_28","title":"Bug Fixes","text":"<ul> <li>start-stack: use TTL files from DSP-API v24.0.8 (DEV-1580) (#273) (3ad96ba)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#documentation_13","title":"Documentation","text":"<ul> <li>improve documentation of DSP permission system (DEV-1561) (#270) (33ab59d)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#1220-2022-12-19","title":"1.22.0 (2022-12-19)","text":""},{"location":"DSP-TOOLS/changelog/#bug-fixes_29","title":"Bug Fixes","text":"<ul> <li>excel2xml: better standard permissions (permissions definitions at top of XML file) (DEV-1560) (#268) (b0d30be)</li> <li>xmlupload: improve URL recognition (DEV-1557) (#266) (60f8fe5)</li> <li>xmlupload: prevent crash + improve error message when cardinalities are wrong (DEV-1559) #267 (7bfd82f)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#documentation_14","title":"Documentation","text":"<ul> <li>excel2json: use rosetta as example data (DEV-1478) (#254) (af192cb)</li> <li>readme: explain handling of git submodules (DEV-1502) (#256) (1dc8483)</li> <li>text values: describe which combinations of gui_element and encoding are desirable (DEV-1521) (#259) (21967c6)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#enhancements_18","title":"Enhancements","text":"<ul> <li>use docker commands for stack handling (DEV-1530) (#261) (c11edc5)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#maintenance_32","title":"Maintenance","text":"<ul> <li>bump versions of GitHub actions (DEV-1532) #263 (efc9f51)</li> <li>fix regex for PR title (DEV-1504) (#257) (d4feb68)</li> <li>start-api: adjust version numbers of DSP-API and DSP-APP according to 2022.11.01 (DEV-1579) #271 (10dcd2f)</li> <li>xmlupload: add metrics flag (DEV-1512) (#264) (f4822dc)</li> <li>xmlupload: handling of upload errors (DEV-1505) (#250) (1507b21)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#1210-2022-11-11","title":"1.21.0 (2022-11-11)","text":""},{"location":"DSP-TOOLS/changelog/#bug-fixes_30","title":"Bug Fixes","text":"<ul> <li>bugs in json schema (DEV-1142) (#252) (92af830)</li> <li>excel2xml: prevent writing empty text-prop, make text-prop validation less restrictive (DEV-1440) #243 (ae777e4)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#enhancements_19","title":"Enhancements","text":"<ul> <li>add command excel2json to create JSON project file from folder with Excel files (DEV-960) (#248) (e8e05e4)</li> <li>startup API and APP with dsp-tools (DEV-126) (#246) (de182dc)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#documentation_15","title":"Documentation","text":"<ul> <li>improve docs (DEV-1478) (#249) (7947dec)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#1200-2022-10-18","title":"1.20.0 (2022-10-18)","text":""},{"location":"DSP-TOOLS/changelog/#maintenance_33","title":"Maintenance","text":"<ul> <li>xmlupload: improve error message when syntax for referencing ontos is wrong (DEV-1399) (#237) (df0bf33)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#documentation_16","title":"Documentation","text":"<ul> <li>user needs to be project member to become project admin (DEV-1383) (#241) (1a13c02)</li> <li>xmlupload: improve examples, add documentation of geometry-prop JSON format (#240) (7df1d86)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#enhancements_20","title":"Enhancements","text":"<ul> <li>xmlupload: enable migration of resource creation date (DEV-1402) (#238) (83dd2de)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#1190-2022-10-07","title":"1.19.0 (2022-10-07)","text":""},{"location":"DSP-TOOLS/changelog/#bug-fixes_31","title":"Bug Fixes","text":"<ul> <li>fix command <code>dsp-tools xmlupload --validate</code> (DEV-1360) (#230) (0b2bd40)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#enhancements_21","title":"Enhancements","text":"<ul> <li>address feedback to <code>excel2xml</code>: remove param <code>values</code> in all <code>make_*_prop()</code> methods, and fix some bugs (DEV-1361) (#232) (a7e9d85)</li> <li>change input format of <code>excel</code> command: use 1 Excel file for all same-language lists, rename command to <code>excel2lists</code> (DEV-955) (#228) (21cc6bc)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#documentation_17","title":"Documentation","text":"<ul> <li>improve docs and example data for excel2xml: create repo 0123-import-scripts (DEV-1370) (#233) (9c6827e)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#maintenance_34","title":"Maintenance","text":"<ul> <li>bump versions (DEV-1117) #235 (fc9c03c)</li> <li>fix release-please (DEV-1396) #234 (3bd92d8)</li> <li>reduce GitHub workflow frequency (DEV-1344) #227 (a0722d8)</li> <li>tests: enforce JKD 17 (DEV-1366) (#231) (1036acd)</li> <li>tidy up excel2lists, excel2resources, excel2properties (DEV-1352) (#229) (d2c2e08)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#1180-2022-09-09","title":"1.18.0 (2022-09-09)","text":""},{"location":"DSP-TOOLS/changelog/#enhancements_22","title":"Enhancements","text":"<ul> <li>add module csv2xml to convert tabular data to DSP-XML (DEV-134) (#219) (19393aa)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#maintenance_35","title":"Maintenance","text":"<ul> <li>tidy up makefile (DEV-1166) (#223) (dca0854)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#documentation_18","title":"Documentation","text":"<ul> <li>clarify docs of onto creation (DEV-1164) (#225) (f64d2cf)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#1171-2022-08-22","title":"1.17.1 (2022-08-22)","text":""},{"location":"DSP-TOOLS/changelog/#bug-fixes_32","title":"Bug Fixes","text":"<ul> <li>bugs in xmlupload and resource.py (DEV-1140) #217 (5e402e4)</li> <li>PyPI deployment (DEV-1270) (#220) (dafaa7e)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#1170-2022-08-16","title":"1.17.0 (2022-08-16)","text":""},{"location":"DSP-TOOLS/changelog/#bug-fixes_33","title":"Bug Fixes","text":"<ul> <li>catch network interruptions during onto creation (DEV-1073) (#210) (ab0e3b2)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#maintenance_36","title":"Maintenance","text":"<ul> <li>stop serving docs to dasch-swiss.github.io (DEV-826) (#211) (f2d25f9)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#documentation_19","title":"Documentation","text":"<ul> <li>add links from usage subpage to other subpages (DEV-812) (#208) (92ac678)</li> <li>fix outdated links (DEV-1194) #215 (6849737)</li> <li>sort entries alphabetically (DEV-1184) (#212) (75c6ae5)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#enhancements_23","title":"Enhancements","text":"<ul> <li>add isSequenceOf (DEV-746) (#214) (991d424)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#1160-2022-07-18","title":"1.16.0 (2022-07-18)","text":""},{"location":"DSP-TOOLS/changelog/#enhancements_24","title":"Enhancements","text":"<ul> <li>xmlupload: implement , , and  tags (DEV-855) (#204) (5044a9e)"},{"location":"DSP-TOOLS/changelog/#1151-2022-06-23","title":"1.15.1 (2022-06-23)","text":""},{"location":"DSP-TOOLS/changelog/#bug-fixes_34","title":"Bug Fixes","text":"<ul> <li>excel2resources, excel2properties: cover all cases (DEV-1040) (#201) (4c6ed19)</li> <li>xmlupload crashes without writing id2iri mapping (DEV-813) (#194) (7948e75)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#maintenance_37","title":"Maintenance","text":"<ul> <li>unpin dependency versions (DEV-983) (#200) (5c56601)</li> <li>xmlupload: refactor xmlupload, add unittest (DEV-1043) (#203) (fcf8384)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#1150-2022-06-02","title":"1.15.0 (2022-06-02)","text":""},{"location":"DSP-TOOLS/changelog/#bug-fixes_35","title":"Bug Fixes","text":"<ul> <li>onto validation: correctly identify circular dependencies (DEV-769) (#192) (ed35902)</li> <li>testdata: remove salsah-links from id2iri/test-id2iri-data.xml (DEV-975) (#199) (7548501)</li> <li>xmlupload: prevent crash with incremental option (DEV-811) (#197) (cccb5e8)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#enhancements_25","title":"Enhancements","text":"<ul> <li>add romansh (DEV-867) (#193) (86d3e6a)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#documentation_20","title":"Documentation","text":"<ul> <li>xmlupload: better explanation of permissions (DEV-969) (#196) (d3efde8)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#1140-2022-05-03","title":"1.14.0 (2022-05-03)","text":""},{"location":"DSP-TOOLS/changelog/#enhancements_26","title":"Enhancements","text":"<ul> <li>xmlupload: support Baseclass MovingImageRepresentation (#185) (7ebf588)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#documentation_21","title":"Documentation","text":"<ul> <li>fix typos in documentation (DEV-849) (#189) (f887edd)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#maintenance_38","title":"Maintenance","text":"<ul> <li>json-schema: change JSON schema version to draft-07 (DEV-848) (#188) (8ca6f87)</li> <li>update lists.json (DEV-851) (#190) (e0254be)</li> <li>update schema-files (DEV-449) (#187) (9a5a50b)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#1130-2022-04-25","title":"1.13.0 (2022-04-25)","text":""},{"location":"DSP-TOOLS/changelog/#bug-fixes_36","title":"Bug Fixes","text":"<ul> <li>get: handle slash at end of server, improve docs (DEV-734) (17c0a40)</li> <li>groups: dsp-tools should not allow group creation if group name already in use (DEV-798) (#183) (8f168ca)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#enhancements_27","title":"Enhancements","text":"<ul> <li>add support for external ontologies (dev-512) (#170) (ff36bc1)</li> <li>get: get more infos from user (DEV-641) (#181) (407f5c5)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#maintenance_39","title":"Maintenance","text":"<ul> <li>bump dependencies (DEV-815) (#184) (5d2d109)</li> <li>change to pipenv (DEV-764) (#177) (6c44688)</li> <li>improve XML and JSON Schemas (DEV-449) (#180) (2c17b9d)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#1122-2022-03-31","title":"1.12.2 (2022-03-31)","text":""},{"location":"DSP-TOOLS/changelog/#bug-fixes_37","title":"Bug Fixes","text":"<ul> <li>add missing dependency (DEV-763) (1cda29e)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#1121-2022-03-31","title":"1.12.1 (2022-03-31)","text":""},{"location":"DSP-TOOLS/changelog/#maintenance_40","title":"Maintenance","text":"<ul> <li>remove bazel (DEV-735) (#172) (e12e9dd)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#1120-2022-03-25","title":"1.12.0 (2022-03-25)","text":""},{"location":"DSP-TOOLS/changelog/#bug-fixes_38","title":"Bug Fixes","text":"<ul> <li>onto creation: prevent sorting algorith from modifying original ontology (#169) (9a9e5f0)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#enhancements_28","title":"Enhancements","text":"<ul> <li>onto creation: allow that resources and properties are not sorted by inheritance (DEV-626) (#167) (2ebece3)</li> <li>xmlupload: allow circular references (DEV-577) (#165) (75a444f)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#1110-2022-02-28","title":"1.11.0 (2022-02-28)","text":""},{"location":"DSP-TOOLS/changelog/#enhancements_29","title":"Enhancements","text":"<ul> <li>improve prefix handling in json ontos (DEV-572) (#164) (8610885)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#1101-2022-02-23","title":"1.10.1 (2022-02-23)","text":""},{"location":"DSP-TOOLS/changelog/#documentation_22","title":"Documentation","text":"<ul> <li>add explanation how an Excel file for list creation must be structured (DEV-533) (#159) (660d57b)</li> <li>explain the interval-prop more precisely (#162) (00c18dc)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#1100-2022-02-21","title":"1.10.0 (2022-02-21)","text":""},{"location":"DSP-TOOLS/changelog/#documentation_23","title":"Documentation","text":"<ul> <li>add validate argparse info to xmlupload (#156) (08ddebd)</li> <li>improve docs (DEV-450) (#152) (be5b69f)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#maintenance_41","title":"Maintenance","text":"<ul> <li>excel to json list (DEV-431) (#155) (8a8c9d0)</li> <li>xml-upload: print XML validation errors when xmlupload fails due to validation (DEV-387) (#149) (03554c2)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#enhancements_30","title":"Enhancements","text":"<ul> <li>improve json schema validation error output (DEV-456) (#153) (9f92b66)</li> <li>make comments optional for new properties and resources (DEV-502) (#158) (9c30746)</li> <li>ontology: add Representation (DEV-551) (#160) (cba7be0)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#190-2022-01-27","title":"1.9.0 (2022-01-27)","text":""},{"location":"DSP-TOOLS/changelog/#documentation_24","title":"Documentation","text":"<ul> <li>add isPartOf and seqnum properties to documentation (DEV-216) (#145) (09d42a4)</li> <li>dsp-tools-excel: mention the GUI order and other small improvements (DEV-99) (#148) (853068d)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#enhancements_31","title":"Enhancements","text":"<ul> <li>xmlupload: use custom IRIs created from salsah ARKs for XML upload (DEV-179) (#147) (873324a)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#181-2022-01-11","title":"1.8.1 (2022-01-11)","text":""},{"location":"DSP-TOOLS/changelog/#bug-fixes_39","title":"Bug Fixes","text":"<ul> <li>problem with reference to list values (DEV-356) (#143) (3fce99a)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#maintenance_42","title":"Maintenance","text":"<ul> <li>deps: bump nltk from 3.6.5 to 3.6.6 (#142) (4f91098)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#180-2022-01-10","title":"1.8.0 (2022-01-10)","text":""},{"location":"DSP-TOOLS/changelog/#bug-fixes_40","title":"Bug Fixes","text":"<ul> <li>ontology: add default values for missing comments (DEV-337) (#141) (6f0094e)</li> <li>print only unresolvable resptrs (#139) (cbe1876)</li> <li>restrict the creation of classes without cardinalities (DEV-305) (#136) (5604a5b)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#enhancements_32","title":"Enhancements","text":"<ul> <li>excel-to-json: allow comments in class and property definitions (#111) (807959f)</li> <li>get: extend get command to get more information (DEV-139) (#137) (9ce6722)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#maintenance_43","title":"Maintenance","text":"<ul> <li>improve ontology schema and extend tests (DEV-313) (#140) (656ccff)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#171-2021-12-14","title":"1.7.1 (2021-12-14)","text":""},{"location":"DSP-TOOLS/changelog/#bug-fixes_41","title":"Bug Fixes","text":"<ul> <li>groups: make groups optional (DEV-138) (#135) (6aa1aa7)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#maintenance_44","title":"Maintenance","text":"<ul> <li>deps: bump lxml from 4.6.4 to 4.6.5 (#133) (605dc2f)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#170-2021-12-07","title":"1.7.0 (2021-12-07)","text":""},{"location":"DSP-TOOLS/changelog/#bug-fixes_42","title":"Bug Fixes","text":"<ul> <li>boolean-values: allow 0 and 1 as boolean values (DEV-251) (#131) (fd58ad4)</li> <li>create-ontology: within an ontology, references to the ontology itself are not possible (DEV-135) (#130) (6a40fc6)</li> <li>permissions: use permissions in xml upload (DEV-178) (#127) (4dad0ce)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#documentation_25","title":"Documentation","text":"<ul> <li>update out-of-date example in docs (DEV-265) (#125) (0dc724c)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#enhancements_33","title":"Enhancements","text":"<ul> <li>update DSP-Tools to support ArchiveRepresentation (DEV-259) (#128) (85a40c2)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#161-2021-11-25","title":"1.6.1 (2021-11-25)","text":""},{"location":"DSP-TOOLS/changelog/#bug-fixes_43","title":"Bug Fixes","text":"<ul> <li>inconsistencies in groups and projects (DEV-261) (#121) (f9a95ed)</li> <li>schema: list root node needs a comments object (DEV-61) (#122) (7bdc589)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#160-2021-11-22","title":"1.6.0 (2021-11-22)","text":""},{"location":"DSP-TOOLS/changelog/#bug-fixes_44","title":"Bug Fixes","text":"<ul> <li>comments: fix comments in ontology creation (DEV-250) (#119) (08effdf)</li> <li>update dsp-tools to work with API version 16.0.0 (#117) (af70e9b)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#documentation_26","title":"Documentation","text":"<ul> <li>add time value section (#116) (8ef0329)</li> <li>typo: correcting typos in documentation (#112) (08c1059)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#enhancements_34","title":"Enhancements","text":"<ul> <li>id-to-iri: extend xmlupload to allow references to existing resources (DEV-60) (#108) (40b01db)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#152-2021-11-16","title":"1.5.2 (2021-11-16)","text":""},{"location":"DSP-TOOLS/changelog/#maintenance_45","title":"Maintenance","text":"<ul> <li>documentation: add missing documentation for excel2resources (DEV-144) (cde0db5)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#151-2021-10-13","title":"1.5.1 (2021-10-13)","text":""},{"location":"DSP-TOOLS/changelog/#bug-fixes_45","title":"Bug Fixes","text":"<ul> <li>schema-documentation: update schemas and documentation (DEV-61) (#105) (4d9c1e4)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#150-2021-09-24","title":"1.5.0 (2021-09-24)","text":""},{"location":"DSP-TOOLS/changelog/#enhancements_35","title":"Enhancements","text":"<ul> <li>schema: add error codes for validation (DSP-1902) (#101) (0bc6149)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#142-2021-09-21","title":"1.4.2 (2021-09-21)","text":""},{"location":"DSP-TOOLS/changelog/#bug-fixes_46","title":"Bug Fixes","text":"<ul> <li>docs: fix example in documentation (DSP-1740) (#99) (11cdd72)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#141-2021-09-20","title":"1.4.1 (2021-09-20)","text":""},{"location":"DSP-TOOLS/changelog/#maintenance_46","title":"Maintenance","text":"<ul> <li>schemas: update schemas (DSP-1902) (#92) (16ba335)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#140-2021-09-16","title":"1.4.0 (2021-09-16)","text":""},{"location":"DSP-TOOLS/changelog/#documentation_27","title":"Documentation","text":"<ul> <li>typo: correct typo in documentation (#85) (c689d7f)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#enhancements_36","title":"Enhancements","text":"<ul> <li>excel-to-properties: create properties from Excel (DSP-1577) (#89) (9f48e9a)</li> <li>excel-to-resources: create resources from excel (DSP-1576) (#88) (7b0302f)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#133-2021-09-07","title":"1.3.3 (2021-09-07)","text":""},{"location":"DSP-TOOLS/changelog/#bug-fixes_47","title":"Bug Fixes","text":"<ul> <li>wrong values &amp;   property (#86) (7cf6405)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#132-2021-08-17","title":"1.3.2 (2021-08-17)","text":""},{"location":"DSP-TOOLS/changelog/#bug-fixes_48","title":"Bug Fixes","text":"<ul> <li>import: fix import error when starting script directly (   DSP-1869) (05b1eb1)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#131-2021-08-11","title":"1.3.1 (2021-08-11)","text":""},{"location":"DSP-TOOLS/changelog/#bug-fixes_49","title":"Bug Fixes","text":"<ul> <li>manifest: fix documentation and missing files (   DSP-1580) (#80) (3345f2a)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#130-2021-08-10","title":"1.3.0 (2021-08-10)","text":""},{"location":"DSP-TOOLS/changelog/#enhancements_37","title":"Enhancements","text":"<ul> <li>excel-lists: create multilanguage json lists from excel files (   DSP-1580) (#75) (06d071a)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#121-2021-07-27","title":"1.2.1 (2021-07-27)","text":""},{"location":"DSP-TOOLS/changelog/#bug-fixes_50","title":"Bug Fixes","text":"<ul> <li>release: fix skipped release after pull request #74 (   DSP-1797) (#76) (c8e0a11)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#120-2021-07-26","title":"1.2.0 (2021-07-26)","text":""},{"location":"DSP-TOOLS/changelog/#enhancements_38","title":"Enhancements","text":"<ul> <li>verbose xml upload: use v option to print verbose output in XML upload (   DSP-1797) (#70) (b1f56a1)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#116-2021-07-22","title":"1.1.6 (2021-07-22)","text":""},{"location":"DSP-TOOLS/changelog/#documentation_28","title":"Documentation","text":"<ul> <li>add   changelog (#71) (ce1feab)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#115-2021-07-14","title":"1.1.5 (2021-07-14)","text":""},{"location":"DSP-TOOLS/changelog/#documentation_29","title":"Documentation","text":"<ul> <li>dsp-tools-xmlupload: Add Warning   section (#69) (05baf3d)</li> <li>dsp-tools-xmlupload: addition to incomplete paragraph (   DSP-1693) (#67) (318547f)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#114-2021-06-16","title":"1.1.4 (2021-06-16)","text":""},{"location":"DSP-TOOLS/changelog/#documentation_30","title":"Documentation","text":"<ul> <li>add copyright information to docs (   DSP-1190) (#65) (0174c4a)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#113-2021-06-08","title":"1.1.3 (2021-06-08)","text":""},{"location":"DSP-TOOLS/changelog/#documentation_31","title":"Documentation","text":"<ul> <li>update readme after documentation update (   DSP-1693) (#63) (7b7dcca)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#112-2021-06-07","title":"1.1.2 (2021-06-07)","text":""},{"location":"DSP-TOOLS/changelog/#maintenance_47","title":"Maintenance","text":"<ul> <li>bump Bazel to version with M1   support (#60) (69772f4)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#documentation_32","title":"Documentation","text":"<ul> <li>improve documentation (   DSP-1693) (#62) (591b5ad)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#111-2021-04-20","title":"1.1.1 (2021-04-20)","text":""},{"location":"DSP-TOOLS/changelog/#bug-fixes_51","title":"Bug Fixes","text":"<ul> <li>fix import ontology from salsah-export (   DSP-1532) (#59) (6e3e7ca)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#maintenance_48","title":"Maintenance","text":"<ul> <li>fix doc deployment (   DSP-1492) (#57) (a55849e)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#110-2021-04-09","title":"1.1.0 (2021-04-09)","text":""},{"location":"DSP-TOOLS/changelog/#bug-fixes_52","title":"Bug Fixes","text":"<ul> <li>add create_ontology command line   configuration (3ab7e6b)</li> <li>add folder   independence (2460937)</li> <li>add missing   dependencies (4d75128)</li> <li>add user (277121b)</li> <li>bulk-import of multiple resource link   values (6ef8908),   closes #9</li> <li>cleanup api logging (   DSP-1076) (#46) (d48e704)</li> <li>command line   scripts (732a0fa)</li> <li>Correctly set user   password (9db6445)</li> <li>Correctly set user   password (3583ea2)</li> <li>Do not send logout request if token is not   set (9cfd484)</li> <li>removed exception if keywords   missing (81f7d97)</li> <li>requirements (b5941f1)</li> <li>typo (3def59d)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#documentation_33","title":"Documentation","text":"<ul> <li>fix twine   upload (bcc87ca)</li> <li>update publishing   description (6deb0da)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#enhancements_39","title":"Enhancements","text":"<ul> <li>import lists from excel (   DSP-1341) (#48) (3628992)</li> </ul>"},{"location":"DSP-TOOLS/changelog/#maintenance_49","title":"Maintenance","text":"<ul> <li>add existing files into new   structure (84dc1d2)</li> <li>add publishing   setup (c18c6b9)</li> <li>add pypi   badge (3fc148c)</li> <li>add runing tests on   travis (2eeaeb8)</li> <li>add runing tests on   travis (cf4f9e4)</li> <li>add runing tests on   travis (b8f3bbc)</li> <li>add runing tests on   travis (dc4fa02)</li> <li>add runing tests on   travis (16844d8)</li> <li>add runing tests on   travis (593ac85)</li> <li>add testing (   ongoing) (c175a16)</li> <li>allow release PRs in PR title   check (#54) (0414948)</li> <li>automate release process (   DSP-1492) (#52) (6a96eee)</li> <li>bump version (49bc9d8)</li> <li>bump version (e7364c7)</li> <li>bump version to 1.1.0 (   DSP-1492) (#55) (3814ed2)</li> <li>configure dependencies and command   line (7f79530)</li> </ul>"},{"location":"DSP-TOOLS/cli-commands/","title":"CLI commands","text":""},{"location":"DSP-TOOLS/cli-commands/#the-cli-commands-of-dsp-tools","title":"The CLI Commands of DSP-TOOLS","text":""},{"location":"DSP-TOOLS/cli-commands/#before-starting-have-in-mind-the-subdomains-of-a-dsp-server","title":"Before Starting: Have in Mind the Subdomains of a DSP Server","text":"<p>DaSCH follows some conventions when setting up DSP servers.  Most of the commands documented on this page assume that you know how to address the subdomains of a DSP server. There are three relevant URLs you should know about:</p> <ul> <li>Subdomains <code>admin</code>/<code>app</code> stand for the DSP-APP frontend that you look at in your browser</li> <li>Subdomain <code>api</code> stands for the DSP-API (where DSP-TOOLS sends its data to) </li> <li>Subdomain <code>iiif</code> stands for the SIPI server interface (where DSP-TOOLS sends the multimedia files to)</li> </ul> <p>This means that for uploading data to the DSP server  on the domain <code>dasch.swiss</code>,  you have to type the following:</p> <pre><code>dsp-tools xmlupload -s https://api.dasch.swiss -u 'your@email.com' -p 'password' xml_data_file.xml\n</code></pre> <p>If the user input is not correct, DSP-TOOLS tries to guess the correct subdomains. If the provided server is any one of the following:</p> <pre><code>http(s)://admin.dasch.swiss\nhttp(s)://app.dasch.swiss\nhttp(s)://api.dasch.swiss\nhttp(s)://iiif.dasch.swiss\nhttp(s)://dasch.swiss\ndasch.swiss\n</code></pre> <p>then DSP-TOOLS will treat it as <code>https://api.dasch.swiss</code>, and derive the SIPI server URL <code>https://iiif.dasch.swiss</code> from it.</p> <p>This guessing feature comes with a price, though:</p> <ul> <li>Only servers ending with <code>dasch.swiss</code> are supported.</li> <li>If a server's configuration differs from the convention described above, DSP-TOOLS will fail.</li> </ul>"},{"location":"DSP-TOOLS/cli-commands/#create","title":"<code>create</code>","text":"<p>This command reads a JSON project definition (containing one or more data models) and creates it on a DSP server.</p> <pre><code>dsp-tools create [options] project_definition.json\n</code></pre> <p>The following options are available:</p> <ul> <li><code>-s</code> | <code>--server</code> (optional, default: <code>0.0.0.0:3333</code>): URL of the DSP server </li> <li><code>-u</code> | <code>--user</code> (optional, default: <code>root@example.com</code>): username (e-mail) used for authentication with the DSP-API </li> <li><code>-p</code> | <code>--password</code> (optional, default: <code>test</code>): password used for authentication with the DSP-API </li> <li><code>-V</code> | <code>--validate-only</code> (optional): validate the JSON file without creating it on the DSP server</li> <li><code>-l</code> | <code>--lists-only</code> (optional): create only the lists (prerequisite: the project exists on the server)</li> <li><code>-v</code> | <code>--verbose</code> (optional): print more information about the progress to the console</li> </ul> <p>The defaults are intended for local testing: </p> <pre><code>dsp-tools create project_definition.json\n</code></pre> <p>This will create the project defined in <code>project_definition.json</code> on <code>localhost</code> for local viewing.</p> <p>In order to create the same project on the DSP server <code>https://app.dasch.swiss</code>, it is necessary to specify the following options:</p> <pre><code>dsp-tools create -s https://api.dasch.swiss -u 'your@email.com' -p 'password' project_definition.json\n</code></pre> <p>The expected JSON format is documented here.</p>"},{"location":"DSP-TOOLS/cli-commands/#get","title":"<code>get</code>","text":"<p>This command retrieves a project with its data model(s) from a DSP server  and writes it into a JSON file.  This JSON file can then be used  to create the same project on another DSP server. </p> <pre><code>dsp-tools get [options] project_definition.json\n</code></pre> <p>The following options are available:</p> <ul> <li><code>-s</code> | <code>--server</code> (optional, default: <code>0.0.0.0:3333</code>): URL of the DSP server </li> <li><code>-u</code> | <code>--user</code> (optional, default: <code>root@example.com</code>): username (e-mail) used for authentication with the DSP-API </li> <li><code>-p</code> | <code>--password</code> (optional, default: <code>test</code>): password used for authentication with the DSP-API </li> <li><code>-P</code> | <code>--project</code> (mandatory): shortcode, shortname or IRI of the project </li> <li><code>-v</code> | <code>--verbose</code> (optional): print more information about the progress to the console</li> </ul> <p>The defaults are intended for local testing: </p> <pre><code>dsp-tools get -P my_project project_definition.json\n</code></pre> <p>will get <code>my_project</code> from <code>localhost</code>.</p> <p>In order to get a project from the DSP server <code>https://app.dasch.swiss</code>, it is necessary to specify the following options:</p> <pre><code>dsp-tools get -s https://api.dasch.swiss -u 'your@email.com' -p 'password' -P my_project project_definition.json\n</code></pre> <p>It is possible to get a project from a DSP server without giving credentials. But in this case, the resulting JSON file won't have a \"users\" section.</p> <p>The expected JSON format is documented here.</p>"},{"location":"DSP-TOOLS/cli-commands/#xmlupload","title":"<code>xmlupload</code>","text":"<p>This command uploads data defined in an XML file to a DSP server. </p> <pre><code>dsp-tools xmlupload [options] xml_data_file.xml\n</code></pre> <p>The following options are available:</p> <ul> <li><code>-s</code> | <code>--server</code> (optional, default: <code>0.0.0.0:3333</code>): URL of the DSP server where DSP-TOOLS sends the data to</li> <li><code>-u</code> | <code>--user</code> (optional, default: <code>root@example.com</code>): username (e-mail) used for authentication with the DSP-API </li> <li><code>-p</code> | <code>--password</code> (optional, default: <code>test</code>): password used for authentication with the DSP-API</li> <li><code>-i</code> | <code>--imgdir</code> (optional, default: <code>.</code>): folder from where the paths in the <code>&lt;bitstream&gt;</code> tags are evaluated</li> <li><code>-V</code> | <code>--validate</code> (optional): validate the XML file without uploading it</li> <li><code>--interrupt-after=int</code> (optional): interrupt the upload after <code>int</code> resources have been uploaded</li> </ul> <p>Output:</p> <ul> <li>A file named <code>id2iri_mapping_[timestamp].json</code> is written to the current working directory.   This file should be kept if a second data delivery is added at a later point of time    see here.</li> </ul> <p>The defaults are intended for local testing: </p> <pre><code>dsp-tools xmlupload xml_data_file.xml\n</code></pre> <p>Will upload the data defined in <code>xml_data_file.xml</code> on <code>localhost</code> for local viewing.</p> <p>In order to upload the same data  to the DSP server <code>https://app.dasch.swiss</code>, it is necessary to specify the following options:</p> <pre><code>dsp-tools xmlupload -s https://api.dasch.swiss -u 'your@email.com' -p 'password' xml_data_file.xml\n</code></pre> <p>The expected XML format is documented here.</p> <p>If an XML upload is interrupted before it finished (e.g. by hitting <code>Ctrl + C</code>),  it can be resumed with the <code>resume-xmlupload</code> command.  When an upload is interrupted,  the current state of the upload is saved in a pickle file,  which is stored in <code>~/.dsp-tools/xmluploads/[server]/resumable/latest.pkl</code>.  If the upload should be resumed later, this file must remain in place.</p>"},{"location":"DSP-TOOLS/cli-commands/#resume-xmlupload","title":"<code>resume-xmlupload</code>","text":"Warning We do not guarantee that the state of an xmlupload is cleanly saved after <code>Ctrl + C</code>. We only guarantee this for <code>dsp-tools xmlupload --interrupt-after</code>. <p>This command resumes a previously interrupted XML upload.</p> <pre><code>dsp-tools resume-xmlupload [options]\n</code></pre> <p>The following options are available:</p> <ul> <li><code>-s</code> | <code>--server</code> (optional, default: <code>0.0.0.0:3333</code>): URL of the DSP server where DSP-TOOLS sends the data to</li> <li><code>-u</code> | <code>--user</code> (optional, default: <code>root@example.com</code>): username (e-mail) used for authentication with the DSP-API </li> <li><code>-p</code> | <code>--password</code> (optional, default: <code>test</code>): password used for authentication with the DSP-API</li> <li><code>--skip-first-resource</code> (optional): the <code>xmlupload</code> should skip the first saved resource.  This is not implemented for stashed links.</li> </ul> <p>For this command to work, the pickle file <code>~/.dsp-tools/xmluploads/[server]/resumable/latest.pkl</code> must exist.  Currently, only one interrupted upload can be resumed at a time per server.</p>"},{"location":"DSP-TOOLS/cli-commands/#excel2json","title":"<code>excel2json</code>","text":"<p>This command creates a JSON project definition file from a nested folder structure with Excel files.</p> <pre><code>dsp-tools excel2json excelfolder project_definition.json\n</code></pre> <p>The expected Excel file format and the folder structure are documented here.</p>"},{"location":"DSP-TOOLS/cli-commands/#excel2lists","title":"<code>excel2lists</code>","text":"<p>This command creates the \"lists\" section of a JSON project file from Excel files.</p> <pre><code>dsp-tools excel2lists [options] excelfolder lists_section.json\n</code></pre> <p>The following options are available:</p> <ul> <li><code>-v</code> | <code>--verbose</code> (optional): print more information about the progress to the console</li> </ul> <p>The expected Excel file format and the folder structure are documented  here.</p> Hint The command <code>excel2json</code> might be more convenient to use."},{"location":"DSP-TOOLS/cli-commands/#excel2resources","title":"<code>excel2resources</code>","text":"<p>This command creates the \"resources\" section of a JSON project file from an Excel file.</p> <pre><code>dsp-tools excel2resources resources.xlsx resources_section.json\n</code></pre> <p>The expected Excel format is documented here.</p> Hint The command <code>excel2json</code> might be more convenient to use."},{"location":"DSP-TOOLS/cli-commands/#excel2properties","title":"<code>excel2properties</code>","text":"<p>This command creates the \"properties\" section of a JSON project file from an Excel file.</p> <pre><code>dsp-tools excel2properties properties.xlsx properties_section.json\n</code></pre> <p>The expected Excel format is documented here.</p> Hint The command <code>excel2json</code> might be more convenient to use."},{"location":"DSP-TOOLS/cli-commands/#excel2xml","title":"<code>excel2xml</code>","text":"<p>This command creates an XML file from an Excel/CSV file that is already structured according to the DSP specifications. This is mostly used for DaSCH internal data migration.</p> <pre><code>dsp-tools excel2xml data_source.xlsx project_shortcode ontology_name\n</code></pre> <p>Arguments:</p> <ul> <li>data_source.xlsx (mandatory): path to the CSV or XLS(X) file containing the data</li> <li>project_shortcode (mandatory): shortcode of the project that this data belongs to</li> <li>ontology_name (mandatory): name of the ontology that the data belongs to</li> </ul> <p>The expected Excel format is documented here.</p> <p>If your data source is not yet structured according to the DSP specifications,  you need a custom Python script for the data transformation.  For this, you might want to import the module <code>excel2xml</code> into your Python script,  which is described here.</p>"},{"location":"DSP-TOOLS/cli-commands/#id2iri","title":"<code>id2iri</code>","text":"<p>This command replaces internal IDs of an XML file (<code>&lt;resptr&gt;</code> tags and salsah-links inside <code>&lt;text&gt;</code> tags) by IRIs provided in a mapping file.</p> <pre><code>dsp-tools id2iri xmlfile.xml mapping.json\n</code></pre> <p>The following options are available:</p> <ul> <li><code>-r</code> | <code>--remove-resources</code> (optional): remove resources if their ID is in the mapping </li> </ul> <p>The output file is written to <code>[original name]_replaced_[timestamp].xml</code>.</p> <p>If the flag <code>--remove-resources</code> is set, all resources of which the ID is in the mapping are removed from the XML file. This prevents doubled resources on the DSP server, because normally, the resources occurring in the mapping already exist on the DSP server.</p> <p>This command cannot be used isolated,  because it is part of a bigger procedure  that is documented here.</p>"},{"location":"DSP-TOOLS/cli-commands/#start-stack","title":"<code>start-stack</code>","text":"<p>This command runs a local instance of DSP-API and DSP-APP.</p> <pre><code>dsp-tools start-stack\n</code></pre> <p>DSP-TOOLS will ask you for permission to clean Docker with a <code>docker system prune</code>. This will remove all unused containers, networks and images. If you don't know what that means, just type <code>y</code> (\"yes\") and then <code>Enter</code>.</p> <p>The following options are available:</p> <ul> <li><code>--max_file_size=int</code> (optional, default: <code>2000</code>): max. multimedia file size allowed by SIPI, in MB (max: 100'000)</li> <li><code>--latest</code> (optional):    instead of the latest deployed version,   use the latest development version of DSP-API (from the <code>main</code> branch)</li> <li><code>--prune</code> (optional): execute <code>docker system prune</code> without asking</li> <li><code>--no-prune</code> (optional): don't execute <code>docker system prune</code> (and don't ask)</li> </ul> <p>Example: If you start the stack with <code>dsp-tools start-stack --max_file_size=1000</code>,  it will be possible to upload files that are up to 1 GB big.  If a file bigger than <code>max_file_size</code> is uploaded,  SIPI will reject it.</p> <p>More help for this command can be found here.</p>"},{"location":"DSP-TOOLS/cli-commands/#stop-stack","title":"<code>stop-stack</code>","text":"<p>When your work is done, shut down DSP-API and DSP-APP with</p> <pre><code>dsp-tools stop-stack\n</code></pre> <p>This deletes all Docker volumes, and removes all data that was in the database.</p>"},{"location":"DSP-TOOLS/cli-commands/#template","title":"<code>template</code>","text":"<p>This command creates a template repository with a minimal JSON and XML file.</p> <pre><code>dsp-tools template\n</code></pre>"},{"location":"DSP-TOOLS/cli-commands/#rosetta","title":"<code>rosetta</code>","text":"<p>Clone the most up to date rosetta repository from GitHub into ~/.dsp-tools, create its data model and upload its XML file.</p> <pre><code>dsp-tools rosetta\n</code></pre> <p>A DSP stack must be running before executing this command.</p>"},{"location":"DSP-TOOLS/excel2xml-module/","title":"excel2xml module","text":""},{"location":"DSP-TOOLS/excel2xml-module/#the-excel2xml-module","title":"The excel2xml Module","text":""},{"location":"DSP-TOOLS/excel2xml-module/#two-use-cases-two-approaches","title":"Two Use Cases - Two Approaches","text":"<p>There are two kinds of Excel files that can be transformed into an XML file:</p> structure provenance tool example screenshot custom structure customer module <code>excel2xml</code> DSP structure DSP server CLI command <code>excel2xml</code> <p>The first use case is the most frequent: The DaSCH receives a data export from a research project. Every project uses  different software, so every project will deliver their data in a different structure. The screenshot is just a  simplified example. For this use case, it is necessary to write a Python script that transforms the data from an  undefined state X into a DSP-conforming XML file that can be uploaded with <code>dsp-tools xmlupload</code>. For this, you need to import the module <code>excel2xml</code> into your Python script.</p> <p>The second use case is less frequent: In DaSCH we migrate data internally from one server to another. In this case, the  data already has the correct structure, and can automatically be transformed to XML.  This can be done with the CLI command <code>excel2xml</code>.</p> <p>This page deals only with the first use case, the module <code>excel2xml</code>.</p>"},{"location":"DSP-TOOLS/excel2xml-module/#module-excel2xml-convert-a-data-source-to-xml","title":"Module <code>excel2xml</code>: Convert a Data Source to XML","text":"<p>To demonstrate the usage of the <code>excel2xml</code> module,  there is a GitHub repository named <code>00A1-import-scripts</code>. It contains:</p> <ul> <li>a sample JSON project file</li> <li>sample data that fits the data model of the JSON project file</li> <li>a sample Python script that demonstrates how to use the module <code>excel2xml</code>.</li> </ul> <p>Navigate to https://github.com/dasch-swiss/00A1-import-scripts and follow the steps described there.  The README will teach you some basics that will be necessary to work with <code>excel2xml</code>.  Once you are familiar with the basics,  return to this page to learn how the sample Python script works. </p> <p>This is the simplified pattern how the Python script works:</p> <pre><code>1  main_df = pd.read_csv(\"excel2xml_sample_data.csv\", dtype=\"str\", sep=\",\")\n2  root = excel2xml.make_root(...)\n3  root = excel2xml.append_permissions(root)\n4  # if necessary: create list mappings, according to explanation below\n5  for index, row in main_df.iterrows():\n6      resource = excel2xml.make_resource(...)\n7      resource.append(excel2xml.make_text_prop(...))\n8      root.append(resource)\n9  excel2xml.write_xml(root, \"data.xml\")\n</code></pre> <pre><code>1 read in your data source with the pandas library (https://pandas.pydata.org/)  \n2 create the root element `&lt;knora&gt;`  \n3 append the permissions  \n4 if necessary: create list mappings (see below)  \n5 iterate through the rows of your data source:  \n6     create the `&lt;resource&gt;` tag  \n7     append properties to it  \n8     append the resource to the root tag `&lt;knora&gt;`  \n9 save the finished XML file  \n</code></pre> <p> These steps are now explained in-depth:</p>"},{"location":"DSP-TOOLS/excel2xml-module/#1-read-in-your-data-source","title":"1. Read in Your Data Source","text":"<p>In the first paragraph of the sample script, insert your ontology name, project shortcode, and the path to your data  source. If necessary, activate one of the lines that are commented out.  </p>"},{"location":"DSP-TOOLS/excel2xml-module/#2-create-root-element-knora","title":"2. Create Root Element <code>&lt;knora&gt;</code>","text":"<p>Then, the root element is created, which represents the <code>&lt;knora&gt;</code> tag of the XML document. </p>"},{"location":"DSP-TOOLS/excel2xml-module/#3-append-the-permissions","title":"3. Append the Permissions","text":"<p>As first children of <code>&lt;knora&gt;</code>, some standard permissions are added. At the end, please carefully check the permissions  of the finished XML file to ensure that they meet your requirements, and adapt them if necessary.  </p> <p>The standard permission of a resource is <code>res-default</code>, and of a property <code>prop-default</code>. If you don't specify it  otherwise, all resources and properties get these permissions. </p> <p>With <code>excel2xml</code>, it is not possible to create resources/properties that don't have permissions, because they would be  invisible for all users except project admins and system admins. Read more about permissions  here.</p>"},{"location":"DSP-TOOLS/excel2xml-module/#4-create-list-mappings","title":"4. Create List Mappings","text":"<p>Let's assume that your data source has a column containing list values named after the \"label\" of the JSON project list,  instead of the \"name\" which is needed for the <code>dsp-tools xmlupload</code>.  You need a way to get the names from the labels. If your data source uses the labels correctly,  this is an easy task:  The method <code>create_json_list_mapping()</code> creates a dictionary that maps the labels to the names:  </p> <p>The list \"category\" in <code>00A1-import-scripts/import_project.json</code> looks as follows:</p> <pre><code>{\n  \"name\": \"category\",\n  \"labels\": {\"de\": \"Kategorie\", \"en\": \"Category\"},\n  \"comments\": {\"en\": \"A list containing categories\", \"de\": \"Eine Liste mit Kategorien\"},\n  \"nodes\": [\n    {\n      \"name\": \"artwork\",\n      \"labels\": {\"de\": \"Kunstwerk\", \"en\": \"Artwork\"}\n    },\n    {\n      \"name\": \"nature\",\n      \"labels\": {\"de\": \"Natur\", \"en\": \"Nature\"},\n      \"nodes\": [\n        {\n          \"name\": \"humans\",\n          \"labels\": {\"de\": \"Menschen\", \"en\": \"Humans\"}\n        },\n        {\"...\": \"...\"}\n      ]\n    }\n  ]\n}\n</code></pre> <p>If you pass this list to <code>create_json_list_mapping()</code>, it creates the following dictionary:</p> <pre><code>{\n    \"Kunstwerk\": \"artwork\",\n    \"kunstwerk\": \"artwork\",\n    \"Menschen\": \"humans\",\n    \"menschen\": \"humans\",\n    \"Natur\": \"nature\",\n    \"natur\": \"nature\",\n    \"...\": \"...\"\n}\n</code></pre> <p>If, however, your data source has spelling variants,  you need the more sophisticated approach of <code>create_json_excel_list_mapping()</code>:  This method creates a dictionary  that maps the list values in your data source  to their correct JSON project node name.  This happens based on string similarity.  Please carefully check the result if there are no false matches!</p> <p>The column \"Category\" in <code>00A1-import-scripts/data_raw.csv</code> has spelling mistakes: </p> <p>The dictionary that results if you call <code>create_json_excel_list_mapping()</code>:</p> <pre><code>{\n    \"Huumans\": \"humans\",\n    \"huumans\": \"humans\",\n    \"Artw\u00f6rk\": \"artwork\",\n    \"artw\u00f6rk\": \"artwork\"\n}\n</code></pre> <p>The sample Python scripts features an example how to call these two methods, and how the resulting dictionaries can be  used.</p>"},{"location":"DSP-TOOLS/excel2xml-module/#5-iterate-through-the-rows-of-your-data-source","title":"5. Iterate Through the Rows of Your Data Source","text":"<p>With the help of Pandas, you can then iterate through the rows of your Excel/CSV, and create resources and properties.</p>"},{"location":"DSP-TOOLS/excel2xml-module/#6-create-the-resource-tag","title":"6. Create the <code>&lt;resource&gt;</code> Tag","text":"<p>There are four kinds of resources that can be created: </p> super tag method <code>Resource</code> <code>&lt;resource&gt;</code> <code>make_resource()</code> <code>Annotation</code> <code>&lt;annotation&gt;</code> <code>make_annotation()</code> <code>Region</code> <code>&lt;region&gt;</code> <code>make_region()</code> <code>LinkObj</code> <code>&lt;link&gt;</code> <code>make_link()</code> <p><code>&lt;resource&gt;</code> is the most frequent of them. The other three are explained  here. </p>"},{"location":"DSP-TOOLS/excel2xml-module/#resource-id","title":"Resource ID","text":"<p>Special care is needed when the ID of a resource is created. Every resource must have an ID that is unique in the file, and it must meet the constraints of xsd:ID. You can simply achieve this if you use the method <code>make_xsd_id_compatible()</code>.</p> <p>If later, another resource would like to set a resptr-link to the resource that you are coding now, you must store the  ID in a dict, so that you can retrieve it later. The example script contains an example of such a dict. </p>"},{"location":"DSP-TOOLS/excel2xml-module/#7-append-the-properties","title":"7. Append the Properties","text":"<p>For every property, there is a helper function that explains itself when you hover over it. So you don't need to worry  anymore how to construct a certain XML value for a certain property. </p> <p>Here's how the docstrings assist you:</p> <ul> <li>method signature: names of the parameters and accepted types</li> <li>short explanation how the method behaves</li> <li>usage examples</li> <li>link to the DSP-TOOLS documentation of this property</li> <li>a short description for every parameter</li> <li>short description of the returned object. <ul> <li>Note: <code>etree._Element</code> is a type annotation of an underlying library. You don't have to care about it, as long as    you proceed as described (append the returned object to the parent resource).</li> </ul> </li> </ul> <p></p>"},{"location":"DSP-TOOLS/excel2xml-module/#fine-tuning-with-the-propertyelement","title":"Fine-Tuning With the <code>PropertyElement</code>","text":"<p>There are two possibilities how to create a property: The value can be passed as it is, or as a <code>PropertyElement</code>. If it is passed as it is, the <code>permissions</code> are assumed to be <code>prop-default</code>, texts are assumed to be encoded as <code>utf8</code>, and  the value won't have a comment:</p> <pre><code>make_text_prop(\":testproperty\", \"first text\")\n</code></pre> <pre><code>    &lt;text-prop name=\":testproperty\"&gt;\n        &lt;text encoding=\"utf8\" permissions=\"prop-default\"&gt;first text&lt;/text&gt;\n    &lt;/text-prop&gt;\n</code></pre> <p>If you want to change these defaults, you have to use a <code>PropertyElement</code> instead:</p> <pre><code>make_text_prop(\n    \":testproperty\", \n    PropertyElement(\n        value=\"first text\", \n        permissions=\"prop-restricted\", \n        encoding=\"xml\",\n        comment=\"some comment\"\n    )\n)\n</code></pre> <pre><code>    &lt;text-prop name=\":testproperty\"&gt;\n        &lt;text encoding=\"xml\" permissions=\"prop-restricted\" comment=\"some comment\"&gt;first text&lt;/text&gt;\n    &lt;/text-prop&gt;\n</code></pre>"},{"location":"DSP-TOOLS/excel2xml-module/#supported-boolean-formats","title":"Supported Boolean Formats","text":"<p>For <code>make_boolean_prop(cell)</code>, the following formats are supported:</p> <ul> <li>true: True, \"true\", \"True\", \"1\", 1, \"yes\", \"Yes\"</li> <li>false: False, \"false\", \"False\", \"0\", 0, \"no\", \"No\"</li> </ul> <p>N/A-like values will raise an Error.  So if your cell is empty, this method will not count it as false,  but will raise an Error.  If you want N/A-like values to be counted as false,  you may use a construct like this:</p> <pre><code>if excel2xml.check_notna(cell):\n    # the cell contains usable content\n    excel2xml.make_boolean_prop(\":hasBoolean\", cell)\nelse:\n    # the cell is empty: you can decide to count this as \"False\"\n    excel2xml.make_boolean_prop(\":hasBoolean\", False)\n</code></pre>"},{"location":"DSP-TOOLS/excel2xml-module/#special-characters-in-text-properties","title":"Special Characters in Text Properties","text":"<p>Depending on the encoding of your text, special characters behave differently.  Please consult the systematic overview here  to fully understand the implications.</p>"},{"location":"DSP-TOOLS/excel2xml-module/#8-append-the-resource-to-the-root","title":"8. Append the Resource to the Root","text":"<p>At the end of the for-loop, it is important not to forget to append the finished resource to the root. </p>"},{"location":"DSP-TOOLS/excel2xml-module/#9-save-the-file","title":"9. Save the File","text":"<p>At the very end, save the file under a name that you can choose yourself.</p>"},{"location":"DSP-TOOLS/excel2xml-module/#other-helper-methods","title":"Other Helper Methods","text":""},{"location":"DSP-TOOLS/excel2xml-module/#check-if-a-cell-contains-a-usable-value","title":"Check if a Cell Contains a Usable Value","text":"<p>The method <code>check_notna(cell)</code> checks a value if it is usable in the context of data archiving. A value is considered  usable if it is</p> <ul> <li>a number (integer or float, but not <code>numpy.nan</code>)</li> <li>a boolean</li> <li>a string with at least one Unicode letter (matching the regex <code>\\\\p{L}</code>) or number, or at least one _, !, or ?   (The strings \"None\", \"&lt;NA&gt;\", \"N/A\", and \"-\" are considered invalid.)</li> <li>a PropertyElement whose \"value\" fulfills the above criteria</li> </ul> <p>Examples:</p> <pre><code>check_notna(0)      == True\ncheck_notna(False)  == True\ncheck_notna(\"\u0153\")    == True\ncheck_notna(\"0\")    == True\ncheck_notna(\"_\")    == True\ncheck_notna(\"!\")    == True\ncheck_notna(\"?\")    == True\ncheck_notna(None)   == False\ncheck_notna(\"None\") == False\ncheck_notna(&lt;NA&gt;)   == False\ncheck_notna(\"&lt;NA&gt;\") == False\ncheck_notna(\"-\")    == False\ncheck_notna(\" \")    == False\n</code></pre> <p>But why not just checking a cell by its boolean value? Like:</p> <pre><code>if cell:\n    resource.append(make_*_prop(cell))\n</code></pre> <p>There are many problems that can occur with this simple approach! Often, a cell won't evaluate to the boolean that you  might expect:</p> cell content return value of <code>bool(cell)</code> You might have expected... 0 False True, because 0 is a valid integer for your integer property \" \" True False, because an empty string is not usable for a text property <code>numpy.nan</code> True False, because N/A is not a usable value <code>pandas.NA</code> TypeError (*) False, because N/A is not a usable value \"&lt;NA&gt;\" True False, because this is the string representation of N/A \"-\" True False, because this is a placeholder in an empty text field <p>(*) TypeError: boolean value of NA is ambiguous</p> <p>In contrast, <code>check_notna(cell)</code> will return the expected value for all cases in the table!</p>"},{"location":"DSP-TOOLS/excel2xml-module/#calendar-date-parsing","title":"Calendar Date Parsing","text":"<p>The method <code>find_date_in_string(string)</code> tries to find a calendar date in a string. If successful, it  returns the DSP-formatted date string.</p> <p>Notes:</p> <ul> <li>The date can be embedded in text. </li> <li>Only the first date found is returned.</li> <li>By default, dates are interpreted as CE (Christian era) in the Gregorian calendar.</li> <li>The years 0000-2999 are supported, in 4-digit form.</li> <li>Dates written with slashes are always interpreted in a European manner: 5/11/2021 is the 5th of November.</li> </ul> <p>Supported date formats:</p> Input Output 0476_09_04 GREGORIAN:CE:0476-09-04:CE:0476-09-04 0476-09-04 GREGORIAN:CE:0476-09-04:CE:0476-09-04 30.4.2021 GREGORIAN:CE:2021-04-30:CE:2021-04-30 5/11/2021 GREGORIAN:CE:2021-11-05:CE:2021-11-05 Jan 26, 1993 GREGORIAN:CE:1993-01-26:CE:1993-01-26 28.2.-1.12.1515 GREGORIAN:CE:1515-02-28:CE:1515-12-01 25.-26.2.0800 GREGORIAN:CE:0800-02-25:CE:0800-02-26 1.9.2022-3.1.2024 GREGORIAN:CE:2022-09-01:CE:2024-01-03 1848 GREGORIAN:CE:1848:CE:1848 1849/1850 GREGORIAN:CE:1849:CE:1850 1849/50 GREGORIAN:CE:1849:CE:1850 1845-50 GREGORIAN:CE:1845:CE:1850 840-850 GREGORIAN:CE:840:CE:850 840-1 GREGORIAN:CE:840:CE:841 1000-900 av. J.-C. GREGORIAN:BC:1000:BC:900 45 av. J.-C. GREGORIAN:BC:45:BC:45"},{"location":"DSP-TOOLS/incremental-xmlupload/","title":"Incremental xmlupload","text":""},{"location":"DSP-TOOLS/incremental-xmlupload/#incremental-xmlupload","title":"Incremental Xmlupload","text":"<p>When uploading data with the <code>xmlupload</code> command, resources can reference each other with an internal ID, e.g. in the <code>&lt;resptr&gt;</code> tag. Once the data is in DSP, the resources cannot be referenced by their internal ID anymore. Instead, the resource's IRI which was generated by the DSP has to be used. After a successful <code>xmlupload</code>,  the mapping of internal IDs to their respective IRIs  is written to a file called <code>id2iri_mapping_[timestamp].json</code>.</p> <p>The mapping is necessary if at a later point in time additional data should be uploaded. Depending on the type of references the additional data contains, there are 4 different ways how new data has to be uploaded:</p> <ol> <li>no references to existing resources: normal xmlupload</li> <li>references to existing resources via IRIs: incremental xmlupload</li> <li>references to existing resources via internal IDs: first id2iri, then incremental xmlupload</li> <li>continue an interrupted xmlupload: first id2iri, then incremental xmlupload</li> </ol>"},{"location":"DSP-TOOLS/incremental-xmlupload/#1-no-references-to-existing-resources","title":"1. No References to Existing Resources","text":"<p>The first case is the simplest one: No mapping is required, and the additional data can be uploaded with:</p> <pre><code>dsp-tools xmlupload additional_data.xml\n</code></pre>"},{"location":"DSP-TOOLS/incremental-xmlupload/#2-references-to-existing-resources-via-iris","title":"2. References to Existing Resources Via IRIs","text":"<p>The second case is relatively easy, too: The file <code>additional_data.xml</code> contains references like <code>&lt;resptr&gt;http://rdfh.ch/4123/nyOODvYySV2nJ5RWRdmOdQ&lt;/resptr&gt;</code>.  Such a file can be uploaded with:</p> <pre><code>dsp-tools xmlupload additional_data.xml\n</code></pre>"},{"location":"DSP-TOOLS/incremental-xmlupload/#3-references-to-existing-resources-via-internal-ids","title":"3. References to Existing Resources Via Internal IDs","text":"<p>The third case, however, is a bit more complicated: The file <code>additional_data.xml</code> contains references like <code>&lt;resptr&gt;book_1&lt;/resptr&gt;</code>, or <code>&lt;text&gt;&lt;a class=\"salsah-link\" href=\"IRI:book_1:IRI\"&gt;link to book_1&lt;/a&gt;&lt;/text&gt;</code>, where <code>book_1</code> was the internal ID of a resource that had previously been uploaded to DSP.</p> <p>Before such an XML file can be uploaded, the internal IDs must be replaced with their respective IRIs. That's where the JSON mapping file comes in: It contains a mapping from <code>book_1</code> to <code>http://rdfh.ch/4123/nyOODvYySV2nJ5RWRdmOdQ</code>.</p> <p>As a first step,  a new file must be generated  with the <code>id2iri</code> command:</p> <pre><code>dsp-tools id2iri additional_data.xml id2iri_mapping_[timestamp].json\n</code></pre> <p>In a second step, the newly generated XML file can be uploaded to DSP:</p> <pre><code>dsp-tools xmlupload additional_data_replaced_[timestamp].xml\n</code></pre>"},{"location":"DSP-TOOLS/incremental-xmlupload/#4-continue-an-interrupted-xmlupload","title":"4. Continue an Interrupted Xmlupload","text":"<p>If a xmlupload didn't finish successfully,  some resources have already been created, while others have not. If one of the remaining resources references a newly created resource by its internal ID, this internal ID must be replaced by the IRI of the newly created resource.</p> <p>Additionally, the newly created resources must be removed from the XML file. Otherwise, they would be created a second time.</p> <p>In such a case, proceed as follows:</p> <ol> <li>Initial xmlupload: <code>dsp-tools xmlupload data.xml</code></li> <li>A crash happens. Some resources have been uploaded, and a <code>id2iri_mapping_[timestamp].json</code> file has been written</li> <li>Fix the reason for the crash</li> <li>Replace the internal IDs and remove the created resources with:     <code>dsp-tools id2iri data.xml --remove-resources id2iri_mapping_[timestamp].json</code></li> <li>Upload the outputted XML file with <code>dsp-tools xmlupload data_replaced_[timestamp].xml</code></li> </ol>"},{"location":"DSP-TOOLS/start-stack/","title":"Running DSP locally","text":""},{"location":"DSP-TOOLS/start-stack/#run-the-dsp-stack-on-your-local-machine","title":"Run the DSP Stack on Your Local Machine","text":"<p>DSP-API is the heart of the DaSCH service platform.  It is a server application for archiving data from the Humanities.  DSP-APP is a generic user interface for the user to look at and work with data stored in DSP-API.  It's a server application, too.  For testing purposes, it is sometimes necessary to run DSP-API and DSP-APP on a local machine.  There are two ways to do this:</p> <ul> <li>simple: run <code>dsp-tools start-stack</code></li> <li>advanced: execute commands from within the DSP-API/DSP-APP repositories</li> </ul> <p>Here's an overview of the two ways:</p> simple advanced target group researchers, RDU employees developers of DSP-API or DSP-APP how it works run <code>dsp-tools start-stack</code> execute commands from within locally cloned DSP-API/DSP-APP repositories software dependencies Docker, Python, DSP-TOOLS XCode command line tools, Docker, sbt, Java, Angular, node, yarn mechanism in the background run pre-built Docker images build DSP-API and DSP-APP from a branch in the repository available versions latest released version, or <code>main</code> branch any branch, or locally modified working tree caveats dependencies must be kept up to date"},{"location":"DSP-TOOLS/start-stack/#the-simple-way-dsp-tools-start-stack","title":"The Simple Way: <code>dsp-tools start-stack</code>","text":"<p>The <code>start-stack</code> command runs Docker images  with the latest released versions of DSP-API and DSP-APP,  i.e. the versions that are running on https://app.dasch.swiss. (Optionally, you can specify to run the latest development version of DSP-API, from the <code>main</code> branch.)</p> <p>The only prerequisite for this is that Docker is running,  and that you have Python and DSP-TOOLS installed.</p> <p>Some notes:</p> <ul> <li>As long as you want to keep the data in the database, don't execute <code>dsp-tools stop-stack</code>. </li> <li>It is possible to leave DSP-API up for a long time.    If you want to save power, you can pause Docker.    When you resume it, DSP-API will still be running, in the state how you left it.</li> <li>You can also send your computer to sleep while the DSP stack is running.    For this, you don't even need to pause Docker.</li> </ul>"},{"location":"DSP-TOOLS/start-stack/#when-should-i-restart-the-dsp-api","title":"When Should I Restart the DSP-API?","text":"<p>After creating a data model and adding some data into your local DSP stack,  you can work on DSP as if it was the live platform.  But there are certain actions that are irreversible or can only be executed once,  e.g. uploading the same JSON project file.  If you edit your data model in the JSON file,  and you want to upload it a second time,  DSP-API will refuse to create the same project again.  So, you might want to restart the stack and start over again from a clean setup.</p> <p>It is possible, however, to modify the XML data file and upload it again and again.  But after some uploads, DSP is cluttered with data, so you might want to restart the stack.</p>"},{"location":"DSP-TOOLS/start-stack/#the-advanced-way","title":"The Advanced Way","text":"<p>If you want to run a specific branch of DSP-API / DSP-APP, or to modify them yourself, you need to:</p> <ul> <li>install the dependencies:    follow the instructions on https://github.com/dasch-swiss/dsp-api   and https://github.com/dasch-swiss/dsp-das</li> <li>keep the dependencies up to date (keep in mind that dependencies might be replaced over time)</li> <li>clone the repositories from GitHub</li> <li>keep them up to date with <code>git pull</code></li> <li>execute commands from within the repositories (<code>just</code> for DSP-API, <code>angular</code> for DSP-APP)</li> <li>take care that the repositories don't get cluttered with old data over time</li> </ul>"},{"location":"DSP-TOOLS/developers/","title":"Developers documentation","text":""},{"location":"DSP-TOOLS/developers/#developers-documentation","title":"Developers Documentation","text":"<p>These pages contain important background information  for developers of the DSP-TOOLS code repository,  as well as Architectural Decision Records.</p> <p>Please read the README first.</p>"},{"location":"DSP-TOOLS/developers/github-actions/","title":"GitHub actions","text":""},{"location":"DSP-TOOLS/developers/github-actions/#github-actions","title":"GitHub Actions","text":"<p>GitHub actions are workflows that are (remotely) run by GitHub  if a certain event happens. Actions are defined in YML files in the <code>.github/workflows</code> folder. The YML files define </p> <ul> <li>by what event an action is triggered</li> <li>what the action should do</li> </ul> <p>The syntax of the YML files is documented  on the GitHub actions documentation page.</p> <p>It can be defined in the settings of the repository  what happens if an action fails, e.g. an email is sent to the maintainer, or a PR is blocked from being merged, etc.</p>"},{"location":"DSP-TOOLS/developers/github-actions/#check-pr-titleyml","title":"check-pr-title.yml","text":"<p>This action checks if the title of the PR complies with a certain regex.</p>"},{"location":"DSP-TOOLS/developers/github-actions/#publish-to-pypiyml","title":"publish-to-pypi.yml","text":"<p>This action is triggered when a Release-Please-PR (see below) is merged. Basically, this action calls <code>poetry build</code> and <code>poetry publish</code>.</p>"},{"location":"DSP-TOOLS/developers/github-actions/#release-pleaseyml","title":"release-please.yml","text":"<p>When a PR is merged to main, this action creates a Release-Please-PR.  This is a PR that increments the version number of DSP-TOOLS, and adds a synopsis of the PRs merged since the last release to the changelog. When this PR is merged, the <code>publish-to-pypi.yml</code> action is triggered.</p>"},{"location":"DSP-TOOLS/developers/github-actions/#tests-on-pushyml","title":"tests-on-push.yml","text":"<p>In the settings of the DSP-TOOLS repository,  these tests are configured to be mandatory to pass before a PR can be merged. Basically, this action checks that</p> <ul> <li>the docs can be built without errors or warnings</li> <li>there are no dead links in the docs</li> <li>the unit tests run without errors</li> <li>the end-to-end tests run without errors</li> </ul> <p>Checking dead links is a non-trivial task.  There are several tools for it,  but the only one which works for our purpose is  markdown-link-validator.</p> <p>There are some caveats, though:</p> <p>Firstly, markdown-link-validator doesn't recognize internal links to files in the <code>docs/assets</code> folder. These must be added as ignore patterns, cf. the flag <code>-i \\.assets\\/.+</code> in the code snippet below.</p> <p>Secondly, external links to private pages raise an error, even though they are correct.  An example is the link to <code>https://github.com/dasch-swiss/dsp-tools/settings</code> above. To make markdown-link-validator work, the following flag is necessary:  <code>-i .+github\\.com\\/dasch\\-swiss\\/dsp-tools\\/settings</code></p> <p>So finally, this is the call to markdown-link-validator:</p> <pre><code>markdown-link-validator ./docs -i \\.assets\\/.+ -i .+github\\.com\\/dasch\\-swiss\\/dsp-tools\\/settings\n</code></pre> <p>As the documentation grows, and new titles are added, it might be necessary to adapt this call!</p>"},{"location":"DSP-TOOLS/developers/mkdocs/","title":"MkDocs and markdown-link-validator","text":""},{"location":"DSP-TOOLS/developers/mkdocs/#mkdocs-and-markdown-link-validator","title":"MkDocs and markdown-link-validator","text":"<p>The documentation of DSP-TOOLS is built with MkDocs (see README). Please consider the following caveats:</p>"},{"location":"DSP-TOOLS/developers/mkdocs/#styling-constraints-in-the-documentation","title":"Styling Constraints in the Documentation","text":"<p>In our GitHub actions, we check PRs for dead links in the documentation.  Our tool markdown-link-validator is only able to check internal links if they start with <code>./</code>. For example:</p> <ul> <li><code>[prefixes]\u2063(./dsp-tools-create.md#prefixes-object)</code> instead of <code>[prefixes](dsp-tools-create.md#prefixes-object)</code></li> <li><code>![Colors_en]\u2063(./assets/images/img-list-english-colors.png)</code> instead of <code>![Colors_en](assets/images/img-list-english-colors.png)</code></li> </ul> <p>It is okay, however, to make an internal link to a title of the current document: <code>[prefixes]\u2063(#prefixes-object)</code></p> <p>Please follow this constraint, so that markdown-link-validator can check the internal links.</p>"},{"location":"DSP-TOOLS/developers/mkdocs/#handling-false-positives-of-markdown-link-validator","title":"Handling False Positives of markdown-link-validator","text":"<p>What can be done if your links are correct, but markdown-link-validator doesn't recognize them? One solution is to add an \"ignore\" pattern  to the call to markdown-link-validator in <code>.github/workflows/tests-on-push.yml</code>.</p> <p>If your link is in a code block, and isn't intended to be used as link, you can also add an invisible Unicode character, like in the examples above.</p>"},{"location":"DSP-TOOLS/developers/mkdocs/#no-duplicate-headings-no-special-characters-in-headings","title":"No Duplicate Headings, No Special Characters in Headings","text":"<p>When linking to a heading, the name heading is slugified. Unfortunately, there are different flavors of Markdown, and different slug algorithms. As long as the heading is unique in the document, and doesn't contain special characters, there is no problem.</p> <p>But consider a document like this:</p> <pre><code># Heading / Title\nFirst heading with this name\n\n# Heading / Title\nSecond heading with this name\n\n# Further down in the document\n[link to second heading]\u2063(#heading-title_1)    &lt;!--MkDocs supports only this syntax--&gt;\n[link to second heading]\u2063(#heading--title-1)   &lt;!--npm markdown-link-validator supports only this syntax--&gt;\n</code></pre> <p>To make things worse, different IDEs use different slug algorithms, too,  which might lead to misleading hints from the IDE.</p> <p>The real danger lies within MkDocs: while it doesn't support the <code>heading--title-1</code> syntax,  it doesn't complain if you use it, not even when using the <code>--strict</code> flag. This can lead to broken links on https://docs.dasch.swiss/,  without anyone noticing.</p>"},{"location":"DSP-TOOLS/developers/mkdocs/#the-best-solution-how-to-deal-with-this","title":"The Best Solution How to Deal With This","text":"<ul> <li>give a unique name to every heading within the same document</li> <li>don't use special characters in headings</li> </ul>"},{"location":"DSP-TOOLS/developers/mkdocs/#a-short-overview-of-markdown-tools-and-slug-algorithms","title":"A Short Overview of Markdown Tools and Slug Algorithms","text":"<ul> <li>MkDocs uses Python Markdown to translate Markdown files into HTML   (see here).</li> <li>Python Markdown's default slugify used to strip out all Unicode chars   (see here).</li> <li>markdown-link-validator uses uslug to create the slugs    (see here).</li> <li>VS Code targets the CommonMark Markdown specification using the    markdown-it library   (see here). </li> </ul> <p>Another useful reading is here.</p>"},{"location":"DSP-TOOLS/developers/packaging/","title":"Dependencies, packaging & distribution","text":""},{"location":"DSP-TOOLS/developers/packaging/#dependency-management-packaging-and-distribution","title":"Dependency Management, Packaging, and Distribution","text":""},{"location":"DSP-TOOLS/developers/packaging/#general-considerations","title":"General Considerations","text":"<p>There are a number of tasks necessary to develop and distribute a Python package, and a number of tools to assist with  these processes. The Python Packaging User Guide lists the following, among others:</p> Task poetry Hatch pipenv venv build setuptools flit twine Dependency management X X Virtual environment X X X X Build frontend X X X Build backend X X X X Publishing to pypi.org X X X X <p>DSP-TOOLS uses poetry for all of these tasks. This allows us to use one single tool  for all processes, and to keep the number of configuration files at a minimum. </p> <p>There are many configuration and metadata files that can be found on the top level of a Python repository. The ones  used in the DSP-TOOLS repository are:</p> File Purpose README.md Markdown-formatted info for developers pyproject.toml Modern configuration/metadata file replacing the deprecated files listed below .gitignore List of files not under version control (won't be uploaded to GitHub) CHANGELOG.md Markdown-formatted release notes (must not be edited by hand) LICENSE Text file with the license how to use the source code of DSP-TOOLS poetry.lock Pinned versions of all (sub-)dependencies, allows a deterministic installation mkdocs.yml Configuration of <code>mkdocs</code>, used to build the documentation webpages <p>In earlier times, there were some more configuration files, but thanks to poetry, they are not necessary anymore:</p> Deprecated file Purpose Replaced by MANIFEST.in files to include into distribution pyproject.toml: <code>[tool.poetry.include]</code> setup.py project metadata, dependencies pyproject.toml setup.cfg configuration for setuptools pyproject.toml requirements.txt all (sub-)dependencies pyproject.toml: <code>[tool.poetry.dependencies]</code> dev-requirements.txt additional dependencies for development pyproject.toml: <code>[tool.poetry.group.dev.dependencies]</code> Pipfile direct dependencies pyproject.toml: <code>[tool.poetry.dependencies]</code> Pipfile.lock pinned dependencies poetry.lock Makefile commands that can be executed with <code>make [command]</code> pyproject.toml: <code>[tool.poetry-exec-plugin.commands]</code>"},{"location":"DSP-TOOLS/developers/packaging/#dependency-management","title":"Dependency Management","text":"<p>The classic way to manage the dependencies was to write the required packages by hand into a <code>requirements.txt</code> and  into a <code>setup.py</code> file. </p> <p>But this is cumbersome and error-prone, so there was a time when pipenv was the  way to go: Pipenv introduced the important distinction between (a) dependencies necessary to run the application,  (b) dependencies necessary for development, and (c) sub-dependencies, i.e. dependencies of your dependencies. Another  useful concept of pipenv is the distinction between a human-friendly list of (mostly unpinned) direct dependencies and  a machine-friendly definition of exact (pinned) versions of all dependencies. But since pipenv has no packaging functionality, it was necessary to sync the dependency definitions from <code>Pipfile</code> to <code>requirements.txt</code> and <code>setup.py</code>.  </p> <p><code>setup.py</code>, too, is problematic, especially  calling <code>setup.py sdist bdist_wheel</code>.  Python projects should define their dependencies and metadata in the modern <code>pyproject.toml</code> file. So it is  necessary to dynamically manage the dependencies in <code>pyproject.toml</code>. And poetry seems to be the only tool capable  of doing this.</p>"},{"location":"DSP-TOOLS/developers/packaging/#packaging","title":"Packaging","text":"<p>All project metadata, together with the dependencies and the configuration of the packaging tool poetry, is defined in  <code>pyproject.toml</code>. The authoritative resource on how to create this file is  https://packaging.python.org/en/latest/guides/writing-pyproject-toml/#writing-pyproject-toml.</p> <p>The table <code>[build-system]</code> of <code>pyproject.toml</code> tells frontend build tools what backend build tool to use. The backend  doesn't need to be installed. It will be installed by the frontend in a temporary, isolated environment for use during  the build process. DSP-TOOLS uses poetry as both frontend and backend.</p> <p>What happens when a distribution package of DSP-TOOLS is created? Poetry creates two files in the <code>dist</code> folder: a <code>. tar.gz</code> compressed archive (the sdist or source distribution) and a <code>.whl</code> file (a wheel). Both contain the contents of  the <code>src</code> folder plus some metadata - they are equivalent. They are then uploaded to the  Python Package Index (PyPI).  </p> <p>When a user installs DSP-TOOLS with <code>pip install dsp-tools</code>, pip takes the sdist or the wheel, unpacks it, and copies  it into the <code>site-packages</code> folder of the user's Python installation. As a result, the user has the same packages in  his <code>site-packages</code> folder as the <code>src</code> folder of the dsp-tools repository. In our case, this is the <code>dsp_tools</code>  package. Since <code>site-packages</code> is on <code>sys.path</code>, the user can then import the package <code>dsp_tools</code> in his script.</p>"},{"location":"DSP-TOOLS/developers/packaging/#advantages-of-the-src-layout","title":"Advantages of the src Layout","text":"<p>Putting all packages into a <code>src</code> folder has an important consequence: It forces the developer to work with an  editable installation of his package. Why? Without an editable installation, it is impossible to write correct import  statements. <code>from src.package import module</code> will not work, because the user has <code>package</code> installed, not <code>src</code>. And  relative imports like <code>import module</code> will not work either, because when the tests code (situated in a separate  <code>test</code> folder) imports the actual code, the relative imports in the actual code fail. This is because relative imports  depend on the location of the file that is run, not on the file that contains the import statement. </p> <p>The solution is to always have an editable installation of the package under development. Poetry does this  automatically when you execute <code>poetry install</code>. This makes the package <code>dsp_tools</code> importable - just like on a  user's machine. And exactly this is the big advantage: With the src layout and an editable installation, the setup on  the developer's machine is more similar to the user's setup. </p> <p>The advantages of the src layout are:</p> <ul> <li>import parity</li> <li>The tests run against the package as it will be installed by the user - not against the situation in the    developer's repository.</li> <li>It is obvious to both humans and tools if a folder is a package to be distributed, or not.</li> <li>The editable installation is only able to import modules that will also be importable in a regular installation.</li> <li>For the developer, the working directory is the root of the repository, so the root will implicitly be included in    <code>sys.path</code>. Users will never have the same current working directory than the developer. So, removing the packages    from the root by putting them into <code>src</code> prevents some practices that will not work on the user's machine. </li> </ul> <p>For more in-depth explanations, please visit the following pages:</p> <ul> <li>https://blog.ionelmc.ro/2014/05/25/python-packaging</li> <li>https://hynek.me/articles/testing-packaging</li> <li>https://packaging.python.org/en/latest/discussions/src-layout-vs-flat-layout</li> </ul>"},{"location":"DSP-TOOLS/developers/packaging/#publishing-and-distribution","title":"Publishing and Distribution","text":"<p>Publishing is automated with GitHub Actions and should not be done manually. If you still need to do it, follow the steps below.</p> <p>Generate the distribution package:</p> <pre><code>poetry build\n</code></pre> <p>You can install the package locally from the dist:</p> <pre><code>pip install dist/some_name.whl\n</code></pre> <p>Upload package:</p> <pre><code>poetry publish\n</code></pre>"},{"location":"DSP-TOOLS/developers/start-stack-command/","title":"Maintaining the start-stack command","text":""},{"location":"DSP-TOOLS/developers/start-stack-command/#maintaining-the-start-stack-command","title":"Maintaining the <code>start-stack</code> Command","text":"<p>The start-stack command  starts Docker containers of DSP-API and DSP-APP,  in the version that is running on https://app.dasch.swiss.  In addition to the containers,  a number of files from the DSP-API GitHub repository is necessary.  The version of the docker images and these files must be the same.  The version is configured in the following files in <code>src/dsp_tools/resources/start-stack/</code>:</p> <ul> <li><code>docker-compose.yml</code>:    The 5 variables <code>services/{app,db,sipi,api,ingest}/image</code>    must point to the DockerHub image of the last deployed version.   The versions can be found in the   ops-deploy repo</li> <li><code>start-stack-config.yml</code>:    The variable <code>DSP-API commit</code>    must be the commit hash of DSP-API    of the version that is running on https://app.dasch.swiss.   Just take the commit hash of the latest DSP-API release   from the DSP-API GitHub repo</li> </ul>"},{"location":"DSP-TOOLS/developers/user-data/","title":"User data","text":""},{"location":"DSP-TOOLS/developers/user-data/#user-data-in-the-users-home-directory","title":"User Data in the User's Home Directory","text":"<p>DSP-TOOLS saves user data in the user's home directory,  in the folder <code>.dsp-tools</code>.  Here is an overview of its structure:</p> file/folder command using it description xmluploads <code>xmlupload</code> saves id2iri mappings and error reports docker <code>start-stack</code> files necessary to startup Docker containers rosetta <code>rosetta</code> a clone of the rosetta test project logging.log, logging.log.1 several ones These two grow up to 3 MB, then the oldest entries are deleted <p>Remark: Docker is normally not able to access files  stored in the <code>site-packages</code> of a Python installation. Therefore, it's necessary to copy the \"docker\" folder to the user's home directory.</p>"},{"location":"DSP-TOOLS/developers/user-data/#how-to-ship-data-files-to-the-user","title":"How to Ship Data Files to the User","text":"<p>Accessing non-Python files (aka resources, aka data files)  in the code needs special attention.</p> <p>Firstly, the build tool must be told to include this folder/files in the distribution. In our case, this happens in <code>[tool.poetry.include]</code> in the <code>pyproject.toml</code> file.</p> <p>Secondly, when accessing the files on the customer's machine,  the files inside <code>site-packages</code> should be read-only  to avoid a series of common problems  (e.g. when multiple users share a common Python installation,  when the package is loaded from a zip file,  or when multiple instances of a Python application run in parallel).</p> <p>Thirdly, the files can neither be accessed  with a relative path from the referencing file, nor with a path relative to the root of the project.</p> <p>For example, if you have a structure like this:</p> <pre><code>dsp-tools\n\u251c\u2500\u2500 pyproject.toml\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 dsp_tools\n        \u251c\u2500\u2500 schemas\n        \u2502   \u2514\u2500\u2500 data.xsd\n        \u251c\u2500\u2500 __init__.py\n        \u2514\u2500\u2500 dsp_tools.py\n</code></pre> <p>it is not possible to do one of the following in dsp_tools/dsp_tools.py:</p> <pre><code>with open('schemas/data.xsd') as data_file:\n     ...\nwith open('src/dsp_tools/resources/schema/data.xsd') as data_file:\n     ...\n</code></pre> <p>The reason why these two approaches fail is  that the working directory on the user's machine  is determined by the directory where  DSP-TOOLS is called from -  not the directory where the distribution files are situated in.</p> <p>To circumvent this problem, it was once common to manipulate a package\u2019s <code>__file__</code> attribute  in order to find the location of data files:</p> <pre><code>import os\ndata_path = os.path.join(os.path.dirname(__file__), 'schemas', 'data.xsd')\nwith open(data_path) as data_file:\n     ...\n</code></pre> <p>However, this manipulation isn\u2019t compatible with PEP 302-based import hooks,  including importing from zip files and Python Eggs.</p> <p>The canonical way is to use importlib.resources: </p> <pre><code>from importlib.resources import files\n# address \"schemas\" directory in module syntax: needs __init__.py\ndata_text = files('dsp_tools.resources.schema').joinpath('data.xsd').read_text()\n# avoid module syntax when addressing \"schemas\" directory: no __init__.py necessary\ndata_text = files('dsp_tools').joinpath('resources/schema/data.xsd').read_text()\n</code></pre> <p>Note that depending on how the directory is addressed,  an <code>__init__.py</code> file is necessary or can be omitted.</p> <p>The information on this page is mainly based upon:</p> <ul> <li>https://stackoverflow.com/a/20885799/14414188</li> <li>https://stackoverflow.com/a/58941536/14414188</li> <li>https://setuptools.pypa.io/en/latest/userguide/datafiles.html#accessing-data-files-at-runtime</li> </ul>"},{"location":"DSP-TOOLS/developers/code-quality-tools/code-quality-tools/","title":"Overview","text":""},{"location":"DSP-TOOLS/developers/code-quality-tools/code-quality-tools/#code-quality-tools","title":"Code Quality Tools","text":"<p>There are a variety of tools that help to keep code quality high.</p> <p>DSP-TOOLS uses the ones listed on this page.</p> <p>The decision to use this set of tools is based on the information in the following pages.</p> Task Tool Configuration General formatting EditorConfig <code>.editorconfig</code> MarkdownLint <code>.markdownlint.yml</code> Python formatting Ruff <code>pyproject.toml</code> Python docstring formatting darglint <code>.darglint</code> Python type checking mypy <code>pyproject.toml</code> Python linting Ruff <code>pyproject.toml</code> Security checks Dependabot <code>.github/dependabot.yml</code> CodeQL GitHub settings Gitleaks * <code>.gitleaks.toml</code> Bandit <code>.github/workflows/bandit.yml</code> <p>(*) coming soon  </p>"},{"location":"DSP-TOOLS/developers/code-quality-tools/general-formatting/","title":"General formatting","text":""},{"location":"DSP-TOOLS/developers/code-quality-tools/general-formatting/#general-formatting","title":"General Formatting","text":""},{"location":"DSP-TOOLS/developers/code-quality-tools/general-formatting/#editorconfig","title":"EditorConfig","text":"<p>Language-independent, cross-editor settings for indentation, line endings, etc.</p>"},{"location":"DSP-TOOLS/developers/code-quality-tools/general-formatting/#markdownlint","title":"MarkdownLint","text":"<p>A CLI for David Anson's MarkdownLint, a static analysis tool with a library of rules. The flexibility of the Markdown syntax is both a benefit and a drawback.  Many styles are possible, so formatting can be inconsistent.  Some constructs don't work well in all parsers and should be avoided.</p>"},{"location":"DSP-TOOLS/developers/code-quality-tools/python-docstring-formatting/","title":"Python docstring formatting","text":""},{"location":"DSP-TOOLS/developers/code-quality-tools/python-docstring-formatting/#python-docstring-formatting","title":"Python Docstring Formatting","text":""},{"location":"DSP-TOOLS/developers/code-quality-tools/python-docstring-formatting/#docstring-flavors","title":"Docstring Flavors","text":"<p>Python uses docstrings to document code.  A docstring is a string that is the first statement in a package, module, class or function.  Python docstrings are written in the reStructuredText syntax (abbreviated as RST or reST).</p> <p>There are at least 4 flavors of docstrings, each following the PEP 257 conventions. The following examples show how to document a function parameter:</p> <p>Epytext:</p> <pre><code>@type param1: int\n@param param1: The first parameter\n</code></pre> <p>Sphinx:</p> <pre><code>:param param1: The first parameter\n:type: int\n</code></pre> <p>Google:</p> <pre><code>Args:\n    param1 (int): The first parameter\n</code></pre> <p>NumPy:</p> <pre><code>Parameters\n----------\nparam1 : int\n    The first parameter\n</code></pre> <p>DSP-TOOLS uses the Google style without typing,  as defined here.</p>"},{"location":"DSP-TOOLS/developers/code-quality-tools/python-docstring-formatting/#existing-formatters","title":"Existing Formatters","text":""},{"location":"DSP-TOOLS/developers/code-quality-tools/python-docstring-formatting/#pydocstyle","title":"pydocstyle","text":"<p>Static analysis tool for checking compliance with Python docstring conventions. Pydocstyle supports most PEP 257 conventions out of the box,  but it should not be considered a reference implementation. Pydocstyle seems to be the most popular docstring checker. It supports the styles \"pep257\", \"numpy\", and \"google\".</p>"},{"location":"DSP-TOOLS/developers/code-quality-tools/python-docstring-formatting/#pydocstringformatter","title":"pydocstringformatter","text":"<p>A docstring formatter that follows  PEP 8 and PEP 257  but makes some of the more controversial elements of those PEPs optional. Can be configured for other styles as well.  This project is heavily inspired by docformatter. Supported styles: \"pep257\", \"numpy\".</p>"},{"location":"DSP-TOOLS/developers/code-quality-tools/python-docstring-formatting/#docformatter","title":"docformatter","text":"<p>Automatically formats docstrings to follow a subset of  the PEP 257 conventions. Currently, only the style \"sphinx\" and \"epytext\" are recognized,  but \"numpy\" and \"google\" are future styles.</p>"},{"location":"DSP-TOOLS/developers/code-quality-tools/python-docstring-formatting/#darglint","title":"darglint","text":"<p>Docstring linter which checks whether a docstring's description matches the actual function/method implementation. Supports the styles \"sphinx\", \"google\", and \"numpy\".</p>"},{"location":"DSP-TOOLS/developers/code-quality-tools/python-formatting/","title":"Python formatting","text":""},{"location":"DSP-TOOLS/developers/code-quality-tools/python-formatting/#python-formatting","title":"Python Formatting","text":"<p>There is a variety of style checkers (tools that give a feedback)  and auto-formatters (tools that are able to fix the formatting violations automatically).</p>"},{"location":"DSP-TOOLS/developers/code-quality-tools/python-formatting/#existing-type-checkers-and-auto-formatters","title":"Existing Type Checkers and Auto-Formatters","text":""},{"location":"DSP-TOOLS/developers/code-quality-tools/python-formatting/#pycodestyle","title":"pycodestyle","text":"<p>Checks Python code against some style conventions in PEP 8.</p>"},{"location":"DSP-TOOLS/developers/code-quality-tools/python-formatting/#autopep8","title":"autopep8","text":"<p>Automatically fixes most of the formatting issues reported by pycodestyle. Since PEP 8 is rather liberal, autopep8/pycodestyle don't modify code too much.</p>"},{"location":"DSP-TOOLS/developers/code-quality-tools/python-formatting/#black","title":"Black","text":"<p>A PEP 8 compliant opinionated auto-formatter with its own style, going further than autopep8/pycodestyle. Style configuration options are deliberately limited to a minimum. Black aims for readability and reducing git diffs. Black is an easy-to-use tool, with sensible and useful defaults. Its style is very elegant.</p>"},{"location":"DSP-TOOLS/developers/code-quality-tools/python-formatting/#ruff","title":"Ruff","text":"<p>Besides being a linter, Ruff is also an auto-formatter. It is designed as a drop-in replacement for Black.</p>"},{"location":"DSP-TOOLS/developers/code-quality-tools/python-formatting/#yapf","title":"yapf","text":"<p>Auto-formatter that can be configured to support different styles.</p>"},{"location":"DSP-TOOLS/developers/code-quality-tools/python-formatting/#isort","title":"isort","text":"<p>Sorts <code>import</code> statements alphabetically, and separates them into sections, according to their type.</p>"},{"location":"DSP-TOOLS/developers/code-quality-tools/python-linting/","title":"Python linting","text":""},{"location":"DSP-TOOLS/developers/code-quality-tools/python-linting/#python-linting","title":"Python Linting","text":""},{"location":"DSP-TOOLS/developers/code-quality-tools/python-linting/#existing-linters","title":"Existing Linters","text":""},{"location":"DSP-TOOLS/developers/code-quality-tools/python-linting/#pylint","title":"Pylint","text":"<p>Checks Python code against a very broad list of rules,  some of which are purely formatting oriented,  but some of which are very sophisticated code smell and error detectors. Pylint is very slow, but perhaps the most thorough linter around.  A big plus is that it makes an inference of actual types,  instead of relying on type annotations.</p>"},{"location":"DSP-TOOLS/developers/code-quality-tools/python-linting/#pyflakes","title":"Pyflakes","text":"<p>A pure error detector, without formatting checks, and without configuration options. It is faster than Pylint, because it doesn't dig as deep (e.g., it examines the syntax tree of each file individually).</p>"},{"location":"DSP-TOOLS/developers/code-quality-tools/python-linting/#flake8","title":"Flake8","text":"<p>Flake8 checks Python code by wrapping the output of these tools:</p> <ul> <li>Pyflakes (pure error detector)</li> <li>pycodestyle (pure style checker)</li> <li>McCabe (complexity checker)</li> </ul> <p>Unlike Pyflakes, Flake8 can be configured.</p>"},{"location":"DSP-TOOLS/developers/code-quality-tools/python-linting/#ruff","title":"Ruff","text":"<p>The fastest, most promising and most exciting linter, although still in beta. Ruff is a linter with autofix support. It has near-parity with Flake8, and they are working on implementing pylint rules as well (see How Does Ruff's Linter Compare to Pylint?). Ruff can be used to replace </p> <ul> <li>Flake8 (wrapper around Pyflakes, pycodestyle, and McCabe) plus dozens of plugins</li> <li>Pyflakes (error detector)</li> <li>pycodestyle (checks formatting for violations of PEP 8)</li> <li>McCabe (complexity checker)</li> <li>isort (sorts imports alphabetically)</li> <li>pydocstyle (docstring checker)</li> <li>yesqa (tool to remove unnecessary <code># noqa</code> comments)</li> <li>eradicate (removes commented-out code)</li> <li>pyupgrade (automated upgrade to newer python syntax)</li> <li>autoflake (automated removal of unused imports or variables)</li> </ul> <p>Additionally, Ruff's formatter can be used to replace Black.</p>"},{"location":"DSP-TOOLS/developers/code-quality-tools/python-linting/#vulture","title":"Vulture","text":"<p>Static code analyzer that finds unused code in Python programs.  Vulture uses the ast module to build abstract syntax trees for all given files.  While traversing all syntax trees it records the names of defined and used objects.  Afterwards, it reports the objects which have been defined, but not used.  This analysis ignores scopes and only takes object names into account. Vulture also detects unreachable code by looking for code after <code>return</code>, <code>break</code>, <code>continue</code> and <code>raise</code> statements,  and by searching for unsatisfiable if- and while-conditions.</p>"},{"location":"DSP-TOOLS/developers/code-quality-tools/python-see-also/","title":"See also","text":""},{"location":"DSP-TOOLS/developers/code-quality-tools/python-see-also/#see-also","title":"See Also","text":""},{"location":"DSP-TOOLS/developers/code-quality-tools/python-see-also/#prospector","title":"Prospector","text":"<p>Prospector is a wrapper around the following tools:</p> <ul> <li>pylint (very through linter and error detector)</li> <li>pycodestyle (checks formatting for violations of PEP 8)</li> <li>Pyflakes (error detector)</li> <li>McCabe (complexity checker)</li> <li>Dodgy (simple regex check to detect accidental SCM diff checkins or secrets hard coded into files)</li> <li>Pydocstyle (docstring checker)</li> <li>Pyroma (checks <code>setup.py</code> files)</li> <li>Vulture (finds unused code)</li> <li>Frosted (fork of Pyflakes)</li> <li>Mypy (type checker)</li> <li>Bandit (finds common security issues)</li> </ul> <p>The primary aim of Prospector is to be useful out of the box.  A common complaint of other Python analysis tools is that it takes a long time to filter through which errors are relevant.  Prospector provides some default profiles,  which hopefully will provide a good starting point and will be useful straight away.</p>"},{"location":"DSP-TOOLS/developers/code-quality-tools/python-see-also/#pylance","title":"Pylance","text":"<p>Pylance (<code>ms-python.vscode-pylance</code>) is the default language support  for the Python extension (<code>ms-python.python</code>) in Visual Studio Code. It relies on the type checker pyright, but does much more:</p> <ul> <li>docstring</li> <li>parameter suggestion</li> <li>code completion</li> <li>auto-imports</li> <li>code navigation</li> </ul>"},{"location":"DSP-TOOLS/developers/code-quality-tools/python-see-also/#pylama","title":"Pylama","text":"<p>Pylama is a wrapper around other tools.  As of mid-2023, it doesn't seem to be actively maintained anymore. Pylama wraps these tools:</p> <ul> <li>pycodestyle (checks formatting for violations of PEP 8)</li> <li>pydocstyle (docstring checker)</li> <li>PyFlakes (error detector)</li> <li>McCabe (complexity checker)</li> <li>Pylint (very through linter and error detector)</li> <li>Radon (computes various metrics from source code, such as McCabe's complexity, SLOC, Halstead metrics, etc.)</li> <li>eradicate (removes commented-out code)</li> <li>Mypy (type checker)</li> <li>Vulture (finds unused code)</li> </ul>"},{"location":"DSP-TOOLS/developers/code-quality-tools/python-type-checking/","title":"Python type checking","text":""},{"location":"DSP-TOOLS/developers/code-quality-tools/python-type-checking/#python-type-checking","title":"Python Type Checking","text":""},{"location":"DSP-TOOLS/developers/code-quality-tools/python-type-checking/#pythons-typing-system","title":"Python's Typing System","text":"<p>The Python language allows adding type hints (see PEP 484),  but ignores them when running the code. In this sense, type hints are similar to comments: A Python program can still be run, even if the type hints are wrong. The Python language leaves type checking to external tools that must be run separately.</p>"},{"location":"DSP-TOOLS/developers/code-quality-tools/python-type-checking/#existing-type-checkers","title":"Existing Type Checkers","text":""},{"location":"DSP-TOOLS/developers/code-quality-tools/python-type-checking/#mypy","title":"mypy","text":"<p>Mypy is the oldest and most popular static type checker. It warns you when you use type annotations incorrectly. Mypy is designed with gradual typing in mind.  This means you can add type hints to your code base slowly  and that you can always fall back to dynamic typing when static typing is not convenient.</p>"},{"location":"DSP-TOOLS/developers/code-quality-tools/python-type-checking/#pyright","title":"pyright","text":"<p>Microsoft's static type checker for Python. Via Pylance, it is included in VS Code's Python extension <code>ms-python.python</code>.</p>"},{"location":"DSP-TOOLS/developers/code-quality-tools/python-type-checking/#pyre","title":"Pyre","text":"<p>Performant type checker by Facebook, compliant with the relevant PEP conventions. Pyre can analyze codebases with millions of lines of code incrementally, providing instantaneous feedback to developers as they write code. Depends on watchman,  a brew-installable FOSS file watching service by Facebook. Pyre ships with Pysa, a security tool built on top of Pyre that reasons about data flows in Python applications. </p>"},{"location":"DSP-TOOLS/developers/code-quality-tools/security/","title":"Security checks","text":""},{"location":"DSP-TOOLS/developers/code-quality-tools/security/#security-checks","title":"Security Checks","text":""},{"location":"DSP-TOOLS/developers/code-quality-tools/security/#bandit","title":"Bandit","text":"<p>Finds common security issues in Python code. For every single file, Bandit builds an AST, and runs plugins (i.e. tests) against the AST nodes. Bandit supports many plugins (i.e. tests) to detect various security issues. </p>"},{"location":"DSP-TOOLS/developers/code-quality-tools/security/#dependabot","title":"Dependabot","text":"<p>GitHub's built-in feature to keep the supply chain secure. Dependabot monitors vulnerabilities in dependencies used in a project  and keep the dependencies up-to-date.</p>"},{"location":"DSP-TOOLS/developers/code-quality-tools/security/#codeql","title":"CodeQL","text":"<p>Semantic code analysis engine by GitHub. CodeQL lets you query code as though it were data.  Write a query to find all variants of a vulnerability, eradicating it forever.  Then share your query to help others do the same.  CodeQL is free for research and open source, and can be activated in the GitHub settings of a repository.</p>"},{"location":"DSP-TOOLS/developers/code-quality-tools/security/#gitleaks","title":"Gitleaks","text":"<p>Secret scanner for git repositories, available as GitHub action.</p>"},{"location":"DSP-TOOLS/developers/code-quality-tools/security/#pysa","title":"Pysa","text":"<p>Pysa is a feature of Facebook's type checker Pyre. It performs taint analysis to identify potential security issues. Tainted data is data that must be treated carefully.  Pysa works by tracking flows of data from where they originate (sources)  to where they terminate in a dangerous location (sinks).  Example: User-controllable data that flows into an eval call  leads to a remote code execution vulnerability. </p>"},{"location":"DSP-TOOLS/file-formats/excel2json/","title":"excel2json","text":""},{"location":"DSP-TOOLS/file-formats/excel2json/#excel-file-format-to-generate-a-json-project","title":"Excel File Format to Generate a JSON Project","text":""},{"location":"DSP-TOOLS/file-formats/excel2json/#the-folder-structure","title":"The Folder Structure","text":"<p>With the <code>excel2json</code> command,  a JSON project file can be created from Excel files.</p> <p>To put it simple, a JSON project consists of</p> <ul> <li>0-1 \"lists\" sections</li> <li>1-n ontologies, each containing<ul> <li>1 \"properties\" section</li> <li>1 \"resources\" section</li> </ul> </li> </ul> <p>For each of these 3 sections, one or several Excel files are necessary. The Excel files and their format are described  below. If you want to convert the Excel files to JSON, it is possible to invoke a command for each of these sections  separately (as described below). </p> <p>But it is more convenient to use the command that creates the entire JSON project file. In order to do so, put all  involved files into a folder with the following structure:</p> <pre><code>data_model_files\n|-- lists\n|   |-- de.xlsx\n|   `-- en.xlsx\n`-- onto_name (onto_label)\n    |-- properties.xlsx\n    `-- resources.xlsx\n</code></pre> <p>Conventions for the folder names:</p> <ul> <li>The \"lists\" folder must have exactly this name, if it exists. It can also be omitted.</li> <li>Replace \"onto_name\" by your ontology's name, and \"onto_label\" by your ontology's label.</li> <li>The only name that can be chosen freely is the name of the topmost folder (\"data_model_files\" in this example).</li> </ul> <p>Then, use the following command:</p> <pre><code>dsp-tools excel2json data_model_files project.json\n</code></pre> <p>This will create a file <code>project.json</code> with the lists, properties, and resources from the Excel files. </p> <p>Please note that the \"header\" of the resulting JSON file is empty and thus invalid. It is necessary to add the project shortcode, shortname, longname, descriptions, and keywords by hand. Likewise, there will be no prefixes, no groups and  no users in the resulting JSON file.</p> <p>Continue reading the following paragraphs to learn more about the expected structure of the Excel files.</p>"},{"location":"DSP-TOOLS/file-formats/excel2json/#the-resources-section","title":"The <code>resources</code> Section","text":"<p>With the <code>excel2resources</code> command,  the <code>resources</code> section used in a data model (JSON) can be created from an Excel file.  Only <code>XLSX</code> files are allowed.  The <code>resources</code> section can be inserted into the ontology file and then be uploaded onto a DSP server.</p> <p>An Excel file template can be found here  or also in the <code>data_model_files</code> folder of <code>00A1-import-scripts</code>. It is recommended to work from the template. </p> <p>The expected worksheets of the Excel file are:</p> <ul> <li><code>classes</code>: a table with all resource classes intended to be used in the resulting JSON</li> <li><code>class1</code>, <code>class2</code>,...: a table for each resource class named after its name</li> </ul> <p>The worksheet called <code>classes</code> must have the following structure: </p> <p>The expected columns are:</p> <ul> <li><code>name</code>   (mandatory): Unique identifier for the resource class</li> <li><code>label_en</code>, <code>label_de</code>, <code>label_fr</code>, <code>label_it</code>, <code>label_rm</code>    (one language mandatory): Label of the resource class that will be displayed in DSP-APP. Should be rather short.</li> <li><code>comment_en</code>, <code>comment_de</code>, <code>comment_fr</code>, <code>comment_it</code>, <code>comment_rm</code>   (optional): Description of the resource class. Can be longer than the label.</li> <li><code>super</code>   (mandatory): The type of this resource class,    i.e. the base resource class/classes that this resource class is derived from.   Must be one of the values listed in the documentation.    If more than one: separated by commas. </li> </ul> <p>The optional columns may be omitted in the Excel.</p> <p>All other worksheets, one for each resource class, have the following structure: </p> <p>The expected columns are:</p> <ul> <li><code>Property</code>    (mandatory): The unique identifier of the property</li> <li><code>Cardinality</code>    (mandatory): Indicates how often the property may occur. The possible values are:<ul> <li><code>\"1\"</code>: exactly once (mandatory one value and only one)</li> <li><code>\"0-1\"</code>: The value may be omitted, but can occur only once.</li> <li><code>\"1-n\"</code>: At least one value must be present, but multiple values may be present.</li> <li><code>\"0-n\"</code>: The value may be omitted, but may also occur multiple times.</li> </ul> </li> <li><code>gui_order</code>    (optional): By default, DSP-APP displays the properties in the order how they are listed in the Excel sheet.   If you prefer another order, you can make a numbering in this column.   Example: You order the property names alphabetically in the Excel,    but they should be displayed in another order in DSP-APP.</li> </ul>"},{"location":"DSP-TOOLS/file-formats/excel2json/#the-properties-section","title":"The <code>properties</code> Section","text":"<p>With the <code>excel2properties</code> command,  the <code>properties</code> section used in a data model (JSON) can be created from an Excel file. Only the first worksheet of the Excel file is considered and only XLSX files are allowed.  The <code>properties</code> section can be inserted into the ontology file and then be uploaded onto a DSP server.</p> <p>An Excel file template can be found here  or also in the <code>data_model_files</code> folder of  <code>00A1-import-scripts</code>.  It is recommended to work from the template.</p> <p>The Excel sheet must have the following structure: </p> <p>The expected columns are:</p> <ul> <li><code>name</code>   (mandatory): Unique identifier for the property</li> <li><code>label_en</code>, <code>label_de</code>, <code>label_fr</code>, <code>label_it</code>, <code>label_rm</code>:   (one language mandatory): Label of the property that will be displayed in DSP-APP.    Should be rather short.</li> <li><code>comment_en</code>, <code>comment_de</code>, <code>comment_fr</code>, <code>comment_it</code>, <code>comment_rm</code>   (optional): Description of the property. Can be longer than the label.</li> <li><code>super</code>    (mandatory): The type of this property, i.e. the base property/properties that this property is derived from.   Must be one of the values listed in the documentation.   If more than one: separated by commas.</li> <li><code>object</code>    (mandatory): Target value of this property.    Must be one of the values listed in the documentation.<ul> <li>If the property is derived from <code>hasValue</code>,    the type of the property must be further specified by the object it takes,    e.g. <code>TextValue</code>, <code>ListValue</code>, or <code>IntValue</code>. </li> <li>If the property is derived from <code>hasLinkTo</code>,    the <code>object</code> specifies the resource class that this property refers to.</li> </ul> </li> <li><code>subject</code>   (optional): The subject defines the resource class the property can be used on.    It has to be provided as prefixed name of the resource class.</li> <li><code>gui_element</code>    (mandatory): The graphic component, defines how this property should be displayed.   Depends on the value of <code>object</code>:    Read the documentation of the respective <code>object</code> to learn which <code>gui_element</code> can be used.</li> <li><code>gui_attributes</code>    (only mandatory for lists): Some <code>gui_element</code>s need further specifications.    Read the documentation of the respective <code>object</code> to learn if your <code>gui_element</code> needs a <code>gui_attributes</code>.   Form: <code>attr: value, attr: value</code>. </li> </ul> <p>The optional columns may be omitted in the Excel.  </p> <p>For backwards compatibility,  files with column titles <code>hlist</code>, <code>en</code>, <code>de</code>, <code>fr</code>, <code>it</code>, or <code>rm</code> are valid, but deprecated.</p>"},{"location":"DSP-TOOLS/file-formats/excel2json/#the-lists-section","title":"The <code>lists</code> Section","text":"<p>With the <code>excel2lists</code> command,  the <code>lists</code> section of a JSON project file can be created from one or several Excel files.  The lists can then be inserted into a JSON project file and uploaded to a DSP server.</p> <p>The following example shows how to create the \"lists\" section  from the two Excel files <code>de.xlsx</code> and <code>en.xlsx</code>  which are located in a directory called <code>listfolder</code>:</p> <pre><code>dsp-tools excel2lists listfolder lists.json\n</code></pre> <p>The Excel sheets must have the following structure: </p> <p>Some notes:</p> <ul> <li>The data must be in the first worksheet of each Excel file.</li> <li>It is important that all Excel files have the same structure. So, the translation of a label in the second Excel    file has to be in the exact same cell as the one in the first Excel file.</li> <li>Only Excel files with file extension <code>.xlsx</code> are considered. </li> <li>The file name must consist of the language label, e.g. <code>de.xlsx</code> / <code>en.xlsx</code>. </li> <li>The language has to be one of {<code>de</code>, <code>en</code>, <code>fr</code>, <code>it</code>, <code>rm</code>}.</li> <li>As node name, a simplified version of the English label is taken. If English is not available, one of the other    languages is taken.</li> <li>If there are two nodes with the same name, an incrementing number is appended to the name.</li> <li>After the creation of the list, a validation against the JSON schema for lists is performed. An error message is    printed out if the list is not valid.</li> </ul> <p>It is recommended to work from the following templates: </p> <ul> <li>en.xlsx: File with the English labels</li> <li>de.xlsx: File with the German labels</li> <li>or alternatively from the   <code>data_model_files</code> folder of <code>00A1-import-scripts</code></li> </ul> <p>The output of the above command, with the template files, is:</p> <pre><code>{\n    \"lists\": [\n        {\n            \"name\": \"colors\",\n            \"labels\": {\n                \"de\": \"Farben\",\n                \"en\": \"colors\"\n            },\n            \"comments\": {\n                \"de\": \"Farben\",\n                \"en\": \"colors\"\n            },\n            \"nodes\": [\n                {\n                    \"name\": \"red\",\n                    \"labels\": {\n                        \"de\": \"rot\",\n                        \"en\": \"red\"\n                    }\n                },\n                \"...\"\n            ]\n        },\n        {\n            \"name\": \"category\",\n            \"labels\": {\n                \"de\": \"Kategorie\",\n                \"en\": \"category\"\n            },\n            \"comments\": {\n                \"de\": \"Kategorie\",\n                \"en\": \"category\"\n            },\n            \"nodes\": [\n                {\n                    \"name\": \"artwork\",\n                    \"labels\": {\n                        \"de\": \"Kunstwerk\",\n                        \"en\": \"artwork\"\n                    }\n                },\n                \"...\"\n            ]\n        },\n        {\n            \"name\": \"faculties-of-the-university-of-basel\",\n            \"labels\": {\n                \"de\": \"Fakult\u00e4ten der Universit\u00e4t Basel\",\n                \"en\": \"Faculties of the University of Basel\"\n            },\n            \"comments\": {\n                \"de\": \"Fakult\u00e4ten der Universit\u00e4t Basel\",\n                \"en\": \"Faculties of the University of Basel\"\n            },\n            \"nodes\": [\n                {\n                    \"name\": \"faculty-of-science\",\n                    \"labels\": {\n                        \"de\": \"Philosophisch-Naturwissenschaftliche Fakult\u00e4t\",\n                        \"en\": \"Faculty of Science\"\n                    }\n                },\n                \"...\"\n            ]\n        }\n    ]\n}\n</code></pre>"},{"location":"DSP-TOOLS/file-formats/excel2xml/","title":"excel2xml","text":""},{"location":"DSP-TOOLS/file-formats/excel2xml/#excel-file-format-to-generate-an-xml-data-file","title":"Excel File Format to Generate an XML Data File","text":"Hint If you want to convert customer data to XML, you need the excel2xml module instead of the CLI command. <p>With the <code>excel2xml</code> CLI command,  an XML data file can be created from an Excel/CSV file.</p> <p>The Excel/CSV file must be structured as in this image: </p> <p>Some notes:</p> <ul> <li>The special tags <code>&lt;annotation&gt;</code>, <code>&lt;link&gt;</code>, and <code>&lt;region&gt;</code> are represented as resources of the type <code>Annotation</code>,    <code>LinkObj</code>, and <code>Region</code>. </li> <li>The columns <code>ark</code>, <code>iri</code>, and <code>creation_date</code> are only used for DaSCH internal data migration.</li> <li>If <code>file</code> is provided, but no <code>file permissions</code>, an attempt will be started to deduce them from the resource    permissions (<code>res-default</code> \u2192 <code>prop-default</code> and <code>res-restricted</code> \u2192 <code>prop-restricted</code>). If this attempt is not    successful, a <code>BaseError</code> will be raised.</li> </ul>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/","title":"XML data file","text":""},{"location":"DSP-TOOLS/file-formats/xml-data-file/#the-xml-file-format-for-importing-data","title":"The XML File Format for Importing Data","text":"<p>With the <code>xmlupload</code> command,  data can be imported into a DSP repository (on a DSP server) from an XML file.  The import file is a standard XML file as described on this page. After a successful upload of the data,  an output file is written (called <code>id2iri_mapping_[timestamp].json</code>) with the mapping from the internal IDs used inside the XML  to their corresponding IRIs which uniquely identify them inside DSP.  This file should be kept if a second data delivery is added at a later point of time  see here.</p> <p>The import file must start with the standard XML header:</p> <pre><code>&lt;?xml version='1.0' encoding='utf-8'?&gt;\n</code></pre>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#the-root-element-knora","title":"The Root Element <code>&lt;knora&gt;</code>","text":"<p>The <code>&lt;knora&gt;</code> element describes all resources that should be imported. It has the following attributes:</p> <ul> <li><code>xmlns</code>: XML namespace identifier (required, always the same)</li> <li><code>xmlns:xsi</code>: URL to the XML Schema instance namespace of W3C (required, always the same)</li> <li><code>xsi:schemaLocation</code>: URL to the DSP XML schema, located in the DSP-TOOLS GitHub repository (required, always the same)</li> <li><code>shortcode</code>: project shortcode, e.g. \"0801\" (required, dependent on the project)</li> <li><code>default-ontology</code>: name of the ontology (required, dependent on the project)</li> </ul> <p>The <code>&lt;knora&gt;</code> element may look as follows:</p> <pre><code>&lt;knora\n    xmlns=\"https://dasch.swiss/schema\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"https://dasch.swiss/schema https://raw.githubusercontent.com/dasch-swiss/dsp-tools/main/src/dsp_tools/resources/schema/data.xsd\"\n    shortcode=\"0806\"\n    default-ontology=\"webern\"&gt;\n ...\n&lt;/knora&gt;\n</code></pre> <p>The <code>&lt;knora&gt;</code> element can only contain the following sub-elements:</p> <ul> <li><code>&lt;permissions&gt;</code> (optional)</li> <li><code>&lt;resource&gt;</code></li> </ul>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#dsp-permissions","title":"DSP Permissions","text":"<p>The DSP server provides access control for every resource and every property.</p>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#groups","title":"Groups","text":"<p>The user doesn't hold the permissions directly, but belongs to an arbitrary number of groups which hold the permissions. There are built-in groups and project specific groups:</p> <ul> <li>Built-in groups: Every user is automatically in at least one of the following built-in groups:<ul> <li><code>UnknownUser</code>: The user is not known to DSP (not logged in).</li> <li><code>KnownUser</code>: The user is logged in, but not a member of the project the data element belongs to.</li> <li><code>ProjectMember</code>: The user belongs to the same project as the data element.</li> <li><code>ProjectAdmin</code>: The user is project administrator in the project the data element belongs to.</li> <li><code>Creator</code>: The user is the owner of the element (created the element).</li> <li><code>SystemAdmin</code>: The user is a system administrator.</li> </ul> </li> <li>Project specific groups: <ul> <li>can be defined in the JSON project file</li> </ul> </li> </ul>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#rights","title":"Rights","text":"<p>A group can have exactly one of these rights:</p> <ul> <li>(no right): If no permission is defined for a certain group of users, these users cannot view any resources/values.</li> <li><code>RV</code> restricted view permission: Same as <code>V</code>,    but if it is applied to an image, the image is shown with a reduced resolution or with a watermark overlay.</li> <li><code>V</code> view permission: The user can view a resource or a value, but cannot modify it.</li> <li><code>M</code> modify permission: The user can modify the element, but cannot mark it as deleted.    The original resource or value will be preserved.</li> <li><code>D</code> delete permission: The user is allowed to mark an element as deleted.    The original resource or value will be preserved.</li> <li><code>CR</code> change right permission: The user can change the permission of a resource or value.    The user is also allowed to permanently delete (erase) a resource.</li> </ul> <p>Every right of this row includes all previous rights.</p>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#defining-permissions-with-the-permissions-element","title":"Defining Permissions With the <code>&lt;permissions&gt;</code> Element","text":"<p>The <code>&lt;permissions&gt;</code> element defines a permission ID that can subsequently be used in a  permissions attribute of a <code>&lt;resource&gt;</code> or <code>&lt;xyz-prop&gt;</code> tag.</p> <p>It is optional to define permissions in the XML. If not defined, default permissions are applied, so that only project  and system administrators can view and edit resources. All other users have no rights at all, not even view or  restricted view permissions.</p> <p>The <code>&lt;permissions&gt;</code> element defines which rights are given to which groups:</p> <pre><code>&lt;permissions id=\"res-default\"&gt;\n  &lt;allow group=\"UnknownUser\"&gt;RV&lt;/allow&gt;\n  &lt;allow group=\"KnownUser\"&gt;V&lt;/allow&gt;\n  &lt;allow group=\"dsp-test:MlsEditors\"&gt;D&lt;/allow&gt;\n&lt;/permissions&gt;\n</code></pre> <p>In addition to the DSP built-in groups, project specific groups  are supported as well. A project specific group name has the form <code>project-shortname:groupname</code>.</p> <p>If you don't want a group to have access at all, leave it out. In the following example, resources or properties with  permission <code>special-permission</code> can only be viewed by <code>ProjectAdmin</code>s:</p> <pre><code>&lt;permissions id=\"special-permission\"&gt;\n  &lt;allow group=\"ProjectAdmin\"&gt;CR&lt;/allow&gt;\n&lt;/permissions&gt;\n</code></pre>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#using-permissions-with-the-permissions-attribute","title":"Using Permissions With the <code>permissions</code> Attribute","text":"<p>Once defined, the permission IDs can be used as <code>permissions</code> attribute in the <code>&lt;resource&gt;</code> and <code>&lt;xyz-prop&gt;</code> tags. It is important to note that a resource doesn't inherit its permissions to its properties.  Each property must have its own permissions.  So, in the following example,  the bitstreams don't inherit the permissions from their resource:</p> <pre><code>&lt;resource ...&gt;\n    &lt;bitstream permissions=\"prop-default\"&gt;images/EURUS015a.jpg&lt;/bitstream&gt;\n&lt;/resource&gt;\n&lt;resource ...&gt;\n    &lt;bitstream permissions=\"prop-restricted\"&gt;images/EURUS015a.jpg&lt;/bitstream&gt;\n&lt;/resource&gt;\n&lt;resource ...&gt;\n    &lt;bitstream&gt;images/EURUS015a.jpg&lt;/bitstream&gt;\n&lt;/resource&gt;\n</code></pre> <p>To take as example <code>KnownUser</code>, i.e. a logged-in user who is not member of the project:</p> <ul> <li>With <code>permissions=\"prop-default\"</code>, he has <code>V</code> rights on the image: Normal view.</li> <li>With <code>permissions=\"prop-restricted\"</code>, he has <code>RV</code> rights on the image: Blurred image.</li> <li>With a blank <code>&lt;bitstream&gt;</code> tag, he has no rights on the image: No view possible. Only users from <code>ProjectAdmin</code>    upwards are able to look at the image.</li> </ul>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#describing-resources-with-the-resource-element","title":"Describing Resources With the <code>&lt;resource&gt;</code> Element","text":"<p>A <code>&lt;resource&gt;</code> element contains all necessary information to create a resource. It has the following attributes:</p> <ul> <li><code>label</code> (required): a human-readable, preferably meaningful short name of the resource</li> <li><code>restype</code> (required): the resource type as defined within the ontology </li> <li><code>id</code> (required): an arbitrary string providing a unique ID to the resource   in order to be referenceable by other resources;    the ID is only used during the import process    and later replaced by the IRI used internally by DSP </li> <li><code>permissions</code>    (optional, but if omitted,    users who are lower than a <code>ProjectAdmin</code> have no permissions at all,   not even view rights):   a reference to a permission ID</li> <li><code>iri</code> (optional): a custom IRI, used when migrating existing resources (DaSCH-internal only)</li> <li><code>ark</code> (optional): a version 0 ARK, used when migrating existing resources. It is not possible    to use <code>iri</code> and <code>ark</code> in the same resource. When <code>ark</code> is used, it overrides <code>iri</code> (DaSCH-internal only).</li> <li><code>creation_date</code> (optional): the creation date of the resource, used when migrating existing resources.   It must be formatted according to the constraints of    xsd:dateTimeStamp,    which means that the timezone is required, e.g.: <code>2005-10-23T13:45:12.502951+02:00</code> (DaSCH-internal only)</li> </ul> <p>A complete <code>&lt;resource&gt;</code> element may look as follows:</p> <pre><code>&lt;resource label=\"EURUS015a\"\n          restype=\":Postcard\"\n          id=\"238807\"\n          permissions=\"res-def-perm\"&gt;\n   ...\n&lt;/resource&gt;\n</code></pre> <p>For every property that the ontology requires, the <code>&lt;resource&gt;</code> element contains one property  element (e.g. <code>&lt;integer-prop name=\"property_name&gt;</code>). The property element contains one or more values.</p> <p>Example of a property element of type integer with two values:</p> <pre><code>&lt;integer-prop name=\":hasInteger\"&gt;\n    &lt;integer permissions=\"prop-default\"&gt;4711&lt;/integer&gt;\n    &lt;integer permissions=\"prop-default\"&gt;1&lt;/integer&gt;\n&lt;/integer-prop&gt;\n</code></pre> <p>The following property elements exist:</p> <ul> <li><code>&lt;bitstream&gt;</code>: contains a path to a file (if the resource is a multimedia resource)</li> <li><code>&lt;boolean-prop&gt;</code>: contains a boolean value</li> <li><code>&lt;color-prop&gt;</code>: contains color values</li> <li><code>&lt;date-prop&gt;</code>: contains date values</li> <li><code>&lt;decimal-prop&gt;</code>: contains decimal values</li> <li><code>&lt;geometry-prop&gt;</code>: contains JSON geometry definitions for a region</li> <li><code>&lt;geoname-prop&gt;</code>: contains geonames.org location codes</li> <li><code>&lt;list-prop&gt;</code>: contains list element labels</li> <li><code>&lt;integer-prop&gt;</code>: contains integer values</li> <li><code>&lt;interval-prop&gt;</code>: contains interval values</li> <li><code>&lt;period-prop&gt;</code>: contains time period values (not yet implemented)</li> <li><code>&lt;resptr-prop&gt;</code>: contains links to other resources</li> <li><code>&lt;text-prop&gt;</code>: contains text values</li> <li><code>&lt;time-prop&gt;</code>: contains time values</li> <li><code>&lt;uri-prop&gt;</code>: contains URI values</li> </ul>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#bitstream","title":"<code>&lt;bitstream&gt;</code>","text":"<p>The <code>&lt;bitstream&gt;</code> element is used for bitstream data. It contains the path to a bitstream object like an image file, a ZIP container, an audio file etc. It must only be used if the resource is a <code>StillImageRepresentation</code>, an <code>AudioRepresentation</code>, a <code>DocumentRepresentation</code> etc.</p> <p>Notes:</p> <ul> <li>There is only one <code>&lt;bitstream&gt;</code> element allowed per representation.</li> <li>The <code>&lt;bitstream&gt;</code> element must be the first element.</li> <li>By default, the path is relative to the working directory where <code>dsp-tools xmlupload</code> is executed in. This behavior    can be modified with the flag <code>--imgdir</code>. If you keep the default,   it is recommended to choose the project folder as working directory, <code>my_project</code> in the example below:</li> </ul> <pre><code>my_project\n\u251c\u2500\u2500 files\n\u2502   \u251c\u2500\u2500 data_model.json\n\u2502   \u2514\u2500\u2500 data_file.xml   (&lt;bitstream&gt;images/dog.jpg&lt;/bitstream&gt;)\n\u2514\u2500\u2500 images\n    \u251c\u2500\u2500 dog.jpg\n    \u2514\u2500\u2500 cat.jpg\n</code></pre> <pre><code>my_project % dsp-tools xmlupload files/data_file.xml\n</code></pre> <p>Supported file extensions:</p> Representation Supported formats <code>ArchiveRepresentation</code> ZIP, TAR, GZ, Z, TAR.GZ, TGZ, GZIP, 7Z <code>AudioRepresentation</code> MP3, WAV <code>DocumentRepresentation</code> PDF, DOC, DOCX, XLS, XLSX, PPT, PPTX <code>MovingImageRepresentation</code> MP4 <code>StillImageRepresentation</code> JPG, JPEG, PNG, TIF, TIFF, JP2 <code>TextRepresentation</code> TXT, CSV, XML, XSL, XSD <p>For more details, please consult the API docs.</p> <p>Attributes:</p> <ul> <li><code>permissions</code> : Permission ID    (optional, but if omitted, users who are lower than a <code>ProjectAdmin</code> have no permissions at all, not even view rights)</li> </ul> <p>Example of a public image inside a <code>StillImageRepresentation</code>:</p> <pre><code>&lt;resource restype=\":Image\" id=\"image_1\" label=\"image_1\" permissions=\"res-default\"&gt;\n    &lt;bitstream permissions=\"prop-default\"&gt;postcards/images/EURUS015a.jpg&lt;/bitstream&gt;\n&lt;/resource&gt;\n</code></pre>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#boolean-prop","title":"<code>&lt;boolean-prop&gt;</code>","text":"<p>The <code>&lt;boolean-prop&gt;</code> element is used for boolean values. It must contain exactly one <code>&lt;boolean&gt;</code> element.</p> <p>Attributes:</p> <ul> <li><code>name</code>: name of the property as defined in the ontology (required)</li> </ul>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#boolean","title":"<code>&lt;boolean&gt;</code>","text":"<p>The <code>&lt;boolean&gt;</code> element must contain the string \"true\"/\"True\" or \"false\"/\"False\", or the numeral 1 (true) or 0 (false).</p> <p>Attributes:</p> <ul> <li><code>permissions</code>: Permission ID    (optional, but if omitted, users who are lower than a <code>ProjectAdmin</code> have no permissions at all, not even view rights)</li> <li><code>comment</code>: a comment for this specific value (optional)</li> </ul> <p>Example of a public and a hidden boolean property:</p> <pre><code>&lt;boolean-prop name=\":hasBoolean\"&gt;\n  &lt;boolean permissions=\"prop-default\"&gt;true&lt;/boolean&gt;\n&lt;/boolean-prop&gt;\n&lt;boolean-prop name=\":hasHiddenBoolean\"&gt;\n  &lt;boolean&gt;0&lt;/boolean&gt;\n&lt;/boolean-prop&gt;\n</code></pre>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#color-prop","title":"<code>&lt;color-prop&gt;</code>","text":"<p>The <code>&lt;color-prop&gt;</code> element is used for color values. It must contain at least one <code>&lt;color&gt;</code> element.</p> <p>Attributes:</p> <ul> <li><code>name</code>: name of the property as defined in the ontology (required)</li> </ul>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#color","title":"<code>&lt;color&gt;</code>","text":"<p>The <code>&lt;color&gt;</code> element is used to indicate a color value. The color has to be given in web-notation, that is a <code>#</code> followed by 3 or 6 hex numerals.</p> <p>Attributes:</p> <ul> <li><code>permissions</code>: Permission ID    (optional, but if omitted, users who are lower than a <code>ProjectAdmin</code> have no permissions at all, not even view rights)</li> <li><code>comment</code>: a comment for this specific value (optional)</li> </ul> <p>Example of a property with a public and a hidden color value:</p> <pre><code>&lt;color-prop name=\":hasColor\"&gt;\n    &lt;color permissions=\"prop-default\"&gt;#00ff66&lt;/color&gt;\n    &lt;color&gt;#ff00ff&lt;/color&gt;\n&lt;/color-prop&gt;\n</code></pre>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#date-prop","title":"<code>&lt;date-prop&gt;</code>","text":"<p>The <code>&lt;date-prop&gt;</code> element is used for date values. It must contain at least one <code>&lt;date&gt;</code> element.</p> <p>Attributes:</p> <ul> <li><code>name</code>: name of the property as defined in the ontology (required)</li> </ul>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#date","title":"<code>&lt;date&gt;</code>","text":"<p>The <code>&lt;date&gt;</code> element contains a DSP-specific date value. It has the following format:</p> <pre><code>calendar:epoch:yyyy-mm-dd:epoch:yyyy-mm-dd\n</code></pre> <ul> <li><code>calendar</code>: either \"JULIAN\" or \"GREGORIAN\" (optional, default: GREGORIAN)</li> <li><code>epoch</code>: either \"AD\", \"BC\", \"BCE\" or \"CE\" (optional, default CE)</li> <li><code>yyyy</code>: year with one to four digits (required)</li> <li><code>mm</code>: month with one or two digits (optional, e.g. 01, 02, ..., 12)</li> <li><code>dd</code>: day with one or two digits (optional, e.g. 01, 02, ..., 31)</li> </ul> <p>Notes:</p> <ul> <li>If the day is omitted, then the precision is month, if also the month is omitted, the precision is year.</li> <li>Internally, a date is always represented as a start and end date. </li> <li>If start and end date match, it's an exact date. </li> <li>If start and end date don't match, it's a range.</li> <li>If the end date is omitted,    it's a range from the earliest possible beginning of the start date   to the latest possible end of the start date.    For example:<ul> <li>\"1893\" will be expanded to a range from January 1st 1893 to December 31st 1893.</li> <li>\"1893-01\" will be expanded to a range from January 1st 1893 to January 31st 1893.</li> <li>\"1893-01-01\" will be expanded to a range from January 1st 1893 to the entire year 1893.</li> </ul> </li> <li>Therefore, a day-precision date should always be written with start and end date: <code>GREGORIAN:CE:1893-01-01:CE:1893-01-01</code></li> </ul> <p>Attributes:</p> <ul> <li><code>permissions</code>: Permission ID    (optional, but if omitted, users who are lower than a <code>ProjectAdmin</code> have no permissions at all, not even view rights)</li> <li><code>comment</code>: a comment for this specific value (optional)</li> </ul> <p>Example of a property with a public and a hidden date value:</p> <pre><code>&lt;date-prop name=\":hasDate\"&gt;\n  &lt;date permissions=\"prop-default\"&gt;GREGORIAN:CE:2014-01-31:CE:2014-01-31&lt;/date&gt;\n  &lt;date&gt;GREGORIAN:CE:1930-09-02:CE:1930-09-03&lt;/date&gt;\n&lt;/date-prop&gt;\n</code></pre>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#decimal-prop","title":"<code>&lt;decimal-prop&gt;</code>","text":"<p>The <code>&lt;decimal-prop&gt;</code> element is used for decimal values. It must contain at least one <code>&lt;decimal&gt;</code> element.</p> <p>Attributes:</p> <ul> <li><code>name</code>: name of the property as defined in the ontology (required)</li> </ul>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#decimal","title":"<code>&lt;decimal&gt;</code>","text":"<p>The <code>&lt;decimal&gt;</code> element contains a decimal number, they must be written with a decimal point <code>.</code> as a separator.</p> <p>Attributes:</p> <ul> <li><code>permissions</code>: Permission ID    (optional, but if omitted, users who are lower than a <code>ProjectAdmin</code> have no permissions at all, not even view rights)</li> <li><code>comment</code>: a comment for this specific value (optional)</li> </ul> <p>Example of a property with a public and a hidden decimal value:</p> <pre><code>&lt;decimal-prop name=\":hasDecimal\"&gt;\n    &lt;decimal permissions=\"prop-default\"&gt;3.14159&lt;/decimal&gt;\n    &lt;decimal&gt;2.71828&lt;/decimal&gt;\n&lt;/decimal-prop&gt;\n</code></pre>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#geometry-prop","title":"<code>&lt;geometry-prop&gt;</code>","text":"<p>The <code>&lt;geometry-prop&gt;</code> element is used for a geometric definition of a 2-D region (e.g. a region on an image). It must contain at least one <code>&lt;geometry&gt;</code> element. A <code>&lt;geometry-prop&gt;</code> can only be used inside a  <code>&lt;region&gt;</code> tag. </p> <p>Attributes:</p> <ul> <li><code>name</code>: the only allowed name is <code>hasGeometry</code>, because this property is a DSP base property that can only be used in    the <code>&lt;region&gt;</code> tag.</li> </ul>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#geometry","title":"<code>&lt;geometry&gt;</code>","text":"<p>A geometry value is defined as a JSON object. It contains the following data:</p> <ul> <li><code>status</code>: \"active\" or \"deleted\"</li> <li><code>type</code>: \"circle\", \"rectangle\" or \"polygon\" (only the rectangle can be displayed in DSP-APP. The others can be    looked at in another frontend, e.g. in TANGOH.)</li> <li><code>lineColor</code>: web-color</li> <li><code>lineWidth</code>: integer number (in pixels)</li> <li><code>points</code>: array of coordinate objects of the form <code>{\"x\": decimal, \"y\": decimal}</code></li> <li><code>radius</code>: coordinate object of the form <code>{\"x\": decimal, \"y\": decimal}</code></li> <li>In the SALSAH data, there is also a key named <code>original_index</code> in the JSON format of all three shapes, but it doesn't    seem to have an influence on the shapes that TANGOH displays, so it can be omitted. </li> </ul> <p>Attributes:</p> <ul> <li><code>permissions</code>: Permission ID    (optional, but if omitted, users who are lower than a <code>ProjectAdmin</code> have no permissions at all, not even view rights)</li> <li><code>comment</code>: a comment for this specific value (optional)</li> </ul> <p>Example:</p> <pre><code>&lt;geometry-prop name=\"hasGeometry\"&gt;\n    &lt;geometry permissions=\"prop-default\"&gt;\n        {\n            \"status\": \"active\",\n            \"type\": \"rectangle\",\n            \"lineColor\": \"#ff1100\",\n            \"lineWidth\": 5,\n            \"points\": [\n                {\"x\":0.1,\"y\":0.7},\n                {\"x\":0.3,\"y\":0.2}\n            ]\n        }\n    &lt;/geometry&gt;\n    &lt;geometry permissions=\"prop-default\"&gt;\n        {\n            \"status\": \"active\",\n            \"type\": \"circle\",\n            \"lineColor\": \"#ff1100\",\n            \"lineWidth\": 5,\n            \"points\": [{\"x\":0.5,\"y\":0.3}],\n            \"radius\": {\"x\":0.1,\"y\":0.1}     // vector (0.1, 0.1)\n        }\n    &lt;/geometry&gt;\n    &lt;geometry permissions=\"prop-default\"&gt;\n        {\n            \"status\": \"active\",\n            \"type\": \"polygon\",\n            \"lineColor\": \"#ff1100\",\n            \"lineWidth\": 5,\n            \"points\": [{\"x\": 0.4, \"y\": 0.6},\n                       {\"x\": 0.5, \"y\": 0.9},\n                       {\"x\": 0.8, \"y\": 0.9},\n                       {\"x\": 0.7, \"y\": 0.6}]\n        }\n    &lt;/geometry&gt;\n&lt;/geometry-prop&gt;\n</code></pre> <p>The underlying grid is a 0-1 normalized top left-anchored grid. The following coordinate system shows the three shapes that were defined above: </p>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#geoname-prop","title":"<code>&lt;geoname-prop&gt;</code>","text":"<p>The <code>&lt;geoname-prop&gt;</code> element is used for values that contain a geonames.org ID.  It must contain at least one <code>&lt;geoname&gt;</code> element.</p> <p>Attributes:</p> <ul> <li><code>name</code>: name of the property as defined in the ontology (required)</li> </ul>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#geoname","title":"<code>&lt;geoname&gt;</code>","text":"<p>Contains a valid geonames.org ID.</p> <p>Attributes:</p> <ul> <li><code>permissions</code>: Permission ID    (optional, but if omitted, users who are lower than a <code>ProjectAdmin</code> have no permissions at all, not even view rights)</li> <li><code>comment</code>: a comment for this specific value (optional)</li> </ul> <p>Example of a property with a public link to Vienna and a hidden link to Basel:</p> <pre><code>&lt;geoname-prop name=\":hasLocation\"&gt;\n    &lt;geoname permissions=\"prop-default\"&gt;2761369&lt;/geoname&gt;\n    &lt;geoname&gt;2661604&lt;/geoname&gt;\n&lt;/geoname-prop&gt;\n</code></pre>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#integer-prop","title":"<code>&lt;integer-prop&gt;</code>","text":"<p>The <code>&lt;integer-prop&gt;</code> element is used for integer values. It must contain at least one <code>&lt;integer&gt;</code> element.</p> <p>Attributes:</p> <ul> <li><code>name</code>: name of the property as defined in the ontology (required)</li> </ul>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#integer","title":"<code>&lt;integer&gt;</code>","text":"<p>The <code>&lt;integer&gt;</code> element contains an integer value, these are whole numbers.</p> <p>Attributes:</p> <ul> <li><code>permissions</code>: Permission ID    (optional, but if omitted, users who are lower than a <code>ProjectAdmin</code> have no permissions at all, not even view rights)</li> <li><code>comment</code>: a comment for this specific value (optional)</li> </ul> <p>Example of a property with a public and a hidden integer value:</p> <pre><code>&lt;integer-prop name=\":hasInteger\"&gt;\n    &lt;integer permissions=\"prop-default\"&gt;4711&lt;/integer&gt;\n    &lt;integer&gt;1&lt;/integer&gt;\n&lt;/integer-prop&gt;\n</code></pre>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#interval-prop","title":"<code>&lt;interval-prop&gt;</code>","text":"<p>The <code>&lt;interval-prop&gt;</code> element is used for intervals with a start and an end point on a timeline,  e.g. relative to the beginning of an audio or video file.  An <code>&lt;interval-prop&gt;</code> must contain at least one <code>&lt;interval&gt;</code> element.</p> <p>Attributes:</p> <ul> <li><code>name</code>: name of the property as defined in the ontology (required)</li> </ul>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#interval","title":"<code>&lt;interval&gt;</code>","text":"<p>A time interval is represented by plain decimal numbers in seconds, without a special notation for minutes and hours.  The <code>&lt;interval&gt;</code> element contains two decimals (written with a decimal point <code>.</code>)  separated by a colon (<code>:</code>). The values before the decimal point are seconds,  and the values after the decimal points are fractions of a second.</p> <p>Attributes:</p> <ul> <li><code>permissions</code>: Permission ID    (optional, but if omitted, users who are lower than a <code>ProjectAdmin</code> have no permissions at all, not even view rights)</li> <li><code>comment</code>: a comment for this specific value (optional)</li> </ul> <p>Example of a property with a public and a hidden interval value:</p> <pre><code>&lt;interval-prop name=\":hasInterval\"&gt;\n    &lt;interval permissions=\"prop-default\"&gt;60.5:120.5&lt;/interval&gt;   &lt;!-- 0:01:00.5 - 0:02:00.5 --&gt;\n    &lt;interval&gt;61:3600&lt;/interval&gt;                                 &lt;!-- 0:01:01 - 1:00:00 --&gt;\n&lt;/interval-prop&gt;\n</code></pre>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#list-prop","title":"<code>&lt;list-prop&gt;</code>","text":"<p>The <code>&lt;list-prop&gt;</code> element is used as entry point into a list (list node). List nodes are identified by their <code>name</code> attribute that was given when creating the list nodes (which must be unique within each list!). It must contain at least one <code>&lt;list&gt;</code> element.</p> <p>Attributes:</p> <ul> <li><code>name</code>: name of the property as defined in the ontology (required)</li> <li><code>list</code>: name of the list as defined in the ontology (required)</li> </ul>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#list","title":"<code>&lt;list&gt;</code>","text":"<p>The <code>&lt;list&gt;</code> element references a node in a (pull-down or hierarchical) list.</p> <p>Attributes:</p> <ul> <li><code>permissions</code>: Permission ID    (optional, but if omitted, users who are lower than a <code>ProjectAdmin</code> have no permissions at all, not even view rights)</li> <li><code>comment</code>: a comment for this specific value (optional)</li> </ul> <p>Example of a property with a public and a hidden list value:</p> <pre><code>&lt;list-prop list=\"category\" name=\":hasCategory\"&gt;\n    &lt;list permissions=\"prop-default\"&gt;physics&lt;/list&gt;\n    &lt;list&gt;nature&lt;/list&gt;\n&lt;/list-prop&gt;\n</code></pre>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#resptr-prop","title":"<code>&lt;resptr-prop&gt;</code>","text":"<p>The <code>&lt;resptr-prop&gt;</code> element is used to link other resources within DSP. It must contain at least one <code>&lt;resptr&gt;</code> element.</p> <p>Attributes:</p> <ul> <li><code>name</code>: name of the property as defined in the ontology (required)</li> </ul>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#resptr","title":"<code>&lt;resptr&gt;</code>","text":"<p>The <code>&lt;resptr&gt;</code> element contains either the internal ID of another resource inside the XML or the IRI of an already existing resource on DSP. </p> <p>Attributes:</p> <ul> <li><code>permissions</code>: Permission ID    (optional, but if omitted, users who are lower than a <code>ProjectAdmin</code> have no permissions at all, not even view rights)</li> <li><code>comment</code>: a comment for this specific value (optional)</li> </ul> <p>Example of a property with a public link to <code>&lt;resource id=\"res_1\" ...&gt;</code>  and a hidden link to <code>&lt;resource id=\"res_2\" ...&gt;</code>:</p> <pre><code>&lt;resptr-prop name=\":hasReferenceTo\"&gt;\n    &lt;resptr permissions=\"prop-default\"&gt;res_1&lt;/resptr&gt;\n    &lt;resptr&gt;res_2&lt;/resptr&gt;\n&lt;/resptr-prop&gt;\n</code></pre>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#text-prop","title":"<code>&lt;text-prop&gt;</code>","text":"<p>The <code>&lt;text-prop&gt;</code> element is used for text values. It must contain at least one <code>&lt;text&gt;</code> element.</p> <p>Attributes:</p> <ul> <li><code>name</code>: name of the property as defined in the ontology (required)</li> </ul>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#text","title":"<code>&lt;text&gt;</code>","text":"<p>The <code>&lt;text&gt;</code> element has the following attributes:</p> <ul> <li><code>encoding</code> (required)<ul> <li><code>utf8</code>: simple text without markup</li> <li><code>xml</code>: complex text with markup. It must follow the XML format as defined by the   DSP standard mapping.</li> </ul> </li> <li><code>permissions</code>: Permission ID (optional, but if omitted, users who are lower than a <code>ProjectAdmin</code> have no permissions    at all, not even view rights)</li> <li><code>comment</code>: a comment for this specific value (optional)</li> </ul> <p>Example of a public and a hidden text:</p> <pre><code>&lt;text-prop name=\":hasDescription\"&gt;\n    &lt;text encoding=\"xml\" permissions=\"prop-default\"&gt;Probe bei \"Wimberger\". Lokal in Wien?&lt;/text&gt;\n    &lt;text encoding=\"xml\"&gt;\n        &lt;strong&gt;Bold text&lt;/strong&gt; and a &lt;a class=\"salsah-link\" href=\"IRI:obj_0003:IRI\"&gt;link to an ID&lt;/a&gt;.&lt;br/&gt;\n        And a &lt;a class=\"salsah-link\" href=\"http://rdfh.ch/4123/nyOODvYySV2nJ5RWRdmOdQ\"&gt;link to an IRI&lt;/a&gt;.\n    &lt;/text&gt;\n&lt;/text-prop&gt;\n</code></pre> <p>The second text above contains a link to the resource <code>obj_0003</code>, which is defined in the same XML file. It also  contains a link to the resource <code>http://rdfh.ch/4123/nyOODvYySV2nJ5RWRdmOdQ</code>, which already exists on the DSP server.</p>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#encoding-and-gui_element","title":"<code>encoding</code> and <code>gui_element</code>","text":"<p><code>encoding</code> must be combined with <code>gui_element</code> (defined in the ontology) as follows:</p> <code>gui_element</code>(JSON ontology) <code>encoding</code>(XML data) <code>SimpleText</code> <code>utf8</code> <code>Textarea</code> <code>utf8</code> <code>Richtext</code> <code>xml</code> <p>Handling of pretty-print whitespaces and newlines:</p> <ul> <li>encoding <code>utf8</code>: <ul> <li>leading and trailing whitespaces are removed</li> <li>multiple spaces are replaced by a single space</li> <li>(multiple) tab stops are replaced by a single space</li> </ul> </li> <li>encoding <code>xml</code>:<ul> <li>leading and trailing whitespaces are removed</li> <li>whitespaces and newlines don't have a meaning in XML, so they are removed. </li> <li>newlines can be created with <code>&lt;br/&gt;</code>.</li> <li>whitespaces are kept only inside <code>&lt;code&gt;</code> and <code>&lt;pre&gt;</code> tags.</li> </ul> </li> </ul>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#special-characters-overview","title":"Special Characters: Overview","text":"<p>Depending on the encoding of your text, special characters behave differently. There are two places where this must be taken into account:</p> <ul> <li>When a string is passed to    <code>excel2xml.make_text_prop()</code></li> <li>When a string is written by hand into an XML file</li> </ul> <p>In the tables below, the second column is the output of the first column, and the third column is how DSP-APP displays the second column.</p> <p>Behavior of simple text (<code>SimpleText</code>/<code>Textarea</code> + <code>utf8</code>):</p> input to <code>excel2xml</code> XML file DSP-APP Remarks <code>&lt;</code> <code>&amp;lt;</code> &lt; <code>&gt;</code> <code>&amp;gt;</code> &gt; <code>&lt;</code> \u26d4 invalid XML <code>&gt;</code> &gt; discouraged by XML standard, but possible <code>&amp;</code> <code>&amp;amp;</code> &amp; <code>&amp;</code> \u26d4 invalid XML <code>&amp;gt;</code> \u26d4 discouraged: The leading <code>&amp;</code> will be escaped <code>&lt;tag&gt;</code> <code>&amp;lt;tag&amp;gt;</code> <code>&lt;tag&gt;</code> discouraged: Simple text is not rich text <code>&lt;tag&gt;</code> \u26d4 forbidden: Simple text is not rich text <p>Behavior of text with markup (<code>Richtext</code> + <code>xml</code>):</p> input to <code>excel2xml</code> XML file DSP-APP Remarks <code>&lt;</code> <code>&amp;lt;</code> <code>&amp;lt;</code> <code>&gt;</code> <code>&amp;gt;</code> &gt; <code>&lt;</code> \u26d4 invalid XML <code>&gt;</code> &gt; discouraged by XML standard, but possible <code>&amp;lt;</code> <code>&amp;lt;</code> &lt; <code>&amp;gt;</code> <code>&amp;gt;</code> &gt; <code>&amp;</code> <code>&amp;amp;</code> &amp; <code>&amp;</code> \u26d4 invalid XML <code>&amp;amp;</code> <code>&amp;amp;</code> &amp; <code>&lt;em&gt;text&lt;/em&gt;</code> <code>&lt;em&gt;text&lt;/em&gt;</code> text <code>unclosed &lt;tag&gt;</code> <code>unclosed &amp;lt;tag&amp;gt;</code> <code>unclosed &lt;tag&gt;</code> <code>&amp;lt;not a tag&amp;gt;</code> <code>&lt;not a tag&gt;</code>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#special-characters-rules","title":"Special Characters: Rules","text":"<p>From the systematic analysis above,  the following rules can be derived:</p> <p>For input of excel2xml:</p> <ul> <li>Simple text: Don't use HTML escape sequences.</li> <li>Simple text: Don't use tags. (Mathematical comparisons with <code>&lt;&gt;</code> are allowed).</li> <li>Rich text: The special characters <code>&lt;</code>, <code>&gt;</code> and <code>&amp;</code> are only allowed to construct a tag.</li> <li>Rich text: If tags are used, they must result in well-formed XML.</li> <li>Rich text: HTML escape sequences can be freely used.</li> </ul> <p>If you write an XML file by hand:</p> <ul> <li>Simple text: The special characters <code>&lt;</code>, <code>&gt;</code> and <code>&amp;</code> must be escaped.</li> <li>Simple text: Don't use tags. (Mathematical comparisons with <code>&lt;&gt;</code> are allowed).</li> <li>Rich text: The special characters <code>&lt;</code>, <code>&gt;</code> and <code>&amp;</code> must be escaped if they are not part of a valid HTML tag.</li> </ul>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#time-prop","title":"<code>&lt;time-prop&gt;</code>","text":"<p>The <code>&lt;time-prop&gt;</code> element is used for time values in the Gregorian calendar.  It must contain at least one <code>&lt;time&gt;</code> element.</p> <p>Attributes:</p> <ul> <li><code>name</code>: name of the property as defined in the ontology (required)</li> </ul>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#time","title":"<code>&lt;time&gt;</code>","text":"<p>The <code>&lt;time&gt;</code> element represents an exact datetime value  in the form xsd:dateTimeStamp,  which is defined as <code>yyyy-mm-ddThh:mm:ss.sssssssssssszzzzzz</code>.  The following abbreviations describe this form:</p> <ul> <li><code>yyyy</code>: a four-digit numeral that represents the year. The value cannot start with a minus (-) or a plus (+) sign.   0001 is the lexical representation of the year 1 of the Common Era (also known as 1 AD). The value cannot be 0000.    The calendar is always the Gregorian calendar.</li> <li><code>mm</code>: a two-digit numeral that represents the month</li> <li><code>dd</code>: a two-digit numeral that represents the day</li> <li><code>hh</code>: a two-digit numeral representing the hours. Must be between 0 and 23</li> <li><code>mm</code>: a two-digit numeral that represents the minutes</li> <li><code>ss</code>: a two-digit numeral that represents the seconds</li> <li><code>ssssssssssss</code>: If present, a 1-to-12-digit numeral that represents the fractional seconds (optional)</li> <li><code>zzzzzz</code>: represents the time zone (required).</li> </ul> <p>Each part of the datetime value that is expressed as a numeric value is constrained to the maximum value within the  interval that is determined by the next higher part of the datetime value. For example, the day value can never be 32 and cannot be 29 for month 02 and year 2002 (February 2002).</p> <p>The timezone is defined as follows:</p> <ul> <li>A plus (+) or minus (-) sign that is followed by hh:mm:<ul> <li><code>+</code>: Indicates that the specified time instant is in a time zone    that is ahead of the UTC time by hh hours and mm minutes.</li> <li><code>-</code>: Indicates that the specified time instant is in a time zone    that is behind UTC time by hh hours and mm minutes.</li> <li><code>hh</code>: a two-digit numeral (with leading zeros as required) that represents the hours.     The value must be between -14 and +14, inclusive.</li> <li><code>mm</code>: a two-digit numeral that represents the minutes.    The value must be zero when hh is equal to 14.</li> </ul> </li> <li>Z: The literal Z, which represents the time in UTC (Z represents Zulu time, which is equivalent to UTC).    Specifying Z for the time zone is equivalent to specifying +00:00 or -00:00.</li> </ul> <p>Attributes:</p> <ul> <li><code>permissions</code>: Permission ID    (optional, but if omitted, users who are lower than a <code>ProjectAdmin</code> have no permissions at all, not even view rights)</li> <li><code>comment</code>: a comment for this specific value (optional)</li> </ul> <p>Example of a property with a public and a hidden time value:</p> <pre><code>&lt;time-prop name=\":hasTime\"&gt;\n    &lt;time permissions=\"prop-default\"&gt;2019-10-23T13:45:12Z&lt;/time&gt;\n    &lt;time&gt;2009-10-10T12:00:00-05:00&lt;/time&gt;\n&lt;/time-prop&gt;\n</code></pre>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#uri-prop","title":"<code>&lt;uri-prop&gt;</code>","text":"<p>The <code>&lt;uri-prop&gt;</code> represents a Uniform Resource Identifier. It must contain at least one <code>&lt;uri&gt;</code> element.</p> <p>Attributes:</p> <ul> <li><code>name</code>: name of the property as defined in the ontology (required)</li> </ul>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#uri","title":"<code>&lt;uri&gt;</code>","text":"<p>The <code>&lt;uri&gt;</code> element contains a syntactically valid URI.</p> <p>Attributes:</p> <ul> <li><code>permissions</code>: Permission ID    (optional, but if omitted, users who are lower than a <code>ProjectAdmin</code> have no permissions at all, not even view rights)</li> <li><code>comment</code>: a comment for this specific value (optional)</li> </ul> <p>Example of a property with a public and a hidden URI:</p> <pre><code>&lt;uri-prop name=\":hasURI\"&gt;\n    &lt;uri permissions=\"prop-default\"&gt;http://www.groove-t-gang.ch&lt;/uri&gt;\n    &lt;uri&gt;http://dasch.swiss&lt;/uri&gt;\n&lt;/uri-prop&gt;\n</code></pre>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#dsp-base-resources-and-base-properties-to-be-used-directly-in-the-xml-file","title":"DSP Base Resources and Base Properties to Be Used Directly in the XML File","text":"<p>There is a number of base resources and base properties from which no subclasses can be derived in a project ontology.  They are directly available in the XML data file.  Please have in mind that built-in names of the knora-base ontology must be used without prepended colon. See also the related part of the JSON project documentation</p>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#annotation","title":"<code>&lt;annotation&gt;</code>","text":"<p><code>&lt;annotation&gt;</code> is an annotation to another resource of any class. It must have the following predefined properties:</p> <ul> <li><code>hasComment</code> (1-n)</li> <li><code>isAnnotationOf</code> (1)</li> </ul> <p>Example:</p> <pre><code>&lt;annotation label=\"Annotation to another resource\" id=\"annotation_0\" permissions=\"res-default\"&gt;\n    &lt;text-prop name=\"hasComment\"&gt;\n        &lt;text encoding=\"utf8\" permissions=\"prop-default\"&gt;This is an annotation to a resource.&lt;/text&gt;\n    &lt;/text-prop&gt;\n    &lt;resptr-prop name=\"isAnnotationOf\"&gt;\n        &lt;resptr permissions=\"prop-default\"&gt;img_1&lt;/resptr&gt;\n    &lt;/resptr-prop&gt;\n&lt;/annotation&gt;\n</code></pre> <p>Technical note: An <code>&lt;annotation&gt;</code> is in fact a <code>&lt;resource restype=\"Annotation\"&gt;</code>. But it is mandatory to use the  shortcut, so that the XML file can be validated more precisely.</p>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#region","title":"<code>&lt;region&gt;</code>","text":"<p>A <code>&lt;region&gt;</code> resource defines a region of interest (ROI) in an image. It must have the following predefined properties:</p> <ul> <li><code>hasColor</code> (1)</li> <li><code>isRegionOf</code> (1)</li> <li><code>hasGeometry</code> (1)</li> <li><code>hasComment</code> (1-n)</li> </ul> <p>Example:</p> <pre><code>&lt;region label=\"Rectangle in image\" id=\"region_0\" permissions=\"res-default\"&gt;\n    &lt;color-prop name=\"hasColor\"&gt;\n        &lt;color permissions=\"prop-default\"&gt;#5d1f1e&lt;/color&gt;\n    &lt;/color-prop&gt;\n    &lt;resptr-prop name=\"isRegionOf\"&gt;\n        &lt;resptr permissions=\"prop-default\"&gt;img_1&lt;/resptr&gt;\n    &lt;/resptr-prop&gt;\n    &lt;geometry-prop name=\"hasGeometry\"&gt;\n        &lt;geometry permissions=\"prop-default\"&gt;\n            {\n                \"status\": \"active\",\n                \"type\": \"rectangle\",\n                \"lineColor\": \"#ff1100\",\n                \"lineWidth\": 5,\n                \"points\": [\n                    {\"x\":0.1,\"y\":0.7},\n                    {\"x\":0.3,\"y\":0.2}\n                ]\n            }\n        &lt;/geometry&gt;\n    &lt;/geometry-prop&gt;\n    &lt;text-prop name=\"hasComment\"&gt;\n        &lt;text encoding=\"utf8\" permissions=\"prop-default\"&gt;This is a rectangle-formed region of interest.&lt;/text&gt;\n    &lt;/text-prop&gt;\n&lt;/region&gt;\n</code></pre> <p>More details about the <code>&lt;geometry-prop&gt;</code> are documented here.</p> <p>Technical note: A <code>&lt;region&gt;</code> is in fact a <code>&lt;resource restype=\"Region\"&gt;</code>. But it is mandatory to use the  shortcut, so that the XML file can be validated more precisely.</p>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#link","title":"<code>&lt;link&gt;</code>","text":"<p><code>&lt;link&gt;</code> is a resource linking together several other resources of different classes. It must have the following  predefined properties:</p> <ul> <li><code>hasComment</code> (1-n)</li> <li><code>hasLinkTo</code> (1-n)</li> </ul> <p>Example:</p> <pre><code>&lt;link label=\"Link between three resources\" id=\"link_obj_0\" permissions=\"res-default\"&gt;\n    &lt;text-prop name=\"hasComment\"&gt;\n        &lt;text permissions=\"prop-default\" encoding=\"utf8\"&gt;\n            A link object can link together an arbitrary number of resources from any resource class.\n        &lt;/text&gt;\n    &lt;/text-prop&gt;\n    &lt;resptr-prop name=\"hasLinkTo\"&gt;\n        &lt;resptr permissions=\"prop-default\"&gt;doc_001&lt;/resptr&gt;\n        &lt;resptr permissions=\"prop-default\"&gt;img_obj_5&lt;/resptr&gt;\n        &lt;resptr permissions=\"prop-default\"&gt;audio_obj_0&lt;/resptr&gt;\n    &lt;/resptr-prop&gt;\n&lt;/link&gt;\n</code></pre> <p>Technical note: A <code>&lt;link&gt;</code> is in fact a <code>&lt;resource restype=\"LinkObj\"&gt;</code>. But it is mandatory to use the  shortcut, so that the XML file can be validated more precisely.</p>"},{"location":"DSP-TOOLS/file-formats/xml-data-file/#complete-example","title":"Complete Example","text":"<p>DaSCH provides you with two example repositories that contain everything which is necessary to create a project and  upload data. Both of them also contain an XML data file. You can find them here:</p> <ul> <li>https://github.com/dasch-swiss/00A1-import-scripts</li> <li>https://github.com/dasch-swiss/082E-rosetta-scripts</li> </ul> <p>In addition, there is another complete example of an XML data file here:</p> <pre><code>&lt;?xml version='1.0' encoding='utf-8'?&gt;\n&lt;knora \n    xmlns=\"https://dasch.swiss/schema\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"https://dasch.swiss/schema https://raw.githubusercontent.com/dasch-swiss/dsp-tools/main/src/dsp_tools/resources/schema/data.xsd\"\n    shortcode=\"0001\"\n    default-ontology=\"anything\"&gt;\n\n    &lt;!-- permissions: see https://docs.dasch.swiss/latest/DSP-API/02-knora-ontologies/knora-base/#permissions --&gt;\n    &lt;permissions id=\"res-default\"&gt;\n        &lt;allow group=\"UnknownUser\"&gt;V&lt;/allow&gt;\n        &lt;allow group=\"KnownUser\"&gt;V&lt;/allow&gt;\n        &lt;allow group=\"Creator\"&gt;CR&lt;/allow&gt;\n        &lt;allow group=\"ProjectAdmin\"&gt;CR&lt;/allow&gt;\n        &lt;allow group=\"anything:Thing searcher\"&gt;D&lt;/allow&gt;\n    &lt;/permissions&gt;\n    &lt;permissions id=\"res-restricted\"&gt;\n        &lt;allow group=\"UnknownUser\"&gt;RV&lt;/allow&gt;\n        &lt;allow group=\"KnownUser\"&gt;V&lt;/allow&gt;\n        &lt;allow group=\"Creator\"&gt;CR&lt;/allow&gt;\n        &lt;allow group=\"ProjectAdmin\"&gt;CR&lt;/allow&gt;\n        &lt;allow group=\"anything:Thing searcher\"&gt;M&lt;/allow&gt;\n    &lt;/permissions&gt;\n    &lt;permissions id=\"prop-default\"&gt;\n        &lt;allow group=\"UnknownUser\"&gt;V&lt;/allow&gt;\n        &lt;allow group=\"KnownUser\"&gt;V&lt;/allow&gt;\n        &lt;allow group=\"Creator\"&gt;CR&lt;/allow&gt;\n        &lt;allow group=\"ProjectAdmin\"&gt;CR&lt;/allow&gt;\n        &lt;allow group=\"anything:Thing searcher\"&gt;D&lt;/allow&gt;\n    &lt;/permissions&gt;\n    &lt;permissions id=\"prop-restricted\"&gt;\n        &lt;allow group=\"UnknownUser\"&gt;RV&lt;/allow&gt;\n        &lt;allow group=\"KnownUser\"&gt;V&lt;/allow&gt;\n        &lt;allow group=\"Creator\"&gt;CR&lt;/allow&gt;\n        &lt;allow group=\"ProjectAdmin\"&gt;CR&lt;/allow&gt;\n        &lt;allow group=\"anything:Thing searcher\"&gt;M&lt;/allow&gt;\n    &lt;/permissions&gt;\n    &lt;resource label=\"obj_inst1\"\n              restype=\":BlueThing\"\n              id=\"obj_0001\"\n              permissions=\"res-default\"&gt;\n        &lt;list-prop list=\"treelistroot\" name=\":hasListItem\"&gt;\n            &lt;list permissions=\"prop-default\"&gt;Tree list node 02&lt;/list&gt;\n        &lt;/list-prop&gt;\n        &lt;list-prop list=\"treelistroot\" name=\":hasOtherListItem\"&gt;\n            &lt;list permissions=\"prop-default\"&gt;Tree list node 03&lt;/list&gt;\n        &lt;/list-prop&gt;\n        &lt;text-prop name=\":hasRichtext\"&gt;\n            &lt;text permissions=\"prop-default\" encoding=\"xml\"&gt;\n                The &lt;strong&gt;third&lt;/strong&gt; object and a &lt;a class=\"salsah-link\" href=\"IRI:obj_0003:IRI\"&gt;link to an ID&lt;/a&gt;\n                and a &lt;a class=\"salsah-link\" href=\"http://rdfh.ch/4123/nyOODvYySV2nJ5RWRdmOdQ\"&gt;link to an IRI&lt;/a&gt;.\n            &lt;/text&gt;\n        &lt;/text-prop&gt;\n        &lt;text-prop name=\":hasText\"&gt;\n            &lt;text permissions=\"prop-default\" encoding=\"utf8\"&gt;Dies ist ein einfacher Text ohne Markup&lt;/text&gt;\n            &lt;text permissions=\"prop-restricted\" encoding=\"utf8\"&gt;Nochmals ein einfacher Text&lt;/text&gt;\n        &lt;/text-prop&gt;\n        &lt;date-prop name=\":hasDate\"&gt;\n            &lt;date permissions=\"prop-default\"&gt;JULIAN:CE:1401-05-17:CE:1402-01&lt;/date&gt;\n        &lt;/date-prop&gt;\n        &lt;integer-prop name=\":hasInteger\"&gt;\n            &lt;integer permissions=\"prop-default\"&gt;4711&lt;/integer&gt;\n        &lt;/integer-prop&gt;\n        &lt;decimal-prop name=\":hasDecimal\"&gt;\n            &lt;decimal permissions=\"prop-default\" comment=\"Eulersche Zahl\"&gt;2.718281828459&lt;/decimal&gt;\n        &lt;/decimal-prop&gt;\n        &lt;boolean-prop name=\":hasBoolean\"&gt;\n            &lt;boolean permissions=\"prop-default\"&gt;true&lt;/boolean&gt;\n        &lt;/boolean-prop&gt;\n        &lt;uri-prop name=\":hasUri\"&gt;\n            &lt;uri permissions=\"prop-default\"&gt;http://dasch.swiss/gaga&lt;/uri&gt;\n        &lt;/uri-prop&gt;\n        &lt;interval-prop name=\":hasInterval\"&gt;\n            &lt;interval permissions=\"prop-default\"&gt;12.5:14.2&lt;/interval&gt;\n        &lt;/interval-prop&gt;\n        &lt;color-prop name=\":hasColor\"&gt;\n            &lt;color permissions=\"prop-default\"&gt;#00ff00&lt;/color&gt;\n        &lt;/color-prop&gt;\n        &lt;geoname-prop name=\":hasGeoname\"&gt;\n            &lt;geoname permissions=\"prop-default\" comment=\"A sacred place for railroad fans\"&gt;5416656&lt;/geoname&gt;\n        &lt;/geoname-prop&gt;\n        &lt;resptr-prop name=\":hasBlueThing\"&gt;\n            &lt;resptr permissions=\"prop-default\"&gt;obj_0002&lt;/resptr&gt;\n        &lt;/resptr-prop&gt;\n    &lt;/resource&gt;\n\n    &lt;resource label=\"obj_inst2\"\n              restype=\":BlueThing\"\n              id=\"obj_0002\"\n              permissions=\"res-default\"&gt;\n        &lt;list-prop list=\"treelistroot\" name=\":hasListItem\"&gt;\n            &lt;list permissions=\"prop-default\"&gt;Tree list node 10&lt;/list&gt;\n        &lt;/list-prop&gt;\n        &lt;list-prop list=\"treelistroot\" name=\":hasOtherListItem\"&gt;\n            &lt;list permissions=\"prop-default\"&gt;Tree list node 11&lt;/list&gt;\n        &lt;/list-prop&gt;\n        &lt;text-prop name=\":hasRichtext\"&gt;\n            &lt;text permissions=\"prop-default\" encoding=\"xml\"&gt;What is this &lt;em&gt;bold&lt;/em&gt; thing?&lt;/text&gt;\n        &lt;/text-prop&gt;\n        &lt;text-prop name=\":hasText\"&gt;\n            &lt;text permissions=\"prop-default\" encoding=\"utf8\"&gt;aa bbb cccc ddddd&lt;/text&gt;\n        &lt;/text-prop&gt;\n        &lt;date-prop name=\":hasDate\"&gt;\n            &lt;date permissions=\"prop-default\"&gt;1888&lt;/date&gt;\n        &lt;/date-prop&gt;\n        &lt;integer-prop name=\":hasInteger\"&gt;\n            &lt;integer permissions=\"prop-default\"&gt;42&lt;/integer&gt;\n        &lt;/integer-prop&gt;\n        &lt;decimal-prop name=\":hasDecimal\"&gt;\n            &lt;decimal permissions=\"prop-default\" comment=\"Die Zahl PI\"&gt;3.14159&lt;/decimal&gt;\n        &lt;/decimal-prop&gt;\n        &lt;boolean-prop name=\":hasBoolean\"&gt;\n            &lt;boolean permissions=\"prop-default\"&gt;false&lt;/boolean&gt;\n        &lt;/boolean-prop&gt;\n        &lt;uri-prop name=\":hasUri\"&gt;\n            &lt;uri permissions=\"prop-default\"&gt;http://unibas.ch/gugus&lt;/uri&gt;\n        &lt;/uri-prop&gt;\n        &lt;interval-prop name=\":hasInterval\"&gt;\n            &lt;interval permissions=\"prop-default\"&gt;24:100.075&lt;/interval&gt;\n        &lt;/interval-prop&gt;\n        &lt;color-prop name=\":hasColor\"&gt;\n            &lt;color permissions=\"prop-default\"&gt;#33ff77&lt;/color&gt;\n        &lt;/color-prop&gt;\n        &lt;geoname-prop name=\":hasGeoname\"&gt;\n            &lt;geoname permissions=\"prop-default\" comment=\"A sacred place for railroad fans\"&gt;5416656&lt;/geoname&gt;\n        &lt;/geoname-prop&gt;\n        &lt;resptr-prop name=\":hasBlueThing\"&gt;\n            &lt;resptr permissions=\"prop-default\"&gt;obj_0003&lt;/resptr&gt;\n        &lt;/resptr-prop&gt;\n    &lt;/resource&gt;\n\n    &lt;resource label=\"obj_inst3\"\n              restype=\":BlueThing\"\n              id=\"obj_0003\"\n              permissions=\"res-default\"&gt;\n        &lt;list-prop list=\"treelistroot\" name=\":hasListItem\"&gt;\n            &lt;list permissions=\"prop-default\"&gt;Tree list node 01&lt;/list&gt;\n        &lt;/list-prop&gt;\n        &lt;list-prop list=\"treelistroot\" name=\":hasOtherListItem\"&gt;\n            &lt;list permissions=\"prop-default\"&gt;Tree list node 02&lt;/list&gt;\n        &lt;/list-prop&gt;\n        &lt;text-prop name=\":hasRichtext\"&gt;\n            &lt;text permissions=\"prop-default\" encoding=\"xml\"&gt;This is &lt;em&gt;italicized and &lt;strong&gt;bold&lt;/strong&gt;&lt;/em&gt; text!&lt;/text&gt;\n        &lt;/text-prop&gt;\n        &lt;text-prop name=\":hasText\"&gt;\n            &lt;text permissions=\"prop-default\" encoding=\"utf8\"&gt;aa bbb cccc ddddd&lt;/text&gt;\n        &lt;/text-prop&gt;\n        &lt;date-prop name=\":hasDate\"&gt;\n            &lt;date permissions=\"prop-default\"&gt;1888&lt;/date&gt;\n        &lt;/date-prop&gt;\n        &lt;integer-prop name=\":hasInteger\"&gt;\n            &lt;integer permissions=\"prop-default\"&gt;42&lt;/integer&gt;\n        &lt;/integer-prop&gt;\n        &lt;decimal-prop name=\":hasDecimal\"&gt;\n            &lt;decimal permissions=\"prop-default\" comment=\"Die Zahl PI\"&gt;3.14159&lt;/decimal&gt;\n        &lt;/decimal-prop&gt;\n        &lt;boolean-prop name=\":hasBoolean\"&gt;\n            &lt;boolean permissions=\"prop-default\"&gt;false&lt;/boolean&gt;\n        &lt;/boolean-prop&gt;\n        &lt;uri-prop name=\":hasUri\"&gt;\n            &lt;uri permissions=\"prop-default\"&gt;http://unibas.ch/gugus&lt;/uri&gt;\n        &lt;/uri-prop&gt;\n        &lt;interval-prop name=\":hasInterval\"&gt;\n            &lt;interval permissions=\"prop-default\"&gt;24:100.075&lt;/interval&gt;\n        &lt;/interval-prop&gt;\n        &lt;color-prop name=\":hasColor\"&gt;\n            &lt;color permissions=\"prop-default\"&gt;#33ff77&lt;/color&gt;\n        &lt;/color-prop&gt;\n        &lt;geoname-prop name=\":hasGeoname\"&gt;\n            &lt;geoname permissions=\"prop-default\" comment=\"A sacred place for railroad fans\"&gt;5416656&lt;/geoname&gt;\n        &lt;/geoname-prop&gt;\n    &lt;/resource&gt;\n\n    &lt;resource label=\"obj_inst4\"\n              restype=\":ThingPicture\"\n              id=\"obj_0004\"\n              permissions=\"res-default\"&gt;\n        &lt;bitstream&gt;gaga.tif&lt;/bitstream&gt;\n        &lt;text-prop name=\":hasPictureTitle\"&gt;\n            &lt;text permissions=\"prop-default\" encoding=\"utf8\"&gt;This is the famous Lena&lt;/text&gt;\n        &lt;/text-prop&gt;\n    &lt;/resource&gt;\n\n&lt;/knora&gt;\n</code></pre>"},{"location":"DSP-TOOLS/file-formats/json-project/caveats/","title":"Caveats","text":""},{"location":"DSP-TOOLS/file-formats/json-project/caveats/#caveats-when-working-with-a-json-project-file","title":"Caveats when Working With a JSON Project File","text":""},{"location":"DSP-TOOLS/file-formats/json-project/caveats/#referencing-ontologies","title":"Referencing Ontologies","text":"<p>For several fields (e.g. <code>super</code> in both <code>resources</code> and <code>properties</code>, or <code>propname</code> in <code>cardinalities</code>), it is necessary to reference entities that are defined elsewhere. The following cases are possible:</p> <ul> <li>DSP-API internals: <ul> <li>They are referenced as such and do not have a leading colon,   e.g. <code>Resource</code>, <code>DocumentRepresentation</code> or <code>hasValue</code></li> </ul> </li> <li>An external ontology: <ul> <li>The prefix of the ontology must be declared in the \"prefixes\" object.</li> <li>The prefix can then be used for referencing the corresponding external ontology,   e.g. <code>foaf:familyName</code> or <code>sdo:Organization</code></li> </ul> </li> <li>The current ontology: <ul> <li>Within the same ontology, references can be made by prepending a colon without a prefix <code>:</code>,   e.g. <code>:hasName</code>.</li> <li>Optionally, the current ontology can be referenced by its <code>name</code>,   e.g. <code>sameOnto:hasName</code></li> <li>It is not necessary to add <code>sameOnto</code> to the \"prefixes\" object.</li> </ul> </li> <li>A different ontology defined in the same file: <ul> <li>Within one data model file, multiple ontologies can be defined.   These will be created in the exact order they appear in the <code>ontologies</code> array. </li> <li>Once an ontology has been created,   it can be referenced by the following ontologies by its <code>name</code>,   e.g. <code>first-onto:hasName</code></li> <li>It is not necessary to add <code>first-onto</code> to \"prefixes\" object.</li> </ul> </li> </ul>"},{"location":"DSP-TOOLS/file-formats/json-project/caveats/#dsp-base-resources-and-base-properties-to-be-used-directly-in-the-xml-file","title":"DSP Base Resources and Base Properties to be Used Directly in the XML File","text":"<p>From several DSP base resources, no subclasses can be created in a project ontology.  However, they can be used directly in the XML data file:</p> <ul> <li><code>Annotation</code> is an annotation to another resource of any class.    It can be used in the XML file with the &lt;annotation&gt; tag and    has the following predefined properties:<ul> <li><code>hasComment</code> (1-n)</li> <li><code>isAnnotationOf</code> (1)</li> </ul> </li> <li><code>LinkObj</code> is a resource linking together several other resources of different classes.    It can be used in the XML file with the &lt;link&gt; tag and    has the following predefined properties:<ul> <li><code>hasComment</code> (1-n)</li> <li><code>hasLinkTo</code> (1-n)</li> </ul> </li> <li>A <code>Region</code> resource defines a region of interest (ROI) in an image.    It can be used in the XML file with the &lt;region&gt; tag and    has the following predefined properties:<ul> <li><code>hasColor</code> (1)</li> <li><code>isRegionOf</code> (1)</li> <li><code>hasGeometry</code> (1)</li> <li><code>hasComment</code> (1-n)</li> </ul> </li> </ul> <p>There are some DSP base properties that are used directly in the above-mentioned resource classes.  Subclasses can be created from some of them in the project ontology.</p> <ul> <li><code>hasLinkTo</code>: a link to another resource<ul> <li>subclasses can be created from it (hasLinkTo Property)</li> <li>can be used directly in the XML data file in the &lt;link&gt; tag</li> </ul> </li> <li><code>hasColor</code>: Defines a color value. <ul> <li>subclasses can be created from it (ColorValue)</li> <li>can be used directly in the XML data file in the &lt;region&gt; tag</li> </ul> </li> <li><code>hasComment</code>: Defines a standard comment. <ul> <li>subclasses can be created from it (hasComment Property)</li> <li>can be used directly in the XML data file in the &lt;region&gt; tag or    &lt;link&gt; tag</li> </ul> </li> <li><code>hasGeometry</code>: Defines a geometry value (a JSON describing a polygon, circle or rectangle). <ul> <li>must be used directly in the XML data file in the &lt;region&gt; tag</li> </ul> </li> <li><code>isRegionOf</code>: A special variant of <code>hasLinkTo</code>.    It means that the given resource class is a region of interest in an image. <ul> <li>must be used directly in the XML data file in the &lt;region&gt; tag</li> </ul> </li> <li><code>isAnnotationOf</code>: A special variant of <code>hasLinkTo</code>. It means that the given resource class is an annotation to another   resource class. <ul> <li>must be used directly in the XML data file in the    &lt;annotation&gt; tag</li> </ul> </li> </ul>"},{"location":"DSP-TOOLS/file-formats/json-project/ontologies/","title":"Ontologies","text":""},{"location":"DSP-TOOLS/file-formats/json-project/ontologies/#the-ontologies-array-of-a-json-project","title":"The <code>ontologies</code> Array of a JSON Project","text":"<p>An ontology is a formal representation of a set of terms which represent real world objects. Dependencies, attributes and relations of and between the individual components of the set are recorded in a logical, formal language. In contrast to a taxonomy, which defines a mere hierarchical structure within a range of terms, an ontology is much more a network of information of logical dependencies of term elements. Or, in other words, an ontology defines a strict, formal \"data model\" for real world concepts such as \"Person\", \"Work\", \"Artist\" etc.</p> <p>An ontology thus has to offer at least two things: </p> <ul> <li>a set of concepts or terms (called resource classes) that represent concepts of real world objects</li> <li>properties describing these resources. These properties are linked either to a final value or may define a    relationship to another resource. </li> </ul> <p>Let's assume that we define a resource class called <code>Person</code> and two properties called <code>hasBirthday</code> and <code>hasParent</code>.  For a specific instance of a <code>Person</code>, <code>hasBirthday</code> will have a final value such as \"1960-05-21\", whereas <code>hasParent</code> will link to another instance of a <code>Person</code>.</p> <p>Within DSP, properties may be re-used for different resources. E.g. a property \"description\" may be used for a resource called \"image\" as well as \"movie\". Therefore, the list of properties is separated from the list of resources. The properties are assigned to the resources by defining \"cardinalities\". A cardinality indicates if a property is mandatory or can be omitted (e.g. if unknown), and if a property may be used several times on the same instance of a resource or not. The cardinality definitions are explained further below.</p>"},{"location":"DSP-TOOLS/file-formats/json-project/ontologies/#the-ontology-object","title":"The <code>ontology</code> Object","text":"<p>Example of an ontology object:</p> <pre><code>{\n  \"name\": \"seworon\",\n  \"label\": \"Secrets of the World Ontology\",\n  \"comment\": \"This is an example ontology\",\n  \"properties\": [\n    ...\n  ],\n  \"resources\": [\n    ...\n  ]\n}\n</code></pre>"},{"location":"DSP-TOOLS/file-formats/json-project/ontologies/#ontology-name","title":"Ontology: <code>name</code>","text":"<p>(required)</p> <p><code>\"name\": \"&lt;string&gt;\"</code></p> <p>The ontology's (short) name should be in the form of a xsd:NCNAME. This means a string without blanks or special characters but <code>-</code> and <code>_</code> are allowed (although not as first character).</p>"},{"location":"DSP-TOOLS/file-formats/json-project/ontologies/#ontology-label","title":"Ontology: <code>label</code>","text":"<p>(required)</p> <p><code>\"label\": \"&lt;string&gt;\"</code></p> <p>A string that provides the full name of the ontology.</p>"},{"location":"DSP-TOOLS/file-formats/json-project/ontologies/#ontology-comment","title":"Ontology: <code>comment</code>","text":"<p>(optional)</p> <p><code>\"comment\": \"&lt;string&gt;\"</code></p> <p>A string that provides a comment to the ontology.</p>"},{"location":"DSP-TOOLS/file-formats/json-project/ontologies/#ontology-properties","title":"Ontology: <code>properties</code>","text":"<p>(required)</p> <p><code>\"properties\": [&lt;property-definition&gt;, &lt;property-definition&gt;, ...]</code></p> <p>A <code>properties</code> array contains all properties used to describe resources in the ontology. A property has to be of a certain data type. It is not possible to create a custom data type.</p> <p>The following fields are mandatory:</p> <ul> <li><code>name</code></li> <li><code>labels</code></li> <li><code>super</code></li> <li><code>object</code></li> <li><code>gui_element</code></li> </ul> <p>The following fields are optional:</p> <ul> <li><code>comments</code> </li> <li><code>subject</code></li> <li><code>gui_attributes</code></li> </ul> <p>A detailed description of <code>properties</code> can be found below.</p>"},{"location":"DSP-TOOLS/file-formats/json-project/ontologies/#ontology-resources","title":"Ontology: <code>resources</code>","text":"<p>(required)</p> <p>The resource classes are the primary entities of the data model. They are the actual objects inside a terminology space. A resource class can be seen as a template for the representation of a real object that is represented in the DSP. A resource class defines properties (data fields). For each of these properties a data type as well as the cardinality has to be provided.</p> <p><code>\"resources\": [&lt;resource-definition&gt;, &lt;resource-definition&gt;, ...]</code></p> <p>A resource object needs to have the following fields:</p> <ul> <li><code>name</code></li> <li><code>labels</code></li> <li><code>super</code></li> <li><code>cardinalities</code>*</li> </ul> <p>The following field is optional:</p> <ul> <li><code>comments</code> </li> </ul> <p>A detailed description of <code>resources</code> can be found below.</p> <p>(*It is technically possible to have a resource without cardinalities, but in most cases it doesn't make sense to omit them.)</p>"},{"location":"DSP-TOOLS/file-formats/json-project/ontologies/#the-property-object","title":"The <code>property</code> Object","text":"<pre><code>{\n  \"name\": \"id\",\n  \"subject\": \":School\",\n  \"object\": \"TextValue\",\n  \"super\": [\n      \"hasValue\"\n  ],\n  \"labels\": {\n    \"en\": \"School ID\",\n    \"de\": \"ID der Schule\",\n    \"fr\": \"ID de l'\u00e9cole\"\n  },\n  \"gui_element\": \"SimpleText\",\n  \"gui_attributes\": {\n    \"size\": 32,\n    \"maxlength\": 128\n  }\n}\n</code></pre>"},{"location":"DSP-TOOLS/file-formats/json-project/ontologies/#property-name","title":"Property: <code>name</code>","text":"<p>(required)</p> <p><code>\"name\": \"&lt;string&gt;\"</code></p> <p>A name for the property, e.g. <code>pageOf</code>, <code>hasBirthdate</code>, <code>createdBy</code>. It should be in the form of a xsd:NCNAME. This means a string without blanks or special characters but <code>-</code> and <code>_</code> are allowed (although not as first character).</p> <p>By convention, property names start with a lower case letter.</p>"},{"location":"DSP-TOOLS/file-formats/json-project/ontologies/#property-label","title":"Property: <code>label</code>","text":"<p>(required)</p> <p><code>\"labels\": {\"&lt;language&gt;\": \"&lt;string&gt;\", ...}</code></p> <p>Collection of <code>labels</code> for the property as strings with language tag  (currently, <code>en</code>, <code>de</code>, <code>fr</code>, <code>it</code>, and <code>rm</code> are supported).</p>"},{"location":"DSP-TOOLS/file-formats/json-project/ontologies/#property-comments","title":"Property: <code>comments</code>","text":"<p>(optional)</p> <p><code>\"comments\": { \"&lt;lang&gt;\": \"&lt;comment&gt;\", \"&lt;lang&gt;\": \"&lt;comment&gt;\", ... }</code></p> <p>Comments with language tags. Currently, <code>de</code>, <code>en</code>, <code>fr</code>, <code>it</code>, and <code>rm</code> are supported.  The <code>comments</code> element is optional.</p>"},{"location":"DSP-TOOLS/file-formats/json-project/ontologies/#property-super","title":"Property: <code>super</code>","text":"<p>(required)</p> <p><code>\"super\": [\"&lt;super-property&gt;\", \"&lt;super-property&gt;, ...]</code></p> <p>A property is always derived from at least one other property. There are three groups of properties that can serve as  super-property:</p> <ul> <li>DSP base properties</li> <li>properties defined in external ontologies</li> <li>properties defined in the project ontology itself</li> </ul> <p>The syntax how to refer to these different groups of properties is described  here.</p> <p>The following DSP base properties are available:</p> <ul> <li><code>hasValue</code>: This is the most general case,    to be used in all cases when your property is none of the special cases below.</li> <li><code>hasLinkTo</code>: a link to another resource</li> <li><code>isPartOf</code>: A special variant of <code>hasLinkTo</code>. It says that an instance of the given resource class is an integral part   of another resource class. E.g. a \"page\" is part of a \"book\".</li> <li><code>seqnum</code>: An integer that is used to define a sequence number in an ordered set of instances,    e.g. the ordering of the pages in a book.    A resource that has a property derived from <code>seqnum</code> must also have a property derived from <code>isPartOf</code>.</li> <li><code>hasColor</code>: Defines a color value.  </li> <li><code>hasComment</code>: Defines a standard comment.</li> <li><code>isSequenceOf</code>: A special variant of <code>hasLinkTo</code>. It says that an instance of the given resource class is a section    of an audio/video resource.</li> <li><code>hasSequenceBounds</code>: This base property is used together with <code>isSequenceOf</code>. It denotes a time interval of an audio/   video resource.</li> </ul>"},{"location":"DSP-TOOLS/file-formats/json-project/ontologies/#property-subject","title":"Property: <code>subject</code>","text":"<p>(optional)</p> <p><code>\"subject\": \"&lt;resource-class&gt;\"</code></p> <p>The <code>subject</code> defines the resource class the property can be used on. It has to be provided as prefixed name of the  resource class (see here on how prefixed names are used).</p>"},{"location":"DSP-TOOLS/file-formats/json-project/ontologies/#property-object-gui_element-gui_attributes","title":"Property: <code>object</code>, <code>gui_element</code>, <code>gui_attributes</code>","text":"<p>These three are related as follows:</p> <ul> <li><code>object</code> (required) is used to define the data type of the value that the property will store. </li> <li><code>gui_element</code> (required) depends on the value of <code>object</code>.</li> <li><code>gui_attributes</code> (optional) depends on the value of <code>gui_element</code>.</li> </ul>"},{"location":"DSP-TOOLS/file-formats/json-project/ontologies/#overview","title":"Overview","text":"DSP base property (<code>super</code>) <code>object</code> <code>gui_element</code> hasValue BooleanValue Checkbox hasColor ColorValue Colorpicker hasValue DateValue Date hasValue DecimalValue Spinbox, SimpleText hasValue GeonameValue Geonames hasValue IntValue Spinbox, SimpleText hasValue ListValue List hasValue TextValue SimpleText, Textarea, Richtext hasComment TextValue Richtext hasValue TimeValue TimeStamp hasValue UriValue SimpleText hasLinkTo (resourceclass) Searchbox hasRepresentation Representation Searchbox isPartOf (resourceclass) Searchbox seqnum IntValue Spinbox, SimpleText isSequenceOf (AudioRepresentation, MovingImageRepresentation, subclass) Searchbox hasSequenceBounds IntervalValue Interval"},{"location":"DSP-TOOLS/file-formats/json-project/ontologies/#booleanvalue","title":"<code>BooleanValue</code>","text":"<p><code>\"object\": \"BooleanValue\"</code></p> <p>Represents a Boolean (\"true\" or \"false\").  See the xmlupload documentation for more information.</p> <p>gui_elements / gui_attributes:</p> <ul> <li><code>Checkbox</code>: The only GUI element for boolean values: a box to check or uncheck<ul> <li>gui_attributes: No attributes</li> </ul> </li> </ul> <p>Example:</p> <pre><code>{\n  \"name\": \"hasBoolean\",\n  \"super\": [\n    \"hasValue\"\n  ],\n  \"object\": \"BooleanValue\",\n  \"labels\": {\n    \"en\": \"Boolean value\"\n  },\n  \"gui_element\": \"Checkbox\"\n}\n</code></pre>"},{"location":"DSP-TOOLS/file-formats/json-project/ontologies/#colorvalue","title":"<code>ColorValue</code>","text":"<p><code>\"object\": \"ColorValue\"</code></p> <p>A string representation of a color in the hexadecimal form.  See the xmlupload documentation for more information.</p> <p>gui_elements / gui_attributes:</p> <ul> <li><code>Colorpicker</code>: The only GUI element for colors. It's used to choose a color.<ul> <li>gui_attributes:<ul> <li><code>ncolors: integer</code> (optional): Number of colors the color picker should present.</li> </ul> </li> </ul> </li> </ul> <p>Example:</p> <pre><code>{\n  \"name\": \"hasColor\",\n  \"super\": [\n    \"hasColor\"\n  ],\n  \"object\": \"ColorValue\",\n  \"labels\": {\n    \"en\": \"Color\"\n  },\n  \"gui_element\": \"Colorpicker\"\n}\n</code></pre>"},{"location":"DSP-TOOLS/file-formats/json-project/ontologies/#datevalue","title":"<code>DateValue</code>","text":"<p><code>object\": \"DateValue\"</code> </p> <p>Represents a date. It's a string with the format <code>calendar:start:end</code>.  See the xmlupload documentation for more information.</p> <p>gui_elements / gui_attributes:</p> <ul> <li><code>Date</code>: The only GUI element for DateValue. A date picker GUI.<ul> <li>gui_attributes: No attributes</li> </ul> </li> </ul> <p>Example:</p> <pre><code>{\n  \"name\": \"hasDate\",\n  \"super\": [\n    \"hasValue\"\n  ],\n  \"object\": \"DateValue\",\n  \"labels\": {\n    \"en\": \"Date\"\n  },\n  \"gui_element\": \"Date\"\n}\n</code></pre>"},{"location":"DSP-TOOLS/file-formats/json-project/ontologies/#decimalvalue","title":"<code>DecimalValue</code>","text":"<p><code>\"object\": \"DecimalValue\"</code></p> <p>A number with decimal point.  See the xmlupload documentation for more information.</p> <p>gui_elements / gui_attributes:</p> <ul> <li><code>Spinbox</code>: Provides a Spinbox to select a decimal value.<ul> <li>gui_attributes:<ul> <li><code>max: decimal</code> (mandatory): maximal value</li> <li><code>min: decimal</code> (mandatory): minimal value</li> </ul> </li> </ul> </li> <li><code>SimpleText</code>: A simple text entry box (one line only).<ul> <li>gui_attributes:<ul> <li><code>maxlength: integer</code> (optional): maximum number of characters accepted</li> <li><code>size: integer</code> (optional): size of the input field</li> </ul> </li> </ul> </li> </ul> <p>Example:</p> <pre><code>{\n  \"name\": \"hasDecimal\",\n  \"super\": [\n    \"hasValue\"\n  ],\n  \"object\": \"DecimalValue\",\n  \"labels\": {\n    \"en\": \"Decimal number\"\n  },\n  \"gui_element\": \"SimpleText\",\n  \"gui_attributes\": {\n    \"maxlength\": 255,\n    \"size\": 80\n  }\n}\n</code></pre>"},{"location":"DSP-TOOLS/file-formats/json-project/ontologies/#geonamevalue","title":"<code>GeonameValue</code>","text":"<p><code>\"object\": \"GeonameValue\"</code></p> <p>Represents a location ID of geonames.org.  See the xmlupload documentation for more information.</p> <p>gui_elements / gui_attributes:</p> <ul> <li><code>Geonames</code>: The only GUI element for GeonameValue. A dropdown to select a geonames.org location, either by ID if    digits are typed in, or by name if letters are typed in.<ul> <li>gui_attributes: No attributes</li> </ul> </li> </ul> <p>Example:</p> <pre><code>{\n  \"name\": \"hasGeoname\",\n  \"super\": [\n    \"hasValue\"\n  ],\n  \"object\": \"GeonameValue\",\n  \"labels\": {\n    \"en\": \"Geoname\"\n  },\n  \"gui_element\": \"Geonames\"\n}\n</code></pre>"},{"location":"DSP-TOOLS/file-formats/json-project/ontologies/#intvalue","title":"<code>IntValue</code>","text":"<p><code>\"object\": \"IntValue\"</code></p> <p>Represents an integer value.  See the xmlupload documentation for more information.</p> <p>gui_elements / gui_attributes:</p> <ul> <li><code>Spinbox</code>: A GUI element for IntValue.    A text field with and an \"up\" and a \"down\" button for increment/decrement.<ul> <li>gui_attributes:<ul> <li><code>max: decimal</code> (mandatory): Maximal value</li> <li><code>min: decimal</code> (mandatory): Minimal value</li> </ul> </li> </ul> </li> <li><code>SimpleText</code>: A simple text entry box (one line only). <ul> <li>gui_attributes:<ul> <li><code>maxlength: integer</code> (optional): The maximum number of characters accepted</li> <li><code>size: integer</code> (optional): The size of the input field</li> </ul> </li> </ul> </li> </ul> <p>Example:</p> <pre><code>{\n  \"name\": \"hasInteger\",\n  \"super\": [\n    \"hasValue\"\n  ],\n  \"object\": \"IntValue\",\n  \"labels\": {\n    \"en\": \"Integer\"\n  },\n  \"gui_element\": \"Spinbox\",\n  \"gui_attributes\": {\n    \"max\": 10.0,\n    \"min\": 0.0\n  }\n}\n</code></pre>"},{"location":"DSP-TOOLS/file-formats/json-project/ontologies/#listvalue","title":"<code>ListValue</code>","text":"<p><code>\"object\": \"ListValue\"</code></p> <p>Represents a node of a (possibly hierarchical) list.  See the xmlupload documentation for more information.</p> <p>gui_elements / gui_attributes:</p> <ul> <li><code>List</code>: A GUI element for ListValue. A dropdown to select a list node.<ul> <li>gui_attributes:<ul> <li><code>hlist: list-name</code> (required):    The name of a list defined in the <code>lists</code> section.</li> </ul> </li> </ul> </li> <li><code>Radio</code> and <code>Pulldown</code> are allowed, too,    but they don't have a different behavior than <code>List</code>.    It is recommended to use <code>List</code>.</li> </ul> <p>Example:</p> <pre><code>{\n  \"name\": \"hasListItem\",\n  \"super\": [\n    \"hasValue\"\n  ],\n  \"object\": \"ListValue\",\n  \"labels\": {\n    \"en\": \"List element\"\n  },\n  \"gui_element\": \"List\",\n  \"gui_attributes\": {\n    \"hlist\": \"treelistroot\"\n  }\n}\n</code></pre>"},{"location":"DSP-TOOLS/file-formats/json-project/ontologies/#textvalue","title":"<code>TextValue</code>","text":"<p><code>\"object\": \"TextValue\"</code></p> <p>Represents a text that may contain standoff markup.  See the xmlupload documentation for more information.</p> <p>gui_elements / gui_attributes:</p> <ul> <li><code>SimpleText</code>: one-line text entry box (for text without markup)<ul> <li>gui_attributes:<ul> <li><code>maxlength: integer</code> (optional): maximal length (number of characters accepted)</li> <li><code>size: integer</code> (optional): size (width) of widget</li> </ul> </li> </ul> </li> <li><code>Textarea</code>: multiline text entry box (for text without markup)<ul> <li>gui_attributes:<ul> <li><code>cols: integer</code> (optional): number of columns of the textarea</li> <li><code>rows: integer</code> (optional): number of rows of the textarea</li> <li><code>width: percent</code> (optional): width of the textarea on the screen</li> <li><code>wrap: soft|hard</code> (optional): wrapping of text</li> </ul> </li> </ul> </li> <li><code>Richtext</code>: multiline rich-text editor (for text with markup)<ul> <li>gui_attributes: No attributes</li> </ul> </li> </ul> <p>Example:</p> <pre><code>{\n  \"name\": \"hasPictureTitle\",\n  \"super\": [\n    \"hasValue\"\n  ],\n  \"object\": \"TextValue\",\n  \"labels\": {\n    \"en\": \"Title\"\n  },\n  \"gui_element\": \"SimpleText\",\n  \"gui_attributes\": {\n    \"maxlength\": 255,\n    \"size\": 80\n  }\n}\n</code></pre>"},{"location":"DSP-TOOLS/file-formats/json-project/ontologies/#hascomment-property","title":"<code>hasComment</code> Property","text":"<p><code>\"object\": \"TextValue\"</code></p> <p>This property is a text field with formatted text. </p> <p>Example:</p> <pre><code>{\n    \"name\": \"hasComment\",\n    \"super\": [\n      \"hasComment\"\n    ],\n    \"object\": \"TextValue\",\n    \"labels\": {\n      \"de\": \"Kommentar\",\n      \"en\": \"Comment\",\n      \"fr\": \"Commentaire\"\n    },\n    \"gui_element\": \"Richtext\"\n}\n</code></pre>"},{"location":"DSP-TOOLS/file-formats/json-project/ontologies/#timevalue","title":"<code>TimeValue</code>","text":"<p><code>\"object\": \"TimeValue\"</code></p> <p>A time value represents a precise moment in time in the Gregorian calendar. See the  xmlupload documentation for more information.</p> <p>gui_elements / gui_attributes:</p> <ul> <li><code>TimeStamp</code>: A GUI element for TimeValue which contains a date picker and a time picker.<ul> <li>gui_attributes: No attributes</li> </ul> </li> </ul> <p>Example:</p> <pre><code>{\n  \"name\": \"hasTime\",\n  \"super\": [\n    \"hasValue\"\n  ],\n  \"object\": \"TimeValue\",\n  \"labels\": {\n    \"en\": \"Time\"\n  },\n  \"gui_element\": \"TimeStamp\"\n}\n</code></pre>"},{"location":"DSP-TOOLS/file-formats/json-project/ontologies/#urivalue","title":"<code>UriValue</code>","text":"<p><code>\"object\": \"UriValue\"</code></p> <p>Represents an URI. See the xmlupload documentation for more information.</p> <p>gui_elements / gui_attributes:</p> <ul> <li><code>SimpleText</code>: A simple text entry box (one line only).<ul> <li>gui_attributes:<ul> <li><code>maxlength: integer</code> (optional): The maximum number of characters accepted</li> <li><code>size: integer</code> (optional): The size of the input field</li> </ul> </li> </ul> </li> </ul> <p>Example:</p> <pre><code>{\n  \"name\": \"hasUri\",\n  \"super\": [\n    \"hasValue\"\n  ],\n  \"object\": \"UriValue\",\n  \"labels\": {\n    \"en\": \"URI\"\n  },\n  \"gui_element\": \"SimpleText\",\n  \"gui_attributes\": {\n    \"maxlength\": 255,\n    \"size\": 80\n  }\n}\n</code></pre>"},{"location":"DSP-TOOLS/file-formats/json-project/ontologies/#link-properties","title":"Link-Properties","text":"<p>Link-properties do not follow the pattern of the previous data types, because they do not connect to a final value but  to an existing resource. Thus, the <code>object</code> denominates the resource class the link will point to.</p>"},{"location":"DSP-TOOLS/file-formats/json-project/ontologies/#haslinkto-property","title":"<code>hasLinkTo</code> Property","text":"<p><code>\"object\": \"&lt;resourceclass&gt;\"</code></p> <p>The most basic kind of link-property is the <code>hasLinkTo</code> property. Its \"super\" element has to be <code>hasLinkTo</code> or derived  from <code>hasLinkTo</code>. There are different groups of resource classes that can be the object:</p> <ul> <li>project resources: a resource class defined in the present ontology itself</li> <li>external resources: a resource class defined in another ontology</li> <li>DSP base resources:<ul> <li><code>Resource</code>: the most generic one, can point to any resource class, be it a DSP base resource, a project resource,    or an external resource. <code>Resource</code> is at the very top of the inheritance hierarchy.</li> <li><code>Region</code>: a region in an image</li> <li><code>StillImageRepresentation</code>, <code>MovingImageRepresentation</code>, <code>TextRepresentation</code>, <code>AudioRepresentation</code>,    <code>DDDRepresentation</code>, <code>DocumentRepresentation</code>, or <code>ArchiveRepresentation</code></li> </ul> </li> </ul> <p>The syntax how to refer to these different groups of resources is described here.</p> <p>gui_elements / gui_attributes:</p> <ul> <li><code>Searchbox</code>: The only GUI element for hasLinkTo. Allows searching resources by entering the target resource name.<ul> <li>gui_attributes:<ul> <li><code>numprops: integer</code> (optional): Number of search results to be displayed</li> </ul> </li> </ul> </li> </ul> <p>Example:</p> <pre><code>{\n  \"name\": \"hasOtherThing\",\n  \"super\": [\n    \"hasLinkTo\"\n  ],\n  \"object\": \":Thing\",\n  \"labels\": \"Another thing\",\n  \"gui_element\": \"Searchbox\"\n}\n</code></pre>"},{"location":"DSP-TOOLS/file-formats/json-project/ontologies/#hasrepresentation-property","title":"<code>hasRepresentation</code> Property","text":"<p><code>\"object\": \"Representation\"</code></p> <p>A property pointing to the DSP base resource class <code>Representation</code>, which is the parent class of the DSP base resource  classes <code>StillImageRepresentation</code>, <code>AudioRepresentation</code>, <code>MovingImageRepresentation</code>, ... Has to be used in  combination with <code>\"super\": [\"hasRepresentation\"]</code>.  This generic property can point to any type of the aforementioned representations, or to a subclass of them. See the  xmlupload documentation for more information.</p> <p>gui_elements / gui_attributes:</p> <ul> <li><code>Searchbox</code>: Allows searching resources that have super class <code>Representation</code>    by entering at least 3 characters into a searchbox.<ul> <li>gui_attributes:<ul> <li><code>numprops: integer</code> (optional): While dynamically displaying the search result,   the number of properties that should be displayed.</li> </ul> </li> </ul> </li> </ul> <p>Example:</p> <pre><code>{\n    \"name\": \"hasRep\",\n    \"super\": [\n        \"hasRepresentation\"\n    ],\n    \"object\": \"Representation\",\n    \"labels\": {\n        \"en\": \"Represented by\"\n    },\n        \"gui_element\": \"Searchbox\"\n    }\n</code></pre>"},{"location":"DSP-TOOLS/file-formats/json-project/ontologies/#ispartof-property","title":"<code>isPartOf</code> Property","text":"<p><code>\"object\": \"&lt;resourceclass&gt;\"</code></p> <p>A special case of linked resources are resources in a part-whole relation,  i.e. resources that are composed of other resources.  A <code>isPartOf</code> property has to be added to the resource that is part of another resource.  In case of resources that are of type <code>StillImageRepresentation</code>,  an additional property derived from <code>seqnum</code> with object <code>IntValue</code> is required.  When defined, the user is able to leaf through the parts of a compound object,  e.g. to leaf through pages of a book.</p> <p>The DSP base properties <code>isPartOf</code> and <code>seqnum</code>  can be used to derive a custom property from them,  or they can be used directly as cardinalities in a resource.  The example below shows both possibilities.</p> <p>gui_elements / gui_attributes:</p> <ul> <li><code>Searchbox</code>: The only GUI element for isPartOf. Allows searching resources by entering the target resource name.<ul> <li>gui_attributes:<ul> <li><code>numprops: integer</code> (optional): Number of search results to be displayed</li> </ul> </li> </ul> </li> </ul> <p>Example:</p> <pre><code>\"properties\": [\n    {\n        \"name\": \"partOfBook\",\n        \"super\": [\"isPartOf\"],\n        \"object\": \":Book\",\n        \"labels\": {\"en\": \"is part of\"},\n        \"gui_element\": \"Searchbox\"\n    },\n    {\n        \"name\": \"hasPageNumber\",\n        \"super\": [\"seqnum\"],\n        \"object\": \"IntValue\",\n        \"labels\": {\"en\": \"has page number\"},\n        \"gui_element\": \"Spinbox\"\n    }\n],\n\"resources\": [\n    {\n        \"name\": \"Page\",\n        \"labels\": {\"en\": \"Page using properties derived from 'isPartOf' and 'seqnum'\"},\n        \"super\": \"StillImageRepresentation\",\n        \"cardinalities\": [\n            {\n                \"propname\": \":partOfBook\",\n                \"cardinality\": \"1\"\n            },\n            {\n                \"propname\": \":hasPageNumber\",\n                \"cardinality\": \"1\"\n            }\n        ]\n    },\n    {\n        \"name\": \"MinimalisticPage\",\n        \"labels\": {\"en\": \"Page using 'isPartOf' and 'seqnum' directly\"},\n        \"super\": \"StillImageRepresentation\",\n        \"cardinalities\": [\n            {\n                \"propname\": \"isPartOf\",\n                \"cardinality\": \"1\"\n            },\n            {\n                \"propname\": \"seqnum\",\n                \"cardinality\": \"1\"\n            }\n        ]\n    }\n]\n</code></pre>"},{"location":"DSP-TOOLS/file-formats/json-project/ontologies/#seqnum-property","title":"<code>seqnum</code> Property","text":"<p><code>\"object\": \"IntValue\"</code></p> <p>This property can be attached to a <code>StillImageRepresentation</code>, together with <code>isPartOf</code>. The <code>seqnum</code> is then the page number of the image inside the compound object. Apart from this, <code>seqnum</code> is like an integer property. See the  xmlupload documentation for more information.</p> <p>gui_elements / gui_attributes:</p> <ul> <li><code>Spinbox</code>: A GUI element for IntValue.    A text field with and an \"up\" and a \"down\" button for increment/decrement.<ul> <li>gui_attributes:<ul> <li><code>max: decimal</code> (mandatory): Maximal value</li> <li><code>min: decimal</code> (mandatory): Minimal value</li> </ul> </li> </ul> </li> <li><code>SimpleText</code>: A simple text entry box (one line only). <ul> <li>gui_attributes:<ul> <li><code>maxlength: integer</code> (optional): The maximum number of characters accepted</li> <li><code>size: integer</code> (optional): The size of the input field</li> </ul> </li> </ul> </li> </ul> <p>Example: See the <code>isPartOf</code> Property above.</p>"},{"location":"DSP-TOOLS/file-formats/json-project/ontologies/#issequenceof-property","title":"<code>isSequenceOf</code> Property","text":"<p><code>\"object\": &lt;AudioRepresentation/MovingImageRepresentation or a subclass of one of them&gt;</code></p> <p>This property can be used, together with a <code>hasSequenceBounds</code> property, on a resource representing a sequence of an audio/video resource. The <code>isSequenceOf</code> would then point to the audio/video resource, and the <code>hasSequenceBounds</code>  would be the time interval of the sequence.</p> <p>The DSP base properties <code>isSequenceOf</code> and <code>hasSequenceBounds</code> can be used to derive a custom property from them, or  they can be used directly as cardinalities in a resource. The example below shows both possibilities.</p> <p>gui_elements / gui_attributes:</p> <ul> <li><code>Searchbox</code>: The only GUI element for isSequenceOf. Allows searching resources by entering the target resource name.<ul> <li>gui_attributes:<ul> <li><code>numprops: integer</code> (optional): Number of search results to be displayed</li> </ul> </li> </ul> </li> </ul> <p>Example:</p> <pre><code>\"properties\": [\n    {\n        \"name\": \"sequenceOfAudio\",\n        \"super\": [\"isSequenceOf\"],\n        \"subject\": \":AudioSequence\",\n        \"object\": \":Audio\",\n        \"labels\": {\"en\": \"is sequence of\"},\n        \"gui_element\": \"Searchbox\"\n    },\n    {\n        \"name\": \"hasBounds\",\n        \"super\": [\"hasSequenceBounds\"],\n        \"subject\": \":AudioSequence\",\n        \"object\": \"IntervalValue\",\n        \"labels\": {\"en\": \"Start and end point of a sequence of an audio/video\"},\n        \"gui_element\": \"Interval\"\n    }\n],\n\"resources\": [\n    {\n        \"name\": \"AudioSequence\",\n        \"labels\": {\"en\": \"Sequence of audio using properties derived from 'isSequenceOf' and 'hasSequenceBounds'\"},\n        \"super\": \"Resource\",\n        \"cardinalities\": [\n            {\n                \"propname\": \":sequenceOfAudio\",\n                \"cardinality\": \"1\"\n            },\n            {\n                \"propname\": \":hasBounds\",\n                \"cardinality\": \"1\"\n            }\n        ]\n    },\n    {\n        \"name\": \"MinimalisticAudioSequence\",\n        \"labels\": {\"en\": \"Sequence of audio using 'isSequenceOf' and 'hasSequenceBounds' directly\"},\n        \"super\": \"Resource\",\n        \"cardinalities\": [\n            {\n                \"propname\": \"isSequenceOf\",\n                \"cardinality\": \"1\"\n            },\n            {\n                \"propname\": \"hasSequenceBounds\",\n                \"cardinality\": \"1\"\n            }\n        ]\n    }\n]\n</code></pre>"},{"location":"DSP-TOOLS/file-formats/json-project/ontologies/#hassequencebounds-property","title":"<code>hasSequenceBounds</code> Property","text":"<p><code>\"object\": \"IntervalValue\"</code></p> <p>This property represents a time interval of an audio or video. It can be used together with an <code>isSequenceOf</code> property  on a resource that represents the sequence. The <code>isSequenceOf</code> would then point to the audio/video resource, and the  <code>hasSequenceBounds</code> would be the time interval of the sequence, represented as two decimal numbers.</p> <p>See the <code>isSequenceOf</code> property or the  xmlupload documentation for more information.</p> <p>gui_elements / gui_attributes:</p> <ul> <li><code>Interval</code>: Two spinboxes, one for each decimal<ul> <li>gui_attributes: No attributes</li> </ul> </li> </ul> <p>Example:</p> <pre><code>{\n  \"name\": \"hasBounds\",\n  \"super\": [\n    \"hasSequenceBounds\"\n  ],\n  \"subject\": \":AudioSequence\",\n  \"object\": \"IntervalValue\",\n  \"labels\": {\n    \"en\": \"Interval defining the start and end point of a sequence of an audio or video file\"\n  },\n  \"gui_element\": \"Interval\"\n}\n</code></pre>"},{"location":"DSP-TOOLS/file-formats/json-project/ontologies/#the-resource-object","title":"The <code>resource</code> Object","text":"<pre><code>{\n  \"name\": \"school\",\n  \"labels\": {\n    \"de\": \"Schule\",\n    \"en\": \"School\",\n    \"fr\": \"Ecole\",\n    \"it\": \"Scuola\"\n  },\n  \"super\": \"Resource\",\n  \"comments\": {\n    \"de\": \"Eine Bildungsinstitution f\u00fcr Grundbildung\",\n    \"en\": \"An education institution for basic education\",\n    \"fr\": \"Une institution de formation de base\",\n    \"it\": \"Un'istituzione educativa per l'istruzione di base\"\n  },\n  \"cardinalities\": [\n    {\n      \"propname\": \":schulcode\",\n      \"gui_order\": 1,\n      \"cardinality\": \"1\"\n    },\n    {\n      \"propname\": \":schulname\",\n      \"gui_order\": 2,\n      \"cardinality\": \"1\"\n    },\n    {\n      \"propname\": \":bildungsgang\",\n      \"gui_order\": 3,\n      \"cardinality\": \"0-n\"\n    }\n  ]\n}\n</code></pre>"},{"location":"DSP-TOOLS/file-formats/json-project/ontologies/#resource-name","title":"Resource: <code>name</code>","text":"<p>(required)</p> <p><code>\"name\": \"&lt;string&gt;\"</code></p> <p>A name for the resource, e.g. \"Book\", \"Manuscript\", \"Person\". It should be in the form of a xsd:NCNAME. This means a string without blanks or special characters but <code>-</code> and <code>_</code> are allowed (although not as first character).</p> <p>By convention, resource names start with an upper case letter.</p>"},{"location":"DSP-TOOLS/file-formats/json-project/ontologies/#resource-labels","title":"Resource: <code>labels</code>","text":"<p>(required)</p> <p><code>\"labels\": {\"&lt;language&gt;\": \"&lt;string&gt;\", ...}</code></p> <p>Collection of <code>labels</code> for the resource as strings with language tag  (currently, <code>en</code>, <code>de</code>, <code>fr</code>, <code>it</code>, and <code>rm</code> are supported).</p>"},{"location":"DSP-TOOLS/file-formats/json-project/ontologies/#resource-super","title":"Resource: <code>super</code>","text":"<p>(required)</p> <p><code>\"super\": [\"&lt;super-resource&gt;\", \"&lt;super-resource&gt;\", ...]</code></p> <p>A resource is always derived from at least one other resource. There are three groups of resources that can serve  as super-resource:</p> <ul> <li>DSP base resources</li> <li>resources defined in external ontologies</li> <li>resources defined in the project ontology itself</li> </ul> <p>The syntax how to refer to these different groups of resources is described here.</p> <p>The following base resources can be used as super-resource:</p> <ul> <li><code>Resource</code>: A generic resource representing an item from the real world.    This is the most general case,    to be used in all cases when your resource is none of the special cases below.</li> <li><code>ArchiveRepresentation</code>: A resource representing an archive file (e.g. ZIP)</li> <li><code>AudioRepresentation</code>: A resource representing an audio file</li> <li><code>DDDRepresentation</code>: A resource representing a 3-D representation (not yet implemented)</li> <li><code>DocumentRepresentation</code>: A resource representing an opaque document (e.g. a PDF)</li> <li><code>MovingImageRepresentation</code>: A resource representing a video</li> <li><code>StillImageRepresentation</code>: A resource representing an image</li> <li><code>TextRepresentation</code>: A resource representing a text</li> </ul> <p>File Extensions: An overview of the supported file types per representation can be found in the  xmlupload documentation.</p>"},{"location":"DSP-TOOLS/file-formats/json-project/ontologies/#resource-cardinalities","title":"Resource: <code>cardinalities</code>","text":"<p>(required*)</p> <pre><code>\"cardinalities\": [\n  {\n    \"propname\": \":hasText\",\n    \"gui_order\": 1,\n    \"cardinality\": \"1-n\"\n  },\n  {\n    ...\n  }\n]\n</code></pre> <p>An array that contains information about the relation between resources and properties.  It tells what properties a resource can have  as well as how many values a property can have. A cardinality is defined as follows:</p> <ul> <li><code>propname</code> (mandatory): The name of the property.    If it's used in the form <code>:my_property</code>, the current ontology is referenced.   If the property was defined in another ontology, the prefix of that ontology must be provided.</li> <li><code>gui_order</code> (optional): By default, DSP-APP displays the properties in the order    how they are defined in the <code>cardinalities</code> array.   If you prefer another order, you can provide a positive integer here.   Example: You order the propnames alphabetically in the JSON file,    but they should be displayed in another order in DSP-APP.</li> <li><code>cardinality</code> (mandatory): Indicates how often a given property may occur. The possible values are:<ul> <li><code>\"1\"</code>: exactly once (mandatory one value and only one)</li> <li><code>\"0-1\"</code>: The value may be omitted, but can occur only once.</li> <li><code>\"1-n\"</code>: At least one value must be present, but multiple values may be present.</li> <li><code>\"0-n\"</code>: The value may be omitted, but may also occur multiple times.</li> </ul> </li> </ul> <p>(*It is technically possible to have a resource without cardinalities, but in most cases it doesn't make sense to omit them.)</p>"},{"location":"DSP-TOOLS/file-formats/json-project/ontologies/#resource-comments","title":"Resource: <code>comments</code>","text":"<p>(optional)</p> <p><code>\"comments\": { \"&lt;lang&gt;\": \"&lt;comment&gt;\", \"&lt;lang&gt;\": \"&lt;comment&gt;\", ... }</code></p> <p>Comments with language tags (currently, <code>en</code>, <code>de</code>, <code>fr</code>, <code>it</code>, and <code>rm</code> are supported). The <code>comments</code> element is optional.</p>"},{"location":"DSP-TOOLS/file-formats/json-project/overview/","title":"Overview","text":""},{"location":"DSP-TOOLS/file-formats/json-project/overview/#json-project-definition-format","title":"JSON Project Definition Format","text":"<p>This document describes the structure of a JSON project definition file  that can be uploaded to a DSP server with the <code>create</code> command.</p> <p>A project on a DSP server is like a container for data.  It defines some basic metadata, the data model(s)  and optionally the user(s) who will be able to access the data.  After the creation of a project,  data can be uploaded that conforms with the data model(s).</p> <p>This documentation is divided into the following parts:</p> <ul> <li>Overview of the project description file (this page)</li> <li>The \"ontologies\" section explained in detail</li> <li>Some caveats to have in mind</li> </ul>"},{"location":"DSP-TOOLS/file-formats/json-project/overview/#a-short-overview","title":"A Short Overview","text":"<p>A complete project definition looks like this:</p> <pre><code>{\n  \"prefixes\": {\n    \"foaf\": \"http://xmlns.com/foaf/0.1/\",\n    \"dcterms\": \"http://purl.org/dc/terms/\"\n  },\n  \"$schema\": \"https://raw.githubusercontent.com/dasch-swiss/dsp-tools/main/src/dsp_tools/resources/schema/project.json\",\n  \"project\": {\n    \"shortcode\": \"0123\",\n    \"shortname\": \"BiZ\",\n    \"longname\": \"Bildung in Zahlen\",\n    \"descriptions\": {\n      \"en\": \"This is a simple example project\",\n      \"de\": \"Dies ist ein einfaches Beispielprojekt\"\n    },\n    \"keywords\": [\n      \"example\",\n      \"simple\"\n    ],\n    \"groups\": [\n      ...\n    ],\n    \"users\": [\n      ...\n    ],\n    \"lists\": [\n      ...\n    ],\n    \"ontologies\": [\n      ...\n    ]\n  }\n}\n</code></pre>"},{"location":"DSP-TOOLS/file-formats/json-project/overview/#prefixes","title":"<code>prefixes</code>","text":"<p>(optional)</p> <p><code>\"prefixes\": { \"prefix\": \"&lt;iri&gt;\", ...}</code></p> <p>The <code>prefixes</code> object contains the prefixes of external ontologies that are used in the current file. All prefixes are composed of the prefix and a URI. The prefix is used as namespace, so one does not have to write the fully qualified name of the referenced object each time it is used. Instead of writing a property called <code>familyName</code>  as <code>http://xmlns.com/foaf/0.1/familyName</code> one can simply write <code>foaf:familyName</code>.</p> <pre><code>{\n  \"prefixes\": {\n    \"foaf\": \"http://xmlns.com/foaf/0.1/\",\n    \"dcterms\": \"http://purl.org/dc/terms/\"\n  }\n}\n</code></pre> <p>It is not necessary to define prefixes for the ontologies that are defined in the same file. Ontologies in the same file can be referenced by their name. See this section for more information about referencing ontologies.</p>"},{"location":"DSP-TOOLS/file-formats/json-project/overview/#schema","title":"<code>$schema</code>","text":"<p>(required)</p> <p>The <code>$schema</code> object refers to the JSON schema for DSP data model definitions and is mandatory.</p> <p><code>\"$schema\": \"https://raw.githubusercontent.com/dasch-swiss/dsp-tools/main/src/dsp_tools/resources/schema/project.json\"</code></p>"},{"location":"DSP-TOOLS/file-formats/json-project/overview/#project","title":"<code>project</code>","text":"<p>(required)</p> <p><code>\"project\": {\"key\": \"&lt;value&gt;\", ...}</code></p> <p>The <code>project</code> object contains the basic metadata about the project. The following fields are required:</p> <ul> <li>shortcode</li> <li>shortname</li> <li>longname</li> <li>keywords</li> <li>ontologies</li> </ul> <p>The following fields are optional (if one or more of these fields are not used, they should be omitted):</p> <ul> <li>descriptions</li> <li>lists</li> <li>groups</li> <li>users</li> </ul>"},{"location":"DSP-TOOLS/file-formats/json-project/overview/#the-project-object-in-detail","title":"The <code>project</code> Object in Detail","text":"<p>In the following section, all fields of the <code>project</code> object are explained in detail.</p>"},{"location":"DSP-TOOLS/file-formats/json-project/overview/#shortcode","title":"<code>shortcode</code>","text":"<p>(required)</p> <p><code>\"shortcode\": \"&lt;4-hex-characters&gt;\"</code></p> <p>The shortcode has to be unique and is represented by a 4 digit hexadecimal string. The shortcode has to be provided by  the DaSCH.</p>"},{"location":"DSP-TOOLS/file-formats/json-project/overview/#shortname","title":"<code>shortname</code>","text":"<p>(required)</p> <p><code>\"shortname\": \"&lt;string&gt;\"</code></p> <p>The shortname has to be unique.  It should be in the form of a xsd:NCNAME.  This means a string without blanks or special characters, but with <code>-</code> and <code>_</code> are allowed (although not as first character).</p>"},{"location":"DSP-TOOLS/file-formats/json-project/overview/#longname","title":"<code>longname</code>","text":"<p>(required)</p> <p><code>\"longname\": \"&lt;string&gt;\"</code></p> <p>The longname is a string that provides the full name of the project.</p>"},{"location":"DSP-TOOLS/file-formats/json-project/overview/#descriptions","title":"<code>descriptions</code>","text":"<p>(required)</p> <p><code>\"descriptions\": {\"&lt;lang&gt;\": \"&lt;string&gt;\", ...}</code></p> <p>The description is represented as a collection of strings with language tags (currently, <code>en</code>, <code>de</code>, <code>fr</code>, <code>it</code>, and <code>rm</code> are supported).</p>"},{"location":"DSP-TOOLS/file-formats/json-project/overview/#keywords","title":"<code>keywords</code>","text":"<p>(required)</p> <p><code>\"keywords\": [\"&lt;string&gt;\", \"&lt;string&gt;\", ...]</code></p> <p>Keywords are represented as an array of strings and are used to describe and/or tag the project.</p>"},{"location":"DSP-TOOLS/file-formats/json-project/overview/#groups","title":"<code>groups</code>","text":"<p>(optional)</p> <p><code>\"groups\": [&lt;group-definition&gt;, &lt;group-definition&gt;,...]</code></p> <p>The <code>groups</code> object contains project specific group definitions. As opposed to the  built-in groups, the membership of the users to the project specific groups  can be freely chosen by the <code>ProjectAdmin</code>. A project may define several groups such as \"student-assistant\",  \"editors\", etc. in order to provide their members specific permissions. The groups that were created here are then available in the XML file in the  &lt;permissions&gt; element.</p> <p>A project specific group definition has the following elements:</p> <ul> <li>name (mandatory): name of the group</li> <li>descriptions (mandatory): description of the group with language tags in the form    <code>\"descriptions\": {\"&lt;lang&gt;\": \"&lt;string&gt;\", ...}</code>    (currently, <code>en</code>, <code>de</code>, <code>fr</code>, <code>it</code>, and <code>rm</code> are supported).</li> <li>selfjoin (optional): true if users are allowed to join the group themselves,    false (default) if a <code>ProjectAdmin</code> has to add them</li> <li>status (optional): true (default) if the group is active, false if the group is inactive</li> </ul> <p>Example:</p> <pre><code>{\n  \"groups\": [\n    {\n      \"name\": \"biz-editors\",\n      \"descriptions\": {\"en\" : \"Editors for the BiZ project\"},\n      \"selfjoin\": false,\n      \"status\": true\n    }\n  ]\n}\n</code></pre>"},{"location":"DSP-TOOLS/file-formats/json-project/overview/#users","title":"<code>users</code>","text":"<p>(optional)</p> <p><code>\"users\": [&lt;user-definition&gt;, &lt;user-definition&gt;,...]</code></p> <p>This object contains user definitions. A user has the following elements:</p> <ul> <li><code>username</code>: username used for login</li> <li><code>email</code>: email that identifies the user, has to be unique within DSP</li> <li><code>givenName</code>: first name of the user</li> <li><code>familyName</code>: surname of the user</li> <li><code>password</code>: password of the user</li> <li><code>lang</code>: the default language of the user: <code>en</code>, <code>de</code>, <code>fr</code>, <code>it</code>, <code>rm</code> (optional, default: <code>en</code>)</li> <li><code>groups</code> (optional): List of groups the user belongs to. The group names must be provided in one of the following forms:<ul> <li><code>other_project_shortname:groupname</code></li> <li><code>:groupname</code> (for groups defined in the current JSON project file)</li> <li><code>SystemAdmin</code> (the most powerful group, built-in into DSP)</li> </ul> </li> <li><code>projects</code> (optional): List of projects the user belongs to. The project name has to be followed by a <code>:</code> and either    <code>member</code> or <code>admin</code>. This indicates if the new user has admin rights in the given project or is an ordinary   user. <code>myproject:admin</code> would add the user as admin to the project <code>myproject</code>. The project defined in the same   JSON project file can be omitted, so only <code>:admin</code> or <code>:member</code> is enough. Note that in order to give a user <code>:admin</code>    rights, he also needs to be a <code>:member</code> of the project.<ul> <li>If projects is omitted, the user won't be part in any project.</li> </ul> </li> <li><code>status</code> (optional): true (default) if the user is active, false if the user is deleted/inactive</li> </ul> <p>Example:</p> <pre><code>{\n  \"users\": [\n    {\n      \"username\": \"bizedit\",\n      \"email\": \"bizedit@test.org\",\n      \"givenName\": \"biz-given\",\n      \"familyName\": \"biz-family\",\n      \"password\": \"biz1234\",\n      \"lang\": \"en\",\n      \"groups\": [\n        \":biz-editors\",\n        \"SystemAdmin\"\n      ],\n      \"projects\": [\n        \":admin\",\n        \"otherProject:member\"\n      ], \n      \"status\": true\n    }\n  ]\n}\n</code></pre> <p>The <code>users</code> element is optional. If not used, it should be omitted.</p>"},{"location":"DSP-TOOLS/file-formats/json-project/overview/#lists","title":"<code>lists</code>","text":"<p>(optional)</p> <p><code>\"lists\": [&lt;list-definition&gt;,&lt;list-definition&gt;,...]</code></p> <p>Lists can be used to provide controlled vocabularies. They can be flat or hierarchical. One advantage of the use of hierarchical lists is that it allows a user to sub-categorize objects. This helps in the formulation of specific search requests. If there is a list node \"Vocal music\" and sub-nodes \"Song\" and \"Opera\", a search for \"Vocal Music\" would return objects classified as \"Song\" and \"Opera\". But a search for \"Song\" would only return objects classified as \"Song\".</p> <p>The \"lists\" section is an array of list definitions. A list definition has one root node whose name is used to identify  the list. The children of the root node are the list nodes. If the list is hierarchical, the list nodes can have children, and these children can again have children, etc.</p> <p>When a project defines a list, resources can use the list values by defining a list property, e.g. a property with  object \"ListValue\".</p> <p>A node of a list may have the following elements:</p> <ul> <li><code>name</code> (mandatory): Name of the node. Has to be unique within the entire \"lists\" section.</li> <li><code>labels</code> (mandatory): Label with language tags in the form <code>{\"&lt;lang&gt;\": \"&lt;label&gt;\", \"&lt;lang&gt;\": \"&lt;label&gt;\", ... }</code>.    At least one language needs to be specified. Currently, <code>en</code>, <code>de</code>, <code>fr</code>, <code>it</code>, and <code>rm</code> are supported.</li> <li><code>comments</code> (mandatory for root node, optional for all other nodes): Comment with language tags in the form    <code>{\"&lt;lang&gt;\": \"&lt;comment&gt;\", \"&lt;lang&gt;\": \"&lt;comment&gt;\", ... }</code>. Currently, <code>en</code>, <code>de</code>, <code>fr</code>, <code>it</code>, and <code>rm</code> are supported.</li> <li><code>nodes</code> (optional): Array of sub-nodes.</li> </ul> <p>Example of a \"lists\" section that contains the two lists \"color\" and \"category\":</p> <pre><code>{\n    \"lists\": [\n        {\n            \"name\": \"color\",\n            \"labels\": {\n                \"de\": \"Farbe\",\n                \"en\": \"Color\"\n            },\n            \"comments\": {\n                \"de\": \"Eine Liste mit einigen Farben\",\n                \"en\": \"A list with some colors\"\n            },\n            \"nodes\": [\n                {\n                    \"name\": \"red\",\n                    \"labels\": {\n                        \"de\": \"rot\",\n                        \"en\": \"red\"\n                    }\n                },\n                {\n                    \"name\": \"yellow\",\n                    \"labels\": {\n                        \"de\": \"gelb\",\n                        \"en\": \"yellow\"\n                    }\n                },\n                {\n                    \"name\": \"blue\",\n                    \"labels\": {\n                        \"de\": \"blau\",\n                        \"en\": \"blue\"\n                    }\n                },\n                {\n                    \"name\": \"green\",\n                    \"labels\": {\n                        \"de\": \"gr\u00fcn\",\n                        \"en\": \"green\"\n                    }\n                }\n            ]\n        },\n        {\n            \"name\": \"category\",\n            \"labels\": {\n                \"de\": \"Kategorie\",\n                \"en\": \"category\"\n            },\n            \"comments\": {\n                \"de\": \"Eine Liste mit Kategorien\",\n                \"en\": \"A list with categories\"\n            },\n            \"nodes\": [\n                {\n                    \"name\": \"artwork\",\n                    \"labels\": {\n                        \"de\": \"Kunstwerk\",\n                        \"en\": \"artwork\"\n                    }\n                },\n                {\n                    \"name\": \"vehicles\",\n                    \"labels\": {\n                        \"de\": \"Fahrzeuge\",\n                        \"en\": \"vehicles\"\n                    }\n                },\n                {\n                    \"name\": \"nature\",\n                    \"labels\": {\n                        \"de\": \"Natur\",\n                        \"en\": \"nature\"\n                    },\n                    \"nodes\": [\n                        {\n                            \"name\": \"humanes\",\n                            \"labels\": {\n                                \"de\": \"Menschen\",\n                                \"en\": \"Humanes\"\n                            }\n                        },\n                        {\n                            \"name\": \"animals\",\n                            \"labels\": {\n                                \"de\": \"Tiere\",\n                                \"en\": \"Animals\"\n                            },\n                            \"nodes\": [\n                                {\n                                    \"name\": \"mammals\",\n                                    \"labels\": {\n                                        \"de\": \"S\u00e4ugetiere\",\n                                        \"en\": \"Mammals\"\n                                    }\n                                },\n                                {\n                                    \"name\": \"insects\",\n                                    \"labels\": {\n                                        \"de\": \"Insekten\",\n                                        \"en\": \"Insects\"\n                                    }\n                                },\n                                {\n                                    \"name\": \"birds\",\n                                    \"labels\": {\n                                        \"de\": \"V\u00f6gel\",\n                                        \"en\": \"Birds\"\n                                    }\n                                },\n                                {\n                                    \"name\": \"amphibians\",\n                                    \"labels\": {\n                                        \"de\": \"Ambhibien\",\n                                        \"en\": \"Amphibians\"\n                                    }\n                                },\n                                {\n                                    \"name\": \"reptiles\",\n                                    \"labels\": {\n                                        \"de\": \"Reptilien\",\n                                        \"en\": \"Reptiles\"\n                                    }\n                                }\n                            ]\n                        },\n                        {\n                            \"name\": \"plants\",\n                            \"labels\": {\n                                \"de\": \"Pflanzen\",\n                                \"en\": \"Plants\"\n                            }\n                        },\n                        {\n                            \"name\": \"weather\",\n                            \"labels\": {\n                                \"de\": \"Wetter\",\n                                \"en\": \"Weather\"\n                            }\n                        },\n                        {\n                            \"name\": \"physics\",\n                            \"labels\": {\n                                \"de\": \"Physik\",\n                                \"en\": \"Physics\"\n                            }\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre>"},{"location":"DSP-TOOLS/file-formats/json-project/overview/#lists-from-excel","title":"<code>lists</code> from Excel","text":"<p>Instead of being described in JSON, a list can be imported from one or several Excel files. In this case, the  <code>nodes</code> element of the root node consists of <code>{\"folder\": \"&lt;path-to-folder-containing-the-excel-files&gt;\"}</code>. In the above  example, the list \"color\" could be imported as follows:</p> <pre><code>{\n    \"lists\": [\n        {\n            \"name\": \"color\",\n            \"labels\": {\n                \"de\": \"Farbe\",\n                \"en\": \"Color\"\n            },\n            \"comments\": {\n                \"de\": \"Eine Liste mit einigen Farben\",\n                \"en\": \"A list with some colors\"\n            },\n            \"nodes\": {\n                \"folder\": \"path-to-folder\"\n            }\n        },\n        {\n            \"name\": \"category\",\n            \"labels\": {\n                \"de\": \"Kategorie\",\n                \"en\": \"category\"\n            },\n            \"comments\": {\n                \"de\": \"Eine Liste mit Kategorien\",\n                \"en\": \"A list with categories\"\n            },\n            \"nodes\": [\n                \"...\"\n            ]\n        }\n    ]\n}\n</code></pre> <p>To do so, it would be necessary to place the following two files into the folder \"path-to-folder\": </p> <p>The expected format of the Excel files is documented here. The only  difference to the explanations there is that column A of the Excel worksheet is not interpreted as list name (root  node), but as node name of the first children level below the root node.</p>"},{"location":"DSP-TOOLS/file-formats/json-project/overview/#ontologies","title":"<code>ontologies</code>","text":"<p>(required)</p> <p><code>\"ontologies\": [&lt;ontology-definition&gt;, &lt;ontology-definition&gt;, ...]</code></p> <p>Inside the <code>ontologies</code> array, a project may have multiple ontology definitions.  An ontology definition consists of the following fields:</p> <ul> <li><code>name</code></li> <li><code>label</code></li> <li><code>properties</code></li> <li><code>resources</code></li> </ul> <p>The <code>ontologies</code> array is documented here</p>"},{"location":"DSP-TOOLS/file-formats/json-project/overview/#fully-fleshed-out-example-of-a-json-project-file","title":"Fully Fleshed-Out Example of a JSON Project File","text":"<p>DaSCH provides you with two example repositories that contain everything which is necessary to create a project and  upload data. Both of them also contain a JSON project definition file. You can find them here:</p> <ul> <li>https://github.com/dasch-swiss/00A1-import-scripts</li> <li>https://github.com/dasch-swiss/082E-rosetta-scripts</li> </ul> <p>In addition, there is another complete example of a JSON project file here:</p> <pre><code>{\n  \"prefixes\": {\n    \"foaf\": \"http://xmlns.com/foaf/0.1/\",\n    \"dcterms\": \"http://purl.org/dc/terms/\"\n  },\n  \"$schema\": \"https://raw.githubusercontent.com/dasch-swiss/dsp-tools/main/src/dsp_tools/resources/schema/project.json\",\n  \"project\": {\n    \"shortcode\": \"0170\",\n    \"shortname\": \"teimp\",\n    \"longname\": \"Test Import\",\n    \"descriptions\": {\n      \"en\": \"This is a project for testing the creation of ontologies and data.\",\n      \"de\": \"Dies ist ein Projekt, um die Erstellung von Ontologien und Datenimport zu testen.\"\n    },\n    \"keywords\": [\n      \"test\",\n      \"import\"\n    ],\n    \"lists\": [\n      {\n        \"name\": \"orgtype\",\n        \"labels\": {\n          \"en\": \"Organization Type\",\n          \"de\": \"Organisationsart\"\n        },\n        \"comments\": {\n          \"en\": \"List of different organization types\",\n          \"de\": \"Liste unterschiedlicher Organisationstypen\"\n        },\n        \"nodes\": [\n          {\n            \"name\": \"business\",\n            \"labels\": {\n              \"en\": \"Commerce\",\n              \"de\": \"Handel\"\n            },\n            \"nodes\": [\n              {\n                \"name\": \"transport\",\n                \"labels\": {\n                  \"en\": \"Transportation\",\n                  \"de\": \"Transport\"\n                }\n              },\n              {\n                \"name\": \"finances\",\n                \"labels\": {\n                  \"en\": \"Finances\",\n                  \"de\": \"Finanzen\"\n                }\n              }\n            ]\n          },\n          {\n            \"name\": \"society\",\n            \"labels\": {\n              \"en\": \"Society\",\n              \"de\": \"Gesellschaft\"\n            }\n          }\n        ]\n      }\n    ],\n    \"ontologies\": [\n      {\n        \"name\": \"teimp\",\n        \"label\": \"Test import ontology\",\n        \"properties\": [\n          {\n            \"name\": \"firstname\",\n            \"super\": [\n              \"hasValue\",\n              \"foaf:givenName\"\n            ],\n            \"object\": \"TextValue\",\n            \"labels\": {\n              \"en\": \"Firstname\",\n              \"de\": \"Vorname\"\n            },\n            \"gui_element\": \"SimpleText\",\n            \"gui_attributes\": {\n              \"size\": 24,\n              \"maxlength\": 32\n            }\n          },\n          {\n            \"name\": \"lastname\",\n            \"super\": [\n              \"hasValue\",\n              \"foaf:familyName\"\n            ],\n            \"object\": \"TextValue\",\n            \"labels\": {\n              \"en\": \"Lastname\",\n              \"de\": \"Nachname\"\n            },\n            \"gui_element\": \"SimpleText\",\n            \"gui_attributes\": {\n              \"size\": 24,\n              \"maxlength\": 64\n            }\n          },\n          {\n            \"name\": \"member\",\n            \"super\": [\n              \"hasLinkTo\"\n            ],\n            \"object\": \":organization\",\n            \"labels\": {\n              \"en\": \"member of\",\n              \"de\": \"Mitglied von\"\n            },\n            \"gui_element\": \"Searchbox\"\n          },\n          {\n            \"name\": \"name\",\n            \"super\": [\n              \"hasValue\"\n            ],\n            \"object\": \"TextValue\",\n            \"labels\": {\n              \"en\": \"Name\",\n              \"de\": \"Name\"\n            },\n            \"gui_element\": \"SimpleText\",\n            \"gui_attributes\": {\n              \"size\": 64,\n              \"maxlength\": 64\n            }\n          },\n          {\n            \"name\": \"orgtype\",\n            \"super\": [\n              \"hasValue\"\n            ],\n            \"object\": \"ListValue\",\n            \"labels\": {\n              \"en\": \"Organization type\",\n              \"de\": \"Organisationstyp\"\n            },\n            \"comments\": {\n              \"en\": \"Type of organization\",\n              \"de\": \"Art der Organisation\"\n            },\n            \"gui_element\": \"List\",\n            \"gui_attributes\": {\n              \"hlist\": \"orgtype\"\n            }\n          }\n        ],\n        \"resources\": [\n          {\n            \"name\": \"person\",\n            \"super\": \"Resource\",\n            \"labels\": {\n              \"en\": \"Person\",\n              \"de\": \"Person\"\n            },\n            \"comments\": {\n              \"en\": \"Represents a human being\",\n              \"de\": \"Repr\u00e4sentiert eine Person/Menschen\"\n            },\n            \"cardinalities\": [\n              {\n                \"propname\": \":firstname\",\n                \"gui_order\": 1,\n                \"cardinality\": \"1\"\n              },\n              {\n                \"propname\": \":lastname\",\n                \"gui_order\": 2,\n                \"cardinality\": \"1\"\n              },\n              {\n                \"propname\": \":member\",\n                \"gui_order\": 3,\n                \"cardinality\": \"0-n\"\n              }\n            ]\n          },\n          {\n            \"name\": \"organization\",\n            \"super\": \"Resource\",\n            \"labels\": {\n              \"en\": \"Organization\",\n              \"de\": \"Organisation\"\n            },\n            \"comments\": {\n              \"en\": \"Denotes an organizational unit\",\n              \"de\": \"Eine Institution oder Tr\u00e4gerschaft\"\n            },\n            \"cardinalities\": [\n              {\n                \"propname\": \":name\",\n                \"gui_order\": 1,\n                \"cardinality\": \"1-n\"\n              },\n              {\n                \"propname\": \":orgtype\",\n                \"gui_order\": 2,\n                \"cardinality\": \"1-n\"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n}\n</code></pre>"},{"location":"Dsp-Ingest/","title":"Dsp-Ingest","text":"<p>The Dsp-Ingest service is designed to streamline and optimize the process of ingesting and managing data within the DaSCH Service Platform.</p> <p>It provides a RESTful API for the digital asset management.</p>"},{"location":"Dsp-Ingest/#assets","title":"Assets","text":"<p>Assets are the core of the Dsp-Ingest service. They can be different sort of files, like: images, videos, audios, etc. For each asset, the service stores the metadata, its original file and possibly derivative files such as keyframes for videos.</p> <p>Assets are identified by a unique identifier, the <code>internal_filename</code>, eg. <code>100W6vpQQtG-Fk81LUxUheF.jp2</code>.</p>"},{"location":"Dsp-Ingest/#types-of-assets","title":"Types of Assets","text":"<p>The service supports different types of assets:</p> <ul> <li>Images</li> <li>Videos</li> <li>Audio files</li> <li>Excel files</li> <li>PDF files</li> <li>And others in binary format</li> </ul> <p>The supported file formats are explained in detail in the DSP-API documentation.</p>"},{"location":"Dsp-Ingest/#projects","title":"Projects","text":"<p>Assets are group within projects. A project is a collection of assets and corresponds to a project in the DSP-API.</p>"},{"location":"Dsp-Ingest/api-authentication/","title":"API Authentication","text":""},{"location":"Dsp-Ingest/api-authentication/#authentication","title":"Authentication","text":"<p>Authentication is done via the <code>Authorization</code> header. For secured endpoints the value of the header must be <code>Bearer &lt;token&gt;</code>, where <code>&lt;token&gt;</code> is a JWT token issued by the DSP-API.</p> <p>The token is a JSON Web Token (JWT) that must contain the following claims:</p> <ul> <li><code>iss</code> (issuer): The issuer of the token, the DSP-API</li> <li><code>sub</code> (subject): The subject of the token, the user's or system id</li> <li><code>aud</code> (audience): The audience of the token, the Dsp-Ingest service specific audience</li> <li><code>exp</code> (expiration time): The expiration time of the token, in seconds since epoch</li> <li><code>iat</code> (issued at): The time at which the token was issued, in seconds since epoch</li> <li><code>jti</code> (JWT ID): A unique identifier for the token</li> </ul>"},{"location":"Dsp-Ingest/api-authentication/#permissions-and-authorization","title":"Permissions and Authorization","text":"<p>Currently, no further authorization is done, but this will change in the future.</p>"},{"location":"Dsp-Ingest/api-endpoints-maintenance/","title":"Maintenance Endpoints","text":""},{"location":"Dsp-Ingest/api-endpoints-maintenance/#dsp-ingest-maintenance-v050-23-gcbbe7a6-dirty","title":"dsp-ingest-maintenance v0.5.0-23-gcbbe7a6-dirty","text":""},{"location":"Dsp-Ingest/api-endpoints-maintenance/#servers","title":"Servers","text":"Description URL Local development server http://localhost:3340 Production server https://ingest.dev.dasch.swiss"},{"location":"Dsp-Ingest/api-endpoints-maintenance/#maintenance","title":"maintenance","text":""},{"location":"Dsp-Ingest/api-endpoints-maintenance/#post-maintenancename","title":"POST /maintenance/{name}","text":"<p>Input parameters</p> Parameter In Type Default Nullable Description <code>httpAuth</code> header string N/A No JWT Bearer token <code>name</code> path None No The name of the action to be performed <code>restrictToProjects</code> query array No Restrict the action to a list of projects, if no project is given apply the action to all projects. <p> Response 202 Accepted </p> text/plain <p><pre><code>\"string\"\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"type\": \"string\"\n}\n</code></pre> <p> Response 400 Bad Request </p> application/json <p><pre><code>{\n    \"errors\": [\n        {\n            \"argument\": \"string\",\n            \"reason\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"$ref\": \"#/components/schemas/Argument\"\n            }\n        }\n    }\n}\n</code></pre> <p> Response 401 Unauthorized </p> application/json <p><pre><code>{\n    \"reason\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"reason\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"reason\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 404 Not Found </p> application/json <p><pre><code>{\n    \"id\": \"string\",\n    \"type\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"id\",\n        \"type\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\"\n        },\n        \"type\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 500 Internal Server Error </p> application/json <p><pre><code>{\n    \"errorMessage\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"errorMessage\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"errorMessage\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 503 Service Unavailable </p> application/json <p><pre><code>{\n    \"status\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"status\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"status\": {\n            \"$ref\": \"#/components/schemas/Status\"\n        }\n    }\n}\n</code></pre>"},{"location":"Dsp-Ingest/api-endpoints-maintenance/#post-maintenancecreate-originalsshortcode","title":"POST /maintenance/create-originals/{shortcode}","text":"<p>Input parameters</p> Parameter In Type Default Nullable Description <code>httpAuth</code> header string N/A No JWT Bearer token <code>shortcode</code> path string No The shortcode of the project must be an exactly 4 characters long hexadecimal string. <p>Request body</p> application/json <p><pre><code>[\n    {\n        \"internalFilename\": \"string\",\n        \"originalFilename\": \"string\"\n    }\n]\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the request body <pre><code>{\n    \"type\": \"array\",\n    \"items\": {\n        \"$ref\": \"#/components/schemas/MappingEntry\"\n    }\n}\n</code></pre> <p> Response 202 Accepted </p> <p> Response 400 Bad Request </p> application/json <p><pre><code>{\n    \"errors\": [\n        {\n            \"argument\": \"string\",\n            \"reason\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"$ref\": \"#/components/schemas/Argument\"\n            }\n        }\n    }\n}\n</code></pre> <p> Response 401 Unauthorized </p> application/json <p><pre><code>{\n    \"reason\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"reason\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"reason\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 404 Not Found </p> application/json <p><pre><code>{\n    \"id\": \"string\",\n    \"type\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"id\",\n        \"type\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\"\n        },\n        \"type\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 500 Internal Server Error </p> application/json <p><pre><code>{\n    \"errorMessage\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"errorMessage\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"errorMessage\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 503 Service Unavailable </p> application/json <p><pre><code>{\n    \"status\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"status\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"status\": {\n            \"$ref\": \"#/components/schemas/Status\"\n        }\n    }\n}\n</code></pre>"},{"location":"Dsp-Ingest/api-endpoints-maintenance/#get-maintenanceneeds-top-left-correction","title":"GET /maintenance/needs-top-left-correction","text":"<p>Input parameters</p> Parameter In Type Default Nullable Description <code>httpAuth</code> header string N/A No JWT Bearer token <p> Response 202 Accepted </p> text/plain <p><pre><code>\"string\"\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"type\": \"string\"\n}\n</code></pre> <p> Response 400 Bad Request </p> application/json <p><pre><code>{\n    \"errors\": [\n        {\n            \"argument\": \"string\",\n            \"reason\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"$ref\": \"#/components/schemas/Argument\"\n            }\n        }\n    }\n}\n</code></pre> <p> Response 401 Unauthorized </p> application/json <p><pre><code>{\n    \"reason\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"reason\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"reason\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 404 Not Found </p> application/json <p><pre><code>{\n    \"id\": \"string\",\n    \"type\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"id\",\n        \"type\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\"\n        },\n        \"type\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 500 Internal Server Error </p> application/json <p><pre><code>{\n    \"errorMessage\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"errorMessage\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"errorMessage\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 503 Service Unavailable </p> application/json <p><pre><code>{\n    \"status\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"status\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"status\": {\n            \"$ref\": \"#/components/schemas/Status\"\n        }\n    }\n}\n</code></pre>"},{"location":"Dsp-Ingest/api-endpoints-maintenance/#get-maintenanceneeds-originals","title":"GET /maintenance/needs-originals","text":"<p>Input parameters</p> Parameter In Type Default Nullable Description <code>httpAuth</code> header string N/A No JWT Bearer token <code>imagesOnly</code> query boolean No <p> Response 202 Accepted </p> text/plain <p><pre><code>\"string\"\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"type\": \"string\"\n}\n</code></pre> <p> Response 400 Bad Request </p> application/json <p><pre><code>{\n    \"errors\": [\n        {\n            \"argument\": \"string\",\n            \"reason\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"$ref\": \"#/components/schemas/Argument\"\n            }\n        }\n    }\n}\n</code></pre> <p> Response 401 Unauthorized </p> application/json <p><pre><code>{\n    \"reason\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"reason\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"reason\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 404 Not Found </p> application/json <p><pre><code>{\n    \"id\": \"string\",\n    \"type\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"id\",\n        \"type\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\"\n        },\n        \"type\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 500 Internal Server Error </p> application/json <p><pre><code>{\n    \"errorMessage\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"errorMessage\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"errorMessage\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 503 Service Unavailable </p> application/json <p><pre><code>{\n    \"status\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"status\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"status\": {\n            \"$ref\": \"#/components/schemas/Status\"\n        }\n    }\n}\n</code></pre>"},{"location":"Dsp-Ingest/api-endpoints-maintenance/#schemas","title":"Schemas","text":""},{"location":"Dsp-Ingest/api-endpoints-maintenance/#actionname","title":"ActionName","text":"<p>Type: string</p>"},{"location":"Dsp-Ingest/api-endpoints-maintenance/#argument","title":"Argument","text":"Name Type <code>argument</code> string <code>reason</code> string"},{"location":"Dsp-Ingest/api-endpoints-maintenance/#badrequest","title":"BadRequest","text":"Name Type <code>errors</code> Array&lt;Argument&gt;"},{"location":"Dsp-Ingest/api-endpoints-maintenance/#down","title":"DOWN","text":""},{"location":"Dsp-Ingest/api-endpoints-maintenance/#internalservererror","title":"InternalServerError","text":"Name Type <code>errorMessage</code> string"},{"location":"Dsp-Ingest/api-endpoints-maintenance/#mappingentry","title":"MappingEntry","text":"Name Type <code>internalFilename</code> string <code>originalFilename</code> string"},{"location":"Dsp-Ingest/api-endpoints-maintenance/#notfound","title":"NotFound","text":"Name Type <code>id</code> string <code>type</code> string"},{"location":"Dsp-Ingest/api-endpoints-maintenance/#status","title":"Status","text":"<p>Type: </p>"},{"location":"Dsp-Ingest/api-endpoints-maintenance/#unauthorized","title":"Unauthorized","text":"Name Type <code>reason</code> string"},{"location":"Dsp-Ingest/api-endpoints-maintenance/#unhealthy","title":"Unhealthy","text":"Name Type <code>status</code> Status"},{"location":"Dsp-Ingest/api-endpoints-maintenance/#up","title":"UP","text":""},{"location":"Dsp-Ingest/api-endpoints-maintenance/#security-schemes","title":"Security schemes","text":"Name Type Scheme Description httpAuth http bearer"},{"location":"Dsp-Ingest/api-endpoints-monitoring/","title":"Monitoring Endpoints","text":""},{"location":"Dsp-Ingest/api-endpoints-monitoring/#dsp-ingest-monitoring-v050-23-gcbbe7a6-dirty","title":"dsp-ingest-monitoring v0.5.0-23-gcbbe7a6-dirty","text":""},{"location":"Dsp-Ingest/api-endpoints-monitoring/#servers","title":"Servers","text":"Description URL Local development server http://localhost:3340 Production server https://ingest.dev.dasch.swiss"},{"location":"Dsp-Ingest/api-endpoints-monitoring/#monitoring","title":"monitoring","text":""},{"location":"Dsp-Ingest/api-endpoints-monitoring/#get-info","title":"GET /info","text":"<p> Response 200 OK </p> application/json <pre><code>{\n    \"name\": \"dsp-ingest\",\n    \"version\": \"v0.5.0-23-gcbbe7a6-dirty\",\n    \"scalaVersion\": \"3.3.3\",\n    \"sbtVersion\": \"1.9.8\",\n    \"buildTime\": \"2024-01-10 19:39:26.411+0100\",\n    \"gitCommit\": \"cbbe7a6a06ba9dc64a6939ceb7880015a4c3fa9b\"\n}\n</code></pre> Schema of the response body <pre><code>{\n    \"required\": [\n        \"name\",\n        \"version\",\n        \"scalaVersion\",\n        \"sbtVersion\",\n        \"buildTime\",\n        \"gitCommit\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"version\": {\n            \"type\": \"string\"\n        },\n        \"scalaVersion\": {\n            \"type\": \"string\"\n        },\n        \"sbtVersion\": {\n            \"type\": \"string\"\n        },\n        \"buildTime\": {\n            \"type\": \"string\"\n        },\n        \"gitCommit\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 400 Bad Request </p> application/json <p><pre><code>{\n    \"errors\": [\n        {\n            \"argument\": \"string\",\n            \"reason\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"$ref\": \"#/components/schemas/Argument\"\n            }\n        }\n    }\n}\n</code></pre> <p> Response 401 Unauthorized </p> application/json <p><pre><code>{\n    \"reason\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"reason\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"reason\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 404 Not Found </p> application/json <p><pre><code>{\n    \"id\": \"string\",\n    \"type\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"id\",\n        \"type\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\"\n        },\n        \"type\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 500 Internal Server Error </p> application/json <p><pre><code>{\n    \"errorMessage\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"errorMessage\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"errorMessage\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 503 Service Unavailable </p> application/json <p><pre><code>{\n    \"status\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"status\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"status\": {\n            \"$ref\": \"#/components/schemas/Status\"\n        }\n    }\n}\n</code></pre>"},{"location":"Dsp-Ingest/api-endpoints-monitoring/#get-health","title":"GET /health","text":"<p> Response 200 OK </p> application/json <pre><code>{\n    \"status\": \"UP\"\n}\n</code></pre> Schema of the response body <pre><code>{\n    \"required\": [\n        \"status\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"status\": {\n            \"$ref\": \"#/components/schemas/Status\"\n        }\n    }\n}\n</code></pre> <p> Response 400 Bad Request </p> application/json <p><pre><code>{\n    \"errors\": [\n        {\n            \"argument\": \"string\",\n            \"reason\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"$ref\": \"#/components/schemas/Argument\"\n            }\n        }\n    }\n}\n</code></pre> <p> Response 401 Unauthorized </p> application/json <p><pre><code>{\n    \"reason\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"reason\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"reason\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 404 Not Found </p> application/json <p><pre><code>{\n    \"id\": \"string\",\n    \"type\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"id\",\n        \"type\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\"\n        },\n        \"type\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 500 Internal Server Error </p> application/json <p><pre><code>{\n    \"errorMessage\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"errorMessage\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"errorMessage\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 503 Service Unavailable </p> application/json <p><pre><code>{\n    \"status\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"status\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"status\": {\n            \"$ref\": \"#/components/schemas/Status\"\n        }\n    }\n}\n</code></pre>"},{"location":"Dsp-Ingest/api-endpoints-monitoring/#get-metrics","title":"GET /metrics","text":"<p> Response 200 OK </p> text/plain <p><pre><code>\"string\"\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"type\": \"string\"\n}\n</code></pre> <p> Response 400 Bad Request </p> application/json <p><pre><code>{\n    \"errors\": [\n        {\n            \"argument\": \"string\",\n            \"reason\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"$ref\": \"#/components/schemas/Argument\"\n            }\n        }\n    }\n}\n</code></pre> <p> Response 401 Unauthorized </p> application/json <p><pre><code>{\n    \"reason\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"reason\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"reason\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 404 Not Found </p> application/json <p><pre><code>{\n    \"id\": \"string\",\n    \"type\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"id\",\n        \"type\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\"\n        },\n        \"type\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 500 Internal Server Error </p> application/json <p><pre><code>{\n    \"errorMessage\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"errorMessage\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"errorMessage\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 503 Service Unavailable </p> application/json <p><pre><code>{\n    \"status\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"status\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"status\": {\n            \"$ref\": \"#/components/schemas/Status\"\n        }\n    }\n}\n</code></pre>"},{"location":"Dsp-Ingest/api-endpoints-monitoring/#schemas","title":"Schemas","text":""},{"location":"Dsp-Ingest/api-endpoints-monitoring/#argument","title":"Argument","text":"Name Type <code>argument</code> string <code>reason</code> string"},{"location":"Dsp-Ingest/api-endpoints-monitoring/#badrequest","title":"BadRequest","text":"Name Type <code>errors</code> Array&lt;Argument&gt;"},{"location":"Dsp-Ingest/api-endpoints-monitoring/#down","title":"DOWN","text":""},{"location":"Dsp-Ingest/api-endpoints-monitoring/#health","title":"Health","text":"Name Type <code>status</code> Status"},{"location":"Dsp-Ingest/api-endpoints-monitoring/#infoendpointresponse","title":"InfoEndpointResponse","text":"Name Type <code>buildTime</code> string <code>gitCommit</code> string <code>name</code> string <code>sbtVersion</code> string <code>scalaVersion</code> string <code>version</code> string"},{"location":"Dsp-Ingest/api-endpoints-monitoring/#internalservererror","title":"InternalServerError","text":"Name Type <code>errorMessage</code> string"},{"location":"Dsp-Ingest/api-endpoints-monitoring/#notfound","title":"NotFound","text":"Name Type <code>id</code> string <code>type</code> string"},{"location":"Dsp-Ingest/api-endpoints-monitoring/#status","title":"Status","text":"<p>Type: </p>"},{"location":"Dsp-Ingest/api-endpoints-monitoring/#unauthorized","title":"Unauthorized","text":"Name Type <code>reason</code> string"},{"location":"Dsp-Ingest/api-endpoints-monitoring/#unhealthy","title":"Unhealthy","text":"Name Type <code>status</code> Status"},{"location":"Dsp-Ingest/api-endpoints-monitoring/#up","title":"UP","text":""},{"location":"Dsp-Ingest/api-endpoints-projects/","title":"Projects Endpoints","text":""},{"location":"Dsp-Ingest/api-endpoints-projects/#dsp-ingest-projects-v050-23-gcbbe7a6-dirty","title":"dsp-ingest-projects v0.5.0-23-gcbbe7a6-dirty","text":""},{"location":"Dsp-Ingest/api-endpoints-projects/#servers","title":"Servers","text":"Description URL Local development server http://localhost:3340 Production server https://ingest.dev.dasch.swiss"},{"location":"Dsp-Ingest/api-endpoints-projects/#projects","title":"projects","text":""},{"location":"Dsp-Ingest/api-endpoints-projects/#get-projects","title":"GET /projects","text":"<p>Input parameters</p> Parameter In Type Default Nullable Description <code>httpAuth</code> header string N/A No JWT Bearer token <p> Response 200 OK </p> application/json <p><pre><code>[\n    {\n        \"id\": \"string\"\n    }\n]\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"type\": \"array\",\n    \"items\": {\n        \"$ref\": \"#/components/schemas/ProjectResponse\"\n    }\n}\n</code></pre> <p>Response headers</p> Name Description Schema <code>Content-Range</code> string <p> Response 400 Bad Request </p> application/json <p><pre><code>{\n    \"errors\": [\n        {\n            \"argument\": \"string\",\n            \"reason\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"$ref\": \"#/components/schemas/Argument\"\n            }\n        }\n    }\n}\n</code></pre> <p> Response 401 Unauthorized </p> application/json <p><pre><code>{\n    \"reason\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"reason\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"reason\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 404 Not Found </p> application/json <p><pre><code>{\n    \"id\": \"string\",\n    \"type\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"id\",\n        \"type\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\"\n        },\n        \"type\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 500 Internal Server Error </p> application/json <p><pre><code>{\n    \"errorMessage\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"errorMessage\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"errorMessage\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 503 Service Unavailable </p> application/json <p><pre><code>{\n    \"status\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"status\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"status\": {\n            \"$ref\": \"#/components/schemas/Status\"\n        }\n    }\n}\n</code></pre>"},{"location":"Dsp-Ingest/api-endpoints-projects/#get-projectsshortcode","title":"GET /projects/{shortcode}","text":"<p>Input parameters</p> Parameter In Type Default Nullable Description <code>httpAuth</code> header string N/A No JWT Bearer token <code>shortcode</code> path string No The shortcode of the project must be an exactly 4 characters long hexadecimal string. <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"id\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"id\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 400 Bad Request </p> application/json <p><pre><code>{\n    \"errors\": [\n        {\n            \"argument\": \"string\",\n            \"reason\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"$ref\": \"#/components/schemas/Argument\"\n            }\n        }\n    }\n}\n</code></pre> <p> Response 401 Unauthorized </p> application/json <p><pre><code>{\n    \"reason\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"reason\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"reason\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 404 Not Found </p> application/json <p><pre><code>{\n    \"id\": \"string\",\n    \"type\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"id\",\n        \"type\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\"\n        },\n        \"type\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 500 Internal Server Error </p> application/json <p><pre><code>{\n    \"errorMessage\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"errorMessage\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"errorMessage\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 503 Service Unavailable </p> application/json <p><pre><code>{\n    \"status\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"status\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"status\": {\n            \"$ref\": \"#/components/schemas/Status\"\n        }\n    }\n}\n</code></pre>"},{"location":"Dsp-Ingest/api-endpoints-projects/#get-projectsshortcodechecksumreport","title":"GET /projects/{shortcode}/checksumreport","text":"<p>Input parameters</p> Parameter In Type Default Nullable Description <code>httpAuth</code> header string N/A No JWT Bearer token <code>shortcode</code> path string No The shortcode of the project must be an exactly 4 characters long hexadecimal string. <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"summary\": {\n        \"numberOfAssets\": 158,\n        \"numberOfFiles\": 49,\n        \"numberOfChecksumMatches\": 238\n    },\n    \"results\": [\n        {\n            \"assetId\": \"string\",\n            \"originalFilename\": \"string\",\n            \"results\": [\n                {\n                    \"filename\": \"string\",\n                    \"checksumMatches\": true\n                }\n            ]\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"summary\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"summary\": {\n            \"$ref\": \"#/components/schemas/AssetCheckResultSummary\"\n        },\n        \"results\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"$ref\": \"#/components/schemas/AssetCheckResultEntry\"\n            }\n        }\n    }\n}\n</code></pre> <p> Response 400 Bad Request </p> application/json <p><pre><code>{\n    \"errors\": [\n        {\n            \"argument\": \"string\",\n            \"reason\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"$ref\": \"#/components/schemas/Argument\"\n            }\n        }\n    }\n}\n</code></pre> <p> Response 401 Unauthorized </p> application/json <p><pre><code>{\n    \"reason\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"reason\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"reason\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 404 Not Found </p> application/json <p><pre><code>{\n    \"id\": \"string\",\n    \"type\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"id\",\n        \"type\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\"\n        },\n        \"type\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 500 Internal Server Error </p> application/json <p><pre><code>{\n    \"errorMessage\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"errorMessage\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"errorMessage\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 503 Service Unavailable </p> application/json <p><pre><code>{\n    \"status\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"status\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"status\": {\n            \"$ref\": \"#/components/schemas/Status\"\n        }\n    }\n}\n</code></pre>"},{"location":"Dsp-Ingest/api-endpoints-projects/#assets","title":"assets","text":""},{"location":"Dsp-Ingest/api-endpoints-projects/#get-projectsshortcodeassetsassetid","title":"GET /projects/{shortcode}/assets/{assetId}","text":"<p>Input parameters</p> Parameter In Type Default Nullable Description <code>httpAuth</code> header string N/A No JWT Bearer token <code>assetId</code> path string No <code>shortcode</code> path string No The shortcode of the project must be an exactly 4 characters long hexadecimal string. <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"internalFilename\": \"string\",\n    \"originalInternalFilename\": \"string\",\n    \"originalFilename\": \"string\",\n    \"checksumOriginal\": \"string\",\n    \"checksumDerivative\": \"string\",\n    \"width\": 178,\n    \"height\": 90,\n    \"duration\": 10.12,\n    \"fps\": 10.12,\n    \"internalMimeType\": \"string\",\n    \"originalMimeType\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"internalFilename\",\n        \"originalInternalFilename\",\n        \"originalFilename\",\n        \"checksumOriginal\",\n        \"checksumDerivative\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"internalFilename\": {\n            \"type\": \"string\"\n        },\n        \"originalInternalFilename\": {\n            \"type\": \"string\"\n        },\n        \"originalFilename\": {\n            \"type\": \"string\"\n        },\n        \"checksumOriginal\": {\n            \"type\": \"string\"\n        },\n        \"checksumDerivative\": {\n            \"type\": \"string\"\n        },\n        \"width\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n        },\n        \"height\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n        },\n        \"duration\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n        },\n        \"fps\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n        },\n        \"internalMimeType\": {\n            \"type\": \"string\"\n        },\n        \"originalMimeType\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 400 Bad Request </p> application/json <p><pre><code>{\n    \"errors\": [\n        {\n            \"argument\": \"string\",\n            \"reason\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"$ref\": \"#/components/schemas/Argument\"\n            }\n        }\n    }\n}\n</code></pre> <p> Response 401 Unauthorized </p> application/json <p><pre><code>{\n    \"reason\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"reason\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"reason\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 404 Not Found </p> application/json <p><pre><code>{\n    \"id\": \"string\",\n    \"type\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"id\",\n        \"type\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\"\n        },\n        \"type\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 500 Internal Server Error </p> application/json <p><pre><code>{\n    \"errorMessage\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"errorMessage\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"errorMessage\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 503 Service Unavailable </p> application/json <p><pre><code>{\n    \"status\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"status\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"status\": {\n            \"$ref\": \"#/components/schemas/Status\"\n        }\n    }\n}\n</code></pre>"},{"location":"Dsp-Ingest/api-endpoints-projects/#bulk-ingest","title":"bulk-ingest","text":""},{"location":"Dsp-Ingest/api-endpoints-projects/#post-projectsshortcodebulk-ingest","title":"POST /projects/{shortcode}/bulk-ingest","text":"Description <p>Triggers an ingest on the project with the given shortcode. Currently only supports ingest of images. The files are expected to be in the <code>tmp/&lt;project_shortcode&gt;</code> directory.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>httpAuth</code> header string N/A No JWT Bearer token <code>shortcode</code> path string No The shortcode of the project must be an exactly 4 characters long hexadecimal string. <p> Response 202 Accepted </p> application/json <pre><code>{\n    \"id\": \"0001\"\n}\n</code></pre> Schema of the response body <pre><code>{\n    \"required\": [\n        \"id\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 400 Bad Request </p> application/json <p><pre><code>{\n    \"errors\": [\n        {\n            \"argument\": \"string\",\n            \"reason\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"$ref\": \"#/components/schemas/Argument\"\n            }\n        }\n    }\n}\n</code></pre> <p> Response 401 Unauthorized </p> application/json <p><pre><code>{\n    \"reason\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"reason\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"reason\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 404 Not Found </p> application/json <p><pre><code>{\n    \"id\": \"string\",\n    \"type\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"id\",\n        \"type\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\"\n        },\n        \"type\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 500 Internal Server Error </p> application/json <p><pre><code>{\n    \"errorMessage\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"errorMessage\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"errorMessage\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 503 Service Unavailable </p> application/json <p><pre><code>{\n    \"status\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"status\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"status\": {\n            \"$ref\": \"#/components/schemas/Status\"\n        }\n    }\n}\n</code></pre>"},{"location":"Dsp-Ingest/api-endpoints-projects/#post-projectsshortcodebulk-ingestfinalize","title":"POST /projects/{shortcode}/bulk-ingest/finalize","text":"Description <p>Finalizes the bulk ingest. This will remove the files from the <code>tmp/&lt;project_shortcode&gt;</code> directory and the directory itself. This will remove also the mapping.csv file.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>httpAuth</code> header string N/A No JWT Bearer token <code>shortcode</code> path string No The shortcode of the project must be an exactly 4 characters long hexadecimal string. <p> Response 200 OK </p> application/json <pre><code>{\n    \"id\": \"0001\"\n}\n</code></pre> Schema of the response body <pre><code>{\n    \"required\": [\n        \"id\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 400 Bad Request </p> application/json <p><pre><code>{\n    \"errors\": [\n        {\n            \"argument\": \"string\",\n            \"reason\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"$ref\": \"#/components/schemas/Argument\"\n            }\n        }\n    }\n}\n</code></pre> <p> Response 401 Unauthorized </p> application/json <p><pre><code>{\n    \"reason\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"reason\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"reason\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 404 Not Found </p> application/json <p><pre><code>{\n    \"id\": \"string\",\n    \"type\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"id\",\n        \"type\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\"\n        },\n        \"type\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 500 Internal Server Error </p> application/json <p><pre><code>{\n    \"errorMessage\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"errorMessage\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"errorMessage\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 503 Service Unavailable </p> application/json <p><pre><code>{\n    \"status\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"status\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"status\": {\n            \"$ref\": \"#/components/schemas/Status\"\n        }\n    }\n}\n</code></pre>"},{"location":"Dsp-Ingest/api-endpoints-projects/#get-projectsshortcodebulk-ingestmappingcsv","title":"GET /projects/{shortcode}/bulk-ingest/mapping.csv","text":"Description <p>Get the current result of the bulk ingest, may be incomplete. The result is a csv with the following structure: original,derivative</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>httpAuth</code> header string N/A No JWT Bearer token <code>shortcode</code> path string No The shortcode of the project must be an exactly 4 characters long hexadecimal string. <p> Response 200 OK </p> text/csv <p><pre><code>\"string\"\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"type\": \"string\"\n}\n</code></pre> <p>Response headers</p> Name Description Schema <code>Content-Type</code> string <p> Response 400 Bad Request </p> application/json <p><pre><code>{\n    \"errors\": [\n        {\n            \"argument\": \"string\",\n            \"reason\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"$ref\": \"#/components/schemas/Argument\"\n            }\n        }\n    }\n}\n</code></pre> <p> Response 401 Unauthorized </p> application/json <p><pre><code>{\n    \"reason\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"reason\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"reason\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 404 Not Found </p> application/json <p><pre><code>{\n    \"id\": \"string\",\n    \"type\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"id\",\n        \"type\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\"\n        },\n        \"type\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 500 Internal Server Error </p> application/json <p><pre><code>{\n    \"errorMessage\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"errorMessage\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"errorMessage\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 503 Service Unavailable </p> application/json <p><pre><code>{\n    \"status\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"status\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"status\": {\n            \"$ref\": \"#/components/schemas/Status\"\n        }\n    }\n}\n</code></pre>"},{"location":"Dsp-Ingest/api-endpoints-projects/#importexport","title":"import/export","text":""},{"location":"Dsp-Ingest/api-endpoints-projects/#post-projectsshortcodeexport","title":"POST /projects/{shortcode}/export","text":"<p>Input parameters</p> Parameter In Type Default Nullable Description <code>httpAuth</code> header string N/A No JWT Bearer token <code>shortcode</code> path string No The shortcode of the project must be an exactly 4 characters long hexadecimal string. <p> Response 200 OK </p> application/zip <p><pre><code>\"TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQ=\"\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"type\": \"string\",\n    \"format\": \"binary\"\n}\n</code></pre> <p>Response headers</p> Name Description Schema <code>Content-Disposition</code> string <code>Content-Type</code> string <p> Response 400 Bad Request </p> application/json <p><pre><code>{\n    \"errors\": [\n        {\n            \"argument\": \"string\",\n            \"reason\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"$ref\": \"#/components/schemas/Argument\"\n            }\n        }\n    }\n}\n</code></pre> <p> Response 401 Unauthorized </p> application/json <p><pre><code>{\n    \"reason\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"reason\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"reason\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 404 Not Found </p> application/json <p><pre><code>{\n    \"id\": \"string\",\n    \"type\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"id\",\n        \"type\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\"\n        },\n        \"type\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 500 Internal Server Error </p> application/json <p><pre><code>{\n    \"errorMessage\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"errorMessage\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"errorMessage\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 503 Service Unavailable </p> application/json <p><pre><code>{\n    \"status\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"status\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"status\": {\n            \"$ref\": \"#/components/schemas/Status\"\n        }\n    }\n}\n</code></pre>"},{"location":"Dsp-Ingest/api-endpoints-projects/#get-projectsshortcodeimport","title":"GET /projects/{shortcode}/import","text":"<p>Input parameters</p> Parameter In Type Default Nullable Description <code>httpAuth</code> header string N/A No JWT Bearer token <code>Content-Type</code> header string No <code>shortcode</code> path string No The shortcode of the project must be an exactly 4 characters long hexadecimal string. <p>Request body</p> application/zip <p><pre><code>\"TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQ=\"\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the request body <pre><code>{\n    \"type\": \"string\",\n    \"format\": \"binary\"\n}\n</code></pre> <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"status\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"status\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"status\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 400 Bad Request </p> application/json <p><pre><code>{\n    \"errors\": [\n        {\n            \"argument\": \"string\",\n            \"reason\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"type\": \"object\",\n    \"properties\": {\n        \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"$ref\": \"#/components/schemas/Argument\"\n            }\n        }\n    }\n}\n</code></pre> <p> Response 401 Unauthorized </p> application/json <p><pre><code>{\n    \"reason\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"reason\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"reason\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 404 Not Found </p> application/json <p><pre><code>{\n    \"id\": \"string\",\n    \"type\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"id\",\n        \"type\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\"\n        },\n        \"type\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 500 Internal Server Error </p> application/json <p><pre><code>{\n    \"errorMessage\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"errorMessage\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"errorMessage\": {\n            \"type\": \"string\"\n        }\n    }\n}\n</code></pre> <p> Response 503 Service Unavailable </p> application/json <p><pre><code>{\n    \"status\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"required\": [\n        \"status\"\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"status\": {\n            \"$ref\": \"#/components/schemas/Status\"\n        }\n    }\n}\n</code></pre>"},{"location":"Dsp-Ingest/api-endpoints-projects/#schemas","title":"Schemas","text":""},{"location":"Dsp-Ingest/api-endpoints-projects/#argument","title":"Argument","text":"Name Type <code>argument</code> string <code>reason</code> string"},{"location":"Dsp-Ingest/api-endpoints-projects/#assetcheckresultentry","title":"AssetCheckResultEntry","text":"Name Type <code>assetId</code> string <code>originalFilename</code> string <code>results</code> Array&lt;SingleFileCheckResultResponse&gt;"},{"location":"Dsp-Ingest/api-endpoints-projects/#assetcheckresultresponse","title":"AssetCheckResultResponse","text":"Name Type <code>results</code> Array&lt;AssetCheckResultEntry&gt; <code>summary</code> AssetCheckResultSummary"},{"location":"Dsp-Ingest/api-endpoints-projects/#assetcheckresultsummary","title":"AssetCheckResultSummary","text":"Name Type <code>numberOfAssets</code> integer(int32) <code>numberOfChecksumMatches</code> integer(int32) <code>numberOfFiles</code> integer(int32)"},{"location":"Dsp-Ingest/api-endpoints-projects/#assetinforesponse","title":"AssetInfoResponse","text":"Name Type <code>checksumDerivative</code> string <code>checksumOriginal</code> string <code>duration</code> number(double) <code>fps</code> number(double) <code>height</code> integer(int32) <code>internalFilename</code> string <code>internalMimeType</code> string <code>originalFilename</code> string <code>originalInternalFilename</code> string <code>originalMimeType</code> string <code>width</code> integer(int32)"},{"location":"Dsp-Ingest/api-endpoints-projects/#badrequest","title":"BadRequest","text":"Name Type <code>errors</code> Array&lt;Argument&gt;"},{"location":"Dsp-Ingest/api-endpoints-projects/#down","title":"DOWN","text":""},{"location":"Dsp-Ingest/api-endpoints-projects/#internalservererror","title":"InternalServerError","text":"Name Type <code>errorMessage</code> string"},{"location":"Dsp-Ingest/api-endpoints-projects/#notfound","title":"NotFound","text":"Name Type <code>id</code> string <code>type</code> string"},{"location":"Dsp-Ingest/api-endpoints-projects/#projectresponse","title":"ProjectResponse","text":"Name Type <code>id</code> string"},{"location":"Dsp-Ingest/api-endpoints-projects/#singlefilecheckresultresponse","title":"SingleFileCheckResultResponse","text":"Name Type <code>checksumMatches</code> boolean <code>filename</code> string"},{"location":"Dsp-Ingest/api-endpoints-projects/#status","title":"Status","text":"<p>Type: </p>"},{"location":"Dsp-Ingest/api-endpoints-projects/#unauthorized","title":"Unauthorized","text":"Name Type <code>reason</code> string"},{"location":"Dsp-Ingest/api-endpoints-projects/#unhealthy","title":"Unhealthy","text":"Name Type <code>status</code> Status"},{"location":"Dsp-Ingest/api-endpoints-projects/#up","title":"UP","text":""},{"location":"Dsp-Ingest/api-endpoints-projects/#uploadresponse","title":"UploadResponse","text":"Name Type <code>status</code> string"},{"location":"Dsp-Ingest/api-endpoints-projects/#security-schemes","title":"Security schemes","text":"Name Type Scheme Description httpAuth http bearer"},{"location":"Dsp-Ingest/ingest/","title":"Ingesting Assets","text":"<p>Every asset belongs to a project. </p>"},{"location":"Dsp-Ingest/ingest/#bulk-ingest","title":"Bulk Ingest","text":""},{"location":"Dsp-Ingest/ingest/#preparation","title":"Preparation","text":"<p>The assets must be in <code>STORAGE_TEMP_DIR/import/{shortcode}</code>, a folder named after the Project Shortcode. The assets may be organized in sub-folders inside the <code>import/{shortcode}</code> folder. For example: <pre><code>import/\n    \u2514\u2500\u2500 0001/ \n        \u251c\u2500\u2500 someImage.jp2\n        \u2514\u2500\u2500 some-sub-folder/\n            \u251c\u2500\u2500 someText.txt\n            \u2026\n</code></pre></p>"},{"location":"Dsp-Ingest/ingest/#triggering-a-bulk-ingest","title":"Triggering a Bulk Ingest","text":"<p>You can trigger a Bulk Ingest with a request to the Bulk Ingest Endpoint.  The Bulk Ingest will run in the background, and you can check its status in the logs of the service.</p> <p>The Bulk Ingest will create a new asset for each valid file in the <code>import/{shortcode}/</code> folder, and move the file to the <code>STORAGE_ASSET_DIR/{shortcode}</code> folder. It will create relevant derivatives for the asset, such as keyframes for videos or and archival version of images. It will extract the metadata from the file and store it with the asset. Once a file was successfully ingested, it will be deleted from the <code>import/{shortcode}/</code> folder. Files that are not valid or could not be ingested will be ignored and remain in the <code>import/{shortcode}/</code> folder unchanged.</p> <p>Additionally, the Bulk Ingest will create a <code>mapping-{shortcode}.csv</code> CSV file in the <code>{STORAGE_TEMP_DIR}/import</code> folder.  This file contains a mapping of the original filenames to the <code>internal_filename</code> of the assets.</p> <pre><code>original,derivative\nsomeImage.jp2,4lNd38JEiHC-lofT60RQbYm.jp2\nsome-sub-folder/someText.txt,2hWjjyahcMM-Kkkm8qJpSGk.txt\n</code></pre> <p>You can use this mapping to create the respective resource in the DSP-API.</p>"},{"location":"Dsp-Ingest/ingest/#finalizing-a-bulk-ingest","title":"Finalizing a Bulk Ingest","text":"<p>Once you have verified the success of the ingest and/or created the resources in the DSP-API,  you should finalize the Bulk Ingest with a request to the Bulk Ingest Finalize Endpoint. The Bulk Ingest will then delete the <code>mapping-{shortcode}.csv</code> file and the <code>import/{shortcode}/</code> folder and all its content.</p>"},{"location":"Dsp-Ingest/service-configuration/","title":"Configuration","text":"<p>Configuring the service is done through environment variables.</p> <p>There are a couple of groups of variables:</p> <ul> <li>Service - configuration of the service itself, e.g. ports and logging</li> <li>Storage - configuration of the storage, e.g. file paths to asset folder</li> <li>Jwt - configuration of the JWT authentication, e.g. secret key</li> </ul>"},{"location":"Dsp-Ingest/service-configuration/#service","title":"Service","text":"Variable Default Description <code>SERVICE_PORT</code> <code>3340</code> Port on which the service will listen <code>SERVICE_HOST</code> <code>0.0.0.0</code> Host  on which the service will listen <code>SERVICE_LOG_LEVEL</code> <code>test</code> Log output format: <code>json</code> for json logging, <code>text</code> for human readable logging"},{"location":"Dsp-Ingest/service-configuration/#storage","title":"Storage","text":"Variable Default Description <code>STORAGE_ASSET_DIR</code> <code>localdev/storage/images</code> Path to the folder where the assets will be stored <code>STORAGE_TEMP_DIR</code> <code>localdev/storage/temp</code> Path to the folder where temporary files will be created <p>The layout in these folders is explained in detail in the chapter \"Filesystem Setup\".</p>"},{"location":"Dsp-Ingest/service-configuration/#jwt","title":"Jwt","text":"Variable Default Description <code>JWT_SECRET</code> <code>UP 4888, nice 4-8-4 steam engine</code> Secret key used to sign the JWT tokens, must be a valid H256 secret <code>JWT_ISSUER</code> <code>http://0.0.0.0:3333</code> Expected issuer claim in the JWT <code>JWT_AUDIENCE</code> <code>http://localhost:3340</code> Expected audience claim in the JWT <code>JWT_DISABLE_AUTH</code> <code>false</code> Disable JWT authentication, useful for local development. When set to <code>true</code> protected routes still expect a <code>Bearer</code> token but it can be any value."},{"location":"Dsp-Ingest/service-filesystem-setup/","title":"Filesystem Setup","text":"<p>The service expects the following filesystem structure:</p> <pre><code> {asset_directory} \n  \u251c\u2500\u2500 {project_folder} \n  |    \u2514\u2500\u2500{asset_segment_1}\n  |        \u2514\u2500\u2500 {asset_segment_2}\n  |              \u251c\u2500\u2500 xxx.info\n  |              \u251c\u2500\u2500 xxx.jpg.orig\n  |              \u2514\u2500\u2500 xxx.jp2\n  \u251c\u2500\u2500 {project_folder} \n  \u2026    \u2514\u2500\u2500{asset_segment_1}\n           \u2514\u2500\u2500 {asset_segment_2}\n                 \u251c\u2500\u2500 xxx.info\n                 \u251c\u2500\u2500 xxx.jpg.orig\n                 \u2514\u2500\u2500 xxx.jp2               \n {temp_directory}\n  \u251c\u2500\u2500 export\n  \u2514\u2500\u2500 import\n</code></pre> <p>Here is a description of the folders:</p> <ul> <li><code>{asset_directory}</code>: the folder where the assets are stored</li> <li><code>{project_folder}</code>: each project has its own folder containing the assets belonging to that project, the name of the   folder   is the project's shortcode</li> <li><code>{asset_segment_1}</code>: the first 2 characters of the <code>internal_filename</code> of an asset</li> <li><code>{asset_segment_2}</code>: the next 2 characters of the <code>internal_filename</code> of an asset</li> <li><code>{temp_directory}</code>: the folder where temporary files are stored</li> <li><code>{temp_directory}/export</code>: the folder where exported files are temporarily stored</li> <li><code>{temp_directory}/import</code>: the folder where imported files are temporarily stored</li> </ul> <p>Files are stored in the <code>{asset_directory}/{project_folder}/{asset_segment_1}/{asset_segment_2}</code> folder, <code>{asset_directory}/0123/ab/cd/abcdefg.jp2</code> for example.</p> <p>Each asset is stored in a file named <code>{internal_filename}</code> which consists of two parts <code>{asset_id}.{ext}</code>. The <code>{asset_id}</code> is a unique identifier for the asset and the <code>{ext}</code> is the file extension. Every derivative and metadata file of an asset are stored in files starting with <code>{asset_id}</code> and the respective <code>{ext}</code>.</p> <p>For each asset there are different files in the <code>{asset_segment_2}</code> folder:</p> <ul> <li><code>{internal_filename}</code>: (mandatory) the asset, <code>{asset_id}.jp2</code> for images, <code>{asset_id}.mp4</code> for videos, etc.</li> <li><code>{asset_id}.info</code>: (mandatory) the metadata of the asset</li> <li><code>{asset_id}.{ext}.orig</code>: the original file of the asset if it was an image and has been converted to a   JPEG 2000</li> </ul>"},{"location":"developers/contribution/","title":"How to contribute to the development of the DSP","text":"<p>The DSP software is developed under git version control using GitHub. It includes the  following main repositories:</p> <p> </p> <p>In all these repositories, we follow the GitHub flow  recommendations:</p> <ol> <li>Create a branch from main.</li> <li>Add commits.</li> <li>Open a pull request.</li> <li>Discuss and review your code.</li> <li>Merge into <code>main</code> branch.</li> </ol>"},{"location":"developers/contribution/#create-branch-guidelines","title":"Create Branch Guidelines","text":"<p>You will work on an own branch to resolve one issue or user story defined on Jira.  Each of those issues has a DEV-number which has to be used in the branch name:</p> <pre><code>wip/&lt;DEV-nr&gt;-&lt;subject&gt;\n</code></pre> <p>The prefix <code>wip</code> stands for \"work in progress\" followed by a \"/\" (slash). The second part starts with the DEV-number  followed by a short subject which contains a succinct description of the issue/user story. DEV-number and subject have  to be written in kebab-case with \"-\" (hyphens).</p>"},{"location":"developers/contribution/#git-commit-guidelines","title":"Git Commit Guidelines","text":"<p>We follow strict rules how a commit message has to look like. This leads to more readable messages that are easy to  follow when looking through the project history and release notes. Since release notes are automatically generated from  commits, it is important to follow the Conventional Commit messages.</p>"},{"location":"developers/contribution/#commit-message-format","title":"Commit Message Format","text":"<pre><code>&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;\n</code></pre>"},{"location":"developers/contribution/#type","title":"Type","text":"<p>Must be one of the following:</p> <ul> <li>fix: represents bug fixes, and correlates to a SemVer patch.</li> <li>refactor: represents production code refactoring, and correlates to a patch.</li> <li>feat: represents a new feature, and correlates to a SemVer minor.</li> <li>feat!, fix!, refactor!, etc.: represents a breaking change (indicated by the <code>!</code>) and will result in a SemVer major.\\   \u26a0 It is important that the exclamation mark is placed before the colon. For example <code>feat!: &lt;subject&gt;</code> or <code>feat(api-v2)!: &lt;subject&gt;</code></li> <li>docs: documentation changes (no production code change).</li> <li>chore: maintenance tasks (no production code change).</li> <li>style: styles update (no production code change).</li> <li>test: all about tests: adding, refactoring tests (no production code change).</li> </ul> <p>The first four items on this list are taken into account for the release notes and have an effect on the version number.</p>"},{"location":"developers/contribution/#scope-optional","title":"Scope (optional)","text":"<p>The scope could be anything specifying place of the commit change.</p>"},{"location":"developers/contribution/#subject","title":"Subject","text":"<p>The subject contains succinct description of the change:</p> <ul> <li>use the imperative, present tense: \"change\" not \"changed\" nor \"changes\"</li> <li>don't capitalize first letter</li> <li>no dot (.) at the end</li> </ul>"},{"location":"developers/contribution/#pull-request-guidelines","title":"Pull Request Guidelines","text":""},{"location":"developers/contribution/#set-title-and-add-description","title":"Set title and add description","text":"<p>A pull request usually resolves one issue or user story defined on Jira. Since we started to use the release-please-action it's  very important to set the PR title in the correct way, especially because all commits added within the pull request are  squashed. Otherwise, PRs with bad titles won't be added to the automatically generated CHANGELOG and release notes.  Thus, every PR title has to follow the commit message convention mentioned above, with small  modifications. </p>"},{"location":"developers/contribution/#pr-title-format","title":"PR Title Format","text":"<pre><code>&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt; (&lt;DEV-no.&gt;)\n</code></pre> <p>It's crucial to start the PR title with the <code>&lt;type&gt;</code> (allowed types), followed by optional<code>&lt;scope&gt;</code>  (in brackets and without space between type and scope). <code>&lt;subject&gt;</code> should be Jira task title or its short version. At  the end of the PR title add inside the brackets <code>&lt;DEV-no.&gt;</code>, which represents the number of the task(s) related to the  PR. Here is an example:</p> <pre><code>docs(contribution): example pull request title (DEV-001)\n</code></pre> <p>The PR description should contain important information for its reviewers. Don't copy/paste the Jira task description  here. Instead, start the description by adding the following:</p> <pre><code>Resolves &lt;DEV-no.&gt;\n</code></pre> <p>GitHub's Autolink Setting  will automatically generate a link to the Jira issue.</p>"},{"location":"developers/contribution/#add-a-label-optional","title":"Add a label (optional)","text":"<p>This step is optional, since it has no impact on the release process anymore. However, adding at least one of the  corresponding labels to your PR will help quickly realize its purpose:</p> <ul> <li>breaking: breaking changes.</li> <li>enhancement: new feature.</li> <li>bug: a bug fix.</li> <li>styling update style (no production code change).</li> <li>documentation: changes to the documentation.</li> <li>testing: all about tests: adding, refactoring tests (no production code change).</li> <li>refactor: refactoring production code.</li> <li>chore: maintenance tasks (no production code change).</li> <li>dependencies: update a dependency package version.</li> </ul>"},{"location":"developers/contribution/#make-a-draft","title":"Make a draft","text":"<p>Please convert the pull request to draft  as long it isn't ready for reviewing. As soon as the PR is ready for review,  click on the corresponding button \"Ready for review\".</p>"},{"location":"developers/contribution/#branch-protection-rules","title":"Branch protection rules","text":"<p>The main branch of each repo (it's usually the <code>main</code> branch) is protected by the following rules:</p> <ul> <li>Require pull request reviews before merging<ul> <li>At least from one reviewer</li> </ul> </li> <li>Require status checks to pass before merging<ul> <li>Require branches to be up-to-date before merging</li> <li>Status checks e.g. tests defined in each repository's CI</li> </ul> </li> </ul> <p>When the PR is merged, the branch will be deleted automatically.</p>"},{"location":"developers/contribution/#code-review-guidelines","title":"Code Review Guidelines","text":"<ul> <li>Reviewers should pay attention to proper PR title setting.</li> </ul>"},{"location":"developers/contribution/#general-github-actions-workflows-ci","title":"General GitHub actions workflows (CI)","text":"<p>We use GitHub actions to automate some processes.</p>"},{"location":"developers/contribution/#run-tests","title":"Run tests","text":"<p>With each push to GitHub, the tests of the repository are executed. Successful tests are needed to merge code into the  repository's main branch (s. Branch protection rules).</p>"},{"location":"developers/contribution/#prepare-release","title":"Prepare release","text":"<p>We use release-please-action to prepare the next release.  This action script automates the CHANGELOG generation, the creation of GitHub releases, and version bumps. In doing so,  it creates a release PR which updates itself with each push into main branch following the commit messages. It's  important to use the defined rules from above in all commits and in PR titles.</p>"},{"location":"developers/contribution/#create-release","title":"Create release","text":"<p>When we are ready to tag a release, simply merge the release PR. This will create a release on GitHub, builds the npm  package or the docker image and publishes on the corresponding platform.</p> <p> </p>"},{"location":"developers/getting-started/","title":"Getting started with DSP","text":"<p>The DaSCH Service Platform (DSP) is a bundle of software that runs on servers hosted by DaSCH. For some purposes, it is necessary to run the DSP software stack on a local machine.</p> <p>Follow the instructions on this page to install the DSP software stack on your local machine.</p> <p>The basic components of DSP are:</p> Component Description DSP-API The core of our software stack: the RDF database that offers an access via API DSP-APP The web application that allows you to view and edit data in your browser DSP-TOOLS A Python library and command line tool to upload data models and big data sets to a DSP server <p>The DSP software can only be run on macOS and Linux. Windows is not supported.</p> <p>This page is divided in 2 sections:</p> <ul> <li>Install DSP: Instructions for users:   Researchers, data stewards, and other users can take this shortcut.</li> <li>Install DSP: Instructions for developers:   Developers must install everything.</li> </ul>"},{"location":"developers/getting-started/#install-dsp-instructions-for-users","title":"Install DSP: Instructions for users","text":"<p>If you are a researcher or data steward who wants to use DSP to manage your data, you can get started quite quickly.</p> <p>DSP-TOOLS offers you a shortcut, so you only have to install DSP-TOOLS and its prerequisites:</p>"},{"location":"developers/getting-started/#xcode-command-line-tools","title":"XCode command line tools","text":"<p>Some Terminal commands used for the instructions below are not shipped with macOS by default. They must be installed separately. Install the XCode command line tools (not to be confused with the entire XCode application) by opening a Terminal window and typing:</p> <pre><code>xcode-select --install\n</code></pre> <p>You will be asked in a prompt if you want to install the command line developer tools. Click \"Install\".</p>"},{"location":"developers/getting-started/#docker-desktop","title":"Docker Desktop","text":"<p>DSP-API and DSP-APP are shipped as Docker containers. Install Docker Desktop from https://www.docker.com/products/docker-desktop/. Make sure to use the correct chip architecture (Intel versus Apple M1 chip).</p>"},{"location":"developers/getting-started/#python","title":"Python","text":"<p>Python is the language in which DSP-TOOLS is written. Even if there is a pre-installed version of Python on your computer, we recommend installing it separately. It can be downloaded from https://www.python.org/downloads/.</p>"},{"location":"developers/getting-started/#dsp-tools","title":"DSP-TOOLS","text":"<p>With these prerequisites installed, you are now ready to install DSP-TOOLS!</p> <p>Open a Terminal window and type:</p> <pre><code>pip3 install dsp-tools\n</code></pre> <p>Before using DSP-TOOLS, you should always execute the upgrade command:</p> <pre><code>pip3 install --upgrade dsp-tools\n</code></pre> <p>This command upgrades DSP-TOOLS to the latest version.</p>"},{"location":"developers/getting-started/#dsp-api-and-dsp-app-run-from-within-dsp-tools","title":"DSP-API and DSP-APP: run from within DSP-TOOLS","text":"<p>Now that you have DSP-TOOLS installed, you can use it to run DSP-API and DSP-APP according to these instructions.</p>"},{"location":"developers/getting-started/#test-project-rosetta","title":"Test project Rosetta","text":"<p>Now you are ready to try out our test project Rosetta. Make sure that DSP-API and DSP-APP are running, then open a Terminal window and type:</p> <pre><code>cd ~/Desktop                                                        # go to your Desktop  \ngit clone https://github.com/dasch-swiss/082E-rosetta-scripts.git   # clone the repository\ncd 082E-rosetta-scripts                                             # enter the repository\ndsp-tools create rosetta.json                                       # create the data model\ndsp-tools xmlupload rosetta.xml                                     # upload the data\n</code></pre> <p>You can then look at the data in a browser at the address http://0.0.0.0:4200/.</p> <p>Feel free to modify <code>rosetta.json</code> and <code>rosetta.xml</code> to your liking, restart DSP-API, create <code>rosetta.json</code> and upload <code>rosetta.xml</code> again, and see how the data changes in DSP-APP.</p> <p>That's it, you are ready to start working!</p>"},{"location":"developers/getting-started/#install-dsp-instructions-for-developers","title":"Install DSP: Instructions for developers","text":"<p>If you want to work with the code of the DSP software, you have to install the prerequisites used to build the code from source.</p>"},{"location":"developers/getting-started/#xcode-command-line-tools_1","title":"XCode command line tools","text":"<p>Some Terminal commands used for the instructions below are not shipped with macOS by default. They must be installed separately. Install the XCode command line tools (not to be confused with the entire XCode application) as follows:</p> <pre><code>xcode-select --install\n</code></pre> <p>You will be asked in a prompt if you want to install the command line developer tools. Click \"Install\".</p>"},{"location":"developers/getting-started/#homebrew","title":"Homebrew","text":"<p>Homebrew is a package manager that allows us to install other software. Install it with</p> <pre><code>/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n</code></pre>"},{"location":"developers/getting-started/#docker-desktop_1","title":"Docker Desktop","text":"<p>DSP-API and DSP-APP are shipped as Docker containers. Install Docker Desktop with</p> <pre><code>brew install --cask docker\n</code></pre>"},{"location":"developers/getting-started/#python_1","title":"Python","text":"<p>Python is the language in which DSP-TOOLS is written. It is also required to build the documentation of DSP-API and DSP-APP. Even if there is a pre-installed version of Python on your computer, we recommend installing it separately, with</p> <pre><code>brew install python\n</code></pre>"},{"location":"developers/getting-started/#git","title":"Git","text":"<p>All software developed by DaSCH is under Git version control, and hosted on GitHub. Git comes with the XCode command line tools, but we recommend installing it separately, with</p> <pre><code>brew install git\n</code></pre>"},{"location":"developers/getting-started/#openjdk-21","title":"OpenJDK 21","text":"<p>DSP-API is written in Scala, so building DSP-API from source requires Java. The recommended way to install it is SDK Man, because SDK Man takes care of the environment variable <code>JAVA_HOME</code>. Installing Java by other means (e.g. Homebrew) is also possible, but requires some manual work and has caused problems in the past.</p> <p>First, install SDK Man with</p> <pre><code>curl -s \"https://get.sdkman.io\" | bash\n</code></pre> <p>Then, pick a version to install:</p> <pre><code>sdk ls java\n</code></pre> <p>This command gives you a list of all available versions. Scroll down with the <code>Arrow Down</code> key and copy the name of the most recent version 21 of Temurin, e.g. <code>21.0.1-tem</code>. Then, exit the list view with <code>q</code>, and install the version you copied with</p> <pre><code>sdk install java 17.0.5-tem\n</code></pre> <p>Technical note: SDKMAN will take care of the environment variable JAVA_HOME. If we had installed Java with Homebrew, we would have to take care that JAVA_HOME points to the correct directory, which might vary from machine to machine.</p>"},{"location":"developers/getting-started/#sbt","title":"sbt","text":"<p>DSP-API uses sbt as a build tool. Install sbt with</p> <pre><code>brew install sbt\n</code></pre>"},{"location":"developers/getting-started/#just","title":"Just","text":"<p>just is a command runner run project-specific commands. It is used in the DSP-API repository. Install it with</p> <pre><code>brew install just\n</code></pre>"},{"location":"developers/getting-started/#nodejs-npm-and-angular","title":"Node.js, npm, and Angular","text":"<p>Parts of DSP-APP are written in Angular, which requires Node.js and its package manager npm.</p> <p>Install node.js and npm with</p> <pre><code>brew install node\n</code></pre> <p>Install Angular with</p> <pre><code>npm install -g @angular/cli\n</code></pre>"},{"location":"developers/getting-started/#dsp-api-and-dsp-app-build-from-source","title":"DSP-API and DSP-APP: build from source","text":"<p>Clone DSP-API from GitHub and build the Docker image from source:</p> <pre><code>git clone https://github.com/dasch-swiss/dsp-api.git\ncd dsp-api\nmake init-db-test-minimal\nmake stack-up\n</code></pre> <p>This starts the DSP stack consisting of Fuseki, DSP-API, SIPI, and DSP-APP. If everything worked properly, the Dashboard in Docker Desktop should show those containers running.</p> <p>Please note that the DSP-APP container that was automatically started from within the DSP-API repo is just for convenience. If you want to actively work on DSP-APP, you should clone the DSP-DAS repo separately and run it according to its own instructions.</p> <p>To stop everything, type</p> <pre><code>make stack-down-delete-volumes\n</code></pre> <p>Please see the <code>Makefile</code> for other useful <code>make</code> targets.</p>"},{"location":"developers/getting-started/#dsp-tools-and-rosetta","title":"DSP-TOOLS and Rosetta","text":"<p>DSP-TOOLS is a command line tool used for creating complex data models and uploading big data sets. Install it with</p> <pre><code>pip3 install dsp-tools\n</code></pre> <p>If DSP-API and DSP-APP are running on your machine, you can try out DSP-TOOLS with our test project Rosetta:</p> <pre><code>git clone https://github.com/dasch-swiss/082E-rosetta-scripts.git\ncd 082E-rosetta-scripts\ndsp-tools create rosetta.json\ndsp-tools xmlupload rosetta.xml\n</code></pre> <p>You can then look at the data in DSP-APP at http://0.0.0.0:4200/.</p> <p>If you want to actively work on DSP-TOOLS, you should clone the DSP-TOOLS repo separately and run it according to its own instructions.</p>"},{"location":"developers/introduction/","title":"Introduction to DSP-API","text":"<p>The main software framework in the back-end of the DaSCH Service Platform is called DSP-API (previously Knora). DSP-API is a content management system for the long-term preservation and reuse of humanities data. It is designed to accommodate data with a complex internal structure, including data that could be stored in relational databases.</p> <p>DSP-API aims to solve key problems in the long-term preservation and reuse of humanities data:</p> <ul> <li>Traditional archives preserve data, but do not facilitate reuse. Typically, only metadata can be searched, not the data itself. Downloading the data to check whether the data are interesting or not is time-consuming and makes it impractical to reuse data from many different sources. DSP-API solves this problem by keeping the data alive. You can query all the data in a DSP repository, not just the metadata. You can import thousands of databases into DSP-API, and run queries that search through all of them at once.</li> <li>Another problem is that researchers use a multitude of different data formats, many of which are proprietary and quickly become obsolete. It is not practical to maintain all the programs that were used to create and read old data files, or even all the operating systems that these programs ran on. Instead of preserving all these data formats, DSP-API supports the conversion of all sorts of data to a small number of formats that are suitable for long-term preservation, and that maintain the data\u2019s meaning and structure:</li> <li>Non-binary data is stored as Resource Description Framework (RDF), in a dedicated database called a triplestore. RDF is an open, vendor-independent standard that can express any data structure. For a concise information about RDF basics see here.</li> <li>Binary media files (images, audio, and video) are converted to a few specialised archival file formats and stored by the media server SIPI, with metadata stored in the triplestore. For a concise information about SIPI see here.</li> <li>Moreover, DSP-API has built-in support for special data structures that occur on a regular basis in humanities data: persistent links, calender-independent dates and flexible searchable text markup.</li> <li>Persistent links are a very important feature. If a resource is changed, a new resource will be created in DSP-API. The older version remains available and citable, there will be no dead links. This means that if in a publication an older version is referenced, the cited version still can be displayed, but there will be a notice that a newer version exists with the corresponding link attached to it.</li> <li>A date could be given in any kind of calendar - e.g. the Julian, Gregorian, Jewish or Islamic - just to name the most frequent ones. DSP-API stores dates using the Julian day count that was established by astronomers. Use of the Julian day count easily allows for conversion from one calendar into another and to calculate distances between two dates. It is possible to search for a date in one calendar and to convert it into another one.</li> <li>Commonly used text markup systems have troubles to cope with overlapping markup. DSP-API solves this problem by using Standoff/RDF markup where the markup is stored as RDF data, separately from the text. This enables overlapping markup. DSP-API\u2019s RDF-based standoff is designed to support the needs of complex digital critical editions. DSP-API can import any XML document (including TEI/XML) for storage as standoff/RDF, and can regenerate the original XML document at any time.</li> </ul> <p>The following table contains a non-exhaustive list of data formats and the information on how these formats are stored and managed by DSP-API (and SIPI):</p> Original format Format in DSP-API Text (XML, LaTEX, Word, etc.) DSP resources (RDF) containing Standoff/RDF Tabular data, including relational databases DSP resources Data in tree or graph structures DSP resources Images (jpg, png, tiff, etc.) JPEG 2000 files stored by SIPI Audio and video files format not decided yet, stored by SIPI pdf stored by SIPI, but data reuse is improved by extracting the text for storage as Standoff/RDF <p>DSP-API makes data available for reuse via its generic, standards-based Application Programming Interfaces (APIs). A Virtual Research Environment (VRE) can then use these APIs to search, link together, and add to data from different research projects in a unified way.</p> <p>The full DSP-API documentation can be found here.</p> <p></p>"},{"location":"developers/introduction/#layout-of-dasch-service-platform","title":"Layout of DaSCH Service Platform","text":"<p>The DaSCH Service Platform is a platform that includes five layers (see Figure 1). The bottom layer consists of an RDF triplestore, the IIIF-based media server SIPI, the <code>knora-base</code> ontology and any project specific ontologies that extend the base ontology. The second layer is occupied by the DSP-API which is a RESTful API, i.e. an application program interface that uses HTTP requests to GET, PUT, POST and DELETE data. The DSP API has an implemented access control. It returns information in JSON-LD format. In order to make the data accessible in an easy way, three more layers are built on top of the DSP API. The DSP-JS library comprises the third layer, it contains a reusable Node.js module for HTTP requests written in TypeScript. Layer four is occupied by DSP UI modules. These modules help to create a graphical user interface. They are developed with Angular and TypeScript and designed in such a way that they can be integrated to an Angular project. The top layer is made up of the generic DSP-APP and the more specific project Apps. From the top layer Gravsearch queries are sent to the DSP API, where permissions are checked and the queries translated into SPARQL queries, which are sent further down to the triplestore. The results are returned to the DSP-APP if the user has the sufficient permissions. In such a way, copyrighted material can be protected.</p> <p> Figure 1: DaSCH Service Platform architecture.</p> <p>The generic web app DSP-APP itself consists of three different parts (see Figure 2). First, there is the project administration part where you can manage your project - build your data model, set permissions, add users, etc. Then, there is a cross-project research platform where you search (full text, advanced or expert search), add or modify your data - this is your working environment. The third component is the Manifest+ viewer wich is designed for project presentation. Alternatively, it is possible to build more elaborate project-specific Apps based on the provided DSP-API modules in the different layers. However, it's up to you to keep such project-specific Apps compatible with the latest DSP API version.</p> <p> Figure 2: Details of DSP-APP.</p> <p>Currently, the following programming languages, software and formats are used for the various components:</p> Component Software and formats RDF triplestore Apache Jena Fuseki Ontologies <code>knora-base</code> ontology and derived project ontologies SIPI C++, Lua, API-format: JSON DSP API Scala, API-formats: JSON-LD, RDF/XML or Turtle DSP-JS TypeScript, communication with DSP-API DSP-UI modules Angular modules, TypeScript, uses DSP-JS DSP-APP Angular, TypeScript, uses DSP-UI modules and DSP-JS <p></p>"},{"location":"developers/introduction/#the-knora-base-ontology","title":"The knora-base ontology","text":"<p>DSP-API has a base ontology, i.e. a data model, with pre-defined basic data types. In addition to this base ontology, each project can create its own data model which is capable to describe the types of items it wishes to store. Project specific ontologies must be extensions of the <code>knora-base</code> ontology.</p> <p>The <code>knora-base</code> ontology is identified by the IRI <code>http://www.knora.org/ontology/knora-base</code>. In our documents it will be identified by the prefix <code>knora-base</code> or simply <code>kb</code>. TODO: add link to <code>knora-base</code> doc.</p> <p></p>"},{"location":"developers/introduction/#standoffrdf-text-markup","title":"Standoff/RDF Text Markup","text":"<p>Standoff markup is text markup that is stored separately from the content it describes. DSP-API\u2019s Standoff/RDF markup stores content as a simple Unicode string, and represents markup separately as RDF data. By storing markup as RDF, DSP-API can search for markup structures in the same way as for any RDF data structure. This enables searches that combine text-related criteria with other sorts of criteria. For example, if persons and events are represented as DSP resources, and texts are represented in Standoff/RDF, a text can contain tags representing links to persons or events. One could then search for a text that mentions a person who lived in the same city as another person who is the author of a text that mentions an event that occurred during a certain period of time.</p> <p>In DSP-API\u2019s Standoff/RDF, a tag is an RDF entity that is linked to a text value. Each tag points to a substring of the text, but has its own semantic properties. It is possible to define own tag classes in the ontology by creating subclasses of the already defined <code>kb:StandoffTag</code>, and to attach own properties to them.</p> <pre><code>###  http://www.knora.org/ontology/knora-base#StandoffLinkTag\n\nkb:StandoffLinkTag rdf:type owl:Class ;\n\n              rdfs:subClassOf kb:StandoffTag ,\n                              [ rdf:type owl:Restriction ;\n                                owl:onProperty kb:standoffTagHasLink ;\n                                owl:cardinality \"1\"^^xsd:nonNegativeInteger\n                              ] ;\n\n              rdfs:comment \"Represents a reference to a Knora resource in a TextValue\"@en .\n</code></pre> <p>DSP-API supports automatic conversion between XML and Standoff/RDF. This can be achieved by Standoff/RDF storing the order of tags and their hierarchical relationships. Then, an XML-to-Standoff Mapping for the standoff tag classes and properties has to be defined. The mapping is written in XML. Afterwards, an XML document can be imported into DSP-API, which will store it in Standoff/RDF format. The following example shows a possible mapping for a knoraDate:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;mapping&gt;\n     &lt;mappingElement&gt;\n        &lt;tag&gt;\n            &lt;name&gt;text&lt;/name&gt;\n            &lt;class&gt;noClass&lt;/class&gt;\n            &lt;namespace&gt;noNamespace&lt;/namespace&gt;\n            &lt;separatesWords&gt;false&lt;/separatesWords&gt;\n        &lt;/tag&gt;\n        &lt;standoffClass&gt;\n            &lt;classIri&gt;http://www.knora.org/ontology/standoff#StandoffRootTag&lt;/classIri&gt;\n        &lt;/standoffClass&gt;\n    &lt;/mappingElement&gt;\n\n    &lt;mappingElement&gt;\n        &lt;tag&gt;\n            &lt;name&gt;mydate&lt;/name&gt;\n            &lt;class&gt;noClass&lt;/class&gt;\n            &lt;namespace&gt;noNamespace&lt;/namespace&gt;\n            &lt;separatesWords&gt;false&lt;/separatesWords&gt;\n        &lt;/tag&gt;\n        &lt;standoffClass&gt;\n            &lt;classIri&gt;http://www.knora.org/ontology/0001/anything#StandoffEventTag&lt;/classIri&gt;\n            &lt;attributes&gt;\n                &lt;attribute&gt;\n                    &lt;attributeName&gt;description&lt;/attributeName&gt;\n                    &lt;namespace&gt;noNamespace&lt;/namespace&gt;\n                    &lt;propertyIri&gt;http://www.knora.org/ontology/0001/anything#standoffEventTagHasDescription&lt;/propertyIri&gt;\n                &lt;/attribute&gt;\n            &lt;/attributes&gt;\n            &lt;datatype&gt;\n                &lt;type&gt;http://www.knora.org/ontology/knora-base#StandoffDateTag&lt;/type&gt;\n                &lt;attributeName&gt;knoraDate&lt;/attributeName&gt;\n            &lt;/datatype&gt;\n        &lt;/standoffClass&gt;\n    &lt;/mappingElement&gt;\n&lt;/mapping&gt;\n</code></pre> <p>Once the mapping has been created, an XML like the following could be sent to DSP-API and converted to standoff:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;text&gt;\n    We had a party on &lt;mydate description=\"new year\" knoraDate=\"GREGORIAN:2016-12-31\"&gt;New Year's Eve&lt;/mydate&gt;. It was a lot of fun.\n&lt;/text&gt;\n</code></pre> <p>The text and markup can then be searched using the search language Gravsearch (TODO: add link). When the document is retrieved, DSP-API converts it back to the original XML.</p>"},{"location":"developers/introduction/#using-gravsearch-for-searches","title":"Using Gravsearch for searches","text":"<p>DSP-API provides a search language called Gravsearch that is based on the SPARQL language. Gravsearch supports DSP\u2019s humanites-focused data structures, including calendar-independent dates and standoff markup, as well as fast full-text searches. This allows for combining text-related criteria with any other criteria in searches. TODO: add link to Gravsearch doc.</p>"},{"location":"developers/libraries/","title":"Libraries","text":""},{"location":"developers/libraries/#dsp-js","title":"DSP-JS","text":"<p>DSP-JS is a library to facilitate the communication with DSP-API in web clients developed with TypeScript/JavaScript. It depends on RxJS and is web framework agnostic (it can be used with Angular, React, Vue.js etc.).</p> <p>\u2192 Go to the DSP-JS documentation</p>"},{"location":"developers/rdf/","title":"Resource Description Framework (RDF) basics","text":"<p>The Resource Description Framework (RDF) is the basic representation language and foundation of the Semantic Web. It addresses the fundamental issue of managing distributed data. All things in the world are referred to as resources. Resources can be anything: documents, people, physical objects as well as abstract concepts. The Resource Description Framework (RDF) is the framework for expressing information about such resources. It is useful if information on the Web is not only displayed, but needs to be processed by applications. </p> <p>The following introduction to RDF draws heavily on the book of Dean Allemang &amp; James Hendler, Semantic Web for the Working Ontologist. Effective Modeling in RDFS and OWL, Second Edition, 2011, 27\u201350 which we warmly recommend for reading. Further information can be found in the RDF 1.1 Primer.</p> <p></p>"},{"location":"developers/rdf/#a-note-about-the-examples-in-this-document","title":"A note about the examples in this document","text":"<p>It was aimed for to explain all following language features by using only one exemplary project. The setting of the chosen project is the following: It is about archaeological objects stemming from different findspots - known and unknown - and kept in different institutions around the world today. These objects show depictions of mythological scenes that illustrate episodes known from ancient literature, e.g. the Iliad or the Odyssey of Homer, or reflect thoughts of various ancient philosophers about the nature of our world and all creatures living therein. For some of these objects other data and documents exist on the Web, e.g. entries in museum databases, and we may possess low or high resolution images of them. Furthermore, the findspots - if known - can be identified unambigously by reference to geographical databases, e.g. GeoNames. </p> <p></p> <p>If data are available in tabular form, the rows represent the items we intend to describe and each column represents some property of these items. The cells in the table then denote particular values for these properties. Table 1 shows a small excerpt of such a table from our exemplary project.</p> ID Category City Institution InventoryNr. 1 Ceramics Boston Museum of Fine Arts 28.46 2 Glyptics London British Museum 2717 3 Relief New York Metropolitan Museum 24.97.11 <p>In RDF, each of these cells has to be represented with three values which are called triples: a global reference for the row, a global reference for the column, and the value in the cell itself. The identifier for the row is the subject of the triple, the identifier for the column the predicate of the triple, and the value in the cell the object of the triple. </p> <p>There are three types of RDF data that can occur in triples: International Resource Identifiers (IRIs) / Universal Resource Identifiers (URIs), literals and blank nodes.</p> <p>A triple now describes the relationship between two resources which are the subject and the object of the triple. The predicate represents the nature of the relationship between subject and object. The relationship is directional - the predicate always points from the subject to the object - and is called a property. </p> <p>Table 2 shows all the triples of the data in Table 1. |Subject|Predicate|Object| |-----|:----:|---| |ID 1|belongsToCategory|Ceramics| |ID 1|todayIn|Boston| |ID 1|isKeptIn|Museum of Fine Arts| |ID 1|hasInventory|28.46| |ID 2|belongsToCategory|Glyptics| |ID 2|todayIn|London| |ID 2|isKeptIn|British Museum| |ID 2|hasInventory|2717| |ID 3|belongsToCategory|Relief| |ID 3|todayIn|New York| |ID 3|isKeptIn|Metropolitan Museum| |ID 3|hasInventory|24.97.11|</p> <p>Often, the same resource, e.g. a person, is referenced in multiple triples. When more than one triple refers to the same thing, it is more useful to view the triples in a directed graph where each triple is depicted by nodes and arcs: the subjects and objects of the triples are the nodes while the predicates denote the arcs with the predicate as label on the arc:</p> <p></p> <p>Furthermore, if the subject or object is a URI/IRI or a blank node, it is depicted within an ellipse, if it is a literal value, however, within a rectangle. </p> <p>The graph display of the triples in Table 2 then looks as follows: </p> <p>Let's assume we possess the information in Table 3 from another source which we intend to merge with our data presented in Table 1. |Work|Author|Depiction| |-----|:----:|---| |Iliad|Homer|24.97.11| |Odyssey|Homer|24.97.11| This provides us with the following triples in Table 4: |Subject|Predicate|Object| |-----|:----:|---| |Iliad|hasAuthor|Homer| |Odyssey|hasAuthor|Homer| |Iliad|hasDepictionOn|24.97.11| |Odyssey|hasDepictionOn|24.97.11| The graph display of the triples in Table 2 concerning ID 3 and of the triples in Table 4 looks as follows:  Since we now look at one specific example, namely \"ID 3\", all the values are literals and hence depicted in yellow rectangles.</p> <p></p>"},{"location":"developers/rdf/#namespaces-uniform-resource-identifiers-uris-and-international-resource-identifiers-iris","title":"Namespaces, Uniform Resource Identifiers (URIs) and International Resource Identifiers (IRIs)","text":"<p>If we intend to merge information from different sources, an essential question is whether a node in one graph is the same node as a node in another graph. RDF solves this issue through use of Uniform Resource Identifiers (URIs) or International Resource Identifiers (IRIs). Our well known web addresses, the URLs, are just a special case of URIs and IRIs. An International Resource Identifier is the internationalised form of a URI. IRIs extend the allowed characters in URIs from a subset of the ASCII character set to almost all characters of the Universal Code Character Set (Unicode / ISO 10646). </p> <p>The syntax of the URI/IRI allows to deference it, i.e. to use all the information in the URI/IRI such as server name, protocol, port number, file name etc. to locate a file or a location on the Web. The possibility of dereferencing enables participation in a global Web infrastructure.</p> <p>URIs and IRIs are painful to write out in detail when expressing models. Hence, it is common to use an abbreviation scheme. Then a URI/IRI has two parts: a namespace and an identifier with a colon in between. The representation for the identifier United Kingdom in the namespace geonames is <code>geonames:UnitedKingdom</code>.</p> <p>URIs/IRIs may not contain embedded spaces. Hence, the so-called InterCap convention is followed: names that consist of multiple words are transformed to identifiers without spaces by capitalizing each word: \"part of\" becomes <code>partOf</code>, \"Measure for Measure\" <code>MeasureForMeasure</code>, and so on. The selection of namespaces is unrestricted. However, it is common practice to refer to related identifiers in a single namespace. Following the above example all geographical information would be placed into the suggestive namespace geonames. These names correspond to fully qualified URIs - geonames stands for material in the geographical database GeoNames. </p> <p>Using URIs/IRIs as standard for global identifiers enables for a worldwide reference and thus, two peolpe anywhere in the world to refer to the same thing unequivocally. This property allows for specifying certain terms by a standard organization such as W3C. W3C standards provide definitions for terms such as e.g. <code>type</code>, <code>Class</code>, <code>subClassOf</code> which are intended to apply globally across the Semantic Web.</p> <p>W3C has defined a number of standard namespaces for use with Web technologies. The most important are: * <code>xsd:</code> Indicates identifiers for XML schema definition. The global IRI for the xsd namespace is http://www.w3.org/2001/XMLSchema#. * <code>xslns:</code>  Indicates identifiers for XML namespaces. The global IRI for the xslns namespace is https://www.w3.org/XML/1998/namespace. * <code>rdf:</code> Indicates identifiers used in RDF. The global IRI for the rdf namespace is http://www.w3.org/1999/02/22-rdf-syntax-ns#. * <code>rdfs:</code> Indicates identifiers used for the RDF Schema language (RDFS). The global IRI for the rdfs namespace is http://www.w3.org/2000/01/rdf-schema#. * <code>owl:</code> Indicates identifiers used for the Web Ontology Language (OWL). The global IRI for the owl namespace is http://www.w3.org/2002/07/owl#.</p> <p>Any URI in one of these namespaces - e.g. <code>rdfs:subClassOf</code> which is short for http://www.w3.org/2000/01/rdf-schema#subClassOf - refers to a particular term defined in the RDFS standard by the W3C. The term can also be dereferenced: at the server www.w3.org there is a page at the location <code>2000/01/rdf-schema</code> with an entry about <code>rdfs:subClassOf</code> which gives additional information about this resource.</p> <p></p>"},{"location":"developers/rdf/#literals","title":"Literals","text":"<p>Literals are values that are not URIs/IRIs. They may be simple strings such as \"Homer\", dates such as \"April 30th, 700 BCE\", numbers such as \"2.71828\". They are often associated with one of the following datatypes (list non-exhaustive): * boolean with value true or false * string with value character string * decimal with an arbitrary-precision decimal number as value * integer with an arbitrary-precision integer number as value * date with value in format yyyy-mm-dd</p> <p>Literals may only appear as object of a triple.</p> <p></p>"},{"location":"developers/rdf/#identifiers-in-the-rdf-namespace","title":"Identifiers in the RDF namespace","text":"<p>The RDF data model specifies the notion of triples and the merging of sets of triples. With the introduction of namespaces RDF provides agreements on how to refer to a particular entity. The RDF standard defines a small number of standard identifiers in the namespace rdf.</p> <ul> <li> <p><code>rdf:type</code> is a property that provides an elementary system in RDF to define types. <code>rdf:type</code> can be the predicate of a triple, the subject of the triple can be any identifier and the object of the triple is understood to be a type. <code>rdf:type</code> can be used to e.g. state, that Homers works belong to a group of literary works we call Poetry:</p> Subject Predicate Object Iliad rdf:type Poetry Odyssey rdf:type Poetry </li> <li> <p><code>rdf:Property</code> is an identifier to indicate when another identifier is to be used as a predicate rather than as subject or object. Some triples from our examples in Table 2 and Table 4 can be expressed with <code>rdf:Property</code> in the following way:</p> Subject Predicate Object wrote rdf:type rdf:Property isKeptIn rdf:type rdf:Property hasDepictionOn rdf:type rdf:Property </li> </ul> <p></p>"},{"location":"developers/rdf/#reification","title":"Reification","text":"<p>The strict subject - predicate - object form of RDF triples is limiting if one wants to qualify a statement further, if a statement about another statement seems desireable. We may wish to express that our object with ID 3 in Table 1 was bought by the Metropolitan Museum in 1924. Such a process of a statement about a statement is called reification. Reification can be achieved by different approaches. The easiest approach is to add just further triples expressing the desired relationship. </p> <p><pre><code>myonto:ID3 myonto:todayIn \"New York\" .\nmyonto:ID3 myonto:keptIn \"Metropolitan Museum\" .\nmyonto:ID3 myonto:hasAccessionDate 1924 .\n</code></pre> The namespace myonto is used in the above example to express that the statements concern resources and properties which are defined in our own namespace. In contrast, otheronto will be used in following examples to express that an external not further defined namespace is referred to.</p> <p>The simple approach shown above works well if more information about some event or statement needs to be specified. However, it doesn't work well in cases when information about the statement itself shall be expressed: We may wish to express that the information that on our object with ID 3 in Table 1 scenes from the Iliad are depicted (information contained in Table 3) stems from the catalogue entry of this object in the online collection of the Metropolitan Museum. Such metadata about statements are often related with provenance indications, likelihood expressions, context information or time spans. In such cases it is necessary to explicitly make a statement about a statement. This process, called explicit reification is supported by the RDF standard with three resources called <code>rdf:subject</code>, <code>rdf:predicate</code> and <code>rdf:object</code>. With the following set of triples we can express that in the online collection of the Metropolitan Museum is written that ID 3 contains a depiction of scenes from the Iliad:  <pre><code>myonto:n1 rdf:subject myonto:Iliad ;\n          rdf:predicate myonto:hasDepictionOn ;\n          rdf:object myonto:ID 3 .\nweb:MetropolitanMuseum myonto:says myonto:n1 .\n</code></pre></p> <p></p>"},{"location":"developers/rdf/#expressing-rdf-in-textual-form-turtle","title":"Expressing RDF in textual form: Turtle","text":"<p>When data are published in RDF on the Web the issue of representing RDF in text arises. There are multiple ways of achieving this. We are using a compact serialization of RDF which is called Turtle. It uses pre-defined shortcuts or namespaces. Since a binding between the local used namespaces and the global URIs/IRIs have to be achieved, Turtle begins with a preamble in which these bindings are defined: <pre><code>@prefix myonto: http://www.myontology\n@prefix rdf: http://www.w3.org/1999/02/22-rdf-syntax-ns# \n</code></pre> With these abbreviations the triples can be expressed in subject/predicate/object order followed by a period. <pre><code>myonto:HomerWorks rdf:type myonto:Poetry .\n</code></pre> This statement expresses that Homer's literary works belong to the category of poetry.</p> <p>If several triples share a common subject it need not be repeated each time. Instead of terminating the first triple with a period, a semicolon (;) is used to indicate that another triple with the same subject follows.  <pre><code>myonto:Homer rdf:type myonto:Author ;\n             myonto:wrote \"Iliad\" .\n</code></pre> This statement expresses that in my ontology named myonto Homer is part of my class Author and that he wrote the Iliad.</p> <p>If there are several triples that share both subject and predicate, a comma (,) is used to separate the objects. E.g. to express, that Homer wrote both the Iliad and the Odyssey, I can use the following statement: <pre><code>myonto:Homer myonto:wrote myonto:Iliad, myonto:Odyssey .\n</code></pre></p> <p>To improve terseness and readability Turtle provides some abbreviations. The most widley used abbreviation is the word a to mean <code>rdf:type</code>. Thus, the following two triples are equivalent, both telling that the class Ceramics in my ontology is part of a larger class called Category: <pre><code>myonto:Ceramics rdf:type myonto:Category .\nmyonto:Ceramics a myonto:Category .\n</code></pre> </p>"},{"location":"developers/rdf/#blank-nodes","title":"Blank nodes","text":"<p>Sometimes we are aware of that something exists, that we know some things about it, but its identity is unknown. We want to express what we know about this resource without bothering to use a global identifier. Such a resource without a global identifier can be represented by a blank node. Blank nodes are comparable to the unknown variables x or y in an equation - they represent something without saying what their value is. Blank nodes can be the subject and/or the object of a triple. Within the framework of our example of archaeological objects showing depictions of Homeric poetry which are held by different institutions, the exact provenience of some objects may be unknown since they stem from illicit excavations and were bought on the antiquities market many years ago. Nevertheless, we know that each object possesses a provenience.  </p> <p>A blank node is indicated by square brackets ([]). All triples of which it is a subject are placed within these brackets. The information that if an object was bought on the antiquities market no detail information about its find context is available can be put inside a blank node: <pre><code> [ rdf:type myonto:Market ;\n   myonto:noInfo myonto:FindContext ]\n</code></pre></p> <p>Such a blank node can then be referred to in other triples by including the entire bracketed sequence in place of the blank node. The following example expresses that all my objects which belong to the class UnprovenancedObj in my ontology myonto were bought on the antiquities market and for them I have no detail information about their find contexts available:  <pre><code>myonto:UnprovenancedObj myonto:isPartOf \n    [ rdf:type myonto:Market ;\n      myonto:noInfo myonto:FindContext ]\n</code></pre> </p>"},{"location":"developers/rdf/#ordered-information-in-rdf","title":"Ordered information in RDF","text":"<p>Ordering of RDF triples has to be specified explicitly: elements can be ordered in a list format. In Turtle an ordered list can be expressed by putting a sequence of objects within brackets (()). If we want to express that the king of Mykene, Agamemnon, was the father of four children, Iphigeneia being the oldest and Orestes being the youngest, we can express that in the following way: <pre><code>Agamemnon myonto:isFatherOf (Iphigeneia,\n                             Elektra, \n                             Chrysothemis, \n                             Orestes) .\n</code></pre></p> <p></p>"},{"location":"developers/rdf/#rdf-schema-rdfs","title":"RDF Schema (RDFS)","text":"<p>RDF simply creates a graph structure to represent data. The RDF Schema (RDFS) is a semantic extension of RDF wich provides some guidelines about how to use this graph structure, i.e. it imposes special syntactic conditions or restrictions upon RDF graphs. The schema is informaton about the data. It should help to provide meaning to the data. Thus, it is a layer on top of the RDF layer to describe consistency constraints in the data. The key to these levels is inferencing. The statements of meaning are given in the form of an inference pattern: \"Given some initial information, the following new information can be derived.\" That's the way the RDF Schema language (RDFS) and also the Web Ontology Language (OWL) work. All schema information in RDFS is expressed by RDF triples. The meaning of asserted triples is defined with new inferred triples. The structures that describe the meaning of the data are also in triples. </p> <p>The following introduction to RDF Schema draws heavily on the book of Dean Allemang &amp; James Hendler, Semantic Web for the Working Ontologist. Effective Modeling in RDFS and OWL, Second Edition, 2011, 113\u2013152 which we warmly recommend for reading. Further information can be found in the Recommendations of RDF Schema 1.1.</p> <p></p>"},{"location":"developers/rdf/#asserted-triples-and-inferred-triples","title":"Asserted triples and inferred triples","text":"<p>Asserted triples are triple data that were explicitly added in the original RDF store. Inferred triples are additional triples that are inferred by one of the inference rules. There is no logical distinction between inferred and asserted triples. Hence, one should be careful concerning inference rules and how to implement them. The RDFS and OWL standards define for certain patterns of triples which inferences are valid.</p> <p>The simplest approach is to store all triples in a single store and to ignore whether they are asserted or inferred. This approach is called cached inferencing since all inferences are stored with the data. It is simple, but the number of triples in the triple store increases and some inferred triples may later turn out to be incorrect und unwarranted. The other extreme is to never actually store any inferred triples in any persistent store. Then, inferencing is done in response to queries only. This approach can be called just in time inferencing, since the inferences are made just in time. The query responses are produced such that they respect all the appropriate inferences, but no inferred triple is retained. Both approaches have an important impact if data sources change, i.e. if a triple is deleted or a new triple added. If cached inferencing was chosen, originally inferred triples which are no longer valid must be identified and removed or new ones added. An important variant of just in time inferencing is where explicit inferencing is undesired.</p> <p>What kind of inferencing is needed depends on the required level of expressivity for a certain task. There are different inferencing levels. RDFS operates on a small number of inference rules that deal mostly with relating classes to subclasses and properties to classes. OWL includes constraints on properties and notions of equality and includes rules for describing classes based on allowed values for properties. All these standards use inferencing, but they differ in the inferencing that they support.</p> <p></p>"},{"location":"developers/rdf/#classes","title":"Classes","text":"<p>Resources can be grouped in classes which are themselves resources. The members of such a class are known as instances of the class. Classes are often identified by URIs/IRIs. All RDF datatypes are classes. The instances of a class that is a datatype are the members of the value space of the datatype. Thus, \"3.14\" is an instance of the class decimal, \"4\" is an instance of the class integer, \"2000-01-01\" is an instance of the class date, etc.</p> <p>The basic construct for specifying a group of related resources in RDFS is called an <code>rdfs:Class</code>. The way to express that something is a class is with a triple in which the predicate is <code>rdf:type</code> and the object is <code>rdfs:Class</code> as in the following examples:  <pre><code>myonto:Ceramics rdf:type rdfs:Class .\nmyonto:BlackFigured rdf:type rdfs:Class .\n</code></pre> These triples express that our resources <code>Ceramics</code> and <code>BlackFigured</code> are classes.</p> <p>One of the basic terms is <code>rdfs:subClassOf</code>. The meaning of \"B is a <code>subClassOf</code> C\" is \"every member of class B is also a member of class C\", expressed in the form of an inference. From a further information \"x is a member of B\" one can derive the new information \"x is a member of C\". Speaking more generally, if a class A is a subclass of another class B, then anything of type A is also of type B. This is called the type propagation rule. This feature of inference systems is particulary useful in a Semantic Web context in which new combinations of relationships likely occur as data from multiple sources are merged. In the framework of our example the class <code>BlackFigured</code> is a subclass of the class <code>Ceramics</code>. For any member of the class <code>BlackFigured</code> we can then derive that it is also a member of the class <code>Ceramics</code>due to the following statement : <pre><code>myonto:BlackFigured rdfs:subClassOf myonto:Ceramics .\n</code></pre>  A class may be a member of its own class extension and an instance of itself, this applies e.g. for <code>rdfs:Class</code>. </p> <p></p>"},{"location":"developers/rdf/#properties","title":"Properties","text":"<p>An RDF property describes the relationship between a subject resource and an object resource. </p>"},{"location":"developers/rdf/#properties-with-inferences","title":"Properties with inferences","text":"<p>One of the most fundemantal terms in RDFS is <code>rdfs:subPropertyOf</code>. It is a transitive property and allows a modeler to describe a hierarchy of related properties. If we want to express that some of the people who work for a museum are permanently employed while others possess only loose contracts we could express this fact with the following triples: <pre><code>myonto:isEmployedBy rdfs:subPropertyOf myonto:worksFor .\nmyonto:contractsTo rdfs:subPropertyOf myonto:worksFor .\n</code></pre> Regardless whether a person is employed by the museum or is a contractor, the person works for the museum.</p> <p>Other basic properties are <code>rdfs:range</code> and <code>rdfs:domain</code>. They have meanings inspired by the mathematical use of the words range and domain: the domain of a function is the set of values for which it is defined, its range is the set of values it can take. Both give informaton about how a property <code>P</code> is to be used: <code>domain</code> refers to the subject of any triple that uses <code>P</code> as its predicate, <code>range</code> refers to the object of any such triple.</p>"},{"location":"developers/rdf/#rdfsdomain","title":"<code>rdfs:domain</code>","text":"<p><pre><code>P rdfs:domain D .\n</code></pre> means that property <code>P</code> has domain <code>D</code>. From this we can infer that the subject of that triple is a member of the class <code>D</code>. <code>rdfs:domain</code> can be used to specify with which class the defined property can be used with. It is possible to specify multiple <code>rdfs:domain</code> properties when defining a property. We pick just two classes from our example - <code>Ceramics</code> and <code>BlackFigured</code> - which show a subclass relation:  <pre><code>myonto:BlackFigured rdfs:subClassOf myonto:Ceramics .\n</code></pre> We now have a property called <code>incised</code> whose domain is <code>BlackFigured</code>. <pre><code>myonto:incised rdfs:domain myonto:BlackFigured .\n</code></pre> This means that all my objects with incised decoration belong to the class <code>BlackFigured</code>.</p>"},{"location":"developers/rdf/#rdfsrange","title":"<code>rdfs:range</code>","text":"<p><pre><code>P rdfs:range R .\n</code></pre> means that the property <code>P</code> has range <code>R</code>. From this we can infer that the object (the value of <code>P</code>) of that triple is a member of class <code>R</code>. If the predicate of a triple has more than one <code>rdfs:range</code> property, the resources denoted by the objects of triples are instances of all the classes stated by the <code>rdfs:range</code> properties. If we want to specify that queens who gave birth to a son could theoretically become queen mothers, we could do that with the following combination of  <code>rdfs:domain</code> and <code>rdfs:range</code>: <pre><code>myonto:hasSon rdfs:domain myonto:Queen .\nmyonto:hasSon rdfs:range myonto:QueenMother .\n</code></pre></p> <p>It is important to know that if <code>P</code> is used in an inconsistent way with this declaration, RDFS does not signal an error, but rather infers the necessary type information to bring <code>P</code> into accordance with its domain and range declarations! In RDFS, there is no notion of an incorrect or inconsistent inference, i.e. it will never proclaim an input as invalid but simply infer appropriate type information. Domains and ranges are not used to validate information, but to determine new information based on old information. In practice, there are often better and more appropriate options to use instead of <code>rdfs:domain</code> and <code>rdfs:range</code> alone.</p> <p></p>"},{"location":"developers/rdf/#properties-without-inferences","title":"Properties without inferences","text":"<p>RDFS provides some properties from which no inferences can be drawn, i.e. no inference semantics is defined for them. They are useful and important for documentation purposes. These are <code>rdfs:label</code>, <code>rdfs:comment</code>, <code>rdfs:seeAlso</code> and <code>rdfs:isDefinedBy</code>.</p> <p>Resources on the Semantic Web are specified by IRIs/URIs which are not meaningful to people. Thus, RDFS provides the property <code>rdfs:label</code> whose intended use is to provide a human-readable version for any resource's name. Multilingual labels are possible if the language tagging facility of RDF literals is used.  <pre><code>myonto:BlackFigured rdfs:label \n                \"black-figured vessels\"@en, \n                \"schwarzfigurige Gef\u00e4sse\"@de .\n</code></pre> Frequently it is useful to add comments about a model, i.e. to document it properly. In RDFS, <code>rdfs:comment</code> is an instance of <code>rdf:Property</code> that can be used to provide a human-readable description of a resource. Multilingual documentation is possible if the language tagging facility of RDF literals is used. To make a comment a triple using the property <code>rdfs:comment</code> as a predicate has to be asserted.  <pre><code>myonto:BlackFigured rdfs:comment \"The class BlackFigured contains ceramic vessels where the decoration is painted with black paint.\" .\n</code></pre> In the case where a resource is an URL, supplementary information about this resource may be useful. This additional information is often included in documents. <code>rdfs:seeAlso</code> provides a way to specify the web location of such supplementary information. The web location has to be given in the form of an IRI/URI! The precise behaviour of a processor is not specified, but most tools that encounter <code>rdfs:seeAlso</code> link them to those links in a browser or application interface. In our example we could link findspots of archaeological objects to a web resource with geodata, e.g. GeoNames, in the following way: <pre><code>myonto:latitude rdfs:seeAlso geonames:lat .\n</code></pre> <code>rdfs:isDefinedby</code> provides a link to the primary resource of information about a resource. Thus, the definitional description of a resource can be found, e.g. <code>rdfs:isDefinedBy</code> is defined in RDF to be a <code>rdfs:subPropertyOf</code> of <code>rdfs:seeAlso</code>.</p> <p></p>"},{"location":"developers/rdf/#combinations-and-patterns","title":"Combinations and patterns","text":""},{"location":"developers/rdf/#intersection","title":"Intersection","text":"<p>RDFS inference rules are few and rather simple. More specific patterns can be obtained by combining basic RDFS features. One such case is set intersection. If we intend to draw the inference that if a resource <code>x</code> is an instance of class <code>C</code>, then it should also be an instance of classes <code>A</code> and <code>B</code>, expressing the formal relationship <code>C</code> \u2286 <code>A</code> \u2229 <code>B</code>. Such an inference can be obtained by making <code>C</code> a subclass of <code>A</code> and <code>B</code>: <pre><code>:C rdfs:subClassOf :A .\n:C rdfs:subClassOf :B .\n</code></pre> Due to the inference rule defined for <code>rdfs:subClassOf</code> we can infer from the triple <pre><code>x rdf:type :C .\n</code></pre> the desired triples <pre><code>x rdf:type :A .\nx rdf:type :B .\n</code></pre> Thus, from a membership in <code>C</code> membership in <code>A</code> and <code>B</code> can be inferred. But from membership in <code>A</code> and <code>B</code> membership in <code>C</code> cannot be inferred! Inferences can only be drawn in one direction.</p> <p>In an analogous way to the treatment of classes, set intersection can be defined for properties using the construct <code>rdfs:subPropertyOf</code>.</p>"},{"location":"developers/rdf/#union","title":"Union","text":"<p>The union of two sets (<code>A</code> \u222a <code>B</code> \u2286 <code>C</code>) can be obtained by making <code>C</code> a superclass of <code>A</code> and <code>B</code>.  <pre><code>:A rdfs:subClassOf :C .\n:B rdfs:subClassOf :C .\n</code></pre> Then, for any instance <code>x</code> that is either a member of class <code>A</code> or of <code>B</code> it will be inferred that it is also a member of class <code>C</code>.</p> <p>In an analogous way to the treatment of classes, set union can be defined for properties using <code>rdfs:subPropertyOf</code>.</p> <p></p>"},{"location":"developers/rdf/#collections","title":"Collections","text":"<p>A collection is represented as a list of items. <code>rdf:List</code> is an instance of <code>rdfs:Class</code> that can be used to build descriptions of lists and other list-like structures.</p> <p></p>"},{"location":"developers/rdf/#summary","title":"Summary","text":"<p>The following Figure 4 illustrates the concepts of resource, class, and sub-class based on our example project.  </p> <p>Figure 5 shows the same in a more general way: resources are denoted by a large black dot and arrows are drawn from a resource to the class it defines. A sub-class is shown by a rectangle (the sub-class) completely enclosed by another (the super-class), i.e. class ConstraintProperty is a subclass of class Property. The notion <code>rdf:type</code> specifies that something is a member of a group, i.e. an instance of a class. By using <code>rdfs:Class</code> instead of <code>rdf:type</code> a description of the meaning of a membership in a group is gained. Meaning is expressed through the mechanisms of inference in RDFS that can be drawn when a resource is used in a certain way.</p> <p></p> <p>The following Figure 6 expresses the same information about the class hierarchy, but does so using a graphic representation of the RDF data model. If a class is a subset of another, there is an arc labelled \"s\" from the node representing the first class to the node representing the second one (\"s\" stands for <code>rdfs:subClassOf</code>). If a resource was an instance of a class, then there is an arc labelled \"t\" from the resource to the node representing the class (\"t\" stands for <code>rdf:type</code>). Not all arcs are drawn, e.g. <code>rdfs:ConstraintProperty</code> is a subclass of <code>rdfs:Resource</code> because it is a subclass of <code>rdf:Property</code> which is a subclass of <code>rdfs:Resource</code>.</p> <p></p> <p>Examples:  - The class <code>rdfs:Literal</code> is an instance of <code>rdfs:Class</code> and an instance of <code>rdfs:Resource</code>.  - The class <code>rdf:Property</code> is the class of RDF properties and an instance of <code>rdfs:Class</code>.</p> <p></p>"},{"location":"developers/rdf/#web-ontology-language-owl","title":"Web Ontology Language (OWL)","text":"<p>OWL is intended to be used when information contained in documents needs to be processed by applications, it explicitly represents the meaning of terms in vocabularies and the relationship between those terms. The representation of terms and their interrelationships are called an ontology. A concrete syntax is needed in order to store ontologies and to exchange them among tools and applications. The primary exchange syntax for OWL is the XML syntax for RDF (RDF/XML), but other syntaxes such as e.g. Turtle are also frequently used. The data described by an OWL ontology is interpreted as a set of \"individuals\" and a set of \"property assertions\" which relate these individuals to each other. An ontology consists of a set of axioms which place constraints on sets of individuals called \"classes\" and the types of relationships permitted between them. OWL ontologies can import other ontologies, adding information from the imported ontology to the current ontology.</p> <p>The main building blocks of the OWL language are an RDF graph and at least one concrete syntax - there may be more than one - that can be used to serialize and exchange ontologies. </p> <p>OWL has been designed to meet the needs for a Web Ontology Language. It is part of the W3C recommendations related to the Semantic Web: - XML provides a surface syntax for structured documents, but imposes no semantic constraints. - XML Schema is a language for restricting the structure of XML documents and extends XML with datatypes. - RDF is a datamodel for objects and relations between them. Furthermore, it provides a simple semantics for this datamodel and these datamodels can be represented in an XML syntax. - RDF Schema is a vocabulary for describing properties and classes of RDF resources, with a semantics for generalization-hierarchies of such properties and classes. - OWL then adds more vocabulary to RDF for describing properties and classes: e.g. relations between classes, cardinality, equality, characteristics of properties and enumerated classes.</p> <p>The following introduction to OWL draws heavily on the book of Dean Allemang &amp; James Hendler, Semantic Web for the Working Ontologist. Effective Modeling in RDFS and OWL, Second Edition, 2011, 153\u2013305 which we warmly recommend for reading. Further information can be found in the Recommendations of the OWL 2 Web Ontology Language Document Overview (Second Edition) and the Wikipedia entry of OWL.</p> <p></p>"},{"location":"developers/rdf/#owlclass","title":"<code>owl:Class</code>","text":"<p>In OWL, a Class defines a group of individuals that belong together because they share some properties. An <code>owl:Class</code> differs from an <code>rdfs:Class</code> - an <code>owl:Class</code> is a special case of an <code>rdfs:Class</code>. Classes can be organised in a hierarchy using <code>rdfs:subClassOf</code>. Thus, <code>owl:Class</code> is defined as a subclass of <code>rdfs:Class</code>: <pre><code>owl:Class rdfs:subClassOf rdfs:Class .\n</code></pre> This means that every member of an <code>owl:Class</code>  is also a member of <code>rdfs:Class</code>. </p> <p>There is a built-in most general class named <code>owl:Thing</code> which is the class of all individuals. It is a superclass of all OWL classes. There is also a built-in class named <code>owl:Nothing</code> which is the class that has no instances. It is a subclass of all OWL classes. </p> <p></p>"},{"location":"developers/rdf/#owlinverseof","title":"<code>owl:inverseOf</code>","text":"<p>Extra language features that are not directly provided by OWL, but that one may desire, such as e.g. <code>superClassOf</code>, are often supported by OWL as a combination of other features. The construct <code>owl:inverseOf</code> inverses a property, i.e. the direction of the property is reversed. This property can be used to define e.g. the <code>superClassOf</code> of a resource by combining it with <code>rdfs:subClassOf</code> in the following way: <pre><code>myonto:superClassOf owl:inverseOf rdfs:subClassOf .\n</code></pre></p> <p></p>"},{"location":"developers/rdf/#owlsymmetricproperty","title":"<code>owl:SymmetricProperty</code>","text":"<p>For a symmetric property holds that if a pair (x,y) is an instance of the property P, then also the pair (y,x) is an instance of this property P. Such a property is provided by <code>owl:SymmetricProperty</code> and expressed in OWL as a Class. An example for such a property is to be married - if Agamemnon is married to Klytaimnestra, Klytaimnestra is also married to Agamemnon. Thus we can define a property <code>married</code> in our ontology with the following triples: <pre><code>myonto:married rdf:type owl:SymmetricProperty .\nAgamemnon myonto:married Klytaimnestra .\n</code></pre></p> <p>Be aware - to make sure that <code>owl:inverseOf</code> works in both directions, one has to assert that <pre><code>owl:inverseOf rdf:type owl:SymmetricProperty .\n</code></pre></p> <p></p>"},{"location":"developers/rdf/#owltransitiveproperty","title":"<code>owl:TransitiveProperty</code>","text":"<p>Another important property is transitivity. Transitivity is a relation between three elements such that if it holds between the first and second and it also holds between the second and third, it must necessarily hold between the first and the third. In OWL, transitivity is provided by the construct <code>owl:TransitiveProperty</code> which is a class of properties. To model the property <code>isLocatedIn</code> in our ontology as a member of the transitive class we can state <pre><code>myonto:isLocatedIn rdf:type owl:TransitiveProperty .\n</code></pre> Together with the triples <pre><code>Rome myonto:isLocatedIn Italy .\nItaly myonto:isLocatedIn Europe .\n</code></pre> we can infer that Rome is located in Europe.</p> <p></p>"},{"location":"developers/rdf/#owlequivalentclass","title":"<code>owl:equivalentClass</code>","text":"<p>A frequent situation is that if information about the same entity from different sources is merged then the two providers of this information will not have used the same URI/IRI for refering to the same entity. When combining these data it may be useful to state that two URIs/IRIs actually refer to the same entity. When two classes are known to always have the same members, they are said to be equivalent. Such a situation can be expressed with one simple statement using <code>owl:equivalentClass</code>: <pre><code> owl:equivalentClass rdf:type owl:SymmetricProperty .\n myonto:GreekGods owl:equivalentClass otheronto:Deities .\n</code></pre> The second triple expresses that the class <code>GreekGods</code> in our ontology is equivalent to the class <code>Deities</code> in some other ontology we refer to.</p> <p>Note that when two classes are equivalent, it only means that they have the same members. But other properties of these classes aren't shared!</p> <p></p>"},{"location":"developers/rdf/#owlequivalentproperty","title":"<code>owl:equivalentProperty</code>","text":"<p>If one intends to state that two properties are equivalent, <code>owl:equivalentProperty</code> can be used:  <pre><code> myonto:isInvisible owl:equivalentClass otheronto:notSeen .\n</code></pre> This statement expresses that the property which is called <code>isInvisible</code> in our ontology, is named <code>notSeen</code> in some other ontology.</p> <p></p>"},{"location":"developers/rdf/#owlsameas","title":"<code>owl:sameAs</code>","text":"<p>If it turns out that two individuals are actually one and the same, <code>owl:sameAs</code> can be used to state this fact: <pre><code> myonto:Puteoli owl:sameAs otheronto:Puzzeoli .\n</code></pre> This statement expresses that the site which is called <code>Puteoli</code> in our ontology, is the same as a site named <code>Puzzeoli</code> in some other ontology.</p> <p></p>"},{"location":"developers/rdf/#owlfunctionalproperty","title":"<code>owl:FunctionalProperty</code>","text":"<p>A functional property <code>owl:FunctionalProperty</code>is a property which can only have one single value. An everyday example for such a property is e.g. <code>hasBirthplace</code> since each person has only one birth place. Functional properties can be useful to infer sameness, e.g. if names with foreign characters are transliterated differently in two sources - a Greek \"B\" may be transliterated either as \"B\" or as \"V\", we can state: <pre><code> myonto:GreekB owl:FunctionalProperty otheronto:GreekV .\n</code></pre></p> <p></p>"},{"location":"developers/rdf/#owlinversefunctionalproperty","title":"<code>owl:InverseFunctionalProperty</code>","text":"<p>However, it is more common to use the related notion of <code>owl:InverseFunctionalProperty</code>. One can think of this construct to be the inverse of <code>owl:FunctionalProperty</code> as its name suggests. Especially identifying numbers are inverse functional properties.  <pre><code> myonto:hasInventoryNumber rdf:type owl:InverseFunctionalProperty .\n myonto:ID3 myonto:hasInventoryNumber \"24.97.11\" .\n otheronto:ID2435 myonto:hasInventoryNumber \"24.97.11\" .\n</code></pre> From the above example follows that ID 3 in my data set is the same object as ID 2435 in another data set.</p> <p>It is sometimes useful for a single property to be an <code>owl:FunctionalProperty</code> and an <code>owl:InverseFunctionalProperty</code>. This means that it is a one-to-one property: for each individual  there is exactly one value for the property and the other way round. This feature is intended in the case of unique identifiers as in the following example:  <pre><code> myonto:hasID rdfs:domain myonto:Monument .\n myonto:hasID rdfs:range xsd:Integer .\n myonto:hasID rfd:type owl:FunctionalProperty .\n myonto:hasID rfd:type owl:InverseFunctionalProperty .\n</code></pre> This means that each member of class <code>Monument</code> possesses a unique identifier that is an integer number. Any two monuments that share an <code>ID</code> must be the same (due to inverse functionality) and in addition, each monument can have at most one ID (due to functionality).</p> <p></p>"},{"location":"developers/rdf/#owlobjectproperty-and-owldatatypeproperty","title":"<code>owl:ObjectProperty</code> and <code>owl:DatatypeProperty</code>","text":"<p>The constructs <code>owl:sameAs</code>, <code>owl:FunctionalProperty</code> and <code>owl:InverseFunctionalProperty</code> especially help to describe how information from multiple sources can be merged. OWL can also provide useful information for editing tools if a value of some property may be either a link to another object or a widget for a particular data type. For this purpose OWL distinguishes between <code>owl:DatatypeProperty</code> and <code>owl:ObjectProperty</code>. <code>owl:DatatypeProperty</code> can have a data value as object, <code>owl:ObjectProperty</code> can have a resource as object.  <pre><code>myonto:inSameMuseum rdf:type owl:ObjectProperty.\nmyonto:shipVoyage rdf:type owl:DatatypeProperty. \n</code></pre> The first example may be used to express that one archaeological object is kept in the same museum as another archaeological object while the second example may select those individuals who participated in a ship voyage such as e.g. the Argonauts.</p> <p></p>"},{"location":"developers/rdf/#restrictions","title":"Restrictions","text":"<p>The construct <code>owl:Restriction</code> allows to describe individuals of classes in terms of existing properties and classes that have already been modeled. The class of all things in OWL called <code>owl:Thing</code> is unrestricted. A restriction provides some description that limits the kinds of things that can be said about a member of the class. A restriction class in OWL is defined by the keyword <code>owl:onProperty</code>. A description of how the new class is constrained can be provided e.g. by <code>owl:allValuesFrom</code>, <code>owl:someValuesFrom</code> and <code>owl:hasValue</code>. The membership in a restriction class must satisfy the specified conditions as well as the <code>owl:onProperty</code> specification. </p> <p></p>"},{"location":"developers/rdf/#property-constraints","title":"Property constraints","text":"<p><code>owl:someValuesFrom</code> selects all individuals from a class for which at least one value of the property <code>P</code> comes from class <code>C</code>. In our example we can formulate such a restriction as: <pre><code>[a owl:Restriction;\n   owl:onProperty myonto:isLocatedIn;\n   owl:someValuesFrom myonto:Museum]\n</code></pre> All archaeological objects kept in a museum today thus have been defined as all archaeological objects for which at least one value of the property <code>isLocatedIn</code> comes from the class <code>Museum</code>. The [ ] notation refers to a blank node which is described by the properties listed here. This restriction class has no specific name associated with it - it is defined by the properties of the restriction and is hence called an unnamed class.</p> <p></p> <p><code>owl:allValuesFrom</code> selects all individuals from a class for which all values of the property <code>P</code> come from class <code>C</code>. In our example we can formulate such a restriction as: <pre><code>[a owl:Restriction;\n   owl:onProperty myonto:hasProvenience;\n   owl:allValuesFrom myonto:Findspot]\n</code></pre> This restriction selects all our archaeological objects for which the findspot is known.</p> <p>A noteworthy difference between <code>owl:someValuesFrom</code> and <code>owl:allValuesFrom</code> is that the former implies that there must be such a member, while the latter technically means if there are any members, then they all must have this property which doesn't imply that there are any members.</p> <p></p> <p><code>owl:hasValue</code> is used to produce a restriction of the form \"all individuals that have the value <code>A</code> for the property <code>P</code>\". We can formulate such a restriction as: <pre><code>[ a owl:Restriction ;\n    owl:onProperty myonto:P ;\n    owl:hasValue myonto:A ] .\n</code></pre> Let's assume we defined a property <code>myonto:hasImage</code> which helps to select archaeological objects for which we possess images. We can now state a restriction for those with high resolution images: <pre><code>myonto:HighResolutionObject owl:equivalentClass\n [ a owl:Restriction ;\n     owl:onProperty myonto:hasImage;\n     owl:hasValue myonto:hasHighresImage ] .\n</code></pre> That we have such a high resolution image of a certain object we can formulate with the following triple: <pre><code>myonto:ID3 myonto:hasImage myonto:hasHighresImage .\n</code></pre> Then it is possible to deduce <pre><code>myonto:ID3 a myonto:HighResolutionObject .\n</code></pre></p> <p><code>owl:hasValue</code> is just a special case of the <code>owl:someValuesFrom</code> restriction. Nevertheless, it is very useful because it effectively turns specific instance descriptions into class descriptions.</p> <p></p> <p>OWL provides a facility for defining new classes as unions (<code>owl:unionOf</code>) and intersections (<code>owl:intersectionOf</code>) of previously defined classes. The union of two or more classes includes the members of all those classes while the intersection includes only those that belong to every one of the classes. </p> <p></p> <p>OWL allows to enumerate the members of a class using the construct <code>owl:oneOf</code>. If I have a class <code>myonto:ObjectsSomeSmallMuseum</code> with the members \"vase1\", \"vase2\" and \"relief1\", then: <pre><code>myonto:ObjectsSomeSmallMuseum rdf:type owl:Class;\n       owl:oneOf (myonto:vase1 myonto:vase2 myonto:relief1).\n</code></pre> My class <code>myonto:ObjectsSomeSmallMuseum</code> is related via the property <code>owl:oneOf</code> to a list of the members of the class. However, <code>owl:oneOf</code> should be used only in situations in which the definition of the class is not likely to change at all or at least not frequently. One such case would e.g. be the number of planets in the solar system. In contrast, the above example may be appropriate for our own immediate needs, but not for a more general approach: although we include only three objects of this small museum in our data, the museum itself for sure owns many more. </p> <p></p> <p>Sometimes it may be useful to state that one thing is different from another thing. OWL provides <code>owl:differentFrom</code> for this. An example is the following: <pre><code>myonto:Zenon owl:differentFrom otheronto:Zenon.\n</code></pre> Two different ancient Greek philosophers with the name Zenon are known. The above triple states that the Zenon in our ontology (e.g. Zenon of Elea) is not the same Zenon as in another ontology (e.g. Zenon of Kition).</p> <p></p>"},{"location":"developers/rdf/#cardinalities","title":"Cardinalities","text":"<p>OWL also includes restrictions that refer to cardinalities, i.e. the number of values for a specific property. Cardinality restrictions can be used to define sets of particular interest. Cardinality refers to the number of distinct values a property has. The fact that we only know about two works attributed to Homer - the Iliad and the Odyssey - we may state by using <code>owl:cardinality</code>: <pre><code>[a owl:Restriction;\n   owl:onProperty myonto:HomerWorks;\n   owl:cardinality 2]\n</code></pre> Cardinality restrictions can also be used to specify upper and lower boundaries, the respective constructs are named <code>owl:maxCardinality</code> and <code>owl:minCardinality</code>. The restriction to cardinalities of 0 and 1 have special modeling utility:</p> <ul> <li><code>minCardinality 0</code> indicates a set of individuals for which some value for a specified property is optional</li> <li><code>minCardinality 1</code> indicates a set of individuals for which some value for a specified property is required</li> <li><code>maxCardinality 0</code> specifies that no value for the specified property is allowed</li> <li><code>maxCardinality 1</code> specifies that a value is unique (but need not exist)</li> </ul> <p></p>"},{"location":"developers/rdf/#reasoning-with-individuals-and-classes","title":"Reasoning with individuals and classes","text":"<p>From an RDF perspective inferences about individuals and inferences about classes are very similar: in both cases new triples are added to the model based on the asserted triples. However, from a modeling perspective, these two kinds of reasoning are very different. The former draws specific conclusions about individuals while the latter draws general conclusions about classes of individuals. In the case of reasoning about individuals the information specified in one source is transformed according to a model for use in another context with the help of constructs such as <code>rdfs:subClassOf</code>, <code>rdfs:subPropertyOf</code> and various <code>owl:Restriction</code>. Class reasoning determines how data are related in general with constructs such as <code>rdfs:subClassOf</code>, <code>rdfs:subPropertyOf</code>, <code>rdfs:domain</code> or <code>rdfs:range</code>. Once these more general relationships have been inferred, the processing of the data can be done much easier.</p> <p></p>"},{"location":"developers/rdf/#composing-files","title":"Composing files","text":"<p>OWL provides a built-in class <code>owl:Ontology</code>. The URI/IRI of an ontology usually corresponds to the URL of the file on the Web where the ontology is stored. The corresponding URI/IRI can be eclosed in angle brackets as follows: <pre><code>&lt;http://www.knora.org/ontology/knora-base&gt; rdf:type owl:Ontology.\n</code></pre> This can be useful when modularity of semantic models is specified. The most frequent way to specify modularity is with the property <code>owl:imports</code>. This property connects two instances of the class <code>owl:Ontology</code>.</p> <p></p>"},{"location":"developers/rdf/#summary-of-constructs","title":"Summary of constructs","text":"<ul> <li><code>rdfs:subClassOf</code> - the members of a subclass are also a member of a superclass</li> <li><code>rdfs:subPropertyOf</code> - relations described by a subproperty also hold for the superproperty</li> <li><code>rdfs:domain</code> - the subject of a triple is classified into the domain of the predicate</li> <li><code>rdfs:range</code> - the object of a triple is classified into the range of the predicate</li> <li><code>rdfs:label</code> - human-readable name of a resource, no semantics inferable</li> <li><code>rdfs:comment</code> - human-readable information of the model, no semantics inferable</li> <li><code>owl:equivalentClass</code> - the members of each class are also members of the other class</li> <li><code>owl:equivalentProperty</code> - relations that hold for each property also hold for the other property</li> <li><code>owl:sameAs</code> - all statements about one instance hold for the other instance</li> <li><code>owl:inverseOf</code> - exchanges subject and object</li> <li><code>owl:TransitiveProperty</code> - the chains of a relationship collapse into a single relationship</li> <li><code>owl:SymmetricProperty</code> - the property is its own inverse</li> <li><code>owl:FunctionalProperty</code> - only one value as object allowed</li> <li><code>owl:InverseFunctionalProperty</code> - only one value as subject allowed</li> <li><code>owl:ObjectProperty</code> - the property can have a resource as object</li> <li><code>owl:DatatypeProperty</code> - the property can have a data value as object</li> <li><code>owl:Restriction</code> - a building block in OWL that describes classes by restricting the values that are allowed for certain properties</li> <li><code>owl:hasValue</code> - a type of restriction that refers to a single value for a property</li> <li><code>owl:someValuesFrom</code> - a type of restriction that refers to a set from which some value for a property must come</li> <li><code>owl:allValuesFrom</code> -  a type of restriction that refers to a set from which all values for a property must come</li> <li><code>owl:onProperty</code> - a link from a restriction to the property it restricts.   </li> <li><code>owl:unionOf</code> - unites classes and creates a new class</li> <li><code>owl:intersectionOf</code> - determines the intersection of classes and creates a new class</li> <li><code>owl:complementOf</code> - determines the compliment of a class and creates a new class</li> <li><code>owl:oneOf</code> - specifies that a class consists just of the listed members</li> <li><code>owl:differentFrom</code> - specifies that one individual is not identical to another one</li> <li><code>owl:disjointWith</code> - specifies that two classes cannot share a member</li> <li><code>owl:cardinality</code> - specifies information about the number of distict values for some property</li> <li><code>owl:minCardinality</code> - specifies information about the minimum number of distinct values for a property</li> <li><code>owl:maxCardinality</code> - specifies information about the maximum number of distinct values for a property</li> <li><code>owl:imports</code> -  allows one ontology to refer explicitly to another ontology.</li> </ul>"},{"location":"developers/sipi/","title":"SIPI basics","text":""},{"location":"developers/sipi/#the-media-server-sipi","title":"The media server SIPI","text":"<p>The Simple Image Presentation Interface (Sipi) takes care of storing, converting and serving image, audio and video files as well as other documents such as pdf files. It is designed to be used by all institutions that need to preserve high-quality images and to make them available online.</p> <p>SIPI implements the International Image Interoperability Framework (IIIF), which aims at supporting interoperability between different image repositories. SIPI efficiently converts lossless between image formats while preserving the metadata contained in the image files. If images are stored in JPEG 2000 format, SIPI can convert them on the fly to formats that are commonly used on the Internet.  SIPI is written in C++ and runs on Linux and Mac OS X. It offers a flexible framework for specifying authentication and authorization logic which is obtained by scripts written in the scripting language Lua. SIPI supports restricted access to images, either by reducing the image dimensions or by adding watermarks to the images. </p>"},{"location":"developers/sipi/#interaction-of-dsp-api-and-sipi","title":"Interaction of DSP-API and SIPI","text":"<p>If a file is requested from SIPI by e.g. an image link served by DSP-API, a preflight function is called. This function needs three parameters: a prefix, the identifier (the name of the requested file) and a cookie. All file links created by DSP-API use the project number as prefix. An example link from our incunabula project may look as follows: <code>0.0.0.0:1024/0803/incunabula_0000003328.jp2/full/2613,3505/0/default.jpg</code>.</p> <p>Based on the provided information, SIPI asks DSP-API about the permissions on the file in question of the current user. Therefore, the cookie is needed: it contains the current user's DSP-API session ID. Hence, DSP-API can match SIPI's request with a given user profile and tell SIPI the permissions this user has on the requested file. If the user has sufficient permissions, the file is served in full quality. If the user has only preview rights, SIPI serves a reduced quality of the file or integrates a watermark. If the user has no permissions, SIPI refuses to serve the file. However, all of this behaviour is defined in the preflight function in SIPI and not controlled by DSP-API. DSP-API only provides the permission code.</p> <p>Thus, DSP-API and SIPI stick to a clear division of responsibility regarding files: DSP-API knows about the names of files that are attached to resources as well as some metadata and is capable of creating the URLs for the client to request them from SIPI, but the whole handling of files (storing, naming, organization of the internal directory structure, format conversions, and serving) is taken care of by SIPI.</p> <p>When a user creates a resource with a digital representation attached to it in DSP-API either via the Graphical User Interface (GUI) or directly via the Application Programming Interface (API), the file is directly sent to SIPI to calculate a thumbnail hosted by SIPI which then gets displayed to the user in the browser. SIPI copies the original file into a temporary directory and keeps it there for later processing in another request. In its answer in JSON format, SIPI returns the path to the thumbnail, the name of the temporarily stored original file managed by SIPI, the mime type of the original file and the original name of the file submitted by the client. At the moment when the user wants to attach the file to a resource, the request is sent to DSP-API's API providing all the required parameters to create the resource along with additional information about the file to be attached. The file itself is not submitted to the DSP-API's API, but its filename returned by SIPI.</p>"}]}