openapi: 3.1.0
info:
  title: webapi-v2
  version: v31.12.0-2-gcd23ebe
servers:
- url: http://localhost:3333
  description: Local development server
- url: https://api.dasch.swiss
  description: Production server
paths:
  /v2/authentication:
    get:
      tags:
      - V2 Authentication
      operationId: getV2Authentication
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
    post:
      tags:
      - V2 Authentication
      operationId: postV2Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginPayload'
        required: true
      responses:
        '200':
          description: ''
          headers:
            Set-Cookie:
              required: false
              schema:
                type: array
                items:
                  type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
    delete:
      tags:
      - V2 Authentication
      operationId: deleteV2Authentication
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Set-Cookie:
              required: false
              schema:
                type: array
                items:
                  type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogoutResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - {}
      - httpAuth: []
  /v2/login:
    get:
      tags:
      - V2 Authentication
      operationId: getV2Login
      responses:
        '200':
          description: ''
          content:
            text/html:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
    post:
      tags:
      - V2 Authentication
      operationId: postV2Login
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginForm'
        required: true
      responses:
        '200':
          description: ''
          headers:
            Set-Cookie:
              required: false
              schema:
                type: array
                items:
                  type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
  /v2/lists/{listIri}:
    get:
      tags:
      - V2 Lists
      description: Returns a list (a graph with all list nodes).
      operationId: getV2ListsListiri
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: listIri
        in: path
        description: The iri to a list.
        required: true
        schema:
          type: string
        example: http://rdfh.ch/lists/0001/QtlRwm5jRQa_2EXOW0U_jQ
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
              example:
                rdfs:label: Listenwurzel
                knora-api:attachedToProject:
                  '@id': http://rdfh.ch/projects/0001
                knora-api:hasSubListNode:
                - rdfs:label: Tree list node 01
                  knora-api:hasRootNode:
                    '@id': http://rdfh.ch/lists/0001/treeList
                  knora-api:listNodePosition: 0
                  '@type': knora-api:ListNode
                  '@id': http://rdfh.ch/lists/0001/treeList01
                - rdfs:label: Baumlistenknoten 02
                  knora-api:hasRootNode:
                    '@id': http://rdfh.ch/lists/0001/treeList
                  knora-api:listNodePosition: 1
                  '@type': knora-api:ListNode
                  '@id': http://rdfh.ch/lists/0001/treeList02
                - rdfs:label: Tree list node 03
                  knora-api:hasRootNode:
                    '@id': http://rdfh.ch/lists/0001/treeList
                  knora-api:hasSubListNode:
                  - rdfs:label: Tree list node 10
                    knora-api:hasRootNode:
                      '@id': http://rdfh.ch/lists/0001/treeList
                    knora-api:listNodePosition: 0
                    '@type': knora-api:ListNode
                    '@id': http://rdfh.ch/lists/0001/treeList10
                  - rdfs:label: Tree list node 11
                    knora-api:hasRootNode:
                      '@id': http://rdfh.ch/lists/0001/treeList
                    knora-api:listNodePosition: 1
                    '@type': knora-api:ListNode
                    '@id': http://rdfh.ch/lists/0001/treeList11
                  knora-api:listNodePosition: 2
                  '@type': knora-api:ListNode
                  '@id': http://rdfh.ch/lists/0001/treeList03
                knora-api:isRootNode: true
                rdfs:comment: Anything Tree List
                '@type': knora-api:ListNode
                '@id': http://rdfh.ch/lists/0001/treeList
                '@context':
                  rdf: http://www.w3.org/1999/02/22-rdf-syntax-ns#
                  knora-api: http://api.knora.org/ontology/knora-api/v2#
                  owl: http://www.w3.org/2002/07/owl#
                  rdfs: http://www.w3.org/2000/01/rdf-schema#
                  xsd: http://www.w3.org/2001/XMLSchema#
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/node/{listIri}:
    get:
      tags:
      - V2 Lists
      description: Returns a list node.
      operationId: getV2NodeListiri
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: listIri
        in: path
        description: The iri to a list.
        required: true
        schema:
          type: string
        example: http://rdfh.ch/lists/0001/QtlRwm5jRQa_2EXOW0U_jQ
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
              example:
                rdfs:label: Tree list node 11
                knora-api:hasRootNode:
                  '@id': http://rdfh.ch/lists/0001/treeList
                knora-api:listNodePosition: 1
                '@type': knora-api:ListNode
                '@id': http://rdfh.ch/lists/0001/treeList11
                '@context':
                  rdf: http://www.w3.org/1999/02/22-rdf-syntax-ns#
                  knora-api: http://api.knora.org/ontology/knora-api/v2#
                  owl: http://www.w3.org/2002/07/owl#
                  rdfs: http://www.w3.org/2000/01/rdf-schema#
                  xsd: http://www.w3.org/2001/XMLSchema#
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/ontologies/metadata:
    get:
      tags:
      - V2 Ontologies
      description: Get the metadata of an ontology
      operationId: getV2OntologiesMetadata
      parameters:
      - name: x-knora-accept-project
        in: header
        required: false
        schema:
          type: string
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
    put:
      tags:
      - V2 Ontologies
      description: Change the metadata of an ontology
      operationId: putV2OntologiesMetadata
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /ontology:
    get:
      tags:
      - V2 Ontologies
      description: This is the route used to dereference an actual ontology IRI. If
        the URL path looks like it belongs to a built-in API ontology (which has to
        contain "knora-api"), prefix it with http://api.knora.org to get the ontology
        IRI. Otherwise, if it looks like it belongs to a project-specific API ontology,
        prefix it with routeData.appConfig.externalOntologyIriHostAndPort to get the
        ontology IRI.
      operationId: getOntology
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: allLanguages
        in: query
        required: false
        schema:
          default: false
          type: boolean
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/ontologies/allentities/{ontologyIri}:
    get:
      tags:
      - V2 Ontologies
      description: Get all entities of an ontology
      operationId: getV2OntologiesAllentitiesOntologyiri
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: ontologyIri
        in: path
        required: true
        schema:
          type: string
      - name: allLanguages
        in: query
        required: false
        schema:
          default: false
          type: boolean
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/ontologies/classes:
    get:
      tags:
      - V2 Ontologies
      operationId: getV2OntologiesClasses
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: allLanguages
        in: query
        required: false
        schema:
          default: false
          type: boolean
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
    put:
      tags:
      - V2 Ontologies
      description: Change the labels or comments of a class
      operationId: putV2OntologiesClasses
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
    post:
      tags:
      - V2 Ontologies
      description: Create a new class
      operationId: postV2OntologiesClasses
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/ontologies/classes/comment/{resourceClassIri}:
    delete:
      tags:
      - V2 Ontologies
      description: Delete the comment of a class definition.
      operationId: deleteV2OntologiesClassesCommentResourceclassiri
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: resourceClassIri
        in: path
        required: true
        schema:
          type: string
      - name: lastModificationDate
        in: query
        required: true
        schema:
          type: string
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/ontologies/cardinalities:
    put:
      tags:
      - V2 Ontologies
      operationId: putV2OntologiesCardinalities
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
    post:
      tags:
      - V2 Ontologies
      description: Add cardinalities to a class. For more info check out the <a href="https://docs.dasch.swiss/knora-api-v2/ontologies.html#add-cardinalities-to-a-class">documentation</a>.
      operationId: postV2OntologiesCardinalities
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
              example:
                '@id': ONTOLOGY_IRI
                '@type': owl:Ontology
                knora-api:lastModificationDate:
                  '@type': xsd:dateTimeStamp
                  '@value': ONTOLOGY_LAST_MODIFICATION_DATE
                '@graph':
                - '@id': CLASS_IRI
                  '@type': owl:Class
                  rdfs:subClassOf:
                    '@type': owl:Restriction
                    OWL_CARDINALITY_PREDICATE: OWL_CARDINALITY_VALUE
                    owl:onProperty:
                      '@id': PROPERTY_IRI
                '@context':
                  knora-api: http://api.knora.org/ontology/knora-api/v2#
                  owl: http://www.w3.org/2002/07/owl#
                  rdfs: http://www.w3.org/2000/01/rdf-schema#
                  xsd: http://www.w3.org/2001/XMLSchema#
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
    patch:
      tags:
      - V2 Ontologies
      operationId: patchV2OntologiesCardinalities
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/ontologies/canreplacecardinalities/{resourceClassIri}:
    get:
      tags:
      - V2 Ontologies
      description: If only a class IRI is provided, this endpoint checks if any cardinality
        of any of the class properties can be replaced. If a property IRI and a new
        cardinality are provided, it checks if the cardinality can be set for the
        property on the specific class. Fails if not both a property IRI and a new
        cardinality is provided. Fails if the user does not have write access to the
        ontology of the class.
      operationId: getV2OntologiesCanreplacecardinalitiesResourceclassiri
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: resourceClassIri
        in: path
        required: true
        schema:
          type: string
      - name: propertyIri
        in: query
        required: false
        schema:
          type: string
      - name: newCardinality
        in: query
        description: 'The new cardinality to be set for the property, must be provided
          when propertyIri is given. Valid values are: 1-n, 1, 0-n, 0-1'
        required: false
        schema:
          type: string
        example: 1-n
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
              example: |2

                {
                  "http://api.knora.org/ontology/knora-api/v2#canDo": false,
                  "http://api.knora.org/ontology/knora-api/v2#cannotDoReason": "The new cardinality is not included in the cardinality of a super-class.",
                }
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/ontologies/candeletecardinalities:
    post:
      tags:
      - V2 Ontologies
      operationId: postV2OntologiesCandeletecardinalities
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/ontologies/guiorder:
    put:
      tags:
      - V2 Ontologies
      operationId: putV2OntologiesGuiorder
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/ontologies/candeleteclass/{resourceClassIri}:
    get:
      tags:
      - V2 Ontologies
      operationId: getV2OntologiesCandeleteclassResourceclassiri
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: resourceClassIri
        in: path
        required: true
        schema:
          type: string
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/ontologies/classes/{resourceClassIri}:
    delete:
      tags:
      - V2 Ontologies
      operationId: deleteV2OntologiesClassesResourceclassiri
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: resourceClassIri
        in: path
        required: true
        schema:
          type: string
      - name: lastModificationDate
        in: query
        required: true
        schema:
          type: string
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/ontologies/comment/{ontologyIri}:
    delete:
      tags:
      - V2 Ontologies
      operationId: deleteV2OntologiesCommentOntologyiri
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: ontologyIri
        in: path
        required: true
        schema:
          type: string
      - name: lastModificationDate
        in: query
        required: true
        schema:
          type: string
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/ontologies/properties:
    get:
      tags:
      - V2 Ontologies
      operationId: getV2OntologiesProperties
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: allLanguages
        in: query
        required: false
        schema:
          default: false
          type: boolean
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
    put:
      tags:
      - V2 Ontologies
      operationId: putV2OntologiesProperties
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
    post:
      tags:
      - V2 Ontologies
      operationId: postV2OntologiesProperties
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/ontologies/properties/comment/{propertyIri}:
    delete:
      tags:
      - V2 Ontologies
      operationId: deleteV2OntologiesPropertiesCommentPropertyiri
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: propertyIri
        in: path
        required: true
        schema:
          type: string
      - name: lastModificationDate
        in: query
        required: true
        schema:
          type: string
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/ontologies/properties/guielement:
    put:
      tags:
      - V2 Ontologies
      operationId: putV2OntologiesPropertiesGuielement
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/ontologies/properties/{propertyIri}:
    delete:
      tags:
      - V2 Ontologies
      operationId: deleteV2OntologiesPropertiesPropertyiri
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: propertyIri
        in: path
        required: true
        schema:
          type: string
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: lastModificationDate
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/ontologies:
    post:
      tags:
      - V2 Ontologies
      operationId: postV2Ontologies
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/ontologies/candeleteontology/{ontologyIri}:
    get:
      tags:
      - V2 Ontologies
      operationId: getV2OntologiesCandeleteontologyOntologyiri
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: ontologyIri
        in: path
        required: true
        schema:
          type: string
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/ontologies/{ontologyIri}:
    delete:
      tags:
      - V2 Ontologies
      operationId: deleteV2OntologiesOntologyiri
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: ontologyIri
        in: path
        required: true
        schema:
          type: string
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: lastModificationDate
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/resources/info:
    get:
      tags:
      - V2 Resources
      operationId: getV2ResourcesInfo
      parameters:
      - name: x-knora-accept-project
        in: header
        required: true
        schema:
          type: string
      - name: resourceClass
        in: query
        required: true
        schema:
          type: string
      - name: order
        in: query
        required: false
        schema:
          type: string
      - name: orderBy
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseDto'
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
  /v2/resources/iiifmanifest/{resourceIri}:
    get:
      tags:
      - V2 Resources
      operationId: getV2ResourcesIiifmanifestResourceiri
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: resourceIri
        in: path
        required: true
        schema:
          type: string
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/resourcespreview:
    get:
      tags:
      - V2 Resources
      operationId: getV2Resourcespreview
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/resources/projectHistoryEvents/{projectIri}:
    get:
      tags:
      - V2 Resources
      operationId: getV2ResourcesProjecthistoryeventsProjectiri
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: projectIri
        in: path
        required: true
        schema:
          type: string
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/resources/resourceHistoryEvents/{resourceIri}:
    get:
      tags:
      - V2 Resources
      operationId: getV2ResourcesResourcehistoryeventsResourceiri
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: resourceIri
        in: path
        required: true
        schema:
          type: string
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/resources/history/{resourceIri}:
    get:
      tags:
      - V2 Resources
      operationId: getV2ResourcesHistoryResourceiri
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: resourceIri
        in: path
        required: true
        schema:
          type: string
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: startDate
        in: query
        required: false
        schema:
          type: string
      - name: start date
        in: query
        required: false
        schema:
          type: string
      - name: endDate
        in: query
        required: false
        schema:
          type: string
      - name: end date
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/resources:
    get:
      tags:
      - V2 Resources
      operationId: getV2Resources
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: version
        in: query
        required: false
        schema:
          type: string
      - name: version date
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
    put:
      tags:
      - V2 Resources
      operationId: putV2Resources
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
    post:
      tags:
      - V2 Resources
      operationId: postV2Resources
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/graph/{resourceIri}:
    get:
      tags:
      - V2 Resources
      operationId: getV2GraphResourceiri
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: resourceIri
        in: path
        required: true
        schema:
          type: string
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: depth
        in: query
        required: false
        schema:
          default: 4
          type: integer
          format: int32
          minimum: 1
          maximum: 10
      - name: direction
        in: query
        required: false
        schema:
          default: outbound
          type: string
      - name: excludeProperty
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/tei/{resourceIri}:
    get:
      tags:
      - V2 Resources
      operationId: getV2TeiResourceiri
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: resourceIri
        in: path
        required: true
        schema:
          type: string
      - name: mappingIri
        in: query
        required: false
        schema:
          type: string
      - name: textProperty
        in: query
        required: true
        schema:
          type: string
      - name: gravsearchTemplateIri
        in: query
        required: false
        schema:
          type: string
      - name: headerXSLTIri
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/resources/erase:
    post:
      tags:
      - V2 Resources
      operationId: postV2ResourcesErase
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/resources/delete:
    post:
      tags:
      - V2 Resources
      operationId: postV2ResourcesDelete
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/searchextended:
    post:
      tags:
      - V2 Search
      description: Search for resources using a Gravsearch query.
      operationId: postV2Searchextended
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: limitToProject
        in: query
        description: The project to limit the search to.
        required: false
        schema:
          type: string
      requestBody:
        description: The Gravsearch query. See https://docs.dasch.swiss/latest/DSP-API/03-endpoints/api-v2/query-language/
        content:
          text/plain:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/searchextended/{p1}:
    get:
      tags:
      - V2 Search
      description: Search for resources using a Gravsearch query.
      operationId: getV2SearchextendedP1
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: p1
        in: path
        description: The Gravsearch query. See https://docs.dasch.swiss/latest/DSP-API/03-endpoints/api-v2/query-language/
        required: true
        schema:
          type: string
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: limitToProject
        in: query
        description: The project to limit the search to.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/searchextended/count:
    post:
      tags:
      - V2 Search
      description: Count resources using a Gravsearch query.
      operationId: postV2SearchextendedCount
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: limitToProject
        in: query
        description: The project to limit the search to.
        required: false
        schema:
          type: string
      requestBody:
        description: The Gravsearch query. See https://docs.dasch.swiss/latest/DSP-API/03-endpoints/api-v2/query-language/
        content:
          text/plain:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/searchextended/count/{p1}:
    get:
      tags:
      - V2 Search
      description: Count resources using a Gravsearch query.
      operationId: getV2SearchextendedCountP1
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: p1
        in: path
        description: The Gravsearch query. See https://docs.dasch.swiss/latest/DSP-API/03-endpoints/api-v2/query-language/
        required: true
        schema:
          type: string
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: limitToProject
        in: query
        description: The project to limit the search to.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/searchIncomingLinks/{resourceIri}:
    get:
      tags:
      - V2 Search
      description: Search for incoming links using a Gravsearch query with an offset.
      operationId: getV2SearchincominglinksResourceiri
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: resourceIri
        in: path
        description: The IRI of the resource to retrieve
        required: true
        schema:
          type: string
      - name: offset
        in: query
        description: The offset to be used for paging.
        required: false
        schema:
          default: 0
          type: integer
          format: int32
          exclusiveMinimum: -1
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: limitToProject
        in: query
        description: The project to limit the search to.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/searchIncomingRegions/{resourceIri}:
    get:
      tags:
      - V2 Search
      description: Search for incoming regions using a Gravsearch query with an offset.
      operationId: getV2SearchincomingregionsResourceiri
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: resourceIri
        in: path
        description: The IRI of the resource to retrieve
        required: true
        schema:
          type: string
      - name: offset
        in: query
        description: The offset to be used for paging.
        required: false
        schema:
          default: 0
          type: integer
          format: int32
          exclusiveMinimum: -1
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: limitToProject
        in: query
        description: The project to limit the search to.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/searchbylabel/{searchTerm}:
    get:
      tags:
      - V2 Search
      description: Search for resources by label.
      operationId: getV2SearchbylabelSearchterm
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: searchTerm
        in: path
        required: true
        schema:
          type: string
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: offset
        in: query
        description: The offset to be used for paging.
        required: false
        schema:
          default: 0
          type: integer
          format: int32
          exclusiveMinimum: -1
      - name: limitToProject
        in: query
        description: The project to limit the search to.
        required: false
        schema:
          type: string
      - name: limitToResourceClass
        in: query
        description: The resource class to limit the search to.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/searchbylabel/count/{searchTerm}:
    get:
      tags:
      - V2 Search
      description: Search for resources by label.
      operationId: getV2SearchbylabelCountSearchterm
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: searchTerm
        in: path
        required: true
        schema:
          type: string
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: limitToProject
        in: query
        description: The project to limit the search to.
        required: false
        schema:
          type: string
      - name: limitToResourceClass
        in: query
        description: The resource class to limit the search to.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/search/{searchTerm}:
    get:
      tags:
      - V2 Search
      description: Search for resources by label.
      operationId: getV2SearchSearchterm
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: searchTerm
        in: path
        required: true
        schema:
          type: string
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: offset
        in: query
        description: The offset to be used for paging.
        required: false
        schema:
          default: 0
          type: integer
          format: int32
          exclusiveMinimum: -1
      - name: limitToProject
        in: query
        description: The project to limit the search to.
        required: false
        schema:
          type: string
      - name: limitToResourceClass
        in: query
        description: The resource class to limit the search to.
        required: false
        schema:
          type: string
      - name: limitToStandoffClass
        in: query
        description: The standoff class to limit the search to.
        required: false
        schema:
          type: string
      - name: returnFiles
        in: query
        description: Whether to return files in the search results.
        required: false
        schema:
          default: false
          type: boolean
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/search/count/{searchTerm}:
    get:
      tags:
      - V2 Search
      description: Search for resources by label.
      operationId: getV2SearchCountSearchterm
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: searchTerm
        in: path
        required: true
        schema:
          type: string
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: limitToProject
        in: query
        description: The project to limit the search to.
        required: false
        schema:
          type: string
      - name: limitToResourceClass
        in: query
        description: The resource class to limit the search to.
        required: false
        schema:
          type: string
      - name: limitToStandoffClass
        in: query
        description: The standoff class to limit the search to.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/values/{resourceIri}/{valueUuid}:
    get:
      tags:
      - V2 Values
      description: Find detailed documentation on <a href="https://docs.dasch.swiss/latest/DSP-API/03-endpoints/api-v2/editing-values/">docs.dasch.swiss</a>.
      operationId: getV2ValuesResourceiriValueuuid
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      - name: resourceIri
        in: path
        description: The IRI of a Resource.
        required: true
        schema:
          type: string
      - name: valueUuid
        in: path
        description: The UUID of a Value.
        required: true
        schema:
          type: string
      - name: version
        in: query
        required: false
        schema:
          type: string
      - name: x-knora-accept-schema
        in: header
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: schema
        in: query
        description: |-
          The ontology schema to be used for the request.
          If not specified, the default schema ApiV2Complex will be used.
        required: false
        schema:
          type: string
      - name: x-knora-json-ld-rendering
        in: header
        description: |-
          The JSON-LD rendering to be used for the request (flat or hierarchical).
          If not specified, hierarchical JSON-LD will be used.
        required: false
        schema:
          type: string
      - name: markup
        in: query
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      - name: x-knora-accept-markup
        in: header
        description: The markup rendering to be used for the request (XML or standoff).
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            application/json:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/values:
    put:
      tags:
      - V2 Values
      description: Find detailed documentation on <a href="https://docs.dasch.swiss/latest/DSP-API/03-endpoints/api-v2/editing-values/">docs.dasch.swiss</a>.
      operationId: putV2Values
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
            example:
              '@id': http://rdfh.ch/0001/a-thing
              '@type': anything:Thing
              anything:hasInteger:
                '@id': http://rdfh.ch/0001/a-thing/values/vp96riPIRnmQcbMhgpv_Rg
                '@type': knora-api:IntValue
                knora-api:intValueAsInt: 5
              '@context':
                knora-api: http://api.knora.org/ontology/knora-api/v2#
                anything: http://0.0.0.0:3333/ontology/0001/anything/v2#
        required: true
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            application/json:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
    post:
      tags:
      - V2 Values
      description: Find detailed documentation on <a href="https://docs.dasch.swiss/latest/DSP-API/03-endpoints/api-v2/editing-values/">docs.dasch.swiss</a>.
      operationId: postV2Values
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
            example:
              '@id': http://rdfh.ch/0001/a-thing
              '@type': anything:Thing
              anything:hasInteger:
                '@type': knora-api:IntValue
                knora-api:intValueAsInt: 4
              '@context':
                knora-api: http://api.knora.org/ontology/knora-api/v2#
                anything: http://0.0.0.0:3333/ontology/0001/anything/v2#
        required: true
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            application/json:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
  /v2/values/delete:
    post:
      tags:
      - V2 Values
      description: Find detailed documentation on <a href="https://docs.dasch.swiss/latest/DSP-API/03-endpoints/api-v2/editing-values/">docs.dasch.swiss</a>.
      operationId: postV2ValuesDelete
      parameters:
      - name: KnoraAuthenticationMFYGSLTEMFZWG2BOON3WS43THI2DIMY9
        in: cookie
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
            example:
              '@id': http://rdfh.ch/0001/a-thing
              '@type': anything:Thing
              anything:hasInteger:
                '@id': http://rdfh.ch/0001/a-thing/values/vp96riPIRnmQcbMhgpv_Rg
                '@type': knora-api:IntValue
                knora-api:deleteComment: This value was created by mistake.
              '@context':
                knora-api: http://api.knora.org/ontology/knora-api/v2#
                anything: http://0.0.0.0:3333/ontology/0001/anything/v2#
        required: true
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
          content:
            application/json:
              schema:
                type: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OntologyConstraintException'
                - $ref: '#/components/schemas/DuplicateValueException'
                - $ref: '#/components/schemas/GravsearchException'
                - $ref: '#/components/schemas/ValidationException'
                - $ref: '#/components/schemas/BadRequestException'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadCredentialsException'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      security:
      - httpAuth: []
      - httpAuth1: []
components:
  schemas:
    BadCredentialsException:
      title: BadCredentialsException
      type: object
      required:
      - message
      properties:
        message:
          type: string
    BadRequestException:
      title: BadRequestException
      type: object
      required:
      - message
      properties:
        message:
          type: string
    CheckResponse:
      title: CheckResponse
      type: object
      required:
      - message
      properties:
        message:
          type: string
    DuplicateValueException:
      title: DuplicateValueException
      type: object
      required:
      - message
      properties:
        message:
          type: string
    Email:
      title: Email
      type: object
      required:
      - value
      properties:
        value:
          type: string
    EmailPassword:
      title: EmailPassword
      type: object
      required:
      - email
      - password
      properties:
        email:
          $ref: '#/components/schemas/Email'
        password:
          type: string
    ForbiddenException:
      title: ForbiddenException
      type: object
      required:
      - message
      properties:
        message:
          type: string
    GravsearchException:
      title: GravsearchException
      type: object
      required:
      - message
      properties:
        message:
          type: string
    IriPassword:
      title: IriPassword
      type: object
      required:
      - iri
      - password
      properties:
        iri:
          $ref: '#/components/schemas/UserIri'
        password:
          type: string
    ListResponseDto:
      title: ListResponseDto
      type: object
      required:
      - count
      properties:
        resources:
          type: array
          items:
            $ref: '#/components/schemas/ResourceInfoDto'
        count:
          type: integer
          format: int32
    LoginForm:
      title: LoginForm
      type: object
      required:
      - username
      - password
      properties:
        username:
          type: string
        password:
          type: string
    LoginPayload:
      title: LoginPayload
      oneOf:
      - $ref: '#/components/schemas/EmailPassword'
      - $ref: '#/components/schemas/IriPassword'
      - $ref: '#/components/schemas/UsernamePassword'
    LogoutResponse:
      title: LogoutResponse
      type: object
      required:
      - status
      - message
      properties:
        status:
          type: integer
          format: int32
        message:
          type: string
    NotFoundException:
      title: NotFoundException
      type: object
      required:
      - message
      properties:
        message:
          type: string
    OntologyConstraintException:
      title: OntologyConstraintException
      type: object
      required:
      - message
      properties:
        message:
          type: string
    ResourceInfoDto:
      title: ResourceInfoDto
      type: object
      required:
      - resourceIri
      - creationDate
      - lastModificationDate
      - isDeleted
      properties:
        resourceIri:
          type: string
        creationDate:
          type: string
          format: date-time
        lastModificationDate:
          type: string
          format: date-time
        deleteDate:
          type: string
          format: date-time
        isDeleted:
          type: boolean
    TokenResponse:
      title: TokenResponse
      type: object
      required:
      - token
      properties:
        token:
          type: string
    UserIri:
      title: UserIri
      type: object
      required:
      - value
      properties:
        value:
          type: string
    Username:
      title: Username
      type: object
      required:
      - value
      properties:
        value:
          type: string
    UsernamePassword:
      title: UsernamePassword
      type: object
      required:
      - username
      - password
      properties:
        username:
          $ref: '#/components/schemas/Username'
        password:
          type: string
    ValidationException:
      title: ValidationException
      type: object
      required:
      - msg
      properties:
        msg:
          type: string
  securitySchemes:
    httpAuth:
      type: http
      scheme: bearer
    httpAuth1:
      type: http
      scheme: basic
